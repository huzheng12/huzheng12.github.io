{"version":3,"sources":["../node_modules/_echarts@4.8.0@echarts/lib/layout/barPolar.js","../node_modules/_echarts@4.8.0@echarts/lib/util/symbol.js","../node_modules/_echarts@4.8.0@echarts/lib/view/Chart.js","../node_modules/_echarts@4.8.0@echarts/lib/util/clazz.js","../node_modules/_fbjs@0.8.17@fbjs/lib/emptyObject.js","../node_modules/_fbjs@0.8.17@fbjs/lib/invariant.js","../node_modules/_enquire.js@2.1.6@enquire.js/src/index.js","../node_modules/_enquire.js@2.1.6@enquire.js/src/MediaQueryDispatch.js","../node_modules/_enquire.js@2.1.6@enquire.js/src/MediaQuery.js","../node_modules/_enquire.js@2.1.6@enquire.js/src/QueryHandler.js","../node_modules/_echarts@4.8.0@echarts/lib/util/throttle.js","../node_modules/_echarts@4.8.0@echarts/lib/lang.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/symbol.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/VisualMapping.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/makeStyleMapper.js","../node_modules/_echarts@4.8.0@echarts/lib/util/component.js","../node_modules/_echarts@4.8.0@echarts/lib/echarts.js","../node_modules/_echarts@4.8.0@echarts/lib/layout/points.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/LegendVisualProvider.js","../node_modules/_echarts@4.8.0@echarts/lib/processor/dataFilter.js","../node_modules/_echarts@4.8.0@echarts/lib/view/Component.js","../node_modules/_echarts@4.8.0@echarts/lib/scale/Scale.js","../node_modules/_echarts@4.8.0@echarts/lib/scale/Interval.js","../node_modules/_echarts@4.8.0@echarts/lib/layout/barGrid.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/dataColor.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/visualSolution.js","../node_modules/_echarts@4.8.0@echarts/lib/util/graphic.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/dataFormat.js","../node_modules/_echarts@4.8.0@echarts/lib/stream/task.js","../node_modules/_echarts@4.8.0@echarts/lib/util/number.js","../node_modules/_echarts@4.8.0@echarts/lib/util/model.js","../node_modules/_echarts@4.8.0@echarts/lib/model/Global.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/colorPalette.js","../node_modules/_echarts@4.8.0@echarts/lib/export.js","../node_modules/_echarts@4.8.0@echarts/lib/scale/helper.js","../node_modules/_echarts@4.8.0@echarts/lib/scale/Log.js","../node_modules/_echarts@4.8.0@echarts/lib/util/layout.js","../node_modules/_echarts@4.8.0@echarts/lib/util/format.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/visualDefault.js","../node_modules/_enquire.js@2.1.6@enquire.js/src/Util.js","../node_modules/_echarts@4.8.0@echarts/lib/model/Model.js","../node_modules/_flux-standard-action@2.1.1@flux-standard-action/lib/index.js","../node_modules/_echarts@4.8.0@echarts/lib/model/Component.js","../node_modules/_echarts@4.8.0@echarts/lib/model/Series.js","../node_modules/_gud@1.0.0@gud/index.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/lineStyle.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/areaStyle.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/textStyle.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/itemStyle.js","../node_modules/_echarts@4.8.0@echarts/lib/model/mixin/boxLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/model/globalDefault.js","../node_modules/_echarts@4.8.0@echarts/lib/model/OptionManager.js","../node_modules/_echarts@4.8.0@echarts/lib/preprocessor/backwardCompat.js","../node_modules/_echarts@4.8.0@echarts/lib/preprocessor/helper/compatStyle.js","../node_modules/_echarts@4.8.0@echarts/lib/processor/dataStack.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/seriesColor.js","../node_modules/_echarts@4.8.0@echarts/lib/visual/aria.js","../node_modules/_echarts@4.8.0@echarts/lib/loading/default.js","../node_modules/_echarts@4.8.0@echarts/lib/stream/Scheduler.js","../node_modules/_echarts@4.8.0@echarts/lib/theme/light.js","../node_modules/_echarts@4.8.0@echarts/lib/theme/dark.js","../node_modules/_echarts@4.8.0@echarts/lib/helper.js","../node_modules/_echarts@4.8.0@echarts/lib/model/referHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/scale/Ordinal.js","../node_modules/_echarts@4.8.0@echarts/lib/scale/Time.js","../node_modules/_echarts@4.8.0@echarts/lib/processor/dataSample.js","../node_modules/_echarts@4.8.0@echarts/lib/util/shape/sausage.js","../node_modules/_echarts@4.8.0@echarts/lib/util/animation.js"],"names":["zrUtil","__webpack_require__","parsePercent","isDimensionStacked","getSeriesStackId","seriesModel","get","seriesIndex","getAxisKey","polar","axis","dim","model","componentIndex","_default","seriesType","ecModel","api","lastStackCoords","barWidthAndOffset","barSeries","columnsMap","each","idx","data","getData","coordinateSystem","baseAxis","getBaseAxis","axisKey","axisExtent","getExtent","bandWidth","type","getBandWidth","Math","abs","count","columnsOnAxis","remainedWidth","autoWidthCount","categoryGap","gap","stacks","stackId","width","maxWidth","barWidth","barMaxWidth","barGap","barCategoryGap","min","result","coordSysName","barGapPercent","autoWidth","max","column","stack","lastColumn","widthSum","offset","calRadialBar","filter","getSeriesByType","isSeriesFiltered","eachSeriesByType","columnLayoutInfo","columnOffset","columnWidth","valueAxis","getOtherAxis","cx","cy","barMinHeight","barMinAngle","valueDim","mapDimension","baseDim","stacked","clampLayout","valueAxisStart","len","r0","r","startAngle","endAngle","value","baseValue","sign","baseCoord","p","n","radiusSpan","dataToRadius","angle","dataToAngle","angleSpan","radius","setItemLayout","PI","this","module","exports","graphic","BoundingRect","_calculateTextPosition","calculateTextPosition","Triangle","extendShape","shape","height","buildPath","path","moveTo","lineTo","closePath","Diamond","Pin","x","y","w","h","dy","asin","dx","cos","tanX","sin","tanY","cpLen","cpLen2","arc","bezierCurveTo","Arrow","ctx","symbolCtors","line","Line","rect","Rect","roundRect","square","circle","Circle","diamond","pin","arrow","triangle","symbolShapeMakers","x1","y1","x2","y2","size","symbolBuildProxies","Ctor","name","SymbolClz","symbolType","out","style","res","textPosition","inBundle","proxySymbol","symbolPathSetColor","color","innerColor","symbolStyle","symbolShape","stroke","__isEmptyBrush","fill","dirty","createSymbol","keepAspect","symbolPath","isEmpty","indexOf","substr","toLowerCase","makeImage","slice","makePath","setColor","Group","componentUtil","clazzUtil","modelUtil","graphicUtil","createTask","createRenderPlanner","inner","makeInner","renderPlanner","Chart","group","uid","getUID","renderTask","plan","renderTaskPlan","reset","renderTaskReset","context","view","prototype","init","render","payload","highlight","toggleHighlight","downplay","remove","removeAll","dispose","incrementalPrepareRender","incrementalRender","updateTransform","filterForExposedEvent","chartProto","elSetState","el","state","highlightDigit","trigger","isGroup","isHighDownDispatcher","i","childCount","childAt","dataIndex","queryDataIndex","highlightKey","getHighlightDigit","normalizeToArray","dataIdx","getItemGraphicEl","eachItemGraphicEl","progressiveRender","pipelineContext","updateMethod","methodName","progressMethodMap","updateView","updateLayout","updateVisual","enableClassExtend","enableClassManagement","registerWhenExtend","markUpdateMethod","progress","params","forceFirstProgress","__DEV__","TYPE_DELIMITER","IS_CONTAINER","parseClassType","componentType","ret","main","sub","split","classBase","superCall","args","arguments","superClass","apply","superApply","RootClass","mandatoryMethods","$constructor","extend","proto","ExtendedClass","inherits","enableClassCheck","Clz","classAttr","random","toFixed","join","isInstance","obj","entity","options","storage","registerClass","Clazz","assert","test","checkClassType","container","makeContainer","getClass","componentMainType","subType","throwWhenNotFound","Error","getClassesByMainType","o","push","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","call","setReadOnly","properties","validateFormat","format","condition","a","b","c","d","e","f","error","undefined","argIndex","replace","framesToPop","MediaQueryDispatch","MediaQuery","Util","isFunction","isArray","window","matchMedia","queries","browserIsIncapable","matches","constructor","register","q","shouldDegrade","isUnconditional","match","handler","addHandler","unregister","query","removeHandler","clear","QueryHandler","handlers","mql","self","listener","currentTarget","assess","addListener","constuctor","qh","on","equals","destroy","splice","removeListener","length","action","deferSetup","setup","initialised","off","unmatch","target","ORIGIN_METHOD","RATE","THROTTLE_TYPE","throttle","fn","delay","debounce","currCall","diff","scope","debounceNextCall","lastCall","lastExec","timer","exec","Date","getTime","cb","thisDelay","thisDebounce","clearTimeout","setTimeout","debounceDelay","createOrUpdate","fnAttr","rate","throttleType","originFn","lastThrottleType","legend","selector","all","inverse","toolbox","brush","title","polygon","lineX","lineY","keep","dataView","lang","dataZoom","zoom","back","magicType","bar","tiled","restore","saveAsImage","series","typeNames","pie","scatter","effectScatter","radar","tree","treemap","boxplot","candlestick","k","heatmap","map","parallel","lines","graph","sankey","funnel","gauge","pictorialBar","themeRiver","sunburst","aria","general","withTitle","withoutTitle","single","prefix","withName","withoutName","multiple","separator","middle","end","allData","partialData","defaultSymbolType","legendSymbol","performRawSeries","symbolSize","symbolRotate","hasSymbolTypeCallback","hasSymbolSizeCallback","hasSymbolRotateCallback","hasCallback","seriesSymbol","seriesSymbolSize","setVisual","symbol","symbolKeepAspect","dataEach","hasItemOption","rawValue","getRawValue","getDataParams","setItemVisual","itemModel","getItemModel","itemSymbolType","getShallow","itemSymbolSize","itemSymbolRotate","itemSymbolKeepAspect","zrColor","linearMap","isObject","CATEGORY_DEFAULT_VISUAL_INDEX","VisualMapping","option","mappingMethod","visualType","thisOption","clone","_normalizeData","normalizers","visualHandler","visualHandlers","applyVisual","getColorMapper","_doMap","normalizeVisualRange","pieceList","hasSpecialVisual","piece","index","originIndex","visual","preprocessForPiecewise","categories","categoryMap","cate","visualArr","v","setVisualToOption","pop","preprocessForSpecifiedCategory","dataExtent","mapValueToVisual","normalized","getNormalizer","bind","makeApplyVisual","isNormalized","doMapCategory","returnRGBArray","fastLerp","parsedVisual","stringify","linear","category","piecewise","getSpecifiedVisual","fixed","doMapFixed","colorHue","makePartialColorVisualHandler","modifyHSL","colorSaturation","colorLightness","colorAlpha","modifyAlpha","opacity","makeDoMap","liftZ","getter","setter","symbolCfg","isString","hasOwnProperty","doMapToArray","isCategory","applyValue","round","loop","sourceExtent","findPieceIndex","item","parse","pieceIndex","noop","littleThan","close","listVisualTypes","visualTypes","key","addVisualHandler","isValidType","eachVisual","callback","mapVisual","isPrimary","newVisual","newVal","retrieveVisuals","hasVisual","prepareVisualTypes","sort","type1","type2","dependsOn","visualType1","visualType2","findClosestWhenOutside","possibleI","Infinity","pieceValue","updatePossible","interval","val","newAbs","excludes","includes","propName","base","enableSubTypeDefaulter","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","componentTypeMain","enableTopologicalTravel","dependencyGetter","createDependencyGraphItem","predecessor","successor","topologicalTravel","targetNameList","fullNameList","noEntryList","thisItem","availableDeps","originalDeps","dep","getAvailableDependencies","entryCount","dependentName","thatItem","makeDepndencyGraph","targetNameSet","currComponentType","currVertex","isInTargetNameSet","removeEdgeAndAdd","removeEdge","succComponentType","zrender","colorTool","env","timsort","Eventful","GlobalModel","ExtensionAPI","CoordinateSystemManager","OptionManager","backwardCompat","dataStack","ComponentModel","SeriesModel","ComponentView","ChartView","seriesColor","loadingDefault","Scheduler","lightTheme","darkTheme","mapDataStorage","PRIORITY_PROCESSOR_FILTER","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_CHART","PRIORITY","PROCESSOR","FILTER","SERIES_FILTER","STATISTIC","VISUAL","LAYOUT","PROGRESSIVE_LAYOUT","GLOBAL","CHART","POST_CHART_LAYOUT","COMPONENT","BRUSH","IN_MAIN_PROCESS","OPTION_UPDATED","ACTION_REG","createRegisterEventWithLowercaseName","method","ignoreDisposed","eventName","_disposed","id","MessageCenter","ECharts","dom","theme","opts","themeStorage","_dom","zr","_zr","renderer","devicePixelRatio","_throttledZrFlush","flush","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_coordSysMgr","_api","ecInstance","coordSysMgr","getCoordinateSystems","getComponentByElement","modelInfo","__ecComponentInfo","_model","getComponent","mainType","parent","createExtensionAPI","prioritySortFunc","__prio","visualFuncs","dataProcessorFuncs","_scheduler","_ecEventProcessor","EventProcessor","_messageCenter","_initEvents","resize","_pendingActions","animation","_onframe","ecIns","isFinished","unfinished","bindRenderedEvent","setAsPrimitive","one","mixin","echartsProto","doConvertPixel","finder","coordSysList","parseFinder","coordSys","scheduler","silent","prepare","updateMethods","update","flushPendingActions","triggerUpdatedEvent","remainTime","startTime","performSeriesTasks","performDataProcessorTasks","updateStreamModes","performVisualTasks","renderSeries","getDom","getZr","setOption","notMerge","lazyUpdate","optionManager","optionPreprocessorFuncs","setTheme","getModel","getOption","getWidth","getHeight","getDevicePixelRatio","painter","dpr","getRenderedCanvas","canvasSupported","pixelRatio","backgroundColor","getSvgDataURL","svgSupported","list","getDisplayList","stopAnimation","toDataURL","getDataURL","excludeComponents","excludesComponentViews","eachComponent","component","__viewId","ignore","url","getType","getConnectedDataURL","isSvg","groupId","mathMin","mathMax","connectedGroups","left","top","right","bottom","canvasList","instances","chart","canvas","getSvgDom","innerHTML","boundingRect","getBoundingClientRect","targetCanvas","createCanvas","content","getSvgRoot","connectedBackgroundColor","setBackgroundColor","refreshImmediately","add","img","Image","image","convertToPixel","curry","convertFromPixel","containPixel","models","containPoint","getVisual","defaultMainType","dataIndexInside","indexOfRawIndex","getItemVisual","getViewOfComponentModel","componentModel","getViewOfSeriesModel","prepareAndUpdate","restoreData","create","clearColorPalette","colorArr","performPostUpdateFuncs","componentDirtyList","componentView","__alive","seriesDirtyMap","createHashMap","eachSeries","chartView","set","setDirty","dirtyMap","restorePipelines","prepareStageTasks","prepareView","updateDirectly","excludeSeriesId","callView","concat","__model","chartsMap","doDispatchAction","payloadType","escapeConnect","actionWrap","actions","actionInfo","cptType","payloads","batched","batch","defaults","eventObj","eventObjBatch","isHighDown","batchItem","event","pendingActions","shift","isComponent","viewList","viewMap","doPrepare","viewId","classType","__id","dirtyList","updateZ","renderComponents","updatePayload","perform","getPerformArgs","blendMode","traverse","blend","setStyle","eachPendingDisplayable","displayable","updateBlend","elCount","node","preventUsingHoverLayer","useHoverLayer","updateHoverLayerStatus","postUpdateFuncs","func","_loadingFX","optionChanged","resetOption","showLoading","cfg","hideLoading","loadingEffects","makeActionFromEvent","eventActionMap","dispatchAction","opt","browser","weChat","appendData","getSeriesByIndex","MOUSE_EVENT_NAMES","z","zlevel","eventInfo","eveName","dataModel","dataType","eventData","targetEl","packedEvent","zrEventfulCallAtLast","actionType","eventType","isDisposed","setAttribute","DOM_ATTRIBUTE_KEY","normalizeQuery","cptQuery","dataQuery","otherQuery","condCptType","suffixes","dataKeys","reserved","propSuffix","suffixPos","lastIndexOf","check","host","prop","propOnHost","afterTrigger","idBase","groupIdBase","disConnect","disconnect","getInstanceByDom","getAttribute","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processor","normalizeRegister","registerAction","registerVisual","visualTask","targetList","defaultPriority","stageHandler","wrapStageHandler","__raw","registerLoading","loadingFx","version","dependencies","existInstance","STATUS_KEY","updateConnectedChartsStatus","charts","status","otherCharts","otherChart","enableConnect","connect","getInstanceById","registerPostUpdate","postUpdateFunc","registerCoordinateSystem","CoordinateSystem","getCoordinateSystemDimensions","coordSysCreator","getDimensionsInfo","dimensions","registerLayout","layoutTask","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","$override","registerMap","mapName","geoJson","specialAreas","getMap","records","retrieveMap","geoJSON","dataTool","___ec_export","isLargeRender","large","dims","dimLen","stackResultDim","getCalculationInfo","segCount","start","points","Float32Array","tmpIn","tmpOut","point","isNaN","dataToPoint","NaN","setLayout","getDataWithEncodedVisual","getRawData","getAllNames","rawData","mapArray","getName","containName","indexOfName","legendModels","findComponents","filterSelf","isSelected","Component","componentProto","Scale","setting","_setting","_extent","_interval","getSetting","contain","extent","normalize","scale","unionExtent","other","unionExtentFromData","getApproximateExtent","setExtent","thisExtent","isBlank","_isBlank","setBlank","getLabel","numberUtil","formatUtil","helper","roundNumber","IntervalScale","_intervalPrecision","parseFloat","getInterval","setInterval","_niceExtent","getIntervalPrecision","getTicks","expandToNicedExtent","niceTickExtent","intervalPrecision","ticks","tick","lastNiceTick","getMinorTicks","splitNumber","minorTicks","nextTick","prevTick","minorTicksGroup","minorInterval","minorTick","precision","getPrecisionSafe","addCommas","niceTicks","minInterval","maxInterval","span","isFinite","reverse","intervalScaleNiceTicks","niceExtent","expandSize","fixMax","fixMin","floor","ceil","STACK_PREFIX","LargeArr","Array","prepareLayoutBarSeries","seriesModels","isOnCartesian","isInLargeMode","makeColumnLayout","axisMinGaps","axisValues","cnt","valuesInAxis","j","delta","getValueAxesMinGaps","seriesInfoList","minGap","extentSpan","scaleSpan","barMinWidth","doCalBarWidthAndOffset","seriesInfo","minWidth","finalWidth","retrieveColumnLayout","largeLayout","cartesian","coordLayout","grid","getRect","valueAxisHorizontal","isHorizontal","valueDimIdx","largePoints","largeBackgroundPoints","largeDataIndices","coord","valuePair","pointsOffset","idxOffset","next","getValueAxisStart","backgroundStart","toGlobalCoord","dataToCoord","getLayoutOnAxis","widthAndOffsets","offsetCenter","layout","lastStackCoordsOrigin","isValueAxisH","getTargetSeries","paletteScope","seiresModelMap","__paletteScope","dataAll","idxMap","rawIdx","getRawIndex","filteredIdx","singleDataColor","singleDataBorderColor","getColorFromPalette","borderColor","hasKeys","createVisualMappings","stateList","supplementVisualOption","visualMappings","mappings","Creater","__hidden","createMappings","visualData","mappingOption","__alphaForOpacity","replaceVisualOption","newOption","keys","has","getValueState","dimension","visualTypesMap","eachItem","valueOrIndex","rawDataItem","getRawDataItem","visualMap","valueState","incrementalApplyVisual","getDimension","pathTool","matrix","vector","Path","Transformable","ZImage","Text","Sector","Ring","Polygon","Polyline","BezierCurve","Arc","CompoundPath","LinearGradient","RadialGradient","IncrementalDisplayable","subPixelOptimizeUtil","EMPTY_OBJ","Z2_EMPHASIS_LIFT","EMPHASIS","NORMAL","_highlightNextDigit","_highlightKeyMap","_customShapeMap","registerShape","ShapeClass","pathData","createFromString","centerGraphic","getBoundingRect","resizePath","aspect","mergePath","applyTransform","m","calculateTransform","subPixelOptimize","hasFillOrStroke","fillOrStroke","liftedColorMap","liftedColorCount","singleEnterEmphasis","hoverStl","__hoverStl","__highlighted","__zr","elTarget","targetStyle","addHover","rollbackDefaultTextStyle","__hoverStlDirty","hoverStyle","normalStyle","__cachedNormalStl","__cachedNormalZ2","z2","elStyle","cacheElementStl","extendFrom","setDefaultHoverFillStroke","applyDefaultTextStyle","liftedColor","lift","liftColor","singleEnterNormal","highlighted","removeHover","normalStl","normalZ2","traverseUpdate","updater","commonParam","fromState","toState","child","__highDownOnUpdate","setElementHoverStyle","onElementMouseOver","shouldSilent","__highByOuter","onElementMouseOut","onElementEmphasisEvent","onElementNormalEvent","__highDownSilentOnTouch","zrByTouch","setAsHighDownDispatcher","asDispatcher","disable","highDownSilentOnTouch","highDownOnUpdate","__highDownDispatcher","setTextStyle","textStyle","textStyleModel","specifiedTextStyle","isEmphasis","setTextStyleCommon","isRectText","getTextPosition","textOffset","labelRotate","textRotation","textDistance","retrieve2","richResult","globalTextStyle","richItemNames","richItemNameMap","rich","parentModel","getRichItemNames","richTextStyle","setTokenTextStyle","forceRich","isBlock","textFill","getAutoColor","textStroke","textBorderColor","textStrokeWidth","textBorderWidth","insideRollbackOpt","autoColor","fontStyle","fontWeight","fontSize","fontFamily","textAlign","textVerticalAlign","textLineHeight","textWidth","textHeight","textTag","disableBox","textBackgroundColor","textPadding","textBorderRadius","textBoxShadowColor","textBoxShadowBlur","textBoxShadowOffsetX","textBoxShadowOffsetY","textShadowColor","textShadowBlur","textShadowOffsetX","textShadowOffsetY","insideRollback","useInsideStyle","useInsideStyleCache","useAutoColorCache","animateOrSetProps","isUpdate","props","animatableModel","isAnimationEnabled","postfix","duration","animationEasing","animationDelay","getAnimationDelayParams","animateTo","attr","updateProps","transform","invert","isArrayLike","getLocalTransform","lineLineIntersect","a1x","a1y","a2x","a2y","b1x","b1y","b2x","b2y","mx","my","nx","ny","nmCrossProduct","crossProduct2d","b1a1x","b1a1y","CACHED_LABEL_STYLE_PROPERTIES","extendPath","extendFromString","getShapeClass","imageUrl","onload","subPixelOptimizeLine","param","subPixelOptimizeRect","setHoverStyle","setLabelStyle","emphasisStyle","normalModel","emphasisModel","normalSpecified","emphasisSpecified","baseText","labelFetcher","labelDataIndex","labelDimIndex","labelProp","showNormal","showEmphasis","getFormattedLabel","defaultText","normalStyleText","emphasisStyleText","text","modifyLabelStyle","normalStyleProps","emphasisStyleProps","setText","labelModel","defaultColor","getFont","gTextStyleModel","trim","initProps","getTransform","ancestor","mat","identity","mul","transformDirection","direction","hBase","vBase","vertex","groupTransition","g1","g2","elMap1","g","elMap","anid","getElMap","oldEl","newProp","getAnimatableProps","position","rotation","clipPointsByRect","clipRectByRect","targetRect","createIcon","iconStr","rectHover","strokeNoScale","linePolygonIntersect","p2","retrieveRawValue","_format","getTooltipMarker","formatTpl","getTooltipRenderMode","DIMENSION_LABEL_REG","rawDataIndex","itemOpt","tooltipModel","renderModeOption","renderMode","isSeries","userOutput","componentSubType","seriesId","seriesName","dimensionNames","encode","marker","$vars","dimIndex","formatter","dimensionIndex","origin","charAt","formatTooltip","_util","Task","define","_reset","_plan","_count","_onDirty","onDirty","_dirty","taskProto","performArgs","planResult","upTask","_upstream","skip","outputData","__pipeline","currentTask","lastModBy","normalizeModBy","_modBy","lastModDataCount","_modDataCount","modBy","modDataCount","taskIns","_dueIndex","_outputDueEnd","_dueEnd","_settedOutputEnd","_progress","downstream","_downstream","step","doProgress","outputDueEnd","iterator","current","winCount","it","s","sStep","sCount","modNext","sequentialNext","_callingProgress","pipe","downTask","getUpstream","getDownstream","setOutputEnd","RADIAN_EPSILON","TIME_REG","quantityExponent","exp","log","LN10","pow","domain","range","clamp","subDomain","subRange","percent","str","returnStr","asc","arr","getPrecision","toString","eIndex","dotIndex","getPixelPrecision","pixelExtent","dataQuantity","sizeQuantity","getPercentWithPrecision","valueList","sum","reduce","acc","digits","votesPerQuota","targetSeats","seats","votes","currentSum","remainder","Number","NEGATIVE_INFINITY","maxId","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","hour","toUpperCase","UTC","quantity","nice","exponent","exp10","quantile","ascArr","H","reformIntervals","lg","curr","currClose","isNumeric","DUMMY_COMPONENT_NAME_PREFIX","isIdInner","cptOption","innerUniqueIndex","defaultEmphasis","subOpts","emphasis","subOptName","TEXT_STYLE_OPTIONS","getDataItemValue","dataItem","isDataItemOption","mappingToExists","exists","newCptOptions","exist","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","isNameSpecified","compressBatches","batchA","batchB","mapA","mapB","makeMap","mapToArray","sourceBatch","otherMap","dataIndices","otherDataIndices","lenj","isData","hostObj","parsedKey","queryType","includeMainTypes","queryParam","queryComponents","domSupported","groupData","array","getKey","buckets","merge","Model","globalDefault","colorPaletteMixin","resetSourceDefaulter","OPTION_INNER_KEY","_optionManager","baseOption","mountOption","mergeOption","_seriesIndices","_seriesIndicesMap","notMergeColorLayer","colorLayer","themeItem","mergeTheme","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","componentsMap","newCptTypes","componentOption","newCptOptionList","newCptOption","existComponent","dependentModels","getComponentsByTypes","resultItem","ComponentModelClass","optionUpdated","extraOpt","createSeriesIndices","getTheme","cpts","isIdArray","cpt","isNameArray","filterBySubType","queryCond","indexAttr","idAttr","nameAttr","getQueryCond","components","queryResult","getSeriesByName","oneSeries","getSeries","getSeriesCount","rawSeriesIndex","eachRawSeries","eachRawSeriesByType","getCurrentSeriesIndices","filterSeries","componentTypes","seiresIndex","isNotTargetSeries","colorIdx","colorNameMap","requestColorNum","scopeFields","defaultColorPalette","layeredColorPalette","colorPalette","colors","paletteNum","getNearestColorPalette","number","_throttle","ecHelper","parseGeoJSON","_List","List","_Model","_Axis","Axis","_env","parseGeoJson","ecUtil","util","fixExtent","scaleProto","intervalScaleProto","roundingErrorFix","mathFloor","mathCeil","mathPow","mathLog","LogScale","_originalScale","originalScale","originalExtent","powVal","__fixMin","fixRoundingError","__fixMax","approxTickNum","originalVal","LOCATION_PARAMS","HV_NAMES","boxLayout","orient","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","nextChildRect","moveX","newline","moveY","box","vbox","hbox","getLayoutRect","positionInfo","containerRect","margin","normalizeCssArray","containerWidth","containerHeight","verticalMargin","horizontalMargin","copyLayoutParams","source","getAvailableSize","positionElement","hv","boundingMode","needLocalTransform","elPos","sizeCalculable","hvIdx","mergeLayoutParam","targetOption","ignoreSize","hResult","vResult","names","newParams","newValueCount","merged","mergedValueCount","hasProp","hasValue","copy","getLayoutParams","textContain","replaceReg","replaceMap","&","<",">","\"","'","encodeHTML","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","pad","truncateText","toCamelCase","upperCaseFirst","group1","tpl","paramsList","seriesLen","alias","formatTplSimple","extraCssText","markerId","formatTime","isUTC","date","utc","M","S","capitalFirst","getTextBoundingRect","font","truncate","getTextRect","windowOpen","link","blank","open","opener","location","visualDefault","defaultOption","active","inactive","Object","collection","_clazz","lineStyleMixin","areaStyleMixin","textStyleMixin","itemStyleMixin","doGet","pathArr","getParent","getParentMethod","ignoreParent","parsePath","thisParentModel","customizeGetParent","defineProperty","isFSA","isError","_lodash","isPlainObject","every","isValidKey","boxLayoutMixin","layoutMode","mergeDefaultAndTheme","inputPositionParams","themeModel","getDefaultOption","isInit","fields","optList","Class","getReferringComponents","deps","unshift","dataFormatMixin","_layout","_sourceHelper","prepareSource","_getSource","getSource","legendVisualProvider","visualColorAccessPath","visualBorderColorAccessPath","dataTask","dataTaskCount","dataTaskReset","getInitialData","wrapData","dataBeforeProcessed","autoSeriesName","themeSubType","fillDataTextStyle","newSeriesOption","isTypedArray","label","task","getCurrentTask","getLinkedData","setData","modifyOutputEnd","multipleSeries","newLine","isRichText","markers","formatSingleValue","tooltipDims","tooltipDimLen","isValueArr","colorStops","vertially","dimItem","getDimensionInfo","tooltip","displayName","setEachItem","dimInfo","otherDims","dimType","markName","dimHead","dimHeadStr","valStr","formatArrayValue","colorEl","colorStr","html","animationEnabled","coordDimToDataDim","coordDim","getProgressive","getProgressiveThreshold","getAxisTooltipData","getTooltipPosition","pipeTask","preventIncremental","dataDims","nameArr","dataDim","getSeriesAutoName","cloneShallow","dataTaskProgress","CHANGABLE_METHODS","wrapMethod","onDataSelfChange","pipeline","getPipeline","agentStubMap","global","_getLineStyle","makeStyleMapper","getLineStyle","lineDash","getLineDash","lineWidth","lineType","dotSize","dashSize","_getAreaStyle","getAreaStyle","PATH_COLOR","getTextColor","_getItemStyle","getItemStyle","getBorderLineDash","getBoxLayoutParams","platform","navigator","gradientColor","animationDuration","animationDurationUpdate","animationEasingUpdate","animationThreshold","progressiveThreshold","progressive","hoverLayerThreshold","useUTC","QUERY_REG","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","operator","realAttr","real","expect","compare","rawOption","oldOption","oldOptionBackup","newParsedOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","newCptOpt","oldCptOpt","isRecreate","optionBackup","timelineModel","getCurrentIndex","indices1","indices2","indices","compatStyle","compatLayoutProperties","LAYOUT_PROPERTIES","COMPATITABLE_COMPONENTS","isTheme","seriesOpt","clipOverflow","clip","clockWise","clockwise","pointerColor","overwrite","dataRange","componentName","POSSIBLE_STYLES","compatEC2ItemStyle","itemStyleOpt","itemStyle","styleName","normalItemStyleOpt","normal","emphasisItemStyleOpt","convertNormalEmphasis","optType","useExtend","normalOpt","emphasisOpt","removeEC3NormalStatus","compatTextStyle","labelOptSingle","compatEC3CommonStyles","toArr","toObj","markPoint","markLine","markArea","nodes","edgeData","links","edges","mpData","mlData","breadcrumb","levels","leaves","processSeries","axes","axisName","axisOpt","axisPointer","parallelOpt","parallelAxisDefault","calendar","calendarOpt","radarOpt","geo","geoOpt","regions","regionObj","toolboxOpt","feature","featureOpt","calculateStack","stackInfoList","targetStackInfo","idxInStack","resultVal","resultNaN","stackResultDimension","stackedOverDimension","targetData","isStackedByIndex","newData","v0","v1","byValue","stackedDataRawIndex","stackedDimension","stackedByDimension","stackedOver","stackInfo","rawIndexOf","getByRawIndex","hostModel","stackInfoMap","setCalculationInfo","Gradient","createOnAllSeries","colorAccessPath","colorCallback","borderColorAccessPath","ariaModel","seriesCnt","ariaLabel","maxDataCnt","maxSeriesCnt","displaySeriesCnt","getTitle","getConfig","seriesLabels","seriesCount","seriesLabel","seriesTpl","displayCnt","dataLabels","keyValues","RegExp","userConfig","textColor","maskColor","showSpinner","spinnerRadius","mask","labelRect","lineCap","animateShape","when","setShape","dataProcessorHandlers","_dataProcessorHandlers","_visualHandlers","_allHandlers","_stageTaskMap","performStageTasks","stageHandlers","needSetDirty","stageHandlerRecord","seriesTaskMap","overallTask","overallNeedDirty","stub","block","pipelineId","taskRecord","_pipelineMap","pCtx","progressiveEnabled","__idxInPipeline","blockIndex","dataLen","threshold","pipelineMap","head","tail","stageTaskMap","record","seriesTaskPlan","seriesTaskReset","seriesTaskCount","useClearVisual","isVisual","isLayout","removeKey","createSeriesStageTask","overallReset","overallTaskReset","overallProgress","createStub","stubReset","stubOnDirty","agent","__block","createOverallStageTask","upstreamContext","stubProgress","clearAllVisual","resetDefines","makeSeriesTaskProgress","singleSeriesTaskProgress","resetDefineIdx","resetDefine","detectSeriseType","legacyFunc","ecModelMock","apiMock","mockMethods","cond","colorAll","lineStyle","crossStyle","iconStyle","controlStyle","timeAxis","axisLine","axisTick","axisLabel","splitLine","splitArea","areaStyle","logAxis","categoryAxis","color0","borderColor0","show","createListFromArray","axisHelper","axisModelCommonMixin","_dataStackHelper","enableDataStack","getStackedDimension","_completeDimensions","completeDimensions","_createDimensions","createDimensions","_symbol","createList","createScale","axisModel","createScaleByModel","niceScaleExtent","mixinAxisModelCommonMethods","retrieve","CoordSysInfo","coordSysDims","axisMap","categoryAxisMap","firstCategoryDimIndex","fetchers","cartesian2d","xAxisModel","yAxisModel","singleAxis","singleAxisModel","polarModel","radiusAxisModel","findAxisModel","angleAxisModel","parallelModel","parallelAxisIndex","axisIndex","axisDim","getCoordSysInfoBySeries","fetch","OrdinalMeta","OrdinalScale","ordinalMeta","_ordinalMeta","getOrdinal","rank","getOrdinalMeta","scaleHelper","TimeScale","stepLvl","_stepLvl","ONE_HOUR","getFullYear","getMonth","getDate","approxInterval","scaleLevelsLen","scaleLevels","lo","hi","mid","bisect","level","yearSpan","timezoneOffset","getTimezoneOffset","ONE_SECOND","ONE_MINUTE","ONE_DAY","samplers","average","frame","nearest","indexSampler","sampling","sampler","downSample","dr","rCenter","unitStartX","unitStartY","unitEndX","unitEndY","createWrap","doneCallback","elExistsMap","time","easing","done"],"mappings":"8EAkBA,IAAAA,EAAaC,EAAQ,GAIrBC,EAFcD,EAAQ,IAEtBC,aAIAC,EAFuBF,EAAQ,KAE/BE,mBAoBA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,IAAA,wBAAAD,EAAAE,YAGA,SAAAC,EAAAC,EAAAC,GACA,OAAAA,EAAAC,IAAAF,EAAAG,MAAAC,eAoOA,IAAAC,EA3NA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAmHA,SAAAC,EAAAH,GAEA,IAAAI,EAAA,GACArB,EAAAsB,KAAAF,EAAA,SAAAf,EAAAkB,GACA,IAAAC,EAAAnB,EAAAoB,UACAhB,EAAAJ,EAAAqB,iBACAC,EAAAlB,EAAAmB,cACAC,EAAArB,EAAAC,EAAAkB,GACAG,EAAAH,EAAAI,YACAC,EAAA,aAAAL,EAAAM,KAAAN,EAAAO,eAAAC,KAAAC,IAAAN,EAAA,GAAAA,EAAA,IAAAN,EAAAa,QACAC,EAAAjB,EAAAQ,IAAA,CACAG,YACAO,cAAAP,EACAQ,eAAA,EACAC,YAAA,MACAC,IAAA,MACAC,OAAA,IAEAA,EAAAL,EAAAK,OACAtB,EAAAQ,GAAAS,EACA,IAAAM,EAAAxC,EAAAC,GAEAsC,EAAAC,IACAN,EAAAE,iBAGAG,EAAAC,GAAAD,EAAAC,IAAA,CACAC,MAAA,EACAC,SAAA,GAEA,IAAAC,EAAA7C,EAAAG,EAAAC,IAAA,YAAA0B,GACAgB,EAAA9C,EAAAG,EAAAC,IAAA,eAAA0B,GACAiB,EAAA5C,EAAAC,IAAA,UACA4C,EAAA7C,EAAAC,IAAA,kBAEAyC,IAAAJ,EAAAC,GAAAC,QACAE,EAAAZ,KAAAgB,IAAAb,EAAAC,cAAAQ,GACAJ,EAAAC,GAAAC,MAAAE,EACAT,EAAAC,eAAAQ,GAGAC,IAAAL,EAAAC,GAAAE,SAAAE,GACA,MAAAC,IAAAX,EAAAI,IAAAO,GACA,MAAAC,IAAAZ,EAAAG,YAAAS,KAEA,IAAAE,EAAA,GAsDA,OArDApD,EAAAsB,KAAAD,EAAA,SAAAiB,EAAAe,GACAD,EAAAC,GAAA,GACA,IAAAV,EAAAL,EAAAK,OACAX,EAAAM,EAAAN,UACAS,EAAAvC,EAAAoC,EAAAG,YAAAT,GACAsB,EAAApD,EAAAoC,EAAAI,IAAA,GACAH,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,eACAe,GAAAhB,EAAAE,IAAAD,KAAA,GAAAc,GACAC,EAAApB,KAAAqB,IAAAD,EAAA,GAEAvD,EAAAsB,KAAAqB,EAAA,SAAAc,EAAAC,GACA,IAAAZ,EAAAW,EAAAX,SAEAA,KAAAS,IACAT,EAAAX,KAAAgB,IAAAL,EAAAP,GAEAkB,EAAAZ,QACAC,EAAAX,KAAAgB,IAAAL,EAAAW,EAAAZ,QAGAN,GAAAO,EACAW,EAAAZ,MAAAC,EACAN,OAIAe,GAAAhB,EAAAE,IAAAD,KAAA,GAAAc,GACAC,EAAApB,KAAAqB,IAAAD,EAAA,GACA,IACAI,EADAC,EAAA,EAEA5D,EAAAsB,KAAAqB,EAAA,SAAAc,EAAAlC,GACAkC,EAAAZ,QACAY,EAAAZ,MAAAU,GAGAI,EAAAF,EACAG,GAAAH,EAAAZ,OAAA,EAAAS,KAGAK,IACAC,GAAAD,EAAAd,MAAAS,GAGA,IAAAO,GAAAD,EAAA,EACA5D,EAAAsB,KAAAqB,EAAA,SAAAc,EAAAb,GACAQ,EAAAC,GAAAT,GAAAQ,EAAAC,GAAAT,IAAA,CACAiB,SACAhB,MAAAY,EAAAZ,OAEAgB,GAAAJ,EAAAZ,OAAA,EAAAS,OAGAF,EAtNAU,CAAA9D,EAAA+D,OAAA/C,EAAAgD,gBAAAjD,GAAA,SAAAV,GACA,OAAAW,EAAAiD,iBAAA5D,MAAAqB,kBAAA,UAAArB,EAAAqB,iBAAAO,QAEAjB,EAAAkD,iBAAAnD,EAAA,SAAAV,GAEA,aAAAA,EAAAqB,iBAAAO,KAAA,CAIA,IAAAT,EAAAnB,EAAAoB,UACAhB,EAAAJ,EAAAqB,iBACAC,EAAAlB,EAAAmB,cACAC,EAAArB,EAAAC,EAAAkB,GACAiB,EAAAxC,EAAAC,GACA8D,EAAAhD,EAAAU,GAAAe,GACAwB,EAAAD,EAAAN,OACAQ,EAAAF,EAAAtB,MACAyB,EAAA7D,EAAA8D,aAAA5C,GACA6C,EAAAnE,EAAAqB,iBAAA8C,GACAC,EAAApE,EAAAqB,iBAAA+C,GACAC,EAAArE,EAAAC,IAAA,mBACAqE,EAAAtE,EAAAC,IAAA,kBACAY,EAAA0B,GAAA1B,EAAA0B,IAAA,GASA,IARA,IAAAgC,EAAApD,EAAAqD,aAAAP,EAAA3D,KACAmE,EAAAtD,EAAAqD,aAAAlD,EAAAhB,KACAoE,EAAA5E,EAAAqB,EAAAoD,GAGAI,EAAA,WAAArD,EAAAhB,MAAAN,EAAAC,IAAA,eACA2E,EAAAX,EAAAvC,YAAA,GAEAR,EAAA,EAAA2D,EAAA1D,EAAAa,QAAyCd,EAAA2D,EAAW3D,IAAA,CACpD,IAqBA4D,EACAC,EACAC,EACAC,EAxBAC,EAAA/D,EAAAlB,IAAAsE,EAAArD,GACAiE,EAAAhE,EAAAlB,IAAAwE,EAAAvD,GACAkE,EAAAF,GAAA,UACAG,EAAAT,EAuBA,GAnBAF,IACA7D,EAAA0B,GAAA4C,KACAtE,EAAA0B,GAAA4C,GAAA,CACAG,EAAAV,EAEAW,EAAAX,IAMAS,EAAAxE,EAAA0B,GAAA4C,GAAAC,IAQA,WAAAnB,EAAA3D,IAAA,CACA,IAAAkF,EAAAvB,EAAAwB,aAAAP,GAAAN,EACAc,EAAApE,EAAAqE,YAAAR,GAEArD,KAAAC,IAAAyD,GAAAnB,IACAmB,KAAA,QAAAnB,GAGAS,EAAAO,EACAN,EAAAM,EAAAG,EAEAP,GADAD,EAAAU,EAAA3B,GACAC,EACAU,IAAA7D,EAAA0B,GAAA4C,GAAAC,GAAAL,OAEA,CACA,IAAAa,EAAA3B,EAAA0B,YAAAT,EAAAP,GAAAC,EACAiB,EAAAvE,EAAAmE,aAAAN,GAEArD,KAAAC,IAAA6D,GAAAtB,IACAsB,KAAA,QAAAtB,GAIAS,GADAD,EAAAe,EAAA9B,GACAC,EACAgB,EAAAK,EACAJ,EAAAI,EAAAO,EAWAlB,IAAA7D,EAAA0B,GAAA4C,GAAAC,GAAAH,GAGA9D,EAAA2E,cAAA5E,EAAA,CACAiD,KACAC,KACAU,KACAC,IAGAC,cAAAlD,KAAAiE,GAAA,IACAd,YAAAnD,KAAAiE,GAAA,SAGGC,OA8GHC,EAAAC,QAAAzF,uBCtQA,IAAAd,EAAaC,EAAQ,GAErBuG,EAAcvG,EAAQ,IAEtBwG,EAAmBxG,EAAQ,IAI3ByG,EAFYzG,EAAQ,IAEpB0G,sBA0BAC,EAAAJ,EAAAK,YAAA,CACA5E,KAAA,WACA6E,MAAA,CACAtC,GAAA,EACAC,GAAA,EACA5B,MAAA,EACAkE,OAAA,GAEAC,UAAA,SAAAC,EAAAH,GACA,IAAAtC,EAAAsC,EAAAtC,GACAC,EAAAqC,EAAArC,GACA5B,EAAAiE,EAAAjE,MAAA,EACAkE,EAAAD,EAAAC,OAAA,EACAE,EAAAC,OAAA1C,EAAAC,EAAAsC,GACAE,EAAAE,OAAA3C,EAAA3B,EAAA4B,EAAAsC,GACAE,EAAAE,OAAA3C,EAAA3B,EAAA4B,EAAAsC,GACAE,EAAAG,eAQAC,EAAAb,EAAAK,YAAA,CACA5E,KAAA,UACA6E,MAAA,CACAtC,GAAA,EACAC,GAAA,EACA5B,MAAA,EACAkE,OAAA,GAEAC,UAAA,SAAAC,EAAAH,GACA,IAAAtC,EAAAsC,EAAAtC,GACAC,EAAAqC,EAAArC,GACA5B,EAAAiE,EAAAjE,MAAA,EACAkE,EAAAD,EAAAC,OAAA,EACAE,EAAAC,OAAA1C,EAAAC,EAAAsC,GACAE,EAAAE,OAAA3C,EAAA3B,EAAA4B,GACAwC,EAAAE,OAAA3C,EAAAC,EAAAsC,GACAE,EAAAE,OAAA3C,EAAA3B,EAAA4B,GACAwC,EAAAG,eAQAE,EAAAd,EAAAK,YAAA,CACA5E,KAAA,MACA6E,MAAA,CAEAS,EAAA,EACAC,EAAA,EACA3E,MAAA,EACAkE,OAAA,GAEAC,UAAA,SAAAC,EAAAH,GACA,IAAAS,EAAAT,EAAAS,EACAC,EAAAV,EAAAU,EACAC,EAAAX,EAAAjE,MAAA,IAEA6E,EAAAvF,KAAAqB,IAAAiE,EAAAX,EAAAC,QACA3B,EAAAqC,EAAA,EAEAE,EAAAvC,KAAAsC,EAAAtC,GACAX,EAAA+C,EAAAE,EAAAtC,EAAAuC,EACA5B,EAAA5D,KAAAyF,KAAAD,EAAAvC,GAEAyC,EAAA1F,KAAA2F,IAAA/B,GAAAX,EACA2C,EAAA5F,KAAA6F,IAAAjC,GACAkC,EAAA9F,KAAA2F,IAAA/B,GACAmC,EAAA,GAAA9C,EACA+C,EAAA,GAAA/C,EACA6B,EAAAC,OAAAK,EAAAM,EAAApD,EAAAkD,GACAV,EAAAmB,IAAAb,EAAA9C,EAAAW,EAAAjD,KAAAiE,GAAAL,EAAA,EAAA5D,KAAAiE,GAAAL,GACAkB,EAAAoB,cAAAd,EAAAM,EAAAE,EAAAG,EAAAzD,EAAAkD,EAAAM,EAAAC,EAAAX,EAAAC,EAAAW,EAAAZ,EAAAC,GACAP,EAAAoB,cAAAd,EAAAC,EAAAW,EAAAZ,EAAAM,EAAAE,EAAAG,EAAAzD,EAAAkD,EAAAM,EAAAC,EAAAX,EAAAM,EAAApD,EAAAkD,GACAV,EAAAG,eAQAkB,EAAA9B,EAAAK,YAAA,CACA5E,KAAA,QACA6E,MAAA,CACAS,EAAA,EACAC,EAAA,EACA3E,MAAA,EACAkE,OAAA,GAEAC,UAAA,SAAAuB,EAAAzB,GACA,IAAAC,EAAAD,EAAAC,OACAlE,EAAAiE,EAAAjE,MACA0E,EAAAT,EAAAS,EACAC,EAAAV,EAAAU,EACAK,EAAAhF,EAAA,IACA0F,EAAArB,OAAAK,EAAAC,GACAe,EAAApB,OAAAI,EAAAM,EAAAL,EAAAT,GACAwB,EAAApB,OAAAI,EAAAC,EAAAT,EAAA,KACAwB,EAAApB,OAAAI,EAAAM,EAAAL,EAAAT,GACAwB,EAAApB,OAAAI,EAAAC,GACAe,EAAAnB,eAQAoB,EAAA,CACAC,KAAAjC,EAAAkC,KACAC,KAAAnC,EAAAoC,KACAC,UAAArC,EAAAoC,KACAE,OAAAtC,EAAAoC,KACAG,OAAAvC,EAAAwC,OACAC,QAAA5B,EACA6B,IAAA5B,EACA6B,MAAAb,EACAc,SAAAxC,GAEAyC,EAAA,CACAZ,KAAA,SAAAlB,EAAAC,EAAAC,EAAAC,EAAAZ,GAEAA,EAAAwC,GAAA/B,EACAT,EAAAyC,GAAA/B,EAAAE,EAAA,EACAZ,EAAA0C,GAAAjC,EAAAE,EACAX,EAAA2C,GAAAjC,EAAAE,EAAA,GAEAiB,KAAA,SAAApB,EAAAC,EAAAC,EAAAC,EAAAZ,GACAA,EAAAS,IACAT,EAAAU,IACAV,EAAAjE,MAAA4E,EACAX,EAAAC,OAAAW,GAEAmB,UAAA,SAAAtB,EAAAC,EAAAC,EAAAC,EAAAZ,GACAA,EAAAS,IACAT,EAAAU,IACAV,EAAAjE,MAAA4E,EACAX,EAAAC,OAAAW,EACAZ,EAAA1B,EAAAjD,KAAAgB,IAAAsE,EAAAC,GAAA,GAEAoB,OAAA,SAAAvB,EAAAC,EAAAC,EAAAC,EAAAZ,GACA,IAAA4C,EAAAvH,KAAAgB,IAAAsE,EAAAC,GACAZ,EAAAS,IACAT,EAAAU,IACAV,EAAAjE,MAAA6G,EACA5C,EAAAC,OAAA2C,GAEAX,OAAA,SAAAxB,EAAAC,EAAAC,EAAAC,EAAAZ,GAEAA,EAAAtC,GAAA+C,EAAAE,EAAA,EACAX,EAAArC,GAAA+C,EAAAE,EAAA,EACAZ,EAAA1B,EAAAjD,KAAAgB,IAAAsE,EAAAC,GAAA,GAEAuB,QAAA,SAAA1B,EAAAC,EAAAC,EAAAC,EAAAZ,GACAA,EAAAtC,GAAA+C,EAAAE,EAAA,EACAX,EAAArC,GAAA+C,EAAAE,EAAA,EACAZ,EAAAjE,MAAA4E,EACAX,EAAAC,OAAAW,GAEAwB,IAAA,SAAA3B,EAAAC,EAAAC,EAAAC,EAAAZ,GACAA,EAAAS,IAAAE,EAAA,EACAX,EAAAU,IAAAE,EAAA,EACAZ,EAAAjE,MAAA4E,EACAX,EAAAC,OAAAW,GAEAyB,MAAA,SAAA5B,EAAAC,EAAAC,EAAAC,EAAAZ,GACAA,EAAAS,IAAAE,EAAA,EACAX,EAAAU,IAAAE,EAAA,EACAZ,EAAAjE,MAAA4E,EACAX,EAAAC,OAAAW,GAEA0B,SAAA,SAAA7B,EAAAC,EAAAC,EAAAC,EAAAZ,GACAA,EAAAtC,GAAA+C,EAAAE,EAAA,EACAX,EAAArC,GAAA+C,EAAAE,EAAA,EACAZ,EAAAjE,MAAA4E,EACAX,EAAAC,OAAAW,IAGAiC,EAAA,GACA3J,EAAAsB,KAAAkH,EAAA,SAAAoB,EAAAC,GACAF,EAAAE,GAAA,IAAAD,IAEA,IAAAE,EAAAtD,EAAAK,YAAA,CACA5E,KAAA,SACA6E,MAAA,CACAiD,WAAA,GACAxC,EAAA,EACAC,EAAA,EACA3E,MAAA,EACAkE,OAAA,GAEAJ,sBAAA,SAAAqD,EAAAC,EAAAtB,GACA,IAAAuB,EAAAxD,EAAAsD,EAAAC,EAAAtB,GAEA7B,EAAAT,KAAAS,MAMA,OAJAA,GAAA,QAAAA,EAAAiD,YAAA,WAAAE,EAAAE,eACAD,EAAA1C,EAAAmB,EAAAnB,EAAA,GAAAmB,EAAA5B,QAGAmD,GAEAlD,UAAA,SAAAuB,EAAAzB,EAAAsD,GACA,IAAAL,EAAAjD,EAAAiD,WAEA,YAAAA,EAAA,CACA,IAAAM,EAAAV,EAAAI,GAEAM,IAGAA,EAAAV,EADAI,EAAA,SAIAV,EAAAU,GAAAjD,EAAAS,EAAAT,EAAAU,EAAAV,EAAAjE,MAAAiE,EAAAC,OAAAsD,EAAAvD,OACAuD,EAAArD,UAAAuB,EAAA8B,EAAAvD,MAAAsD,OAKA,SAAAE,EAAAC,EAAAC,GACA,aAAAnE,KAAApE,KAAA,CACA,IAAAwI,EAAApE,KAAA4D,MACAS,EAAArE,KAAAS,MAEA4D,GAAA,SAAAA,EAAAX,WACAU,EAAAE,OAAAJ,EACKlE,KAAAuE,gBACLH,EAAAE,OAAAJ,EACAE,EAAAI,KAAAL,GAAA,SAGAC,EAAAI,OAAAJ,EAAAI,KAAAN,GACAE,EAAAE,SAAAF,EAAAE,OAAAJ,IAGAlE,KAAAyE,OAAA,IAgDAvE,EAAAwE,aAhCA,SAAAhB,EAAAxC,EAAAC,EAAAC,EAAAC,EAAA6C,EAAAS,GAEA,IAMAC,EANAC,EAAA,IAAAnB,EAAAoB,QAAA,SA2BA,OAzBAD,IACAnB,IAAAqB,OAAA,KAAAC,cAAAtB,EAAAqB,OAAA,KAMAH,EADA,IAAAlB,EAAAoB,QAAA,YACA3E,EAAA8E,UAAAvB,EAAAwB,MAAA,OAAA9E,EAAAc,EAAAC,EAAAC,EAAAC,GAAAsD,EAAA,kBACG,IAAAjB,EAAAoB,QAAA,WACH3E,EAAAgF,SAAAzB,EAAAwB,MAAA,MAAyD,IAAA9E,EAAAc,EAAAC,EAAAC,EAAAC,GAAAsD,EAAA,kBAEzD,IAAAlB,EAAA,CACAhD,MAAA,CACAiD,aACAxC,IACAC,IACA3E,MAAA4E,EACAV,OAAAW,MAKAkD,eAAAM,EACAD,EAAAQ,SAAAnB,EACAW,EAAAQ,SAAAlB,GACAU,wBCjUA,IAEA3J,EAFYrB,EAAQ,GAEpBqB,KAEAoK,EAAYzL,EAAQ,KAEpB0L,EAAoB1L,EAAQ,KAE5B2L,EAAgB3L,EAAQ,KAExB4L,EAAgB5L,EAAQ,IAExB6L,EAAkB7L,EAAQ,IAI1B8L,EAFY9L,EAAQ,KAEpB8L,WAEAC,EAA0B/L,EAAQ,KAqBlCgM,EAAAJ,EAAAK,YACAC,EAAAH,IAEA,SAAAI,IAKA/F,KAAAgG,MAAA,IAAAX,EAMArF,KAAAiG,IAAAX,EAAAY,OAAA,aACAlG,KAAAmG,WAAAT,EAAA,CACAU,KAAAC,EACAC,MAAAC,IAEAvG,KAAAmG,WAAAK,QAAA,CACAC,KAAAzG,MAIA+F,EAAAW,UAAA,CACA9K,KAAA,QAOA+K,KAAA,SAAAhM,EAAAC,KASAgM,OAAA,SAAA5M,EAAAW,EAAAC,EAAAiM,KASAC,UAAA,SAAA9M,EAAAW,EAAAC,EAAAiM,GACAE,EAAA/M,EAAAoB,UAAAyL,EAAA,aAUAG,SAAA,SAAAhN,EAAAW,EAAAC,EAAAiM,GACAE,EAAA/M,EAAAoB,UAAAyL,EAAA,WAQAI,OAAA,SAAAtM,EAAAC,GACAoF,KAAAgG,MAAAkB,aAQAC,QAAA,aASAC,yBAAA,KAUAC,kBAAA,KAUAC,gBAAA,KAiBAC,sBAAA,MAEA,IAAAC,EAAAzB,EAAAW,UAaA,SAAAe,EAAAC,EAAAC,EAAAC,GACA,GAAAF,IACAA,EAAAG,QAAAF,EAAAC,GAEAF,EAAAI,UACArC,EAAAsC,qBAAAL,IACA,QAAAM,EAAA,EAAAnJ,EAAA6I,EAAAO,aAA4CD,EAAAnJ,EAASmJ,IACrDP,EAAAC,EAAAQ,QAAAF,GAAAL,EAAAC,GAYA,SAAAb,EAAA5L,EAAA0L,EAAAc,GACA,IAAAQ,EAAA3C,EAAA4C,eAAAjN,EAAA0L,GACAe,EAAAf,GAAA,MAAAA,EAAAwB,aAAA5C,EAAA6C,kBAAAzB,EAAAwB,cAAA,KAEA,MAAAF,EACAlN,EAAAuK,EAAA+C,iBAAAJ,GAAA,SAAAK,GACAf,EAAAtM,EAAAsN,iBAAAD,GAAAb,EAAAC,KAGAzM,EAAAuN,kBAAA,SAAAhB,GACAD,EAAAC,EAAAC,EAAAC,KAgBA,SAAAvB,EAAAG,GACA,OAAAV,EAAAU,EAAAjM,OAGA,SAAAgM,EAAAC,GACA,IAAAxM,EAAAwM,EAAAjM,MACAI,EAAA6L,EAAA7L,QACAC,EAAA4L,EAAA5L,IACAiM,EAAAL,EAAAK,QAEA8B,EAAA3O,EAAA4O,gBAAAD,kBACAlC,EAAAD,EAAAC,KACAoC,EAAAhC,GAAAjB,EAAAiB,GAAAgC,aACAC,EAAAH,EAAA,2BAAAE,GAAApC,EAAAoC,KAEA,SAMA,MAJA,WAAAC,GACArC,EAAAqC,GAAA9O,EAAAW,EAAAC,EAAAiM,GAGAkC,EAAAD,GA7EAtB,EAAAwB,WAAAxB,EAAAyB,aAAAzB,EAAA0B,aAAA,SAAAlP,EAAAW,EAAAC,EAAAiM,GACA7G,KAAA4G,OAAA5M,EAAAW,EAAAC,EAAAiM,IA6CAtB,EAAA4D,kBAAApD,EAAA,aAEAR,EAAA6D,sBAAArD,EAAA,CACAsD,oBAAA,IAGAtD,EAAAuD,iBAAA,SAAAzC,EAAAiC,GACAlD,EAAAiB,GAAAgC,aAAAC,GA2BA,IAAAC,EAAA,CACA3B,yBAAA,CACAmC,SAAA,SAAAC,EAAAhD,GACAA,EAAAC,KAAAY,kBAAAmC,EAAAhD,EAAAjM,MAAAiM,EAAA7L,QAAA6L,EAAA5L,IAAA4L,EAAAK,WAGAD,OAAA,CAKA6C,oBAAA,EACAF,SAAA,SAAAC,EAAAhD,GACAA,EAAAC,KAAAG,OAAAJ,EAAAjM,MAAAiM,EAAA7L,QAAA6L,EAAA5L,IAAA4L,EAAAK,YAIApM,EAAAsL,EACA9F,EAAAC,QAAAzF,uBC1Qcb,EAAQ,IAEtB8P,QAFA,IAIA/P,EAAaC,EAAQ,GAqBrB+P,EAAA,IACAC,EAAA,iCAMA,SAAAC,EAAAC,GACA,IAAAC,EAAA,CACAC,KAAA,GACAC,IAAA,IASA,OANAH,IACAA,IAAAI,MAAAP,GACAI,EAAAC,KAAAF,EAAA,OACAC,EAAAE,IAAAH,EAAA,QAGAC,EAuCA,IAAAI,EAAA,EAsBA,SAAAC,EAAA5D,EAAAsC,GACA,IAAAuB,EAAA1Q,EAAAuL,MAAAoF,UAAA,GACA,OAAAtK,KAAAuK,WAAA7D,UAAAoC,GAAA0B,MAAAhE,EAAA6D,GAGA,SAAAI,EAAAjE,EAAAsC,EAAAuB,GACA,OAAArK,KAAAuK,WAAA7D,UAAAoC,GAAA0B,MAAAhE,EAAA6D,GAkJAnK,EAAA2J,iBACA3J,EAAAiJ,kBAvMA,SAAAuB,EAAAC,GACAD,EAAAE,aAAAF,EAEAA,EAAAG,OAAA,SAAAC,GACA,IAAAP,EAAAvK,KAEA+K,EAAA,WACAD,EAAAF,aAGAE,EAAAF,aAAAJ,MAAAxK,KAAAsK,WAFAC,EAAAC,MAAAxK,KAAAsK,YAYA,OANA3Q,EAAAkR,OAAAE,EAAArE,UAAAoE,GACAC,EAAAF,OAAA7K,KAAA6K,OACAE,EAAAX,YACAW,EAAAN,aACA9Q,EAAAqR,SAAAD,EAAA/K,MACA+K,EAAAR,aACAQ,IAoLA7K,EAAA+K,iBAzKA,SAAAC,GACA,IAAAC,EAAA,cAAAhB,IAAArO,KAAAsP,SAAAC,QAAA,IAAAC,KAAA,KACAJ,EAAAxE,UAAAyE,IAAA,EAEAD,EAAAK,WAAA,SAAAC,GACA,SAAAA,MAAAL,MAqKAjL,EAAAkJ,sBA3IA,SAAAqC,EAAAC,GACAA,KAAA,GAUA,IAAAC,EAAA,GA2FA,GAzFAF,EAAAG,cAAA,SAAAC,EAAA/B,GAaA,OAZAA,IApFA,SAAAA,GACAnQ,EAAAmS,OAAA,qCAAAC,KAAAjC,GAAA,kBAAAA,EAAA,aAoFAkC,CAAAlC,IACAA,EAAAD,EAAAC,IAEAG,IAEOH,EAAAG,MAAAL,KAuEP,SAAAE,GACA,IAAAmC,EAAAN,EAAA7B,EAAAE,MAOA,OALAiC,KAAArC,MACAqC,EAAAN,EAAA7B,EAAAE,MAAA,IACAJ,IAAA,GAGAqC,EA9EAC,CAAApC,IACAA,EAAAG,KAAA4B,GAHAF,EAAA7B,EAAAE,MAAA6B,GAOAA,GAGAJ,EAAAU,SAAA,SAAAC,EAAAC,EAAAC,GACA,IAAAT,EAAAF,EAAAS,GAMA,GAJAP,KAAAjC,KACAiC,EAAAQ,EAAAR,EAAAQ,GAAA,MAGAC,IAAAT,EACA,UAAAU,MAAAF,EAAA,aAAAD,EAAA,KAAAC,GAAA,kCAAAD,EAAA,8BAGA,OAAAP,GAGAJ,EAAAe,qBAAA,SAAA1C,GACAA,EAAAD,EAAAC,GACA,IAAA/M,EAAA,GACAyO,EAAAG,EAAA7B,EAAAE,MAUA,OARAwB,KAAA5B,GACAjQ,EAAAsB,KAAAuQ,EAAA,SAAAiB,EAAA7Q,GACAA,IAAAgO,GAAA7M,EAAA2P,KAAAD,KAGA1P,EAAA2P,KAAAlB,GAGAzO,GAGA0O,EAAAkB,SAAA,SAAA7C,GAGA,OADAA,EAAAD,EAAAC,KACA6B,EAAA7B,EAAAE,OAOAyB,EAAAmB,qBAAA,WACA,IAAAC,EAAA,GAIA,OAHAlT,EAAAsB,KAAA0Q,EAAA,SAAAH,EAAA5P,GACAiR,EAAAH,KAAA9Q,KAEAiR,GASApB,EAAAqB,YAAA,SAAAhD,GACAA,EAAAD,EAAAC,GACA,IAAA0B,EAAAG,EAAA7B,EAAAE,MACA,OAAAwB,KAAA5B,IAGA6B,EAAA5B,iBAaA6B,EAAArC,mBAAA,CACA,IAAA0D,EAAAtB,EAAAZ,OAEAkC,IACAtB,EAAAZ,OAAA,SAAAC,GACA,IAAAC,EAAAgC,EAAAC,KAAAhN,KAAA8K,GACA,OAAAW,EAAAG,cAAAb,EAAAD,EAAAlP,QAKA,OAAA6P,GA2BAvL,EAAA+M,YApBA,SAAAzB,EAAA0B,wCCpPAjN,EAAAC,QANA,sCCUA,IAAAiN,EAAA,SAAAC,KAiCAnN,EAAAC,QAvBA,SAAAmN,EAAAD,EAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAGA,GAFAR,EAAAC,IAEAC,EAAA,CACA,IAAAO,EAEA,QAAAC,IAAAT,EACAQ,EAAA,IAAArB,MAAA,qIACK,CACL,IAAAlC,EAAA,CAAAiD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAG,EAAA,GACAF,EAAA,IAAArB,MAAAa,EAAAW,QAAA,iBACA,OAAA1D,EAAAyD,SAEAtK,KAAA,sBAKA,MAFAoK,EAAAI,YAAA,EAEAJ,0BChDA,IAAAK,EAAyBrU,EAAQ,MAEjCqG,EAAAC,QAAA,IAAA+N,wBCFA,IAAAC,EAAiBtU,EAAQ,MAEzBuU,EAAWvU,EAAQ,KAEnBqB,EAAAkT,EAAAlT,KACAmT,EAAAD,EAAAC,WACAC,EAAAF,EAAAE,QAQA,SAAAJ,IACA,IAAAK,OAAAC,WACA,UAAAhC,MAAA,8DAGAvM,KAAAwO,QAAA,GACAxO,KAAAyO,oBAAAH,OAAAC,WAAA,YAAAG,QAGAT,EAAAvH,UAAA,CACAiI,YAAAV,EAaAW,SAAA,SAAAC,EAAAnD,EAAAoD,GACA,IAAAN,EAAAxO,KAAAwO,QACAO,EAAAD,GAAA9O,KAAAyO,mBA0BA,OAxBAD,EAAAK,KACAL,EAAAK,GAAA,IAAAX,EAAAW,EAAAE,IAIAX,EAAA1C,KACAA,EAAA,CACAsD,MAAAtD,IAIA2C,EAAA3C,KACAA,EAAA,CAAAA,IAGAzQ,EAAAyQ,EAAA,SAAAuD,GACAb,EAAAa,KACAA,EAAA,CACAD,MAAAC,IAIAT,EAAAK,GAAAK,WAAAD,KAEAjP,MASAmP,WAAA,SAAAN,EAAAI,GACA,IAAAG,EAAApP,KAAAwO,QAAAK,GAWA,OATAO,IACAH,EACAG,EAAAC,cAAAJ,IAEAG,EAAAE,eACAtP,KAAAwO,QAAAK,KAIA7O,OAGAC,EAAAC,QAAA+N,wBCzFA,IAAAsB,EAAmB3V,EAAQ,MAE3BqB,EAAWrB,EAAQ,KAAQqB,KAU3B,SAAAiT,EAAAkB,EAAAL,GACA/O,KAAAoP,QACApP,KAAA+O,kBACA/O,KAAAwP,SAAA,GACAxP,KAAAyP,IAAAnB,OAAAC,WAAAa,GACA,IAAAM,EAAA1P,KAEAA,KAAA2P,SAAA,SAAAF,GAEAC,EAAAD,MAAAG,eAAAH,EACAC,EAAAG,UAGA7P,KAAAyP,IAAAK,YAAA9P,KAAA2P,UAGAzB,EAAAxH,UAAA,CACAqJ,WAAA7B,EAWAgB,WAAA,SAAAD,GACA,IAAAe,EAAA,IAAAT,EAAAN,GACAjP,KAAAwP,SAAA9C,KAAAsD,GACAhQ,KAAA0O,WAAAsB,EAAAC,MAQAZ,cAAA,SAAAJ,GACA,IAAAO,EAAAxP,KAAAwP,SACAvU,EAAAuU,EAAA,SAAAnO,EAAA2G,GACA,GAAA3G,EAAA6O,OAAAjB,GAEA,OADA5N,EAAA8O,WACAX,EAAAY,OAAApI,EAAA,MAUA0G,QAAA,WACA,OAAA1O,KAAAyP,IAAAf,SAAA1O,KAAA+O,iBAMAO,MAAA,WACArU,EAAA+E,KAAAwP,SAAA,SAAAP,GACAA,EAAAkB,YAEAnQ,KAAAyP,IAAAY,eAAArQ,KAAA2P,UACA3P,KAAAwP,SAAAc,OAAA,GAMAT,OAAA,WACA,IAAAU,EAAAvQ,KAAA0O,UAAA,WACAzT,EAAA+E,KAAAwP,SAAA,SAAAP,GACAA,EAAAsB,SAIAtQ,EAAAC,QAAAgO,sBCjFA,SAAAqB,EAAA7D,GACA1L,KAAA0L,WACAA,EAAA8E,YAAAxQ,KAAAyQ,QAGAlB,EAAA7I,UAAA,CACAiI,YAAAY,EAOAkB,MAAA,WACAzQ,KAAA0L,QAAA+E,OACAzQ,KAAA0L,QAAA+E,QAGAzQ,KAAA0Q,aAAA,GAQAT,GAAA,YACAjQ,KAAA0Q,aAAA1Q,KAAAyQ,QACAzQ,KAAA0L,QAAAsD,OAAAhP,KAAA0L,QAAAsD,SAQA2B,IAAA,WACA3Q,KAAA0L,QAAAkF,SAAA5Q,KAAA0L,QAAAkF,WASAT,QAAA,WACAnQ,KAAA0L,QAAAyE,QAAAnQ,KAAA0L,QAAAyE,UAAAnQ,KAAA2Q,OAUAT,OAAA,SAAAW,GACA,OAAA7Q,KAAA0L,UAAAmF,GAAA7Q,KAAA0L,QAAAsD,QAAA6B,IAGA5Q,EAAAC,QAAAqP,qBClCA,IAAAuB,EAAA,2BACAC,EAAA,mBACAC,EAAA,mBAWA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAIAC,EACAC,EACAlH,EACAmH,EANAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAOA,SAAAC,IACAF,GAAA,IAAAG,MAAAC,UACAH,EAAA,KACAT,EAAA1G,MAAA+G,EAAAlH,GAAA,IALA8G,KAAA,EAQA,IAAAY,EAAA,WACAV,GAAA,IAAAQ,MAAAC,UACAP,EAAAvR,KACAqK,EAAAC,UACA,IAAA0H,EAAAR,GAAAL,EACAc,EAAAT,GAAAJ,EACAI,EAAA,KACAF,EAAAD,GAAAY,EAAAR,EAAAC,GAAAM,EACAE,aAAAP,GASAM,EACAN,EAAAQ,WAAAP,EAAAI,GAEAV,GAAA,EACAM,IAEAD,EAAAQ,WAAAP,GAAAN,GAIAG,EAAAJ,GAuBA,OAfAU,EAAAzC,MAAA,WACAqC,IACAO,aAAAP,GACAA,EAAA,OAQAI,EAAAP,iBAAA,SAAAY,GACAZ,EAAAY,GAGAL,EAwEA7R,EAAA+Q,WACA/Q,EAAAmS,eA1CA,SAAA7G,EAAA8G,EAAAC,EAAAC,GACA,IAAAtB,EAAA1F,EAAA8G,GAEA,GAAApB,EAAA,CAIA,IAAAuB,EAAAvB,EAAAJ,IAAAI,EACAwB,EAAAxB,EAAAF,GAGA,GAFAE,EAAAH,KAEAwB,GAAAG,IAAAF,EAAA,CACA,SAAAD,IAAAC,EACA,OAAAhH,EAAA8G,GAAAG,GAGAvB,EAAA1F,EAAA8G,GAAArB,EAAAwB,EAAAF,EAAA,aAAAC,IACA1B,GAAA2B,EACAvB,EAAAF,GAAAwB,EACAtB,EAAAH,GAAAwB,EAGA,OAAArB,IAqBAhR,EAAAoP,MAVA,SAAA9D,EAAA8G,GACA,IAAApB,EAAA1F,EAAA8G,GAEApB,KAAAJ,KACAtF,EAAA8G,GAAApB,EAAAJ,wBCzCA7Q,EAAAC,QAvGA,CACAyS,OAAA,CACAC,SAAA,CACAC,IAAA,eACAC,QAAA,iBAGAC,QAAA,CACAC,MAAA,CACAC,MAAA,CACA3Q,KAAA,2BACA4Q,QAAA,eACAC,MAAA,2BACAC,MAAA,2BACAC,KAAA,2BACA/D,MAAA,6BAGAgE,SAAA,CACAL,MAAA,2BACAM,KAAA,4DAEAC,SAAA,CACAP,MAAA,CACAQ,KAAA,2BACAC,KAAA,yCAGAC,UAAA,CACAV,MAAA,CACA7Q,KAAA,uCACAwR,IAAA,uCACAvW,MAAA,iCACAwW,MAAA,mCAGAC,QAAA,CACAb,MAAA,gBAEAc,YAAA,CACAd,MAAA,iCACAM,KAAA,iDAGAS,OAAA,CACAC,UAAA,CACAC,IAAA,eACAN,IAAA,qBACAxR,KAAA,qBACA+R,QAAA,qBACAC,cAAA,iCACAC,MAAA,qBACAC,KAAA,eACAC,QAAA,2BACAC,QAAA,qBACAC,YAAA,gBACAC,EAAA,gBACAC,QAAA,qBACAC,IAAA,eACAC,SAAA,iCACAC,MAAA,eACAC,MAAA,qBACAC,OAAA,qBACAC,OAAA,qBACAC,MAAA,2BACAC,aAAA,2BACAC,WAAA,iCACAC,SAAA,uBAGAC,KAAA,CACAC,QAAA,CACAC,UAAA,kFACAC,aAAA,8CAEAzB,OAAA,CACA0B,OAAA,CACAC,OAAA,GACAC,SAAA,iFACAC,YAAA,oDAEAC,SAAA,CACAH,OAAA,4EACAC,SAAA,uGACAC,YAAA,yEACAE,UAAA,CACAC,OAAA,SACAC,IAAA,YAIA9a,KAAA,CACA+a,QAAA,uCACAC,YAAA,+DACAP,SAAA,wCACAC,YAAA,UACAE,UAAA,CACAC,OAAA,SACAC,IAAA,4BCzHA,IAEA7H,EAFYxU,EAAQ,GAEpBwU,WAiGAnO,EAAAC,QA7EA,SAAAxF,EAAA0b,EAAAC,GAEA,OACA3b,aAEA4b,kBAAA,EACAhQ,MAAA,SAAAtM,EAAAW,EAAAC,GACA,IAAAO,EAAAnB,EAAAoB,UACAsI,EAAA1J,EAAAC,IAAA,UACAsc,EAAAvc,EAAAC,IAAA,cACA0K,EAAA3K,EAAAC,IAAA,oBACAuc,EAAAxc,EAAAC,IAAA,gBACAwc,EAAArI,EAAA1K,GACAgT,EAAAtI,EAAAmI,GACAI,EAAAvI,EAAAoI,GACAI,EAAAH,GAAAC,GAAAC,EACAE,GAAAJ,GAAA/S,IAAA0S,EACAU,EAAAJ,EAAA,KAAAH,EAcA,GAZApb,EAAA4b,UAAA,CACAV,gBAAAQ,EAKAG,OAAAH,EACAN,WAAAO,EACAG,iBAAAtS,EACA6R,kBAGA7b,EAAAiD,iBAAA5D,GAuCA,OACAkd,SAAA/b,EAAAgc,eAAAP,EApCA,SAAAzb,EAAAD,GACA,GAAA0b,EAAA,CACA,IAAAQ,EAAApd,EAAAqd,YAAAnc,GACAsO,EAAAxP,EAAAsd,cAAApc,GACAub,GAAAtb,EAAAoc,cAAArc,EAAA,SAAAwI,EAAA0T,EAAA5N,IACAkN,GAAAvb,EAAAoc,cAAArc,EAAA,aAAAqb,EAAAa,EAAA5N,IACAmN,GAAAxb,EAAAoc,cAAArc,EAAA,eAAAsb,EAAAY,EAAA5N,IAGA,GAAArO,EAAAgc,cAAA,CACA,IAAAK,EAAArc,EAAAsc,aAAAvc,GACAwc,EAAAF,EAAAG,WAAA,aACAC,EAAAJ,EAAAG,WAAA,iBACAE,EAAAL,EAAAG,WAAA,mBACAG,EAAAN,EAAAG,WAAA,uBAEA,MAAAD,GACAvc,EAAAoc,cAAArc,EAAA,SAAAwc,GAGA,MAAAE,GAEAzc,EAAAoc,cAAArc,EAAA,aAAA0c,GAGA,MAAAC,GACA1c,EAAAoc,cAAArc,EAAA,eAAA2c,GAGA,MAAAC,GACA3c,EAAAoc,cAAArc,EAAA,mBAAA4c,KAMA,8BC7FA,IAAAne,EAAaC,EAAQ,GAErBme,EAAcne,EAAQ,KAItBoe,EAFcpe,EAAQ,IAEtBoe,UAoBA/c,EAAAtB,EAAAsB,KACAgd,EAAAte,EAAAse,SACAC,GAAA,EA8BAC,EAAA,SAAAC,GACA,IAAAC,EAAAD,EAAAC,cACAC,EAAAF,EAAAxc,KAMA2c,EAAAvY,KAAAoY,OAAAze,EAAA6e,MAAAJ,GAMApY,KAAApE,KAAA0c,EAMAtY,KAAAqY,gBAMArY,KAAAyY,eAAAC,EAAAL,GACA,IAAAM,EAAAC,EAAAN,GAMAtY,KAAA6Y,YAAAF,EAAAE,YAMA7Y,KAAA8Y,eAAAH,EAAAG,eAMA9Y,KAAA+Y,OAAAJ,EAAAI,OAAAV,GAEA,cAAAA,GACAW,EAAAT,GA2HA,SAAAA,GACA,IAAAU,EAAAV,EAAAU,UACAV,EAAAW,kBAAA,EACAvf,EAAAsB,KAAAge,EAAA,SAAAE,EAAAC,GACAD,EAAAE,YAAAD,EAGA,MAAAD,EAAAG,SACAf,EAAAW,kBAAA,KAlIAK,CAAAhB,IACG,aAAAF,EACHE,EAAAiB,WAqIA,SAAAjB,GAEA,IAAAiB,EAAAjB,EAAAiB,WACAF,EAAAf,EAAAe,OACAG,EAAAlB,EAAAkB,YAAA,GAKA,GAJAxe,EAAAue,EAAA,SAAAE,EAAAN,GACAK,EAAAC,GAAAN,KAGAzf,EAAA0U,QAAAiL,GAAA,CACA,IAAAK,EAAA,GAEAhgB,EAAAse,SAAAqB,GACAre,EAAAqe,EAAA,SAAAM,EAAAF,GACA,IAAAN,EAAAK,EAAAC,GACAC,EAAA,MAAAP,IAAAlB,GAAA0B,IAIAD,EAAAzB,GAAAoB,EAGAA,EAAAO,EAAAtB,EAAAoB,GAKA,QAAA3R,EAAAwR,EAAAlJ,OAAA,EAAqCtI,GAAA,EAAQA,IAC7C,MAAAsR,EAAAtR,YACAyR,EAAAD,EAAAxR,IACAwR,EAAAM,OAnKAC,CAAAxB,GAEAS,EAAAT,GAAA,IAGA5e,EAAAmS,OAAA,WAAAuM,GAAAE,EAAAyB,YACAhB,EAAAT,KAIAJ,EAAAzR,UAAA,CACAiI,YAAAwJ,EACA8B,iBAAA,SAAA/a,GACA,IAAAgb,EAAAla,KAAAyY,eAAAvZ,GAEA,OAAAc,KAAA+Y,OAAAmB,EAAAhb,IAEAib,cAAA,WACA,OAAAxgB,EAAAygB,KAAApa,KAAAyY,eAAAzY,QAGA,IAAA4Y,EAAAT,EAAAS,eAAA,CACA1U,MAAA,CACA2U,YAAAwB,EAAA,SAMAvB,eAAA,WACA,IAAAP,EAAAvY,KAAAoY,OACA,OAAAze,EAAAygB,KAAA,aAAA7B,EAAAF,cAAA,SAAAnZ,EAAAob,GAEA,OADAA,IAAApb,EAAAc,KAAAyY,eAAAvZ,IACAqb,EAAAvN,KAAAhN,KAAAd,IACO,SAAAA,EAAAob,EAAA3W,GAGP,IAAA6W,IAAA7W,EAGA,OAFA2W,IAAApb,EAAAc,KAAAyY,eAAAvZ,IACAyE,EAAAoU,EAAA0C,SAAAvb,EAAAqZ,EAAAmC,aAAA/W,GACA6W,EAAA7W,EAAAoU,EAAA4C,UAAAhX,EAAA,SACO3D,OAEP+Y,OAAA,CACA6B,OAAA,SAAAV,GACA,OAAAnC,EAAA4C,UAAA5C,EAAA0C,SAAAP,EAAAla,KAAAoY,OAAAsC,cAAA,SAEAG,SAAAN,EACAO,UAAA,SAAAZ,EAAAhb,GACA,IAAAnC,EAAAge,EAAA/N,KAAAhN,KAAAd,GAMA,OAJA,MAAAnC,IACAA,EAAAgb,EAAA4C,UAAA5C,EAAA0C,SAAAP,EAAAla,KAAAoY,OAAAsC,cAAA,SAGA3d,GAEAie,MAAAC,IAGAC,SAAAC,EAAA,SAAAjX,EAAAhF,GACA,OAAA6Y,EAAAqD,UAAAlX,EAAAhF,KAEAmc,gBAAAF,EAAA,SAAAjX,EAAAhF,GACA,OAAA6Y,EAAAqD,UAAAlX,EAAA,KAAAhF,KAEAoc,eAAAH,EAAA,SAAAjX,EAAAhF,GACA,OAAA6Y,EAAAqD,UAAAlX,EAAA,UAAAhF,KAEAqc,WAAAJ,EAAA,SAAAjX,EAAAhF,GACA,OAAA6Y,EAAAyD,YAAAtX,EAAAhF,KAEAuc,QAAA,CACA5C,YAAAwB,EAAA,WACAtB,OAAA2C,EAAA,QAEAC,MAAA,CACA9C,YAAAwB,EAAA,SACAtB,OAAA,CACA6B,OAAAK,EACAJ,SAAAI,EACAH,UAAAG,EACAD,MAAAC,IAGAjE,OAAA,CACA6B,YAAA,SAAA3Z,EAAA0c,EAAAC,GACA,IAAAC,EAAA9b,KAAAia,iBAAA/a,GAEA,GAAAvF,EAAAoiB,SAAAD,GACAD,EAAA,SAAAC,QACO,GAAA7D,EAAA6D,GACP,QAAAtY,KAAAsY,EACAA,EAAAE,eAAAxY,IACAqY,EAAArY,EAAAsY,EAAAtY,KAKAuV,OAAA,CACA6B,OAAAqB,EACApB,SAAAN,EACAO,UAAA,SAAAZ,EAAAhb,GACA,IAAAnC,EAAAge,EAAA/N,KAAAhN,KAAAd,GAMA,OAJA,MAAAnC,IACAA,EAAAkf,EAAAjP,KAAAhN,KAAAka,IAGAnd,GAEAie,MAAAC,IAGA1E,WAAA,CACAsC,YAAAwB,EAAA,cACAtB,OAAA2C,EAAA,SAoDA,SAAA1C,EAAAT,EAAA2D,GACA,IAAA5C,EAAAf,EAAAe,OACAK,EAAA,GAEAhgB,EAAAse,SAAAqB,GACAre,EAAAqe,EAAA,SAAAM,GACAD,EAAAjN,KAAAkN,KAEG,MAAAN,GACHK,EAAAjN,KAAA4M,GAQA4C,GAAA,IAAAvC,EAAArJ,QALA,CACApM,MAAA,EACA8S,OAAA,GAGAgF,eAAAzD,EAAA3c,QAEA+d,EAAA,GAAAA,EAAA,IAGAE,EAAAtB,EAAAoB,GAGA,SAAAwB,EAAAgB,GACA,OACAtD,YAAA,SAAA3Z,EAAA0c,EAAAC,GACA3c,EAAAc,KAAAia,iBAAA/a,GAEA2c,EAAA,QAAAM,EAAAP,EAAA,SAAA1c,KAEA6Z,OAAA2C,EAAA,QAIA,SAAAO,EAAA/B,GACA,IAAAZ,EAAAtZ,KAAAoY,OAAAkB,OACA,OAAAA,EAAAxd,KAAAsgB,MAAApE,EAAAkC,EAAA,SAAAZ,EAAAhJ,OAAA,aAGA,SAAA+J,EAAA/B,GACA,gBAAApZ,EAAA0c,EAAAC,GACAA,EAAAvD,EAAAtY,KAAAia,iBAAA/a,KAIA,SAAAqb,EAAAL,GACA,IAAAZ,EAAAtZ,KAAAoY,OAAAkB,OACA,OAAAA,EAAAtZ,KAAAoY,OAAAiE,MAAAnC,IAAAhC,EAAAgC,EAAAZ,EAAAhJ,OAAA4J,GAGA,SAAAe,IACA,OAAAjb,KAAAoY,OAAAkB,OAAA,GAGA,SAAAoC,EAAAY,GACA,OACA1B,OAAA,SAAAV,GACA,OAAAlC,EAAAkC,EAAAoC,EAAAtc,KAAAoY,OAAAkB,QAAA,IAEAuB,SAAAN,EACAO,UAAA,SAAAZ,EAAAhb,GACA,IAAAnC,EAAAge,EAAA/N,KAAAhN,KAAAd,GAMA,OAJA,MAAAnC,IACAA,EAAAib,EAAAkC,EAAAoC,EAAAtc,KAAAoY,OAAAkB,QAAA,IAGAvc,GAEAie,MAAAC,GAIA,SAAAF,EAAA7b,GACA,IAAAqZ,EAAAvY,KAAAoY,OACAa,EAAAV,EAAAU,UAEA,GAAAV,EAAAW,iBAAA,CACA,IACAC,EAAAF,EADAd,EAAAoE,eAAArd,EAAA+Z,IAGA,GAAAE,KAAAG,OACA,OAAAH,EAAAG,OAAAtZ,KAAApE,OAKA,SAAAie,EAAAtB,EAAAoB,GASA,OARApB,EAAAe,OAAAK,EAEA,UAAApB,EAAA3c,OACA2c,EAAAmC,aAAA/gB,EAAAib,IAAA+E,EAAA,SAAA6C,GACA,OAAAzE,EAAA0E,MAAAD,MAIA7C,EAOA,IAAAjB,EAAA,CACAkC,OAAA,SAAA1b,GACA,OAAA8Y,EAAA9Y,EAAAc,KAAAoY,OAAA4B,WAAA,WAEAc,UAAA,SAAA5b,GACA,IAAA+Z,EAAAjZ,KAAAoY,OAAAa,UACAyD,EAAAvE,EAAAoE,eAAArd,EAAA+Z,GAAA,GAEA,SAAAyD,EACA,OAAA1E,EAAA0E,EAAA,GAAAzD,EAAA3I,OAAA,cAGAuK,SAAA,SAAA3b,GACA,IAAAka,EAAApZ,KAAAoY,OAAAoB,WAAAxZ,KAAAoY,OAAAqB,YAAAva,KAEA,aAAAka,EAAAlB,EAAAkB,GAEA4B,MAAArhB,EAAAgjB,MA2LA,SAAAC,EAAAC,EAAAvP,EAAAC,GACA,OAAAsP,EAAAvP,GAAAC,EAAAD,EAAAC,EAnLA4K,EAAA2E,gBAAA,WACA,IAAAC,EAAA,GAIA,OAHApjB,EAAAsB,KAAA2d,EAAA,SAAA3J,EAAA+N,GACAD,EAAArQ,KAAAsQ,KAEAD,GAOA5E,EAAA8E,iBAAA,SAAAzZ,EAAAyL,GACA2J,EAAApV,GAAAyL,GAOAkJ,EAAA+E,YAAA,SAAA5E,GACA,OAAAM,EAAAoD,eAAA1D,IAUAH,EAAAgF,WAAA,SAAA7D,EAAA8D,EAAA5W,GACA7M,EAAAse,SAAAqB,GACA3f,EAAAsB,KAAAqe,EAAA8D,EAAA5W,GAEA4W,EAAApQ,KAAAxG,EAAA8S,IAIAnB,EAAAkF,UAAA,SAAA/D,EAAA8D,EAAA5W,GACA,IAAA8W,EACAC,EAAA5jB,EAAA0U,QAAAiL,GAAA,GAAA3f,EAAAse,SAAAqB,GAAA,IAA4EgE,GAAA,QAK5E,OAJAnF,EAAAgF,WAAA7D,EAAA,SAAAM,EAAAoD,GACA,IAAAQ,EAAAJ,EAAApQ,KAAAxG,EAAAoT,EAAAoD,GACAM,EAAAC,EAAAC,EAAAD,EAAAP,GAAAQ,IAEAD,GAUApF,EAAAsF,gBAAA,SAAAjS,GACA,IACAkS,EADA3T,EAAA,GAQA,OANAyB,GAAAvQ,EAAA2d,EAAA,SAAAvX,EAAAiX,GACA9M,EAAAwQ,eAAA1D,KACAvO,EAAAuO,GAAA9M,EAAA8M,GACAoF,GAAA,KAGAA,EAAA3T,EAAA,MAYAoO,EAAAwF,mBAAA,SAAAZ,GACA,GAAA9E,EAAA8E,GAAA,CACA,IAAAlQ,EAAA,GACA5R,EAAA8hB,EAAA,SAAAP,EAAA5gB,GACAiR,EAAAH,KAAA9Q,KAEAmhB,EAAAlQ,MACG,KAAAlT,EAAA0U,QAAA0O,GAGH,SAFAA,IAAA7X,QAUA,OALA6X,EAAAa,KAAA,SAAAC,EAAAC,GAGA,gBAAAA,GAAA,UAAAD,GAAA,IAAAA,EAAA/Y,QAAA,gBAEAiY,GAaA5E,EAAA4F,UAAA,SAAAC,EAAAC,GACA,gBAAAA,KAAAD,GAAA,IAAAA,EAAAlZ,QAAAmZ,IAAAD,IAAAC,GAWA9F,EAAAoE,eAAA,SAAArd,EAAA+Z,EAAAiF,GAIA,IAHA,IAAAC,EACApiB,EAAAqiB,IAEApW,EAAA,EAAAnJ,EAAAoa,EAAA3I,OAAyCtI,EAAAnJ,EAASmJ,IAAA,CAClD,IAAAqW,EAAApF,EAAAjR,GAAA9I,MAEA,SAAAmf,EAAA,CACA,GAAAA,IAAAnf,GAKA,kBAAAmf,OAAAnf,EAAA,GACA,OAAA8I,EAGAkW,GAAAI,EAAAD,EAAArW,IAIA,IAAAA,EAAA,EAAAnJ,EAAAoa,EAAA3I,OAAyCtI,EAAAnJ,EAASmJ,IAAA,CAClD,IAAAmR,EAAAF,EAAAjR,GACAuW,EAAApF,EAAAoF,SACA1B,EAAA1D,EAAA0D,MAEA,GAAA0B,EAAA,CACA,GAAAA,EAAA,MAAAH,KACA,GAAAxB,EAAAC,EAAA,GAAA3d,EAAAqf,EAAA,IACA,OAAAvW,OAEO,GAAAuW,EAAA,KAAAH,KACP,GAAAxB,EAAAC,EAAA,GAAA0B,EAAA,GAAArf,GACA,OAAA8I,OAEO,GAAA4U,EAAAC,EAAA,GAAA0B,EAAA,GAAArf,IAAA0d,EAAAC,EAAA,GAAA3d,EAAAqf,EAAA,IACP,OAAAvW,EAGAkW,GAAAI,EAAAC,EAAA,GAAAvW,GACAkW,GAAAI,EAAAC,EAAA,GAAAvW,IAIA,GAAAkW,EACA,OAAAhf,IAAAkf,IAAAnF,EAAA3I,OAAA,EAAApR,KAAAkf,IAAA,EAAAD,EAGA,SAAAG,EAAAE,EAAApF,GACA,IAAAqF,EAAA3iB,KAAAC,IAAAyiB,EAAAtf,GAEAuf,EAAA1iB,IACAA,EAAA0iB,EACAN,EAAA/E,KASA,IAAA3e,EAAA0d,EACAlY,EAAAC,QAAAzF,uBC/kBA,IAAAd,EAAaC,EAAQ,GAoDrBqG,EAAAC,QA7BA,SAAAgN,GAEA,QAAAlF,EAAA,EAAiBA,EAAAkF,EAAAoD,OAAuBtI,IACxCkF,EAAAlF,GAAA,KACAkF,EAAAlF,GAAA,GAAAkF,EAAAlF,GAAA,IAIA,gBAAAzN,EAAAmkB,EAAAC,GAGA,IAFA,IAAA/a,EAAA,GAEAoE,EAAA,EAAmBA,EAAAkF,EAAAoD,OAAuBtI,IAAA,CAC1C,IAAA4W,EAAA1R,EAAAlF,GAAA,GAEA,KAAA0W,GAAA/kB,EAAAmL,QAAA4Z,EAAAE,IAAA,GAAAD,GAAAhlB,EAAAmL,QAAA6Z,EAAAC,GAAA,IAIA,IAAAJ,EAAAjkB,EAAAod,WAAAiH,GAEA,MAAAJ,IACA5a,EAAAsJ,EAAAlF,GAAA,IAAAwW,IAIA,OAAA5a,yBChDA,IAAAjK,EAAaC,EAAQ,GAIrBiQ,EAFajQ,EAAQ,KAErBiQ,eAoBAgV,EAAA,EA4KA3e,EAAAgG,OArKA,SAAAtK,GAGA,OAAAA,GAAA,GAAAijB,IAAA/iB,KAAAsP,SAAAC,QAAA,IAAAC,KAAA,MAmKApL,EAAA4e,uBA5JA,SAAArT,GACA,IAAAsT,EAAA,GAqBA,OAnBAtT,EAAAuT,yBAAA,SAAAlV,EAAAmV,GACAnV,EAAAD,EAAAC,GACAiV,EAAAjV,EAAAE,MAAAiV,GAGAxT,EAAAyT,iBAAA,SAAApV,EAAAsO,GACA,IAAAxc,EAAAwc,EAAAxc,KAEA,IAAAA,EAAA,CACA,IAAAujB,EAAAtV,EAAAC,GAAAE,KAEAyB,EAAAqB,YAAAhD,IAAAiV,EAAAI,KACAvjB,EAAAmjB,EAAAI,GAAA/G,IAIA,OAAAxc,GAGA6P,GAuIAvL,EAAAkf,wBA1HA,SAAA3T,EAAA4T,GAoGA,SAAAC,EAAAvK,EAAAvR,GAQA,OAPAuR,EAAAvR,KACAuR,EAAAvR,GAAA,CACA+b,YAAA,GACAC,UAAA,KAIAzK,EAAAvR,GAnGAiI,EAAAgU,kBAAA,SAAAC,EAAAC,EAAAvC,EAAA5W,GACA,GAAAkZ,EAAApP,OAAA,CAIA,IAAAvT,EAuDA,SAAA4iB,GACA,IAAA5K,EAAA,GACA6K,EAAA,GAuBA,OAtBAjmB,EAAAsB,KAAA0kB,EAAA,SAAAnc,GACA,IAAAqc,EAAAP,EAAAvK,EAAAvR,GAEAsc,EAoCA,SAAAC,EAAAJ,GACA,IAAAG,EAAA,GAIA,OAHAnmB,EAAAsB,KAAA8kB,EAAA,SAAAC,GACArmB,EAAAmL,QAAA6a,EAAAK,IAAA,GAAAF,EAAApT,KAAAsT,KAEAF,EAzCAG,CADAJ,EAAAE,aAAAV,EAAA7b,GACAmc,GACAE,EAAAK,WAAAJ,EAAAxP,OAEA,IAAAuP,EAAAK,YACAN,EAAAlT,KAAAlJ,GAGA7J,EAAAsB,KAAA6kB,EAAA,SAAAK,GACAxmB,EAAAmL,QAAA+a,EAAAN,YAAAY,GAAA,GACAN,EAAAN,YAAA7S,KAAAyT,GAGA,IAAAC,EAAAd,EAAAvK,EAAAoL,GAEAxmB,EAAAmL,QAAAsb,EAAAZ,UAAAW,GAAA,GACAC,EAAAZ,UAAA9S,KAAAlJ,OAIA,CACAuR,QACA6K,eAlFAS,CAAAV,GACA5K,EAAAhY,EAAAgY,MACA1X,EAAAN,EAAA6iB,YACAU,EAAA,GAKA,IAJA3mB,EAAAsB,KAAAykB,EAAA,SAAAlc,GACA8c,EAAA9c,IAAA,IAGAnG,EAAAiT,QAAA,CACA,IAAAiQ,EAAAljB,EAAAyc,MACA0G,EAAAzL,EAAAwL,GACAE,IAAAH,EAAAC,GAEAE,IACArD,EAAApQ,KAAAxG,EAAA+Z,EAAAC,EAAAT,aAAA7a,gBACAob,EAAAC,IAGA5mB,EAAAsB,KAAAulB,EAAAhB,UAAAiB,EAAAC,EAAAC,GAGAhnB,EAAAsB,KAAAqlB,EAAA,WACA,UAAA/T,MAAA,kCAGA,SAAAoU,EAAAC,GACA7L,EAAA6L,GAAAV,aAEA,IAAAnL,EAAA6L,GAAAV,YACA7iB,EAAAqP,KAAAkU,GAUA,SAAAF,EAAAE,GACAN,EAAAM,IAAA,EACAD,EAAAC,0BCnIchnB,EAAQ,IAEtB8P,QAFA,IAIAmX,EAAcjnB,EAAQ,KAEtBD,EAAaC,EAAQ,GAErBknB,EAAgBlnB,EAAQ,KAExBmnB,EAAUnnB,EAAQ,IAElBonB,EAAcpnB,EAAQ,KAEtBqnB,EAAernB,EAAQ,KAEvBsnB,EAAkBtnB,EAAQ,KAE1BunB,EAAmBvnB,EAAQ,KAE3BwnB,EAA8BxnB,EAAQ,KAEtCynB,EAAoBznB,EAAQ,KAE5B0nB,EAAqB1nB,EAAQ,KAE7B2nB,EAAgB3nB,EAAQ,KAExB4nB,EAAqB5nB,EAAQ,IAE7B6nB,EAAkB7nB,EAAQ,IAE1B8nB,EAAoB9nB,EAAQ,KAE5B+nB,EAAgB/nB,EAAQ,KAExBuG,EAAcvG,EAAQ,IAEtB4L,EAAgB5L,EAAQ,IAIxBqX,EAFgBrX,EAAQ,KAExBqX,SAEA2Q,EAAkBhoB,EAAQ,KAE1B0b,EAAW1b,EAAQ,KAEnBioB,EAAqBjoB,EAAQ,KAE7BkoB,EAAgBloB,EAAQ,KAExBmoB,EAAiBnoB,EAAQ,KAEzBooB,EAAgBpoB,EAAQ,KAExBA,EAAQ,KAER,IAAAqoB,EAAqBroB,EAAQ,KAqB7BkS,EAAAnS,EAAAmS,OACA7Q,EAAAtB,EAAAsB,KACAmT,EAAAzU,EAAAyU,WACA6J,EAAAte,EAAAse,SACApO,EAAA2X,EAAA3X,eAMAqY,EAAA,IAIAC,EAAA,IAGAC,EAAA,IAMAC,EAAA,CACAC,UAAA,CACAC,OAAAL,EACAM,cAfA,IAgBAC,UAdA,KAgBAC,OAAA,CACAC,OAAAR,EACAS,mBAhBA,KAiBAC,OAhBA,IAiBAC,MAAAV,EACAW,kBAhBA,KAiBAC,UAhBA,IAiBAC,MAdA,MAsBAC,EAAA,sBACAC,EAAA,kBACAC,EAAA,kBAEA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,EAAAvU,EAAAzI,GACA+c,IAAAvjB,KAAAyjB,WAMAD,OAAAxe,cACAic,EAAAva,UAAA4c,GAAAtW,KAAAhN,KAAAwjB,EAAAvU,EAAAzI,IANAxG,KAAA0jB,IAcA,SAAAC,IACA1C,EAAAjU,KAAAhN,MAWA,SAAA4jB,EAAAC,EAAAC,EAAAC,GACAA,KAAA,GAEA,kBAAAD,IACAA,EAAAE,GAAAF,IAOA9jB,KAAA0jB,GAMA1jB,KAAAgG,MAMAhG,KAAAikB,KAAAJ,EACA,IAMAK,EAAAlkB,KAAAmkB,IAAAtD,EAAAla,KAAAkd,EAAA,CACAO,SAAAL,EAAAK,UAPA,SAQAC,iBAAAN,EAAAM,iBACA7nB,MAAAunB,EAAAvnB,MACAkE,OAAAqjB,EAAArjB,SAQAV,KAAAskB,kBAAArT,EAAAtX,EAAAygB,KAAA8J,EAAAK,MAAAL,GAAA,KACAJ,EAAAnqB,EAAA6e,MAAAsL,KACAxC,EAAAwC,GAAA,GAMA9jB,KAAAwkB,OAAAV,EAMA9jB,KAAAykB,aAAA,GAMAzkB,KAAA0kB,WAAA,GAMA1kB,KAAA2kB,iBAAA,GAMA3kB,KAAA4kB,eAAA,GAMA5kB,KAAA6kB,aAAA,IAAAzD,EAMA,IAAAxmB,EAAAoF,KAAA8kB,KAg5CA,SAAAC,GACA,IAAAC,EAAAD,EAAAF,aACA,OAAAlrB,EAAAkR,OAAA,IAAAsW,EAAA4D,GAAA,CAEAE,qBAAAtrB,EAAAygB,KAAA4K,EAAAC,qBAAAD,GACAE,sBAAA,SAAAxd,GACA,KAAAA,GAAA,CACA,IAAAyd,EAAAzd,EAAA0d,kBAEA,SAAAD,EACA,OAAAJ,EAAAM,OAAAC,aAAAH,EAAAI,SAAAJ,EAAA/L,OAGA1R,IAAA8d,WA75CAC,CAAAzlB,MAEA,SAAA0lB,EAAApY,EAAAC,GACA,OAAAD,EAAAqY,OAAApY,EAAAoY,OAGA3E,EAAA4E,GAAAF,GACA1E,EAAA6E,GAAAH,GAKA1lB,KAAA8lB,WAAA,IAAAhE,EAAA9hB,KAAApF,EAAAirB,GAAAD,IACA3E,EAAAjU,KAAAhN,UAAA+lB,kBAAA,IAAAC,IAMAhmB,KAAAimB,eAAA,IAAAtC,EAEA3jB,KAAAkmB,cAGAlmB,KAAAmmB,OAAAxsB,EAAAygB,KAAApa,KAAAmmB,OAAAnmB,MAEAA,KAAAomB,gBAAA,GACAlC,EAAAmC,UAAApW,GAAA,QAAAjQ,KAAAsmB,SAAAtmB,MA2+BA,SAAAkkB,EAAAqC,GACArC,EAAAjU,GAAA,sBACAsW,EAAA1e,QAAA,aAQAqc,EAAAmC,UAAAG,cAAAD,EAAApD,IAAAoD,EAAAT,WAAAW,YAAAF,EAAAH,gBAAA9V,QACAiW,EAAA1e,QAAA,cAr/BA6e,CAAAxC,EAAAlkB,MAEArG,EAAAgtB,eAAA3mB,MA5HA2jB,EAAAjd,UAAAuJ,GAAAoT,EAAA,SACAM,EAAAjd,UAAAiK,IAAA0S,EAAA,UACAM,EAAAjd,UAAAkgB,IAAAvD,EAAA,UACA1pB,EAAAktB,MAAAlD,EAAA1C,GA4HA,IAAA6F,EAAAlD,EAAAld,UA0ZA,SAAAqgB,EAAAje,EAAAke,EAAA9nB,GACA,GAAAc,KAAAyjB,UACAzjB,KAAA0jB,OADA,CAKA,IAIA3mB,EAJApC,EAAAqF,KAAAqlB,OAEA4B,EAAAjnB,KAAA6kB,aAAAI,uBAGA+B,EAAAxhB,EAAA0hB,YAAAvsB,EAAAqsB,GAEA,QAAAhf,EAAA,EAAiBA,EAAAif,EAAA3W,OAAyBtI,IAAA,CAC1C,IAAAmf,EAAAF,EAAAjf,GAEA,GAAAmf,EAAAre,IAAA,OAAA/L,EAAAoqB,EAAAre,GAAAnO,EAAAqsB,EAAA9nB,IACA,OAAAnC,IAzaA+pB,EAAAR,SAAA,WACA,IAAAtmB,KAAAyjB,UAAA,CAIA,IAAA2D,EAAApnB,KAAA8lB,WAEA,GAAA9lB,KAAAmjB,GAAA,CACA,IAAAkE,EAAArnB,KAAAmjB,GAAAkE,OACArnB,KAAAkjB,IAAA,EACAoE,EAAAtnB,MACAunB,EAAAC,OAAAxa,KAAAhN,MACAA,KAAAkjB,IAAA,EACAljB,KAAAmjB,IAAA,EACAsE,EAAAza,KAAAhN,KAAAqnB,GACAK,EAAA1a,KAAAhN,KAAAqnB,QAEA,GAAAD,EAAAX,WAAA,CAEA,IAAAkB,EAhNA,EAiNAhtB,EAAAqF,KAAAqlB,OACAzqB,EAAAoF,KAAA8kB,KACAsC,EAAAX,YAAA,EAEA,GACA,IAAAmB,GAAA,IAAA/V,KACAuV,EAAAS,mBAAAltB,GAEAysB,EAAAU,0BAAAntB,GACAotB,EAAA/nB,KAAArF,GAOAysB,EAAAY,mBAAArtB,GACAstB,GAAAjoB,UAAAqlB,OAAAzqB,EAAA,UACA+sB,IAAA,IAAA9V,KAAA+V,QACOD,EAAA,GAAAP,EAAAX,YAGPW,EAAAX,YACAzmB,KAAAmkB,IAAAI,WAWAuC,EAAAoB,OAAA,WACA,OAAAloB,KAAAikB,MAOA6C,EAAAqB,MAAA,WACA,OAAAnoB,KAAAmkB,KAkBA2C,EAAAsB,UAAA,SAAAhQ,EAAAiQ,EAAAC,GACA,GAAAtoB,KAAAyjB,UACAzjB,KAAA0jB,OADA,CAKA,IAAA2D,EAUA,GARApP,EAAAoQ,KACAC,EAAAD,EAAAC,WACAjB,EAAAgB,EAAAhB,OACAgB,cAGAroB,KAAAkjB,IAAA,GAEAljB,KAAAqlB,QAAAgD,EAAA,CACA,IAAAE,EAAA,IAAAlH,EAAArhB,KAAA8kB,MACAhB,EAAA9jB,KAAAwkB,OACA7pB,EAAAqF,KAAAqlB,OAAA,IAAAnE,EACAvmB,EAAAysB,UAAApnB,KAAA8lB,WACAnrB,EAAAgM,KAAA,UAAAmd,EAAAyE,GAGAvoB,KAAAqlB,OAAA+C,UAAAhQ,EAAAoQ,IAEAF,GACAtoB,KAAAmjB,GAAA,CACAkE,UAEArnB,KAAAkjB,IAAA,IAEAoE,EAAAtnB,MACAunB,EAAAC,OAAAxa,KAAAhN,MAGAA,KAAAmkB,IAAAI,QAEAvkB,KAAAmjB,IAAA,EACAnjB,KAAAkjB,IAAA,EACAuE,EAAAza,KAAAhN,KAAAqnB,GACAK,EAAA1a,KAAAhN,KAAAqnB,MAQAP,EAAA2B,SAAA,aAQA3B,EAAA4B,SAAA,WACA,OAAA1oB,KAAAqlB,QAOAyB,EAAA6B,UAAA,WACA,OAAA3oB,KAAAqlB,QAAArlB,KAAAqlB,OAAAsD,aAOA7B,EAAA8B,SAAA,WACA,OAAA5oB,KAAAmkB,IAAAyE,YAOA9B,EAAA+B,UAAA,WACA,OAAA7oB,KAAAmkB,IAAA0E,aAOA/B,EAAAgC,oBAAA,WACA,OAAA9oB,KAAAmkB,IAAA4E,QAAAC,KAAA1a,OAAA+V,kBAAA,GAUAyC,EAAAmC,kBAAA,SAAAlF,GACA,GAAAhD,EAAAmI,gBAcA,OAVAnF,KAAA,IACAoF,WAAApF,EAAAoF,YAAA,EACApF,EAAAqF,gBAAArF,EAAAqF,iBAAAppB,KAAAqlB,OAAAprB,IAAA,mBACA+F,KAAAmkB,IAOA4E,QAAAE,kBAAAlF,IAQA+C,EAAAuC,cAAA,WACA,GAAAtI,EAAAuI,aAAA,CAIA,IAAApF,EAAAlkB,KAAAmkB,IACAoF,EAAArF,EAAAvY,QAAA6d,iBAKA,OAHA7vB,EAAAsB,KAAAsuB,EAAA,SAAA7hB,GACAA,EAAA+hB,eAAA,KAEAvF,EAAA6E,QAAAW,cAYA5C,EAAA6C,WAAA,SAAA5F,GACA,IAAA/jB,KAAAyjB,UAAA,CAMA,IAAAmG,GADA7F,KAAA,IACA6F,kBACAjvB,EAAAqF,KAAAqlB,OACAwE,EAAA,GACAna,EAAA1P,KACA/E,EAAA2uB,EAAA,SAAA9f,GACAnP,EAAAmvB,cAAA,CACAvE,SAAAzb,GACK,SAAAigB,GACL,IAAAtjB,EAAAiJ,EAAAkV,eAAAmF,EAAAC,UAEAvjB,EAAAT,MAAAikB,SACAJ,EAAAnd,KAAAjG,GACAA,EAAAT,MAAAikB,QAAA,OAIA,IAAAC,EAAA,QAAAlqB,KAAAmkB,IAAA4E,QAAAoB,UAAAnqB,KAAAqpB,gBAAArpB,KAAAipB,kBAAAlF,GAAA2F,UAAA,UAAA3F,KAAAnoB,MAAA,QAIA,OAHAX,EAAA4uB,EAAA,SAAApjB,GACAA,EAAAT,MAAAikB,QAAA,IAEAC,EAzBAlqB,KAAA0jB,IAoCAoD,EAAAsD,oBAAA,SAAArG,GACA,GAAA/jB,KAAAyjB,UACAzjB,KAAA0jB,QAIA,GAAA3C,EAAAmI,gBAAA,CAIA,IAAAmB,EAAA,QAAAtG,EAAAnoB,KACA0uB,EAAAtqB,KAAAgG,MACAukB,EAAAzuB,KAAAgB,IACA0tB,EAAA1uB,KAAAqB,IAGA,GAAAstB,GAAAH,GAAA,CACA,IAAAI,EAHAtM,IAIAuM,EAJAvM,IAKAwM,GALAxM,IAMAyM,GANAzM,IAOA0M,EAAA,GACA9B,EAAAjF,KAAAoF,YAAA,EACAxvB,EAAAsB,KAAA8vB,GAAA,SAAAC,EAAAtH,GACA,GAAAsH,EAAAhlB,QAAAskB,EAAA,CACA,IAAAW,EAAAZ,EAAAW,EAAA7C,QAAAY,QAAAmC,YAAAC,UAAAH,EAAA/B,kBAAAtvB,EAAA6e,MAAAuL,IACAqH,EAAAJ,EAAA9C,SAAAmD,wBACAX,EAAAH,EAAAa,EAAAV,QACAC,EAAAJ,EAAAa,EAAAT,OACAC,EAAAJ,EAAAY,EAAAR,SACAC,EAAAL,EAAAY,EAAAP,UACAC,EAAApe,KAAA,CACAmX,IAAAoH,EACAP,KAAAU,EAAAV,KACAC,IAAAS,EAAAT,SAQA,IAAAnuB,GAFAouB,GAAA5B,IAFA0B,GAAA1B,GAKAtoB,GAFAmqB,GAAA7B,IAFA2B,GAAA3B,GAKAsC,EAAA3xB,EAAA4xB,eACArH,EAAArD,EAAAla,KAAA2kB,EAAA,CACAlH,SAAAiG,EAAA,iBAOA,GALAnG,EAAAiC,OAAA,CACA3pB,QACAkE,WAGA2pB,EAAA,CACA,IAAAmB,EAAA,GAaA,OAZAvwB,EAAA6vB,EAAA,SAAAtO,GACA,IAAAtb,EAAAsb,EAAAkO,OACAvpB,EAAAqb,EAAAmO,MACAa,GAAA,2BAAAtqB,EAAA,IAAAC,EAAA,MAAAqb,EAAAqH,IAAA,SAEAK,EAAA6E,QAAA0C,aAAAN,UAAAK,EAEAzH,EAAA2H,0BACAxH,EAAA6E,QAAA4C,mBAAA5H,EAAA2H,0BAGAxH,EAAA0H,qBACA1H,EAAA6E,QAAAW,YA4BA,OAzBA3F,EAAA2H,0BACAxH,EAAA2H,IAAA,IAAA1rB,EAAAoC,KAAA,CACA9B,MAAA,CACAS,EAAA,EACAC,EAAA,EACA3E,QACAkE,UAEAkD,MAAA,CACAY,KAAAuf,EAAA2H,6BAKAzwB,EAAA6vB,EAAA,SAAAtO,GACA,IAAAsP,EAAA,IAAA3rB,EAAA4rB,MAAA,CACAnoB,MAAA,CACA1C,EAAAsb,EAAAkO,KAAA1B,EAAA0B,EACAvpB,EAAAqb,EAAAmO,IAAA3B,EAAA2B,EACAqB,MAAAxP,EAAAqH,OAGAK,EAAA2H,IAAAC,KAEA5H,EAAA0H,qBACAN,EAAA5B,UAAA,UAAA3F,KAAAnoB,MAAA,QAGA,OAAAoE,KAAA2pB,WAAA5F,KAuBA+C,EAAAmF,eAAAtyB,EAAAuyB,MAAAnF,EAAA,kBAoBAD,EAAAqF,iBAAAxyB,EAAAuyB,MAAAnF,EAAA,oBA0CAD,EAAAsF,aAAA,SAAApF,EAAA9nB,GACA,IAAAc,KAAAyjB,UAAA,CAKA,IACA1mB,EADApC,EAAAqF,KAAAqlB,OAkBA,OAhBA2B,EAAAxhB,EAAA0hB,YAAAvsB,EAAAqsB,GACArtB,EAAAsB,KAAA+rB,EAAA,SAAAqF,EAAArP,GACAA,EAAAlY,QAAA,cAAAnL,EAAAsB,KAAAoxB,EAAA,SAAA9xB,GACA,IAAA4sB,EAAA5sB,EAAAc,iBAEA,GAAA8rB,KAAAmF,aACAvvB,KAAAoqB,EAAAmF,aAAAptB,QACO,oBAAA8d,EAAA,CACP,IAAAvW,EAAAzG,KAAA0kB,WAAAnqB,EAAAyvB,UAEAvjB,KAAA6lB,eACAvvB,GAAA0J,EAAA6lB,aAAAptB,EAAA3E,MAGKyF,OACFA,QACHjD,EAtBAiD,KAAA0jB,IAyCAoD,EAAAyF,UAAA,SAAAvF,EAAA1O,GACA,IAAA3d,EAAAqF,KAAAqlB,OAKAlqB,GAJA6rB,EAAAxhB,EAAA0hB,YAAAvsB,EAAAqsB,EAAA,CACAwF,gBAAA,YAEAxyB,YACAoB,UACAqxB,EAAAzF,EAAAhL,eAAA,mBAAAgL,EAAAyF,gBAAAzF,EAAAhL,eAAA,aAAA7gB,EAAAuxB,gBAAA1F,EAAA7e,WAAA,KACA,aAAAskB,EAAAtxB,EAAAwxB,cAAAF,EAAAnU,GAAAnd,EAAAoxB,UAAAjU,IASAwO,EAAA8F,wBAAA,SAAAC,GACA,OAAA7sB,KAAA4kB,eAAAiI,EAAA7C,WASAlD,EAAAgG,qBAAA,SAAA9yB,GACA,OAAAgG,KAAA0kB,WAAA1qB,EAAAgwB,WAGA,IAAAzC,EAAA,CACAwF,iBAAA,SAAAlmB,GACAygB,EAAAtnB,MACAunB,EAAAC,OAAAxa,KAAAhN,KAAA6G,IAOA2gB,OAAA,SAAA3gB,GAEA,IAAAlM,EAAAqF,KAAAqlB,OACAzqB,EAAAoF,KAAA8kB,KACAZ,EAAAlkB,KAAAmkB,IACAa,EAAAhlB,KAAA6kB,aACAuC,EAAApnB,KAAA8lB,WAEA,GAAAnrB,EAAA,CAIAysB,EAAA4F,YAAAryB,EAAAkM,GACAugB,EAAAS,mBAAAltB,GAMAqqB,EAAAiI,OAAAtyB,EAAAC,GACAwsB,EAAAU,0BAAAntB,EAAAkM,GAIAkhB,EAAA/nB,KAAArF,GAKAqqB,EAAAwC,OAAA7sB,EAAAC,GACAsyB,GAAAvyB,GACAysB,EAAAY,mBAAArtB,EAAAkM,GACAD,GAAA5G,KAAArF,EAAAC,EAAAiM,GAEA,IAAAuiB,EAAAzuB,EAAAV,IAAA,kCAEA,GAAA8mB,EAAAmI,gBAQAhF,EAAAyH,mBAAAvC,OARA,CACA,IAAA+D,EAAArM,EAAArE,MAAA2M,GACAA,EAAAtI,EAAAnG,UAAAwS,EAAA,OAEA,IAAAA,EAAA,KACA/D,EAAA,eAMAgE,GAAAzyB,EAAAC,KAOA0M,gBAAA,SAAAT,GACA,IAAAlM,EAAAqF,KAAAqlB,OACAkB,EAAAvmB,KACApF,EAAAoF,KAAA8kB,KAEA,GAAAnqB,EAAA,CAKA,IAAA0yB,EAAA,GACA1yB,EAAAmvB,cAAA,SAAAhgB,EAAA+iB,GACA,IAAAS,EAAA/G,EAAAqG,wBAAAC,GAEA,GAAAS,KAAAC,QACA,GAAAD,EAAAhmB,gBAAA,CACA,IAAAvK,EAAAuwB,EAAAhmB,gBAAAulB,EAAAlyB,EAAAC,EAAAiM,GACA9J,KAAAyqB,QAAA6F,EAAA3gB,KAAA4gB,QAEAD,EAAA3gB,KAAA4gB,KAIA,IAAAE,EAAA7zB,EAAA8zB,gBACA9yB,EAAA+yB,WAAA,SAAA1zB,GACA,IAAA2zB,EAAApH,EAAA7B,WAAA1qB,EAAAgwB,UAEA,GAAA2D,EAAArmB,gBAAA,CACA,IAAAvK,EAAA4wB,EAAArmB,gBAAAtN,EAAAW,EAAAC,EAAAiM,GACA9J,KAAAyqB,QAAAgG,EAAAI,IAAA5zB,EAAAiM,IAAA,QAEAunB,EAAAI,IAAA5zB,EAAAiM,IAAA,KAGAinB,GAAAvyB,GAGAqF,KAAA8lB,WAAAkC,mBAAArtB,EAAAkM,EAAA,CACAgnB,UAAA,EACAC,SAAAN,IAKAvF,GAAA1B,EAAA5rB,EAAAC,EAAAiM,EAAA2mB,GACAJ,GAAAzyB,EAAAqF,KAAA8kB,QAOA9b,WAAA,SAAAnC,GACA,IAAAlM,EAAAqF,KAAAqlB,OAEA1qB,IAIAgnB,EAAArY,iBAAAzC,EAAA,cACAqmB,GAAAvyB,GAEAqF,KAAA8lB,WAAAkC,mBAAArtB,EAAAkM,EAAA,CACAgnB,UAAA,IAGAjnB,GAAA5G,UAAAqlB,OAAArlB,KAAA8kB,KAAAje,GACAumB,GAAAzyB,EAAAqF,KAAA8kB,QAOA5b,aAAA,SAAArC,GACA0gB,EAAAC,OAAAxa,KAAAhN,KAAA6G,IAiBAoC,aAAA,SAAApC,GACA0gB,EAAAC,OAAAxa,KAAAhN,KAAA6G,KAcA,SAAAygB,EAAAf,GACA,IAAA5rB,EAAA4rB,EAAAlB,OACA+B,EAAAb,EAAAT,WACAsB,EAAA2G,iBAAApzB,GACAysB,EAAA4G,oBACAC,EAAA1H,EAAA,YAAA5rB,EAAAysB,GACA6G,EAAA1H,EAAA,QAAA5rB,EAAAysB,GACAA,EAAAhhB,OAOA,SAAA8nB,EAAA3H,EAAAjD,EAAAzc,EAAA0e,EAAAlZ,GACA,IAAA1R,EAAA4rB,EAAAlB,OAEA,GAAAE,EAAA,CAQA,IAAAnW,EAAA,GACAA,EAAAmW,EAAA,MAAA1e,EAAA0e,EAAA,MACAnW,EAAAmW,EAAA,SAAA1e,EAAA0e,EAAA,SACAnW,EAAAmW,EAAA,QAAA1e,EAAA0e,EAAA,QACA,IAAAlY,EAAA,CACAkY,WACAnW,SAEA/C,IAAAgB,EAAAhB,WAEA,IAAA8hB,EAAAtnB,EAAAsnB,gBAEA,MAAAA,IACAA,EAAAx0B,EAAA8zB,cAAAjoB,EAAA+C,iBAAA4lB,KAIAxzB,KAAAmvB,cAAAzc,EAAA,SAAA9S,GACA4zB,GAAA,MAAAA,EAAAl0B,IAAAM,EAAAmpB,KACA0K,EAAA7H,EAAA,WAAAhB,EAAA,+BAAAhrB,EAAAyvB,YAEGzD,QAzBHtrB,EAAAsrB,EAAA5B,iBAAA0J,OAAA9H,EAAA9B,cAAA2J,GA2BA,SAAAA,EAAA3nB,GACAA,KAAA8mB,SAAA9mB,EAAA6c,IAAA7c,EAAA6c,GAAA7c,EAAA6nB,QAAA3zB,EAAA4rB,EAAAzB,KAAAje,IAsCA,SAAAkhB,EAAAxB,EAAA5rB,GACA,IAAA4zB,EAAAhI,EAAA7B,WACA0C,EAAAb,EAAAT,WACAnrB,EAAA+yB,WAAA,SAAA1zB,GACAotB,EAAAW,kBAAA/tB,EAAAu0B,EAAAv0B,EAAAgwB,aAqHA,SAAAwE,EAAA3nB,EAAAwgB,GACA,IAAAoH,EAAA5nB,EAAAjL,KACA8yB,EAAA7nB,EAAA6nB,cACAC,EAAAC,GAAAH,GACAI,EAAAF,EAAAE,WACAC,GAAAD,EAAArH,QAAA,UAAAtd,MAAA,KACArB,EAAAimB,EAAAhV,MACAgV,EAAA,MAAAA,EAAA,IAAAjlB,EAAAilB,EAAA,IACA9uB,KAAAkjB,IAAA,EACA,IAAA6L,EAAA,CAAAloB,GACAmoB,GAAA,EAEAnoB,EAAAooB,QACAD,GAAA,EACAD,EAAAp1B,EAAAib,IAAA/N,EAAAooB,MAAA,SAAAzS,GAGA,OAFAA,EAAA7iB,EAAAu1B,SAAAv1B,EAAAkR,OAAA,GAA6C2R,GAAA3V,IAC7CooB,MAAA,KACAzS,KAIA,IACA2S,EADAC,EAAA,GAEAC,EAAA,cAAAZ,GAAA,aAAAA,EACAxzB,EAAA8zB,EAAA,SAAAO,IAIAH,GAFAA,EAAAR,EAAApe,OAAA+e,EAAAtvB,KAAAqlB,OAAArlB,KAAA8kB,QAEAnrB,EAAAkR,OAAA,GAA2CykB,IAE3C1zB,KAAAizB,EAAAU,OAAAJ,EAAAvzB,KACAwzB,EAAA1iB,KAAAyiB,GAEAE,EAEAnB,EAAAluB,KAAA6I,EAAAymB,EAAA,UACKR,GACLZ,EAAAluB,KAAA6I,EAAAymB,EAAAR,EAAA9kB,KAAA8kB,EAAA7kB,MAEGjK,MAEH,SAAA6I,GAAAwmB,GAAAP,IAEA9uB,KAAAmjB,IAEAmE,EAAAtnB,MACAunB,EAAAC,OAAAxa,KAAAhN,KAAA6G,GACA7G,KAAAmjB,IAAA,GAEAoE,EAAA1e,GAAAmE,KAAAhN,KAAA6G,IAMAsoB,EADAH,EACA,CACApzB,KAAAizB,EAAAU,OAAAd,EACAC,gBACAO,MAAAG,GAGAA,EAAA,GAGApvB,KAAAkjB,IAAA,GACAmE,GAAArnB,KAAAimB,eAAApe,QAAAsnB,EAAAvzB,KAAAuzB,GAGA,SAAA1H,EAAAJ,GAGA,IAFA,IAAAmI,EAAAxvB,KAAAomB,gBAEAoJ,EAAAlf,QAAA,CACA,IAAAzJ,EAAA2oB,EAAAC,QACAjB,EAAAxhB,KAAAhN,KAAA6G,EAAAwgB,IAIA,SAAAK,EAAAL,IACAA,GAAArnB,KAAA6H,QAAA,WAwEA,SAAAomB,EAAA1H,EAAA3qB,EAAAjB,EAAAysB,GAOA,IANA,IAAAsI,EAAA,cAAA9zB,EACA+zB,EAAAD,EAAAnJ,EAAA5B,iBAAA4B,EAAA9B,aACAmL,EAAAF,EAAAnJ,EAAA3B,eAAA2B,EAAA7B,WACAR,EAAAqC,EAAApC,IACAvpB,EAAA2rB,EAAAzB,KAEA9c,EAAA,EAAiBA,EAAA2nB,EAAArf,OAAqBtI,IACtC2nB,EAAA3nB,GAAAulB,SAAA,EAOA,SAAAsC,EAAAt1B,GAEA,IAAAu1B,EAAA,OAAAv1B,EAAAmpB,GAAA,IAAAnpB,EAAAqB,KACA6K,EAAAmpB,EAAAE,GAEA,IAAArpB,EAAA,CACA,IAAAspB,EAAAlmB,EAAAtP,EAAAqB,OAEA6K,EAAA,IADAipB,EAAAhO,EAAAvV,SAAA4jB,EAAA/lB,KAAA+lB,EAAA9lB,KAAA0X,EAAAxV,SAAA4jB,EAAA9lB,OAEAtD,KAAAhM,EAAAC,GACAg1B,EAAAE,GAAArpB,EACAkpB,EAAAjjB,KAAAjG,GACAyd,EAAA2H,IAAAplB,EAAAT,OAGAzL,EAAAyvB,SAAAvjB,EAAAupB,KAAAF,EACArpB,EAAA8mB,SAAA,EACA9mB,EAAA6nB,QAAA/zB,EACAkM,EAAAT,MAAAof,kBAAA,CACAG,SAAAhrB,EAAAgrB,SACAnM,MAAA7e,EAAAC,iBAEAk1B,GAAAtI,EAAA6G,YAAAxnB,EAAAlM,EAAAI,EAAAC,GA1BA80B,EAAA/0B,EAAAmvB,cAAA,SAAAhgB,EAAAvP,GACA,WAAAuP,GAAA+lB,EAAAt1B,KACGI,EAAA+yB,WAAAmC,GA2BH,IAAA7nB,EAAA,EAAiBA,EAAA2nB,EAAArf,QAAqB,CACtC,IAAA7J,EAAAkpB,EAAA3nB,GAEAvB,EAAA8mB,QAQAvlB,MAPA0nB,GAAAjpB,EAAAN,WAAAgB,UACA+c,EAAAjd,OAAAR,EAAAT,OACAS,EAAAU,QAAAxM,EAAAC,GACA+0B,EAAAvf,OAAApI,EAAA,UACA4nB,EAAAnpB,EAAAupB,MACAvpB,EAAAupB,KAAAvpB,EAAAT,MAAAof,kBAAA,OA6BA,SAAA8H,GAAAvyB,GACAA,EAAAuyB,oBACAvyB,EAAA+yB,WAAA,SAAA1zB,GACAA,EAAAkzB,sBAIA,SAAAtmB,GAAA2f,EAAA5rB,EAAAC,EAAAiM,IAcA,SAAA0f,EAAA5rB,EAAAC,EAAAiM,EAAAopB,GACAh1B,EAAAg1B,GAAA1J,EAAA5B,iBAAA,SAAA2I,GACA,IAAAT,EAAAS,EAAAgB,QACAhB,EAAA1mB,OAAAimB,EAAAlyB,EAAAC,EAAAiM,GACAqpB,GAAArD,EAAAS,KAjBA6C,CAAA5J,EAAA5rB,EAAAC,EAAAiM,GACA5L,EAAAsrB,EAAA9B,aAAA,SAAAuG,GACAA,EAAAuC,SAAA,IAEAtF,GAAA1B,EAAA5rB,EAAAC,EAAAiM,GAEA5L,EAAAsrB,EAAA9B,aAAA,SAAAuG,GACAA,EAAAuC,SACAvC,EAAA/jB,OAAAtM,EAAAC,KAkBA,SAAAqtB,GAAA1B,EAAA5rB,EAAAC,EAAAiM,EAAAinB,GAEA,IACArH,EADAW,EAAAb,EAAAT,WAEAnrB,EAAA+yB,WAAA,SAAA1zB,GACA,IAAA2zB,EAAApH,EAAA7B,WAAA1qB,EAAAgwB,UACA2D,EAAAJ,SAAA,EACA,IAAApnB,EAAAwnB,EAAAxnB,WACAihB,EAAAgJ,cAAAjqB,EAAAU,GAEAinB,KAAA7zB,IAAAD,EAAAiM,MACAE,EAAA1B,QAGAgiB,GAAAtgB,EAAAkqB,QAAAjJ,EAAAkJ,eAAAnqB,IACAwnB,EAAA3nB,MAAAqhB,SAAArtB,EAAAC,IAAA,UACAi2B,GAAAl2B,EAAA2zB,GA8KA,SAAA3zB,EAAA2zB,GACA,IAAA4C,EAAAv2B,EAAAC,IAAA,mBACA0zB,EAAA3nB,MAAAwqB,SAAA,SAAA9oB,GAEAA,EAAAI,SAEAJ,EAAA9D,MAAA6sB,QAAAF,GACA7oB,EAAAgpB,SAAA,QAAAH,GAIA7oB,EAAAipB,wBACAjpB,EAAAipB,uBAAA,SAAAC,GACAA,EAAAF,SAAA,QAAAH,OA1LAM,CAAA72B,EAAA2zB,KAEAvG,EAAAX,cA2IA,SAAAF,EAAA5rB,GACA,IACAgR,EADA4a,EAAApC,IACAxY,QACAmlB,EAAA,EACAnlB,EAAA6kB,SAAA,SAAA9oB,GACAopB,MAGAA,EAAAn2B,EAAAV,IAAA,yBAAA8mB,EAAAgQ,MACAp2B,EAAA+yB,WAAA,SAAA1zB,GACA,IAAAA,EAAAg3B,uBAAA,CAIA,IAAArD,EAAApH,EAAA7B,WAAA1qB,EAAAgwB,UAEA2D,EAAAJ,SACAI,EAAA3nB,MAAAwqB,SAAA,SAAA9oB,GAEAA,EAAAupB,eAAA,OA5JAC,CAAA3K,EAAA5rB,GAEA2a,EAAAiR,EAAApC,IAAAN,IAAAlpB,GAGA,SAAAyyB,GAAAzyB,EAAAC,GACAK,EAAAk2B,GAAA,SAAAC,GACAA,EAAAz2B,EAAAC,KArbAksB,EAAAX,OAAA,SAAApC,GACA,GAAA/jB,KAAAyjB,UACAzjB,KAAA0jB,OADA,CAKA1jB,KAAAmkB,IAAAgC,OAAApC,GAEA,IAAAppB,EAAAqF,KAAAqlB,OAIA,GAFArlB,KAAAqxB,YAAArxB,KAAAqxB,WAAAlL,SAEAxrB,EAAA,CAIA,IAAA22B,EAAA32B,EAAA42B,YAAA,SACAlK,EAAAtD,KAAAsD,OACArnB,KAAAkjB,IAAA,EACAoO,GAAAhK,EAAAtnB,MACAunB,EAAAC,OAAAxa,KAAAhN,MACAA,KAAAkjB,IAAA,EACAuE,EAAAza,KAAAhN,KAAAqnB,GACAK,EAAA1a,KAAAhN,KAAAqnB,MAiBAP,EAAA0K,YAAA,SAAAhuB,EAAAiuB,GACA,GAAAzxB,KAAAyjB,UACAzjB,KAAA0jB,QAYA,GARAzL,EAAAzU,KACAiuB,EAAAjuB,EACAA,EAAA,IAGAA,KAAA,UACAxD,KAAA0xB,cAEAC,GAAAnuB,GAAA,CAIA,IAAAkE,EAAAiqB,GAAAnuB,GAAAxD,KAAA8kB,KAAA2M,GACAvN,EAAAlkB,KAAAmkB,IACAnkB,KAAAqxB,WAAA3pB,EACAwc,EAAA2H,IAAAnkB,KAOAof,EAAA4K,YAAA,WACA1xB,KAAAyjB,UACAzjB,KAAA0jB,IAIA1jB,KAAAqxB,YAAArxB,KAAAmkB,IAAAld,OAAAjH,KAAAqxB,YACArxB,KAAAqxB,WAAA,OAQAvK,EAAA8K,oBAAA,SAAAzC,GACA,IAAAtoB,EAAAlN,EAAAkR,OAAA,GAAgCskB,GAEhC,OADAtoB,EAAAjL,KAAAi2B,GAAA1C,EAAAvzB,MACAiL,GAgBAigB,EAAAgL,eAAA,SAAAjrB,EAAAkrB,GACA/xB,KAAAyjB,UACAzjB,KAAA0jB,IAIAzL,EAAA8Z,KACAA,EAAA,CACA1K,SAAA0K,IAIAnD,GAAA/nB,EAAAjL,OAKAoE,KAAAqlB,SAKArlB,KAAAkjB,GACAljB,KAAAomB,gBAAA1Z,KAAA7F,IAKA2nB,EAAAxhB,KAAAhN,KAAA6G,EAAAkrB,EAAA1K,QAEA0K,EAAAxN,MACAvkB,KAAAmkB,IAAAI,OAAA,IACG,IAAAwN,EAAAxN,OAAAxD,EAAAiR,QAAAC,QAMHjyB,KAAAskB,oBAGAmD,EAAAza,KAAAhN,KAAA+xB,EAAA1K,QACAK,EAAA1a,KAAAhN,KAAA+xB,EAAA1K,YAuHAP,EAAAoL,WAAA,SAAA1oB,GACA,GAAAxJ,KAAAyjB,UACAzjB,KAAA0jB,OADA,CAKA,IAAAxpB,EAAAsP,EAAAtP,YACA8F,KAAA0oB,WACAyJ,iBAAAj4B,GACAg4B,WAAA1oB,GAQAxJ,KAAA8lB,WAAAW,YAAA,IAQAK,EAAA7W,GAAAoT,EAAA,SACAyD,EAAAnW,IAAA0S,EAAA,UACAyD,EAAAF,IAAAvD,EAAA,UAuJA,IAAA+O,GAAA,wGAsLA,SAAAlC,GAAA31B,EAAAkM,GACA,IAAA4rB,EAAA93B,EAAAN,IAAA,KACAq4B,EAAA/3B,EAAAN,IAAA,UAEAwM,EAAAT,MAAAwqB,SAAA,SAAA9oB,GACA,UAAAA,EAAA9L,OACA,MAAAy2B,IAAA3qB,EAAA2qB,KACA,MAAAC,IAAA5qB,EAAA4qB,aA2CA,SAAAtM,KAEAhmB,KAAAuyB,UArOAzL,EAAAZ,YAAA,WACAjrB,EAAAm3B,GAAA,SAAAI,GACA,IAAAvjB,EAAA,SAAAvB,GACA,IAEAlE,EAFA7O,EAAAqF,KAAA0oB,WACAhhB,EAAAgG,EAAAmD,OAIA,GAFA,cAAA2hB,EAGAhpB,EAAA,QACO,GAAA9B,GAAA,MAAAA,EAAAS,UAAA,CACP,IAAAsqB,EAAA/qB,EAAA+qB,WAAA93B,EAAAw3B,iBAAAzqB,EAAAxN,aACAsP,EAAAipB,KAAAnb,cAAA5P,EAAAS,UAAAT,EAAAgrB,SAAAhrB,IAAA,QAEAA,KAAAirB,YACAnpB,EAAA7P,EAAAkR,OAAA,GAAmCnD,EAAAirB,YAUnC,GAAAnpB,EAAA,CACA,IAAAM,EAAAN,EAAAM,cACAtP,EAAAgP,EAAAhP,eAMA,aAAAsP,GAAA,cAAAA,GAAA,aAAAA,IACAA,EAAA,SACAtP,EAAAgP,EAAAtP,aAGA,IAAAK,EAAAuP,GAAA,MAAAtP,GAAAG,EAAA2qB,aAAAxb,EAAAtP,GACAiM,EAAAlM,GAAAyF,KAAA,WAAAzF,EAAAgrB,SAAA,+BAAAhrB,EAAAyvB,UACAxgB,EAAA+lB,MAAA7hB,EACAlE,EAAA5N,KAAA42B,EACAxyB,KAAA+lB,kBAAAwM,UAAA,CACAK,SAAAlrB,EACAmrB,YAAArpB,EACAjP,QACAkM,QAEAzG,KAAA6H,QAAA2qB,EAAAhpB,KASAyF,EAAA6jB,sBAAA,EAEA9yB,KAAAmkB,IAAAlU,GAAAuiB,EAAAvjB,EAAAjP,OACGA,MACH/E,EAAA42B,GAAA,SAAAkB,EAAAC,GACAhzB,KAAAimB,eAAAhW,GAAA+iB,EAAA,SAAAzD,GACAvvB,KAAA6H,QAAAmrB,EAAAzD,IACKvvB,OACFA,OAOH8mB,EAAAmM,WAAA,WACA,OAAAjzB,KAAAyjB,WAOAqD,EAAAxX,MAAA,WACAtP,KAAAyjB,UACAzjB,KAAA0jB,GAIA1jB,KAAAooB,UAAA,CACApU,OAAA,KACG,IAOH8S,EAAA3f,QAAA,WACA,GAAAnH,KAAAyjB,UACAzjB,KAAA0jB,OADA,CAKA1jB,KAAAyjB,WAAA,EACAje,EAAA0tB,aAAAlzB,KAAAkoB,SAAAiL,GAAA,IACA,IAAAv4B,EAAAoF,KAAA8kB,KACAnqB,EAAAqF,KAAAqlB,OACApqB,EAAA+E,KAAA2kB,iBAAA,SAAAoF,GACAA,EAAA5iB,QAAAxM,EAAAC,KAEAK,EAAA+E,KAAAykB,aAAA,SAAAuG,GACAA,EAAA7jB,QAAAxM,EAAAC,KAGAoF,KAAAmkB,IAAAhd,iBAEA4jB,GAAA/qB,KAAA0jB,MAGA/pB,EAAAktB,MAAAjD,EAAA3C,GAmHA+E,GAAAtf,UAAA,CACAiI,YAAAqX,GACAoN,eAAA,SAAAhkB,GACA,IAAAikB,EAAA,GACAC,EAAA,GACAC,EAAA,GAEA,GAAA55B,EAAAoiB,SAAA3M,GAAA,CACA,IAAAokB,EAAA3pB,EAAAuF,GAEAikB,EAAA9N,SAAAiO,EAAAxpB,MAAA,KACAqpB,EAAAhnB,QAAAmnB,EAAAvpB,KAAA,SAEA,CAGA,IAAAwpB,EAAA,sBACAC,EAAA,CACAlwB,KAAA,EACA2E,UAAA,EACAuqB,SAAA,GAEA/4B,EAAAsB,KAAAmU,EAAA,SAAAoP,EAAAxB,GAGA,IAFA,IAAA2W,GAAA,EAEA3rB,EAAA,EAAyBA,EAAAyrB,EAAAnjB,OAAqBtI,IAAA,CAC9C,IAAA4rB,EAAAH,EAAAzrB,GACA6rB,EAAA7W,EAAA8W,YAAAF,GAEA,GAAAC,EAAA,GAAAA,IAAA7W,EAAA1M,OAAAsjB,EAAAtjB,OAAA,CACA,IAAAiV,EAAAvI,EAAA9X,MAAA,EAAA2uB,GAEA,SAAAtO,IACA8N,EAAA9N,WACA8N,EAAAO,EAAA5uB,eAAAwZ,EACAmV,GAAA,IAKAD,EAAA1X,eAAAgB,KACAsW,EAAAtW,GAAAwB,EACAmV,GAAA,GAGAA,IACAJ,EAAAvW,GAAAwB,KAKA,OACA6U,WACAC,YACAC,eAGA71B,OAAA,SAAAs1B,EAAA5jB,EAAA/E,GAEA,IAAAkoB,EAAAvyB,KAAAuyB,UAEA,IAAAA,EACA,SAGA,IAAAK,EAAAL,EAAAK,SACAC,EAAAN,EAAAM,YACAt4B,EAAAg4B,EAAAh4B,MACAkM,EAAA8rB,EAAA9rB,KAEA,IAAAlM,IAAAkM,EACA,SAGA,IAAA4sB,EAAAjkB,EAAAikB,SACAC,EAAAlkB,EAAAkkB,UACA,OAAAS,EAAAV,EAAA94B,EAAA,aAAAw5B,EAAAV,EAAA94B,EAAA,YAAAw5B,EAAAV,EAAA94B,EAAA,2BAAAw5B,EAAAV,EAAA94B,EAAA,SAAAw5B,EAAAV,EAAA94B,EAAA,OAAAw5B,EAAAT,EAAAT,EAAA,SAAAkB,EAAAT,EAAAT,EAAA,cAAAkB,EAAAT,EAAAT,EAAA,eAAApsB,EAAAc,uBAAAd,EAAAc,sBAAAyrB,EAAA5jB,EAAAmkB,WAAAX,EAAAC,IAEA,SAAAkB,EAAA3kB,EAAA4kB,EAAAC,EAAAC,GACA,aAAA9kB,EAAA6kB,IAAAD,EAAAE,GAAAD,KAAA7kB,EAAA6kB,KAGAE,aAAA,WAEAn0B,KAAAuyB,UAAA,OAQA,IAAA3D,GAAA,GAMAiD,GAAA,GAOAhM,GAAA,GAMA2C,GAAA,GAMA2I,GAAA,GAMAvL,GAAA,GAMA5B,GAAA,GAKA2N,GAAA,GACA5G,GAAA,GACAN,GAAA,GACA2J,GAAA,IAAAviB,KAAA,EACAwiB,GAAA,IAAAxiB,KAAA,EACAshB,GAAA,qBAkGA,SAAAmB,GAAAhK,GACAG,GAAAH,IAAA,EAOA,IAAAiK,GAAAD,GAwBA,SAAAE,GAAA3Q,GACA,OAAAkH,GAAAvlB,EAAAivB,aAAA5Q,EAAAsP,KAgBA,SAAAuB,GAAAlxB,EAAAsgB,GACAE,GAAAxgB,GAAAsgB,EAQA,SAAA6Q,GAAAC,GACApM,GAAA9b,KAAAkoB,GAQA,SAAAC,GAAAC,EAAAC,GACAC,GAAAnP,GAAAiP,EAAAC,EAAA7S,GA6BA,SAAA+S,GAAApG,EAAArL,EAAAjT,GACA,oBAAAiT,IACAjT,EAAAiT,EACAA,EAAA,IAGA,IAAAuP,EAAA9a,EAAA4W,KAAAjzB,KAAA,CAAAizB,IAAA,CACAU,MAAA/L,IACG,GAEHqL,EAAAU,OAAAV,EAAAU,OAAAwD,GAAA/tB,cACAwe,EAAAqL,EAAAU,MAEAzjB,EAAAsX,EAAArX,KAAAgnB,IAAA3P,EAAArX,KAAAyX,IAEAoL,GAAAmE,KACAnE,GAAAmE,GAAA,CACAxiB,SACAse,eAIAgD,GAAArO,GAAAuP,EA4CA,SAAAmC,GAAAJ,EAAAK,GACAH,GAAApP,GAAAkP,EAAAK,EAAA/S,EAAA,UAOA,SAAA4S,GAAAI,EAAAN,EAAA5jB,EAAAmkB,EAAA/c,IACAlK,EAAA0mB,IAAA7c,EAAA6c,MACA5jB,EAAA4jB,EACAA,EAAAO,GAGA,IAAAC,EAAAxT,EAAAyT,iBAAArkB,EAAAoH,GAIA,OAHAgd,EAAA3P,OAAAmP,EACAQ,EAAAE,MAAAtkB,EACAkkB,EAAA1oB,KAAA4oB,GACAA,EAOA,SAAAG,GAAAjyB,EAAAkyB,GACA/D,GAAAnuB,GAAAkyB,EAuIAR,GA/nEA,IA+nEAtT,GACA+S,GAAArT,GACAuT,GAroEA,IAqoEAtT,GACAkU,GAAA,UAAA5T,GAEAoT,GAAA,CACAr5B,KAAA,YACA2zB,MAAA,YACA/H,OAAA,aACC7tB,EAAAgjB,MACDsY,GAAA,CACAr5B,KAAA,WACA2zB,MAAA,WACA/H,OAAA,YACC7tB,EAAAgjB,MAED+X,GAAA,QAAA3S,GACA2S,GAAA,OAAA1S,GAIA9hB,EAAAy1B,QA/pEA,QAgqEAz1B,EAAA01B,aA/pEA,CACA/U,QAAA,SA+pEA3gB,EAAAmiB,WACAniB,EAAAyG,KAzYA,SAAAkd,EAAAC,EAAAC,GACA,IAAA8R,EAAArB,GAAA3Q,GAEA,GAAAgS,EACA,OAAAA,EAGA,IAAA7K,EAAA,IAAApH,EAAAC,EAAAC,EAAAC,GAKA,OAJAiH,EAAAtH,GAAA,MAAA0Q,KACArJ,GAAAC,EAAAtH,IAAAsH,EACAxlB,EAAA0tB,aAAArP,EAAAsP,GAAAnI,EAAAtH,IA7DA,SAAAsH,GACA,IAGA8K,EAAA,wBAEA,SAAAC,EAAAC,EAAAC,GACA,QAAAjuB,EAAA,EAAmBA,EAAAguB,EAAA1lB,OAAmBtI,IACtCguB,EAAAhuB,GACA8tB,GAAAG,EAIAh7B,EAAA42B,GAAA,SAAAkB,EAAAC,GACAhI,EAAA/E,eAAAhW,GAAA+iB,EAAA,SAAAzD,GACA,GAAA9E,GAAAO,EAAAhlB,QAdA,IAcAglB,EAAA8K,GAAA,CACA,GAAAvG,KAAAb,cACA,OAGA,IAAAne,EAAAya,EAAA4G,oBAAArC,GACA2G,EAAA,GACAj7B,EAAA8vB,GAAA,SAAAoL,GACAA,IAAAnL,GAAAmL,EAAAnwB,QAAAglB,EAAAhlB,OACAkwB,EAAAxpB,KAAAypB,KAGAJ,EAAAG,EA1BA,GA2BAj7B,EAAAi7B,EAAA,SAAAC,GA1BA,IA2BAA,EAAAL,IACAK,EAAArE,eAAAvhB,KAGAwlB,EAAAG,EA9BA,QA2DAE,CAAApL,GACAA,GA8XA9qB,EAAAm2B,QAvXA,SAAA/L,GAEA,GAAA3wB,EAAA0U,QAAAic,GAAA,CACA,IAAA0L,EAAA1L,EACAA,EAAA,KAEArvB,EAAA+6B,EAAA,SAAAhL,GACA,MAAAA,EAAAhlB,QACAskB,EAAAU,EAAAhlB,SAGAskB,KAAA,KAAA+J,KACAp5B,EAAA+6B,EAAA,SAAAhL,GACAA,EAAAhlB,MAAAskB,IAKA,OADAG,GAAAH,IAAA,EACAA,GAsWApqB,EAAAo0B,cACAp0B,EAAAq0B,cACAr0B,EAAAiH,QAlVA,SAAA6jB,GACA,kBAAAA,EACAA,EAAAD,GAAAC,GACGA,aAAApH,IAEHoH,EAAAwJ,GAAAxJ,IAGAA,aAAApH,IAAAoH,EAAAiI,cACAjI,EAAA7jB,WA0UAjH,EAAAs0B,oBACAt0B,EAAAo2B,gBAzTA,SAAAtZ,GACA,OAAA+N,GAAA/N,IAyTA9c,EAAAw0B,iBACAx0B,EAAAy0B,wBACAz0B,EAAA20B,qBACA30B,EAAAq2B,mBA1RA,SAAAC,GACArF,GAAAzkB,KAAA8pB,IA0RAt2B,EAAA+0B,kBACA/0B,EAAAu2B,yBAzOA,SAAA76B,EAAA86B,GACAtV,EAAAxS,SAAAhT,EAAA86B,IAyOAx2B,EAAAy2B,8BAhOA,SAAA/6B,GACA,IAAAg7B,EAAAxV,EAAAnnB,IAAA2B,GAEA,GAAAg7B,EACA,OAAAA,EAAAC,kBAAAD,EAAAC,oBAAAD,EAAAE,WAAA5xB,SA6NAhF,EAAA62B,eAhNA,SAAAjC,EAAAkC,GACAhC,GAAApP,GAAAkP,EAAAkC,EAAA7U,EAAA,WAgNAjiB,EAAAg1B,kBACAh1B,EAAAu1B,mBACAv1B,EAAA+2B,qBAxKA,SAAAlT,GAQA,OAAAvC,EAAA3W,OAAAkZ,IAiKA7jB,EAAAg3B,oBAzJA,SAAAnT,GAQA,OAAArC,EAAA7W,OAAAkZ,IAkJA7jB,EAAAi3B,kBA1IA,SAAApT,GASA,OAAAtC,EAAA5W,OAAAkZ,IAkIA7jB,EAAAk3B,gBA1HA,SAAArT,GASA,OAAApC,EAAA9W,OAAAkZ,IAkHA7jB,EAAAm3B,iBA9FA,SAAAC,GACA39B,EAAA49B,UAAA,eAAAD,IA8FAp3B,EAAAs3B,YAhEA,SAAAC,EAAAC,EAAAC,GACA1V,EAAAuV,YAAAC,EAAAC,EAAAC,IAgEAz3B,EAAA03B,OAxDA,SAAAH,GAEA,IAAAI,EAAA5V,EAAA6V,YAAAL,GACA,OAAAI,KAAA,KACAH,QAAAG,EAAA,GAAAE,QACAJ,aAAAE,EAAA,GAAAF,eAoDAz3B,EAAA83B,SA5BA,GA8BA,IAAAC,GAAmBr+B,EAAQ,MAE3B,WACA,QAAAojB,KAAAib,GACAA,GAAAjc,eAAAgB,KACA9c,EAAA8c,GAAAib,GAAAjb,IAHA,wBClxEA,IAEApI,EAFYhb,EAAQ,GAEpBgb,IAEAjP,EAA0B/L,EAAQ,KAIlCE,EAFuBF,EAAQ,KAE/BE,mBAyFAmG,EAAAC,QAnEA,SAAAxF,GACA,OACAA,aACA0L,KAAAT,IACAW,MAAA,SAAAtM,GACA,IAAAmB,EAAAnB,EAAAoB,UACA+rB,EAAAntB,EAAAqB,iBAEA68B,EADAl+B,EAAA4O,gBACAuvB,MAEA,GAAAhR,EAAA,CAIA,IAAAiR,EAAAxjB,EAAAuS,EAAA2P,WAAA,SAAAx8B,GACA,OAAAa,EAAAqD,aAAAlE,KACO4K,MAAA,KACPmzB,EAAAD,EAAA9nB,OACAgoB,EAAAn9B,EAAAo9B,mBAAA,wBA0CA,OAxCAz+B,EAAAqB,EAAAi9B,EAAA,MAGAA,EAAA,GAAAE,GAGAx+B,EAAAqB,EAAAi9B,EAAA,MAGAA,EAAA,GAAAE,GA+BAD,GAAA,CACA9uB,SA7BA,SAAAC,EAAArO,GAIA,IAHA,IAAAq9B,EAAAhvB,EAAAyM,IAAAzM,EAAAivB,MACAC,EAAAR,GAAA,IAAAS,aAAAH,EAAAH,GAEArwB,EAAAwB,EAAAivB,MAAAj7B,EAAA,EAAAo7B,EAAA,GAAAC,EAAA,GAAuE7wB,EAAAwB,EAAAyM,IAAgBjO,IAAA,CACvF,IAAA8wB,EAEA,OAAAT,EAAA,CACA,IAAAn3B,EAAA/F,EAAAlB,IAAAm+B,EAAA,GAAApwB,GACA8wB,GAAAC,MAAA73B,IAAAimB,EAAA6R,YAAA93B,EAAA,KAAA23B,OACW,CACX33B,EAAA03B,EAAA,GAAAz9B,EAAAlB,IAAAm+B,EAAA,GAAApwB,GAAA,IACA7G,EAAAy3B,EAAA,GAAAz9B,EAAAlB,IAAAm+B,EAAA,GAAApwB,GAEA8wB,GAAAC,MAAA73B,KAAA63B,MAAA53B,IAAAgmB,EAAA6R,YAAAJ,EAAA,KAAAC,GAGAX,GACAQ,EAAAl7B,KAAAs7B,IAAA,GAAAG,IACAP,EAAAl7B,KAAAs7B,IAAA,GAAAG,KAEA99B,EAAA2E,cAAAkI,EAAA8wB,KAAA5zB,SAAA,CAAA+zB,UAIAf,GAAA/8B,EAAA+9B,UAAA,eAAAR,4BCjCA,IAAAj+B,EA5BA,SAAA0+B,EAAAC,GACAp5B,KAAAq5B,YAAA,WACA,IAAAC,EAAAF,IAGA,OAAAE,EAAAC,SAAAD,EAAAE,UAGAx5B,KAAAy5B,YAAA,SAAAj2B,GAEA,OADA41B,IACAM,YAAAl2B,IAAA,GAGAxD,KAAA05B,YAAA,SAAAl2B,GAKA,OADA21B,IACAO,YAAAl2B,IAGAxD,KAAA2sB,cAAA,SAAAxkB,EAAA6U,GAGA,OADAmc,IACAxM,cAAAxkB,EAAA6U,KAKA/c,EAAAC,QAAAzF,qBCRAwF,EAAAC,QA5BA,SAAAxF,GACA,OACAA,aACA4L,MAAA,SAAAtM,EAAAW,GACA,IAAAg/B,EAAAh/B,EAAAi/B,eAAA,CACArU,SAAA,WAGA,GAAAoU,KAAArpB,OAAA,CAIA,IAAAnV,EAAAnB,EAAAoB,UACAD,EAAA0+B,WAAA,SAAA3+B,GAGA,IAFA,IAAAsI,EAAArI,EAAAq+B,QAAAt+B,GAEA8M,EAAA,EAAuBA,EAAA2xB,EAAArpB,OAAyBtI,IAChD,IAAA2xB,EAAA3xB,GAAA8xB,WAAAt2B,GACA,SAIA,oCCzCA,IAAA6B,EAAYzL,EAAQ,KAEpB0L,EAAoB1L,EAAQ,KAE5B2L,EAAgB3L,EAAQ,KAqBxBmgC,EAAA,WAKA/5B,KAAAgG,MAAA,IAAAX,EAMArF,KAAAiG,IAAAX,EAAAY,OAAA,kBAkBA8zB,EAfAD,EAAArzB,UAAA,CACAiI,YAAAorB,EACApzB,KAAA,SAAAhM,EAAAC,KACAgM,OAAA,SAAAimB,EAAAlyB,EAAAC,EAAAiM,KACAM,QAAA,aASAI,sBAAA,MAIAyyB,EAAAhxB,WAAAgxB,EAAA/wB,aAAA+wB,EAAA9wB,aAAA,SAAAlP,EAAAW,EAAAC,EAAAiM,KAIAtB,EAAA4D,kBAAA4wB,GAEAx0B,EAAA6D,sBAAA2wB,EAAA,CACA1wB,oBAAA,IAEA,IAAA5O,EAAAs/B,EACA95B,EAAAC,QAAAzF,uBClEA,IAAA8K,EAAgB3L,EAAQ,KA8BxB,SAAAqgC,EAAAC,GACAl6B,KAAAm6B,SAAAD,GAAA,GAOAl6B,KAAAo6B,QAAA,CAAAhc,UAOApe,KAAAq6B,UAAA,EACAr6B,KAAA2G,MAAA3G,KAAA2G,KAAA6D,MAAAxK,KAAAsK,WASA2vB,EAAAvzB,UAAA+V,MAAA,SAAA+B,GAKA,OAAAA,GAGAyb,EAAAvzB,UAAA4zB,WAAA,SAAA92B,GACA,OAAAxD,KAAAm6B,SAAA32B,IAGAy2B,EAAAvzB,UAAA6zB,QAAA,SAAA/b,GACA,IAAAgc,EAAAx6B,KAAAo6B,QACA,OAAA5b,GAAAgc,EAAA,IAAAhc,GAAAgc,EAAA,IASAP,EAAAvzB,UAAA+zB,UAAA,SAAAjc,GACA,IAAAgc,EAAAx6B,KAAAo6B,QAEA,OAAAI,EAAA,KAAAA,EAAA,GACA,IAGAhc,EAAAgc,EAAA,KAAAA,EAAA,GAAAA,EAAA,KASAP,EAAAvzB,UAAAg0B,MAAA,SAAAlc,GACA,IAAAgc,EAAAx6B,KAAAo6B,QACA,OAAA5b,GAAAgc,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAQAP,EAAAvzB,UAAAi0B,YAAA,SAAAC,GACA,IAAAJ,EAAAx6B,KAAAo6B,QACAQ,EAAA,GAAAJ,EAAA,KAAAA,EAAA,GAAAI,EAAA,IACAA,EAAA,GAAAJ,EAAA,KAAAA,EAAA,GAAAI,EAAA,KAUAX,EAAAvzB,UAAAm0B,oBAAA,SAAA1/B,EAAAb,GACA0F,KAAA26B,YAAAx/B,EAAA2/B,qBAAAxgC,KAQA2/B,EAAAvzB,UAAAhL,UAAA,WACA,OAAAsE,KAAAo6B,QAAAl1B,SASA+0B,EAAAvzB,UAAAq0B,UAAA,SAAAtC,EAAAxiB,GACA,IAAA+kB,EAAAh7B,KAAAo6B,QAEArB,MAAAN,KACAuC,EAAA,GAAAvC,GAGAM,MAAA9iB,KACA+kB,EAAA,GAAA/kB,IASAgkB,EAAAvzB,UAAAu0B,QAAA,WACA,OAAAj7B,KAAAk7B,UAMAjB,EAAAvzB,UAAAy0B,SAAA,SAAAF,GACAj7B,KAAAk7B,SAAAD,GAQAhB,EAAAvzB,UAAA00B,SAAA,KACA71B,EAAA4D,kBAAA8wB,GACA10B,EAAA6D,sBAAA6wB,EAAA,CACA5wB,oBAAA,IAEA,IAAA5O,EAAAw/B,EACAh6B,EAAAC,QAAAzF,uBC/KA,IAAA4gC,EAAiBzhC,EAAQ,IAEzB0hC,EAAiB1hC,EAAQ,IAEzBqgC,EAAYrgC,EAAQ,KAEpB2hC,EAAa3hC,EAAQ,KA0BrB4hC,EAAAH,EAAAjf,MAMAqf,EAAAxB,EAAApvB,OAAA,CACAjP,KAAA,WACAy+B,UAAA,EACAqB,mBAAA,EACAX,UAAA,SAAAtC,EAAAxiB,GACA,IAAA+kB,EAAAh7B,KAAAo6B,QAEArB,MAAAN,KACAuC,EAAA,GAAAW,WAAAlD,IAGAM,MAAA9iB,KACA+kB,EAAA,GAAAW,WAAA1lB,KAGA0kB,YAAA,SAAAC,GACA,IAAAJ,EAAAx6B,KAAAo6B,QACAQ,EAAA,GAAAJ,EAAA,KAAAA,EAAA,GAAAI,EAAA,IACAA,EAAA,GAAAJ,EAAA,KAAAA,EAAA,GAAAI,EAAA,IAEAa,EAAA/0B,UAAAq0B,UAAA/tB,KAAAhN,KAAAw6B,EAAA,GAAAA,EAAA,KAMAoB,YAAA,WACA,OAAA57B,KAAAq6B,WAMAwB,YAAA,SAAAtd,GACAve,KAAAq6B,UAAA9b,EAGAve,KAAA87B,YAAA97B,KAAAo6B,QAAAl1B,QACAlF,KAAA07B,mBAAAH,EAAAQ,qBAAAxd,IAOAyd,SAAA,SAAAC,GACA,IAAA1d,EAAAve,KAAAq6B,UACAG,EAAAx6B,KAAAo6B,QACA8B,EAAAl8B,KAAA87B,YACAK,EAAAn8B,KAAA07B,mBACAU,EAAA,GAEA,IAAA7d,EACA,OAAA6d,EAMA5B,EAAA,GAAA0B,EAAA,KACAD,EACAG,EAAA1vB,KAAA8uB,EAAAU,EAAA,GAAA3d,EAAA4d,IAEAC,EAAA1vB,KAAA8tB,EAAA,KAMA,IAFA,IAAA6B,EAAAH,EAAA,GAEAG,GAAAH,EAAA,KACAE,EAAA1vB,KAAA2vB,IAEAA,EAAAb,EAAAa,EAAA9d,EAAA4d,MAEAC,IAAA9rB,OAAA,KAMA,GAAA8rB,EAAA9rB,OAvBA,IAwBA,SAMA,IAAAgsB,EAAAF,EAAA9rB,OAAA8rB,IAAA9rB,OAAA,GAAA4rB,EAAA,GAUA,OARA1B,EAAA,GAAA8B,IACAL,EACAG,EAAA1vB,KAAA8uB,EAAAc,EAAA/d,EAAA4d,IAEAC,EAAA1vB,KAAA8tB,EAAA,KAIA4B,GAOAG,cAAA,SAAAC,GAKA,IAJA,IAAAJ,EAAAp8B,KAAAg8B,UAAA,GACAS,EAAA,GACAjC,EAAAx6B,KAAAtE,YAEAsM,EAAA,EAAmBA,EAAAo0B,EAAA9rB,OAAkBtI,IAAA,CAQrC,IAPA,IAAA00B,EAAAN,EAAAp0B,GACA20B,EAAAP,EAAAp0B,EAAA,GACAhM,EAAA,EACA4gC,EAAA,GAEAC,GADAH,EAAAC,GACAH,EAEAxgC,EAAAwgC,EAAA,IACA,IAAAM,EAAAzB,EAAAjf,MAAAugB,GAAA3gC,EAAA,GAAA6gC,GAEAC,EAAAtC,EAAA,IAAAsC,EAAAtC,EAAA,IACAoC,EAAAlwB,KAAAowB,GAGA9gC,IAGAygC,EAAA/vB,KAAAkwB,GAGA,OAAAH,GAUArB,SAAA,SAAAjgC,EAAA42B,GACA,SAAA52B,EACA,SAGA,IAAA4hC,EAAAhL,KAAAgL,UAYA,OAVA,MAAAA,EACAA,EAAA1B,EAAA2B,iBAAA7hC,IAAA,EACK,SAAA4hC,IAELA,EAAA/8B,KAAA07B,oBAKAvgC,EAAAqgC,EAAArgC,EAAA4hC,GAAA,GACAzB,EAAA2B,UAAA9hC,IAUA+hC,UAAA,SAAAV,EAAAW,EAAAC,GACAZ,KAAA,EACA,IAAAhC,EAAAx6B,KAAAo6B,QACAiD,EAAA7C,EAAA,GAAAA,EAAA,GAEA,GAAA8C,SAAAD,GAAA,CAMAA,EAAA,IACAA,KACA7C,EAAA+C,WAGA,IAAAxgC,EAAAw+B,EAAAiC,uBAAAhD,EAAAgC,EAAAW,EAAAC,GACAp9B,KAAA07B,mBAAA3+B,EAAAo/B,kBACAn8B,KAAAq6B,UAAAt9B,EAAAwhB,SACAve,KAAA87B,YAAA/+B,EAAAm/B,iBAYAuB,WAAA,SAAA1L,GACA,IAAAyI,EAAAx6B,KAAAo6B,QAEA,GAAAI,EAAA,KAAAA,EAAA,GACA,OAAAA,EAAA,IAEA,IAAAkD,EAAAlD,EAAA,GAMAzI,EAAA4L,OAIAnD,EAAA,IAAAkD,EAAA,GAHAlD,EAAA,IAAAkD,EAAA,EACAlD,EAAA,IAAAkD,EAAA,QAKAlD,EAAA,KAIA,IAAA6C,EAAA7C,EAAA,GAAAA,EAAA,GAEA8C,SAAAD,KACA7C,EAAA,KACAA,EAAA,MAGAx6B,KAAAk9B,UAAAnL,EAAAyK,YAAAzK,EAAAoL,YAAApL,EAAAqL,aAEA,IAAA7e,EAAAve,KAAAq6B,UAEAtI,EAAA6L,SACApD,EAAA,GAAAgB,EAAA1/B,KAAA+hC,MAAArD,EAAA,GAAAjc,OAGAwT,EAAA4L,SACAnD,EAAA,GAAAgB,EAAA1/B,KAAAgiC,KAAAtD,EAAA,GAAAjc,UAQAkd,EAAAxO,OAAA,WACA,WAAAwO,GAGA,IAAAhhC,EAAAghC,EACAx7B,EAAAC,QAAAzF,uBChSA,IAAAd,EAAaC,EAAQ,GAIrBC,EAFcD,EAAQ,IAEtBC,aAIAC,EAFuBF,EAAQ,KAE/BE,mBAEA6L,EAA0B/L,EAAQ,KAuBlCmkC,EAAA,cAEAC,EAAA,qBAAArF,0BAAAsF,MAEA,SAAAlkC,EAAAC,GACA,OAAAA,EAAAC,IAAA,UAAA8jC,EAAA/jC,EAAAE,YAGA,SAAAC,EAAAE,GACA,OAAAA,EAAAC,IAAAD,EAAA+e,MA8CA,SAAA8kB,EAAAxjC,EAAAC,GACA,IAAAwjC,EAAA,GAOA,OANAxjC,EAAAkD,iBAAAnD,EAAA,SAAAV,GAEAokC,EAAApkC,KAAAqkC,EAAArkC,IACAmkC,EAAAzxB,KAAA1S,KAGAmkC,EA6EA,SAAAG,EAAAvjC,GACA,IAAAwjC,EAlEA,SAAAxjC,GAQA,IAAAyjC,EAAA,GACA7kC,EAAAsB,KAAAF,EAAA,SAAAf,GACA,IACAsB,EADAtB,EAAAqB,iBACAE,cAEA,YAAAD,EAAAM,MAAA,UAAAN,EAAAM,KAQA,IAJA,IAAAT,EAAAnB,EAAAoB,UACA4hB,EAAA1hB,EAAAhB,IAAA,IAAAgB,EAAA8d,MACA9e,EAAAa,EAAAqD,aAAAlD,EAAAhB,KAEA0N,EAAA,EAAAy2B,EAAAtjC,EAAAa,QAAuCgM,EAAAy2B,IAASz2B,EAAA,CAChD,IAAA9I,EAAA/D,EAAAlB,IAAAK,EAAA0N,GAEAw2B,EAAAxhB,GAKAwhB,EAAAxhB,GAAAtQ,KAAAxN,GAHAs/B,EAAAxhB,GAAA,CAAA9d,MAQA,IAAAq/B,EAAA,GAEA,QAAAvhB,KAAAwhB,EACA,GAAAA,EAAAxiB,eAAAgB,GAAA,CACA,IAAA0hB,EAAAF,EAAAxhB,GAEA,GAAA0hB,EAAA,CAEAA,EAAA9gB,KAAA,SAAAtQ,EAAAC,GACA,OAAAD,EAAAC,IAIA,IAFA,IAAAzQ,EAAA,KAEA6hC,EAAA,EAAuBA,EAAAD,EAAApuB,SAAyBquB,EAAA,CAChD,IAAAC,EAAAF,EAAAC,GAAAD,EAAAC,EAAA,GAEAC,EAAA,IAEA9hC,EAAA,OAAAA,EAAA8hC,EAAA9iC,KAAAgB,MAAA8hC,IAKAL,EAAAvhB,GAAAlgB,GAKA,OAAAyhC,EAIAM,CAAA9jC,GACA+jC,EAAA,GAuCA,OAtCAnlC,EAAAsB,KAAAF,EAAA,SAAAf,GACA,IAGA2B,EAFAL,EADAtB,EAAAqB,iBACAE,cACAE,EAAAH,EAAAI,YAGA,gBAAAJ,EAAAM,KACAD,EAAAL,EAAAO,oBACK,aAAAP,EAAAM,MAAA,SAAAN,EAAAM,KAAA,CACL,IAAAohB,EAAA1hB,EAAAhB,IAAA,IAAAgB,EAAA8d,MACA2lB,EAAAR,EAAAvhB,GACAgiB,EAAAljC,KAAAC,IAAAN,EAAA,GAAAA,EAAA,IACAi/B,EAAAp/B,EAAAo/B,MAAAh/B,YACAujC,EAAAnjC,KAAAC,IAAA2+B,EAAA,GAAAA,EAAA,IACA/+B,EAAAojC,EAAAC,EAAAC,EAAAF,EAAAC,MACK,CACL,IAAA7jC,EAAAnB,EAAAoB,UACAO,EAAAG,KAAAC,IAAAN,EAAA,GAAAA,EAAA,IAAAN,EAAAa,QAGA,IAAAU,EAAA7C,EAAAG,EAAAC,IAAA,YAAA0B,GACAgB,EAAA9C,EAAAG,EAAAC,IAAA,eAAA0B,GACAujC,EAAArlC,EAEAG,EAAAC,IAAA,kBAAA0B,GACAiB,EAAA5C,EAAAC,IAAA,UACA4C,EAAA7C,EAAAC,IAAA,kBACA6kC,EAAApyB,KAAA,CACA/Q,YACAe,WACAC,cACAuiC,cACAtiC,SACAC,iBACArB,QAAArB,EAAAmB,GACAiB,QAAAxC,EAAAC,OAGAmlC,EAAAL,GAGA,SAAAK,EAAAL,GAEA,IAAA9jC,EAAA,GACArB,EAAAsB,KAAA6jC,EAAA,SAAAM,EAAAlkC,GACA,IAAAM,EAAA4jC,EAAA5jC,QACAG,EAAAyjC,EAAAzjC,UACAM,EAAAjB,EAAAQ,IAAA,CACAG,YACAO,cAAAP,EACAQ,eAAA,EACAC,YAAA,MACAC,IAAA,MACAC,OAAA,IAEAA,EAAAL,EAAAK,OACAtB,EAAAQ,GAAAS,EACA,IAAAM,EAAA6iC,EAAA7iC,QAEAD,EAAAC,IACAN,EAAAE,iBAGAG,EAAAC,GAAAD,EAAAC,IAAA,CACAC,MAAA,EACAC,SAAA,GAMA,IAAAC,EAAA0iC,EAAA1iC,SAEAA,IAAAJ,EAAAC,GAAAC,QAEAF,EAAAC,GAAAC,MAAAE,EACAA,EAAAZ,KAAAgB,IAAAb,EAAAC,cAAAQ,GACAT,EAAAC,eAAAQ,GAGA,IAAAC,EAAAyiC,EAAAziC,YACAA,IAAAL,EAAAC,GAAAE,SAAAE,GACA,IAAAuiC,EAAAE,EAAAF,YACAA,IAAA5iC,EAAAC,GAAA8iC,SAAAH,GACA,IAAAtiC,EAAAwiC,EAAAxiC,OACA,MAAAA,IAAAX,EAAAI,IAAAO,GACA,IAAAC,EAAAuiC,EAAAviC,eACA,MAAAA,IAAAZ,EAAAG,YAAAS,KAEA,IAAAE,EAAA,GAqFA,OApFApD,EAAAsB,KAAAD,EAAA,SAAAiB,EAAAe,GACAD,EAAAC,GAAA,GACA,IAAAV,EAAAL,EAAAK,OACAX,EAAAM,EAAAN,UACAS,EAAAvC,EAAAoC,EAAAG,YAAAT,GACAsB,EAAApD,EAAAoC,EAAAI,IAAA,GACAH,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,eACAe,GAAAhB,EAAAE,IAAAD,KAAA,GAAAc,GACAC,EAAApB,KAAAqB,IAAAD,EAAA,GAEAvD,EAAAsB,KAAAqB,EAAA,SAAAc,GACA,IAAAX,EAAAW,EAAAX,SACA4iC,EAAAjiC,EAAAiiC,SAEA,GAAAjiC,EAAAZ,MAqBO,CAIP8iC,EAAAliC,EAAAZ,MAEAC,IACA6iC,EAAAxjC,KAAAgB,IAAAwiC,EAAA7iC,IAIA4iC,IACAC,EAAAxjC,KAAAqB,IAAAmiC,EAAAD,IAGAjiC,EAAAZ,MAAA8iC,EACApjC,GAAAojC,EAAAriC,EAAAqiC,EACAnjC,QAtCA,CACA,IAAAmjC,EAAApiC,EAEAT,KAAA6iC,IACAA,EAAAxjC,KAAAgB,IAAAL,EAAAP,IAQAmjC,KAAAC,IACAA,EAAAD,GAGAC,IAAApiC,IACAE,EAAAZ,MAAA8iC,EACApjC,GAAAojC,EAAAriC,EAAAqiC,EACAnjC,QAuBAe,GAAAhB,EAAAE,IAAAD,KAAA,GAAAc,GACAC,EAAApB,KAAAqB,IAAAD,EAAA,GACA,IACAI,EADAC,EAAA,EAEA5D,EAAAsB,KAAAqB,EAAA,SAAAc,EAAAlC,GACAkC,EAAAZ,QACAY,EAAAZ,MAAAU,GAGAI,EAAAF,EACAG,GAAAH,EAAAZ,OAAA,EAAAS,KAGAK,IACAC,GAAAD,EAAAd,MAAAS,GAGA,IAAAO,GAAAD,EAAA,EACA5D,EAAAsB,KAAAqB,EAAA,SAAAc,EAAAb,GACAQ,EAAAC,GAAAT,GAAAQ,EAAAC,GAAAT,IAAA,CACAZ,YACA6B,SACAhB,MAAAY,EAAAZ,OAEAgB,GAAAJ,EAAAZ,OAAA,EAAAS,OAGAF,EAUA,SAAAwiC,EAAAzkC,EAAAT,EAAAL,GACA,GAAAc,GAAAT,EAAA,CACA,IAAA0C,EAAAjC,EAAAX,EAAAE,IAMA,OAJA,MAAA0C,GAAA,MAAA/C,IACA+C,IAAAhD,EAAAC,KAGA+C,GA+GA,IAAAyiC,EAAA,CACA9kC,WAAA,MACA0L,KAAAT,IACAW,MAAA,SAAAtM,GACA,GAAAokC,EAAApkC,IAAAqkC,EAAArkC,GAAA,CAIA,IAAAmB,EAAAnB,EAAAoB,UACAqkC,EAAAzlC,EAAAqB,iBACAqkC,EAAAD,EAAAE,KAAAC,UACAtkC,EAAAmkC,EAAAlkC,cACA0C,EAAAwhC,EAAAvhC,aAAA5C,GACAiD,EAAApD,EAAAqD,aAAAP,EAAA3D,KACAmE,EAAAtD,EAAAqD,aAAAlD,EAAAhB,KACAulC,EAAA5hC,EAAA6hC,eACAC,EAAAF,EAAA,IACAnjC,EAAA6iC,EAAAjB,EAAA,CAAAtkC,IAAAsB,EAAAtB,GAAAwC,MAOA,OALAE,EAhdA,KAkdAA,EAldA,IAqdA,CACA6M,SAGA,SAAAC,EAAArO,GACA,IAIAgN,EAJAnM,EAAAwN,EAAAxN,MACAgkC,EAAA,IAAAhC,EAAA,EAAAhiC,GACAikC,EAAA,IAAAjC,EAAA,EAAAhiC,GACAkkC,EAAA,IAAAlC,EAAAhiC,GAEAmkC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAEA,YAAAn4B,EAAAqB,EAAA+2B,SACAH,EAAAL,GAAA5kC,EAAAlB,IAAAsE,EAAA4J,GACAi4B,EAAA,EAAAL,GAAA5kC,EAAAlB,IAAAwE,EAAA0J,GACAg4B,EAAAV,EAAAzG,YAAAoH,EAAA,KAAAD,GAEAF,EAAAI,GAAAR,EAAAH,EAAAx+B,EAAAw+B,EAAAljC,MAAA2jC,EAAA,GACAH,EAAAK,KAAAF,EAAA,GACAF,EAAAI,GAAAR,EAAAM,EAAA,GAAAT,EAAAv+B,EAAAu+B,EAAAh/B,OACAs/B,EAAAK,KAAAF,EAAA,GACAD,EAAAI,KAAAn4B,EAGAhN,EAAA+9B,UAAA,CACA8G,cACAE,mBACAD,wBACAvjC,WACAkC,eAAA4hC,EAAAllC,EAAA2C,GAAA,GACAwiC,gBAAAZ,EAAAH,EAAAx+B,EAAAw+B,EAAAv+B,EACA0+B,6BAMA,SAAAzB,EAAApkC,GACA,OAAAA,EAAAqB,kBAAA,gBAAArB,EAAAqB,iBAAAO,KAGA,SAAAyiC,EAAArkC,GACA,OAAAA,EAAA4O,iBAAA5O,EAAA4O,gBAAAuvB,MAIA,SAAAqI,EAAAllC,EAAA2C,EAAAS,GACA,OAAAT,EAAAyiC,cAAAziC,EAAA0iC,YAAA,QAAA1iC,EAAArC,KAAA,MAGAsE,EAAA0gC,gBAnfA,SAAA7O,GACA,IAAAvoB,EAAA,GACAlO,EAAAy2B,EAAA13B,KAGA,gBAAAiB,EAAAM,KAAA,CAMA,IAFA,IAAAD,EAAAL,EAAAO,eAEAmM,EAAA,EAAiBA,EAAA+pB,EAAA/1B,MAAoBgM,IACrCwB,EAAAkD,KAAA/S,EAAAu1B,SAAA,CACAvzB,YACAH,QAXA,QAYAe,QAAAwhC,EAAA/1B,GACK+pB,IAGL,IAAA8O,EAAA1B,EAAA31B,GACAzM,EAAA,GAEA,IAAAiL,EAAA,EAAiBA,EAAA+pB,EAAA/1B,MAAegM,IAAA,CAChC,IAAAwU,EAAAqkB,EAAA,MAAA9C,EAAA/1B,GACAwU,EAAAskB,aAAAtkB,EAAAhf,OAAAgf,EAAAhgB,MAAA,EACAO,EAAA2P,KAAA8P,GAGA,OAAAzf,IAwdAmD,EAAAg+B,yBACAh+B,EAAAo+B,mBACAp+B,EAAAq/B,uBACAr/B,EAAA6gC,OAvLA,SAAArmC,EAAAC,GACA,IAAAwjC,EAAAD,EAAAxjC,EAAAC,GACAG,EAAAwjC,EAAAH,GACAtjC,EAAA,GACAmmC,EAAA,GACArnC,EAAAsB,KAAAkjC,EAAA,SAAAnkC,GACA,IAAAmB,EAAAnB,EAAAoB,UACAqkC,EAAAzlC,EAAAqB,iBACAC,EAAAmkC,EAAAlkC,cACAgB,EAAAxC,EAAAC,GACA8D,EAAAhD,EAAAX,EAAAmB,IAAAiB,GACAwB,EAAAD,EAAAN,OACAQ,EAAAF,EAAAtB,MACAyB,EAAAwhC,EAAAvhC,aAAA5C,GACA+C,EAAArE,EAAAC,IAAA,mBACAY,EAAA0B,GAAA1B,EAAA0B,IAAA,GACAykC,EAAAzkC,GAAAykC,EAAAzkC,IAAA,GAEApB,EAAA+9B,UAAA,CACAv9B,UAAAmC,EAAAnC,UACA6B,OAAAO,EACAsF,KAAArF,IAUA,IARA,IAAAO,EAAApD,EAAAqD,aAAAP,EAAA3D,KACAmE,EAAAtD,EAAAqD,aAAAlD,EAAAhB,KACAoE,EAAA5E,EAAAqB,EAAAoD,GAGA0iC,EAAAhjC,EAAA6hC,eACAlhC,EAAA4hC,EAAAllC,EAAA2C,GAEA/C,EAAA,EAAA2D,EAAA1D,EAAAa,QAAyCd,EAAA2D,EAAW3D,IAAA,CACpD,IAqBAgG,EACAC,EACA3E,EACAkE,EAkBAy/B,EA1CAjhC,EAAA/D,EAAAlB,IAAAsE,EAAArD,GACAiE,EAAAhE,EAAAlB,IAAAwE,EAAAvD,GACAkE,EAAAF,GAAA,UACAG,EAAAT,EAGAF,IAEA7D,EAAA0B,GAAA4C,KACAtE,EAAA0B,GAAA4C,GAAA,CACAG,EAAAV,EAEAW,EAAAX,IAMAS,EAAAxE,EAAA0B,GAAA4C,GAAAC,IAQA6hC,GAEA//B,EAAA7B,EACA8B,GAFAg/B,EAAAV,EAAAzG,YAAA,CAAA95B,EAAAC,KAEA,GAAApB,EACAvB,EAAA2jC,EAAA,GAAAvhC,EACA8B,EAAA1C,EAEAlC,KAAAC,IAAAS,GAAA6B,IACA7B,KAAA,QAAA6B,GAIA06B,MAAAv8B,IACAkC,IAAA7D,EAAA0B,GAAA4C,GAAAC,IAAA5C,KAIA0E,GADAi/B,EAAAV,EAAAzG,YAAA,CAAA75B,EAAAD,KACA,GAAAnB,EACAoD,EAAA9B,EACA7C,EAAAwB,EACA0C,EAAAy/B,EAAA,GAAAvhC,EAEA9C,KAAAC,IAAA2E,GAAArC,IAEAqC,MAAA,QAAArC,GAIA06B,MAAAr4B,IACAhC,IAAA7D,EAAA0B,GAAA4C,GAAAC,IAAAsB,IAIAvF,EAAA2E,cAAA5E,EAAA,CACAgG,IACAC,IACA3E,QACAkE,aAGGV,OAsFHE,EAAAs/B,mCCjjBA,IAEA/R,EAFY7zB,EAAQ,GAEpB6zB,cA2EAxtB,EAAAC,QApDA,SAAAxF,GACA,OACAwmC,gBAAA,SAAAvmC,GAEA,IAAAwmC,EAAA,GACAC,EAAA3T,IAKA,OAJA9yB,EAAAkD,iBAAAnD,EAAA,SAAAV,GACAA,EAAAqnC,eAAAF,EACAC,EAAAxT,IAAA5zB,EAAAiM,IAAAjM,KAEAonC,GAEA96B,MAAA,SAAAtM,EAAAW,GACA,IAAA2mC,EAAAtnC,EAAAo/B,aACAmI,EAAA,GACApmC,EAAAnB,EAAAoB,UACAD,EAAAF,KAAA,SAAAC,GACA,IAAAsmC,EAAArmC,EAAAsmC,YAAAvmC,GACAqmC,EAAAC,GAAAtmC,IAEAomC,EAAArmC,KAAA,SAAAumC,GACA,IAIAhqB,EAJAkqB,EAAAH,EAAAC,GAEAG,EAAA,MAAAD,GAAAvmC,EAAAwxB,cAAA+U,EAAA,YACAE,EAAA,MAAAF,GAAAvmC,EAAAwxB,cAAA+U,EAAA,kBAQA,GALAC,GAAAC,IAEApqB,EAAA8pB,EAAA7pB,aAAA+pB,KAGAG,EAAA,CACA,IAAAz9B,EAAAsT,EAAAvd,IAAA,oBAAAD,EAAA6nC,oBAAAP,EAAA9H,QAAAgI,MAAA,GAAAxnC,EAAAqnC,eAAAC,EAAAtlC,SAEA,MAAA0lC,GACAvmC,EAAAoc,cAAAmqB,EAAA,QAAAx9B,GAIA,IAAA09B,EAAA,CACA,IAAAE,EAAAtqB,EAAAvd,IAAA,yBAEA,MAAAynC,GACAvmC,EAAAoc,cAAAmqB,EAAA,cAAAI,8BCrEA,IAAAnoC,EAAaC,EAAQ,GAErBue,EAAoBve,EAAQ,KAyB5BqB,EAAAtB,EAAAsB,KAEA,SAAA8mC,EAAAv2B,GACA,GAAAA,EACA,QAAAhI,KAAAgI,EACA,GAAAA,EAAAwQ,eAAAxY,GACA,SAqLAtD,EAAA8hC,qBAxKA,SAAA5pB,EAAA6pB,EAAAC,GACA,IAAAC,EAAA,GAuBA,OAtBAlnC,EAAAgnC,EAAA,SAAAt6B,GACA,IAAAy6B,EAAAD,EAAAx6B,GAuBA,WACA,IAAA06B,EAAA,aAMA,OAFAA,EAAA37B,UAAA47B,SAAAD,EAAA37B,UACA,IAAA27B,EA7BAE,GACAtnC,EAAAmd,EAAAzQ,GAAA,SAAA66B,EAAAlqB,GACA,GAAAH,EAAA+E,YAAA5E,GAAA,CAIA,IAAAmqB,EAAA,CACA7mC,KAAA0c,EACAgB,OAAAkpB,GAEAN,KAAAO,EAAA96B,GACAy6B,EAAA9pB,GAAA,IAAAH,EAAAsqB,GAGA,YAAAnqB,KACAmqB,EAAA9oC,EAAA6e,MAAAiqB,IACA7mC,KAAA,aACAwmC,EAAAE,SAAAI,kBAAA,IAAAvqB,EAAAsqB,SAIAN,GAiJAjiC,EAAAyiC,oBA9HA,SAAApqB,EAAAqqB,EAAAC,GAKA,IAAAC,EACAnpC,EAAAsB,KAAA4nC,EAAA,SAAA7lB,GACA4lB,EAAA5mB,eAAAgB,IAAA+kB,EAAAa,EAAA5lB,MACA8lB,GAAA,KAGAA,GAAAnpC,EAAAsB,KAAA4nC,EAAA,SAAA7lB,GACA4lB,EAAA5mB,eAAAgB,IAAA+kB,EAAAa,EAAA5lB,IACAzE,EAAAyE,GAAArjB,EAAA6e,MAAAoqB,EAAA5lB,WAEAzE,EAAAyE,MAgHA9c,EAAA2Y,YAjGA,SAAAopB,EAAAE,EAAAhnC,EAAA4nC,EAAAxxB,EAAAyxB,GACA,IAKA76B,EALA86B,EAAA,GAOA,SAAA1W,EAAAvP,GACA,OAAA7hB,EAAAwxB,cAAAxkB,EAAA6U,GAGA,SAAAjG,EAAAiG,EAAA9d,GACA/D,EAAAoc,cAAApP,EAAA6U,EAAA9d,GASA,SAAAgkC,EAAAC,EAAA/pB,GACAjR,EAAA,MAAA66B,EAAAG,EAAA/pB,EACA,IAAAgqB,EAAAjoC,EAAAkoC,eAAAl7B,GAEA,IAAAi7B,IAAA,IAAAA,EAAAE,UAQA,IAJA,IAAAC,EAAAR,EAAA/1B,KAAAuE,EAAA4xB,GACAf,EAAAD,EAAAoB,GACAxmB,EAAAkmB,EAAAM,GAEAv7B,EAAA,EAAAnJ,EAAAke,EAAAzM,OAA6CtI,EAAAnJ,EAASmJ,IAAA,CACtD,IAAApM,EAAAmhB,EAAA/U,GACAo6B,EAAAxmC,IAAAwmC,EAAAxmC,GAAAid,YAAAsqB,EAAA5W,EAAAxV,IAlCApd,EAAAsB,KAAAgnC,EAAA,SAAAt6B,GACA,IAAAoV,EAAA5E,EAAAwF,mBAAAwkB,EAAAx6B,IACAs7B,EAAAt7B,GAAAoV,IAYA,MAAAimB,EACA7nC,EAAAF,KAAAioC,GAEA/nC,EAAAF,KAAA,CAAA+nC,GAAAE,IA+EAhjC,EAAAsjC,uBAjDA,SAAAvB,EAAAE,EAAAY,EAAAzoC,GACA,IAAA2oC,EAAA,GAwCA,OAvCAtpC,EAAAsB,KAAAgnC,EAAA,SAAAt6B,GACA,IAAAoV,EAAA5E,EAAAwF,mBAAAwkB,EAAAx6B,IACAs7B,EAAAt7B,GAAAoV,IAqCA,CACAxT,SAnCA,SAAAC,EAAArO,GAKA,SAAAoxB,EAAAvP,GACA,OAAA7hB,EAAAwxB,cAAAxkB,EAAA6U,GAGA,SAAAjG,EAAAiG,EAAA9d,GACA/D,EAAAoc,cAAApP,EAAA6U,EAAA9d,GAGA,IAAAiJ,EAEA,IAdA,MAAA7N,IACAA,EAAAa,EAAAsoC,aAAAnpC,IAaA,OAAA6N,EAAAqB,EAAA+2B,SAAA,CACA,IAAA6C,EAAAjoC,EAAAkoC,eAAAl7B,GAEA,IAAAi7B,IAAA,IAAAA,EAAAE,UASA,IALA,IAAApkC,EAAA,MAAA5E,EAAAa,EAAAlB,IAAAK,EAAA6N,GAAA,GAAAA,EACAo7B,EAAAR,EAAA7jC,GACAkjC,EAAAD,EAAAoB,GACAxmB,EAAAkmB,EAAAM,GAEAv7B,EAAA,EAAAnJ,EAAAke,EAAAzM,OAA+CtI,EAAAnJ,EAASmJ,IAAA,CACxD,IAAApM,EAAAmhB,EAAA/U,GACAo6B,EAAAxmC,IAAAwmC,EAAAxmC,GAAAid,YAAA3Z,EAAAqtB,EAAAxV,4BC5MA,IAAApd,EAAaC,EAAQ,GAErB8pC,EAAe9pC,EAAQ,KAEvBknB,EAAgBlnB,EAAQ,KAExB+pC,EAAa/pC,EAAQ,IAErBgqC,EAAahqC,EAAQ,IAErBiqC,EAAWjqC,EAAQ,IAEnBkqC,EAAoBlqC,EAAQ,KAE5BmqC,EAAanqC,EAAQ,KAErBsG,EAAA6rB,MAAAgY,EAEA,IAAA1+B,EAAYzL,EAAQ,KAEpBsG,EAAAmF,QAEA,IAAA2+B,EAAWpqC,EAAQ,KAEnBsG,EAAA8jC,OAEA,IAAArhC,EAAa/I,EAAQ,KAErBsG,EAAAyC,SAEA,IAAAshC,EAAarqC,EAAQ,KAErBsG,EAAA+jC,SAEA,IAAAC,EAAWtqC,EAAQ,KAEnBsG,EAAAgkC,OAEA,IAAAC,EAAcvqC,EAAQ,KAEtBsG,EAAAikC,UAEA,IAAAC,EAAexqC,EAAQ,KAEvBsG,EAAAkkC,WAEA,IAAA7hC,EAAW3I,EAAQ,KAEnBsG,EAAAqC,OAEA,IAAAF,EAAWzI,EAAQ,KAEnBsG,EAAAmC,OAEA,IAAAgiC,EAAkBzqC,EAAQ,KAE1BsG,EAAAmkC,cAEA,IAAAC,EAAU1qC,EAAQ,KAElBsG,EAAAokC,MAEA,IAAAC,EAAmB3qC,EAAQ,KAE3BsG,EAAAqkC,eAEA,IAAAC,EAAqB5qC,EAAQ,KAE7BsG,EAAAskC,iBAEA,IAAAC,EAAqB7qC,EAAQ,KAE7BsG,EAAAukC,iBAEA,IAAArkC,EAAmBxG,EAAQ,IAE3BsG,EAAAE,eAEA,IAAAskC,EAA6B9qC,EAAQ,KAErCsG,EAAAwkC,yBAEA,IAAAC,EAA2B/qC,EAAQ,KAqBnC4wB,EAAA1uB,KAAAqB,IACAotB,EAAAzuB,KAAAgB,IACA8nC,EAAA,GACAC,EAAA,EAOAC,EAAA,WACAC,EAAA,SAEAC,EAAA,EACAC,EAAA,GACAC,EAAA,GA6BA,SAAAC,EAAA3hC,EAAA4hC,GACAF,EAAA1hC,GAAA4hC,EA6CA,SAAAjgC,EAAAkgC,EAAAthB,EAAAzhB,EAAAy+B,GACA,IAAAngC,EAAA8iC,EAAA4B,iBAAAD,EAAAthB,GAUA,OARAzhB,IACA,WAAAy+B,IACAz+B,EAAAijC,EAAAjjC,EAAA1B,EAAA4kC,oBAGAC,EAAA7kC,EAAA0B,IAGA1B,EAyCA,SAAA2kC,EAAAjjC,EAAA8oB,GAEA,IAEA1qB,EAFAglC,EAAAta,EAAA5uB,MAAA4uB,EAAA1qB,OACAlE,EAAA8F,EAAA5B,OAAAglC,EAYA,OARAhlC,EADAlE,GAAA8F,EAAA9F,MACA8F,EAAA5B,QAEAlE,EAAA8F,EAAA9F,OACAkpC,EAKA,CACAxkC,EAHAoB,EAAApB,EAAAoB,EAAA9F,MAAA,EAGAA,EAAA,EACA2E,EAHAmB,EAAAnB,EAAAmB,EAAA5B,OAAA,EAGAA,EAAA,EACAlE,QACAkE,UAIA,IAAAilC,EAAAjC,EAAAiC,UAOA,SAAAF,EAAA7kC,EAAA0B,GACA,GAAA1B,EAAAglC,eAAA,CAIA,IACAC,EADAjlC,EAAA4kC,kBACAM,mBAAAxjC,GACA1B,EAAAglC,eAAAC,IAkDA,IAAAE,EAAApB,EAAAoB,iBAEA,SAAAC,EAAAC,GACA,aAAAA,GAAA,SAAAA,EAIA,IAAAC,EAAAvsC,EAAA8zB,gBACA0Y,EAAA,EAkDA,SAAAC,EAAA1+B,GACA,IAAA2+B,EAAA3+B,EAAA4+B,WAEA,GAAAD,IAAA3+B,EAAA6+B,cAAA,CAIA,IAAAriB,EAAAxc,EAAA8+B,KACAvV,EAAAvpB,EAAAupB,eAAA/M,GAAA,WAAAA,EAAA6E,QAAAntB,KAGA,GAFA8L,EAAA6+B,cAAAtV,EAAA,kBAEAvpB,EAAAI,UAAAoc,GAAAxc,EAAAupB,eAAA,CAIA,IAAAwV,EAAA/+B,EACAg/B,EAAAh/B,EAAA9D,MAEAqtB,IAEAyV,GADAD,EAAAviB,EAAAyiB,SAAAj/B,IACA9D,OAGAgjC,GAAAF,GAEAzV,GAtDA,SAAAvpB,GACA,GAAAA,EAAAm/B,gBAAA,CAIAn/B,EAAAm/B,iBAAA,EACA,IAAAC,EAAAp/B,EAAA4+B,WAEA,GAAAQ,EAAA,CAKA,IAAAC,EAAAr/B,EAAAs/B,kBAAA,GACAt/B,EAAAu/B,iBAAAv/B,EAAAw/B,GACA,IAAAC,EAAAz/B,EAAA9D,MAEA,QAAAJ,KAAAsjC,EAEA,MAAAA,EAAAtjC,KACAujC,EAAAvjC,GAAA2jC,EAAA3jC,IAKAujC,EAAAviC,KAAA2iC,EAAA3iC,KACAuiC,EAAAziC,OAAA6iC,EAAA7iC,YAjBAoD,EAAAs/B,kBAAAt/B,EAAAu/B,iBAAA,MA8CAG,CAAAX,GA0BAC,EAAAW,WAAAhB,GACAiB,EAAAZ,EAAAL,EAAA,QACAiB,EAAAZ,EAAAL,EAAA,UACAkB,GAAAb,GAEAzV,IACAvpB,EAAAjD,OAAA,GACAiD,EAAAw/B,IAAArC,KAIA,SAAAyC,EAAAZ,EAAAI,EAAA7S,IACA+R,EAAAc,EAAA7S,KAAA+R,EAAAU,EAAAzS,MACAyS,EAAAzS,GAjHA,SAAA/vB,GACA,qBAAAA,EACA,OAAAA,EAGA,IAAAsjC,EAAAtB,EAAAjsC,IAAAiK,GAWA,OATAsjC,IACAA,EAAA1mB,EAAA2mB,KAAAvjC,GAAA,IAEAiiC,EAAA,MACAD,EAAAtY,IAAA1pB,EAAAsjC,GACArB,MAIAqB,EAiGAE,CAAAhB,EAAAzS,KAIA,SAAA0T,EAAAjgC,GACA,IAAAkgC,EAAAlgC,EAAA6+B,cAEA,GAAAqB,IAIAlgC,EAAA6+B,eAAA,GAEA7+B,EAAAI,SAIA,aAAA8/B,EACAlgC,EAAA8+B,MAAA9+B,EAAA8+B,KAAAqB,YAAAngC,OACG,CACH,IAAA9D,EAAA8D,EAAA9D,MACAkkC,EAAApgC,EAAAs/B,kBAEAc,IACAlB,GAAAhjC,GACA8D,EAAAgpB,SAAAoX,GACAP,GAAA3jC,IAMA,IAAAmkC,EAAArgC,EAAAu/B,iBAEA,MAAAc,GAAArgC,EAAAw/B,GAAAa,IAAAlD,IACAn9B,EAAAw/B,GAAAa,IAKA,SAAAC,EAAAtgC,EAAAugC,EAAAC,GAEA,IAEArgC,EAFAsgC,EAAApD,EACAqD,EAAArD,EAGAr9B,EAAA6+B,gBAAA4B,EAAArD,EAAAj9B,GAAA,GACAogC,EAAAvgC,EAAAwgC,GACAxgC,EAAA6+B,gBAAA6B,EAAAtD,EAAAj9B,GAAA,GACAH,EAAAI,SAAAJ,EAAA8oB,SAAA,SAAA6X,IACAA,EAAAvgC,SAAAmgC,EAAAI,EAAAH,KAEArgC,GAAAH,EAAA4gC,oBAAA5gC,EAAA4gC,mBAAAH,EAAAC,GAoBA,SAAAG,EAAA7gC,EAAA2+B,GAGAA,EAAA3+B,EAAA4+B,YAAA,IAAAD,IAAA3+B,EAAAo/B,YAAAT,GAAA,IACA3+B,EAAAm/B,iBAAA,EAOAn/B,EAAA6+B,gBAKA7+B,EAAAs/B,kBAAA,KAKAW,EAAAjgC,GACA0+B,EAAA1+B,IAIA,SAAA8gC,EAAA96B,IACA+6B,GAAAzoC,KAAA0N,KACA1N,KAAA0oC,eAAAV,EAAAhoC,KAAAomC,GAGA,SAAAuC,EAAAj7B,IACA+6B,GAAAzoC,KAAA0N,KACA1N,KAAA0oC,eAAAV,EAAAhoC,KAAA2nC,GAGA,SAAAiB,EAAAhhC,GACA5H,KAAA0oC,eAAA,IAAA9gC,GAAA,GACAogC,EAAAhoC,KAAAomC,GAGA,SAAAyC,GAAAjhC,KACA5H,KAAA0oC,iBAAA,IAAA9gC,GAAA,MAAAogC,EAAAhoC,KAAA2nC,GAGA,SAAAc,GAAA/gC,EAAAgG,GACA,OAAAhG,EAAAohC,yBAAAp7B,EAAAq7B,UAiFA,SAAAC,GAAAthC,EAAAuhC,GACA,IAAAC,GAAA,IAAAD,EAOA,GAJAvhC,EAAAohC,wBAAAphC,EAAAyhC,sBACAzhC,EAAA4gC,mBAAA5gC,EAAA0hC,kBAGAF,GAAAxhC,EAAA2hC,qBAAA,CACA,IAAA/lB,EAAA4lB,EAAA,WAEAxhC,EAAA4b,GAAA,YAAAklB,GAAAllB,GAAA,WAAAqlB,GAEAjhC,EAAA4b,GAAA,WAAAslB,GAAAtlB,GAAA,SAAAulB,IAEAnhC,EAAAghC,cAAAhhC,EAAAghC,eAAA,EACAhhC,EAAA2hC,sBAAAH,GAoIA,SAAAI,GAAAC,EAAAC,EAAAC,EAAA1X,EAAA2X,GAIA,OAHAC,GAAAJ,EAAAC,EAAAzX,EAAA2X,GACAD,GAAA9vC,EAAAkR,OAAA0+B,EAAAE,GAEAF,EA8DA,SAAAI,GAAAJ,EAAAC,EAAAzX,EAAA2X,GAIA,IAFA3X,KAAA6S,GAEAgF,WAAA,CACA,IAAA9lC,EAEAiuB,EAAA8X,gBACA/lC,EAAAiuB,EAAA8X,gBAAAL,EAAAE,GAKA,aAHA5lC,EAAA0lC,EAAA7xB,WAAA,cAAA+xB,EAAA,kBAGA5lC,EAAA,OAGAylC,EAAAzlC,eACAylC,EAAAO,WAAAN,EAAA7xB,WAAA,UACA,IAAAoyB,EAAAP,EAAA7xB,WAAA,UACA,MAAAoyB,OAAAjuC,KAAAiE,GAAA,KACAwpC,EAAAS,aAAAD,EACAR,EAAAU,aAAAtwC,EAAAuwC,UAAAV,EAAA7xB,WAAA,YAAA+xB,EAAA,QAGA,IAiBAS,EAjBAxvC,EAAA6uC,EAAA7uC,QACAyvC,EAAAzvC,KAAAyd,OAAAmxB,UAeAc,EA4CA,SAAAb,GAEA,IAAAc,EAEA,KAAAd,SAAA7uC,SAAA,CACA,IAAA4vC,GAAAf,EAAApxB,QAAAwsB,GAAA2F,KAEA,GAAAA,EAGA,QAAA/mC,KAFA8mC,KAAA,GAEAC,EACAA,EAAAvuB,eAAAxY,KACA8mC,EAAA9mC,GAAA,GAKAgmC,IAAAgB,YAGA,OAAAF,EAhEAG,CAAAjB,GAGA,GAAAa,EAGA,QAAA7mC,KAFA2mC,EAAA,GAEAE,EACA,GAAAA,EAAAruB,eAAAxY,GAAA,CAEA,IAAAknC,EAAAlB,EAAA9gB,SAAA,QAAAllB,IAMAmnC,GAAAR,EAAA3mC,GAAA,GAA+CknC,EAAAN,EAAArY,EAAA2X,GAY/C,OAPAH,EAAAgB,KAAAJ,EACAQ,GAAApB,EAAAC,EAAAY,EAAArY,EAAA2X,GAAA,GAEA3X,EAAA6Y,YAAA7Y,EAAAwX,YACAxX,EAAAwX,UAAA,IAGAA,EAwCA,SAAAoB,GAAApB,EAAAC,EAAAY,EAAArY,EAAA2X,EAAAmB,GAEAT,GAAAV,GAAAU,GAAAxF,EACA2E,EAAAuB,SAAAC,GAAAvB,EAAA7xB,WAAA,SAAAoa,IAAAqY,EAAAlmC,MACAqlC,EAAAyB,WAAAD,GAAAvB,EAAA7xB,WAAA,mBAAAoa,IAAAqY,EAAAa,gBACA1B,EAAA2B,gBAAAvxC,EAAAuwC,UAAAV,EAAA7xB,WAAA,mBAAAyyB,EAAAe,iBAEAzB,IACAmB,IACAtB,EAAA6B,kBAAArZ,EACAwV,GAAAgC,IAIA,MAAAA,EAAAuB,WACAvB,EAAAuB,SAAA/Y,EAAAsZ,YAOA9B,EAAA+B,UAAA9B,EAAA7xB,WAAA,cAAAyyB,EAAAkB,UACA/B,EAAAgC,WAAA/B,EAAA7xB,WAAA,eAAAyyB,EAAAmB,WACAhC,EAAAiC,SAAAhC,EAAA7xB,WAAA,aAAAyyB,EAAAoB,SACAjC,EAAAkC,WAAAjC,EAAA7xB,WAAA,eAAAyyB,EAAAqB,WACAlC,EAAAmC,UAAAlC,EAAA7xB,WAAA,SACA4xB,EAAAoC,kBAAAnC,EAAA7xB,WAAA,kBAAA6xB,EAAA7xB,WAAA,YACA4xB,EAAAqC,eAAApC,EAAA7xB,WAAA,cACA4xB,EAAAsC,UAAArC,EAAA7xB,WAAA,SACA4xB,EAAAuC,WAAAtC,EAAA7xB,WAAA,UACA4xB,EAAAwC,QAAAvC,EAAA7xB,WAAA,OAEAkzB,GAAA9Y,EAAAia,aACAzC,EAAA0C,oBAAAlB,GAAAvB,EAAA7xB,WAAA,mBAAAoa,GACAwX,EAAA2C,YAAA1C,EAAA7xB,WAAA,WACA4xB,EAAA0B,gBAAAF,GAAAvB,EAAA7xB,WAAA,eAAAoa,GACAwX,EAAA4B,gBAAA3B,EAAA7xB,WAAA,eACA4xB,EAAA4C,iBAAA3C,EAAA7xB,WAAA,gBACA4xB,EAAA6C,mBAAA5C,EAAA7xB,WAAA,eACA4xB,EAAA8C,kBAAA7C,EAAA7xB,WAAA,cACA4xB,EAAA+C,qBAAA9C,EAAA7xB,WAAA,iBACA4xB,EAAAgD,qBAAA/C,EAAA7xB,WAAA,kBAGA4xB,EAAAiD,gBAAAhD,EAAA7xB,WAAA,oBAAAyyB,EAAAoC,gBACAjD,EAAAkD,eAAAjD,EAAA7xB,WAAA,mBAAAyyB,EAAAqC,eACAlD,EAAAmD,kBAAAlD,EAAA7xB,WAAA,sBAAAyyB,EAAAsC,kBACAnD,EAAAoD,kBAAAnD,EAAA7xB,WAAA,sBAAAyyB,EAAAuC,kBAGA,SAAA5B,GAAA7mC,EAAA6tB,GACA,eAAA7tB,IAAA6tB,KAAAsZ,UAAAtZ,EAAAsZ,UAAA,KAqBA,SAAA9D,GAAAgC,GACA,IAEAqD,EAFA9oC,EAAAylC,EAAAzlC,aACAiuB,EAAAwX,EAAA6B,kBAGA,GAAArZ,GAAA,MAAAwX,EAAAuB,SAAA,CACA,IAAAO,EAAAtZ,EAAAsZ,UACAzB,EAAA7X,EAAA6X,WACAiD,EAAA9a,EAAA8a,eACAC,GAAA,IAAAD,KAAA,IAAAA,GAAAjD,GAAA9lC,GACA,kBAAAA,KAAAgB,QAAA,cACAioC,GAAAD,GAAA,MAAAzB,GAEAyB,GAAAC,KACAH,EAAA,CACA9B,SAAAvB,EAAAuB,SACAE,WAAAzB,EAAAyB,WACAE,gBAAA3B,EAAA2B,kBAIA4B,IACAvD,EAAAuB,SAAA,OAEA,MAAAvB,EAAAyB,aACAzB,EAAAyB,WAAAK,EACA,MAAA9B,EAAA2B,kBAAA3B,EAAA2B,gBAAA,KAIA6B,IACAxD,EAAAuB,SAAAO,GAKA9B,EAAAqD,iBAcA,SAAAhG,GAAAhjC,GACA,IAAAgpC,EAAAhpC,EAAAgpC,eAEAA,IAEAhpC,EAAAknC,SAAA8B,EAAA9B,SACAlnC,EAAAonC,WAAA4B,EAAA5B,WACApnC,EAAAsnC,gBAAA0B,EAAA1B,gBACAtnC,EAAAgpC,eAAA,MAUA,SAAAI,GAAAC,EAAAvlC,EAAAwlC,EAAAC,EAAAhlC,EAAA4J,GAWA,GAVA,oBAAA5J,IACA4J,EAAA5J,EACAA,EAAA,MAMAglC,KAAAC,qBAEA,CACA,IAAAC,EAAAJ,EAAA,YACAK,EAAAH,EAAAx1B,WAAA,oBAAA01B,GACAE,EAAAJ,EAAAx1B,WAAA,kBAAA01B,GACAG,EAAAL,EAAAx1B,WAAA,iBAAA01B,GAEA,oBAAAG,IACAA,IAAArlC,EAAAglC,EAAAM,wBAAAN,EAAAM,wBAAA/lC,EAAAS,GAAA,OAGA,oBAAAmlC,IACAA,IAAAnlC,IAGAmlC,EAAA,EAAA5lC,EAAAgmC,UAAAR,EAAAI,EAAAE,GAAA,EAAAD,EAAAx7B,QAAArK,EAAA+hB,gBAAA/hB,EAAAimC,KAAAT,GAAAn7B,aAEArK,EAAA+hB,gBACA/hB,EAAAimC,KAAAT,GACAn7B,OA2BA,SAAA67B,GAAAlmC,EAAAwlC,EAAAC,EAAAhlC,EAAA4J,GACAi7B,IAAA,EAAAtlC,EAAAwlC,EAAAC,EAAAhlC,EAAA4J,GAmDA,SAAA6zB,GAAA/0B,EAAAg9B,EAAAC,GASA,OARAD,IAAAl0C,EAAAo0C,YAAAF,KACAA,EAAA/J,EAAAkK,kBAAAH,IAGAC,IACAD,EAAAlK,EAAAmK,OAAA,GAAAD,IAGAjK,EAAAgC,eAAA,GAAA/0B,EAAAg9B,GAuLA,SAAAI,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAyCAjwB,EAzCAkwB,EAAAN,EAAAF,EACAS,EAAAN,EAAAF,EACAS,EAAAJ,EAAAF,EACAO,EAAAJ,EAAAF,EAGAO,EAAAC,GAAAH,EAAAC,EAAAH,EAAAC,GAEA,IAiCAnwB,EAjCAswB,IAkCA,MAAAtwB,IAAA,KAjCA,SAOA,IAAAwwB,EAAAd,EAAAI,EACAW,EAAAd,EAAAI,EACA1/B,EAAAkgC,GAAAC,EAAAC,EAAAP,EAAAC,GAAAG,EAEA,GAAAjgC,EAAA,GAAAA,EAAA,EACA,SAGA,IAAAvP,EAAAyvC,GAAAC,EAAAC,EAAAL,EAAAC,GAAAC,EAEA,QAAAxvC,EAAA,GAAAA,EAAA,GAWA,SAAAyvC,GAAA9rC,EAAAC,EAAAC,EAAAC,GACA,OAAAH,EAAAG,EAAAD,EAAAD,EASAiiC,EAAA,SAAAxiC,GACAwiC,EAAA,SAAAlB,GACAkB,EAAA,OAAAjB,GACAiB,EAAA,UAAAhB,GACAgB,EAAA,WAAAf,GACAe,EAAA,OAAA5iC,GACA4iC,EAAA,OAAA9iC,GACA8iC,EAAA,cAAAd,GACAc,EAAA,MAAAb,GACApkC,EAAA2kC,mBACA3kC,EAAAgvC,8BAv1CA,CACAhrC,MAAA,WACA+mC,gBAAA,aACAE,gBAAA,mBAq1CAjrC,EAAAM,YAz0CA,SAAAujB,GACA,OAAA8f,EAAAh5B,OAAAkZ,IAy0CA7jB,EAAAivC,WAl0CA,SAAA9J,EAAAthB,GACA,OAAA2f,EAAA0L,iBAAA/J,EAAAthB,IAk0CA7jB,EAAAilC,gBACAjlC,EAAAmvC,cApxCA,SAAA7rC,GACA,GAAA0hC,EAAAlpB,eAAAxY,GACA,OAAA0hC,EAAA1hC,IAmxCAtD,EAAAiF,WACAjF,EAAA+E,UAlvCA,SAAAqqC,EAAAhtC,EAAAy+B,GACA,IAAAngC,EAAA,IAAAmjC,EAAA,CACAngC,MAAA,CACAooB,MAAAsjB,EACApuC,EAAAoB,EAAApB,EACAC,EAAAmB,EAAAnB,EACA3E,MAAA8F,EAAA9F,MACAkE,OAAA4B,EAAA5B,QAEA6uC,OAAA,SAAAzjB,GACA,cAAAiV,EAAA,CACA,IAAA3V,EAAA,CACA5uB,MAAAsvB,EAAAtvB,MACAkE,OAAAorB,EAAAprB,QAEAE,EAAA8vB,SAAA6U,EAAAjjC,EAAA8oB,QAIA,OAAAxqB,GAguCAV,EAAAylC,YACAzlC,EAAAulC,aACAvlC,EAAAsvC,qBAjqCA,SAAAC,GAEA,OADA9K,EAAA6K,qBAAAC,EAAAhvC,MAAAgvC,EAAAhvC,MAAAgvC,EAAA7rC,OACA6rC,GAgqCAvvC,EAAAwvC,qBA/oCA,SAAAD,GAEA,OADA9K,EAAA+K,qBAAAD,EAAAhvC,MAAAgvC,EAAAhvC,MAAAgvC,EAAA7rC,OACA6rC,GA8oCAvvC,EAAA6lC,mBACA7lC,EAAAqoC,uBACAroC,EAAAyvC,cA12BA,SAAAjoC,EAAAo/B,GACAkC,GAAAthC,GAAA,GACAsgC,EAAAtgC,EAAA6gC,EAAAzB,IAy2BA5mC,EAAA8oC,2BACA9oC,EAAA6H,qBA3yBA,SAAAL,GACA,SAAAA,MAAA2hC,uBA2yBAnpC,EAAAoI,kBA/xBA,SAAAD,GACA,IAAAT,EAAAq9B,EAAA58B,GAMA,OAJA,MAAAT,GAAAo9B,GAAA,KACAp9B,EAAAq9B,EAAA58B,GAAA28B,KAGAp9B,GAyxBA1H,EAAA0vC,cAlwBA,SAAA7I,EAAA8I,EAAAC,EAAAC,EAAAhe,EAAAie,EAAAC,GAEA,IAWAC,EAXAC,GADApe,KAAA6S,GACAuL,aACAC,EAAAre,EAAAqe,eACAC,EAAAte,EAAAse,cACAC,EAAAve,EAAAue,UAGAC,EAAAT,EAAAn4B,WAAA,QACA64B,EAAAT,EAAAp4B,WAAA,SAMA44B,GAAAC,KACAL,IACAD,EAAAC,EAAAM,kBAAAL,EAAA,cAAAC,EAAAC,IAGA,MAAAJ,IACAA,EAAAv2C,EAAAyU,WAAA2jB,EAAA2e,aAAA3e,EAAA2e,YAAAN,EAAAre,KAAA2e,cAIA,IAAAC,EAAAJ,EAAAL,EAAA,KACAU,EAAAJ,EAAA72C,EAAAuwC,UAAAiG,IAAAM,kBAAAL,EAAA,gBAAAC,EAAAC,GAAA,KAAAJ,GAAA,KAEA,MAAAS,GAAA,MAAAC,IAOAtH,GAAAvC,EAAA+I,EAAAE,EAAAje,GACAuX,GAAAuG,EAAAE,EAAAE,EAAAle,GAAA,IAGAgV,EAAA8J,KAAAF,EACAd,EAAAgB,KAAAD,GA2tBA1wC,EAAA4wC,iBA/sBA,SAAAppC,EAAAqpC,EAAAC,GACA,IAAA7J,EAAAz/B,EAAA9D,MAEAmtC,IACAnK,GAAAO,GACAz/B,EAAAgpB,SAAAqgB,GACAxJ,GAAAJ,IAGAA,EAAAz/B,EAAA4+B,WAEA0K,GAAA7J,IACAP,GAAAO,GACAxtC,EAAAkR,OAAAs8B,EAAA6J,GACAzJ,GAAAJ,KAksBAjnC,EAAAopC,gBACAppC,EAAA+wC,QApqBA,SAAA1H,EAAA2H,EAAAC,GACA,IAGAzH,EAHA3X,EAAA,CACA6X,YAAA,IAIA,IAAAuH,EACAzH,GAAA,EAGA3X,EAAAsZ,UAAA8F,EAGAxH,GAAAJ,EAAA2H,EAAAnf,EAAA2X,IAwpBAxpC,EAAAkxC,QAlYA,SAAArf,EAAAp3B,GACA,IAAA02C,EAAA12C,KAAA+tB,SAAA,aACA,OAAA/uB,EAAA23C,KAAA,CACAvf,EAAAuZ,WAAA+F,KAAA15B,WAAA,iBAAAoa,EAAAwZ,YAAA8F,KAAA15B,WAAA,mBAAAoa,EAAAyZ,UAAA6F,KAAA15B,WAAA,sBAAAoa,EAAA0Z,YAAA4F,KAAA15B,WAAA,6BAAArM,KAAA,OAgYApL,EAAA0tC,eACA1tC,EAAAqxC,UAnTA,SAAA7pC,EAAAwlC,EAAAC,EAAAhlC,EAAA4J,GACAi7B,IAAA,EAAAtlC,EAAAwlC,EAAAC,EAAAhlC,EAAA4J,IAmTA7R,EAAAsxC,aAxSA,SAAA3gC,EAAA4gC,GAGA,IAFA,IAAAC,EAAA/N,EAAAgO,SAAA,IAEA9gC,OAAA4gC,GACA9N,EAAAiO,IAAAF,EAAA7gC,EAAAm9B,oBAAA0D,GACA7gC,IAAA2U,OAGA,OAAAksB,GAiSAxxC,EAAA0lC,kBACA1lC,EAAA2xC,mBAlQA,SAAAC,EAAAjE,EAAAC,GAEA,IAAAiE,EAAA,IAAAlE,EAAA,QAAAA,EAAA,QAAAA,EAAA,KAAA/xC,KAAAC,IAAA,EAAA8xC,EAAA,GAAAA,EAAA,IACAmE,EAAA,IAAAnE,EAAA,QAAAA,EAAA,QAAAA,EAAA,KAAA/xC,KAAAC,IAAA,EAAA8xC,EAAA,GAAAA,EAAA,IACAoE,EAAA,UAAAH,GAAAC,EAAA,UAAAD,EAAAC,EAAA,UAAAD,GAAAE,EAAA,WAAAF,EAAAE,EAAA,GAEA,OADAC,EAAArM,GAAAqM,EAAApE,EAAAC,GACAhyC,KAAAC,IAAAk2C,EAAA,IAAAn2C,KAAAC,IAAAk2C,EAAA,IAAAA,EAAA,oBAAAA,EAAA,qBA6PA/xC,EAAAgyC,gBArPA,SAAAC,EAAAC,EAAAjF,EAAAp7B,GACA,GAAAogC,GAAAC,EAAA,CA2BA,IAAAC,EAvBA,SAAAC,GACA,IAAAC,EAAA,GAMA,OALAD,EAAA9hB,SAAA,SAAA9oB,IACAA,EAAAI,SAAAJ,EAAA8qC,OACAD,EAAA7qC,EAAA8qC,MAAA9qC,KAGA6qC,EAgBAE,CAAAN,GACAC,EAAA5hB,SAAA,SAAA9oB,GACA,IAAAA,EAAAI,SAAAJ,EAAA8qC,KAAA,CACA,IAAAE,EAAAL,EAAA3qC,EAAA8qC,MAEA,GAAAE,EAAA,CACA,IAAAC,EAAAC,EAAAlrC,GACAA,EAAAimC,KAAAiF,EAAAF,IACA9E,GAAAlmC,EAAAirC,EAAAxF,EAAAzlC,EAAAS,eArBA,SAAAyqC,EAAAlrC,GACA,IAAA8D,EAAA,CACAqnC,SAAAjP,EAAAprB,MAAA9Q,EAAAmrC,UACAC,SAAAprC,EAAAorC,UAOA,OAJAprC,EAAAjH,QACA+K,EAAA/K,MAAA9G,EAAAkR,OAAA,GAAkCnD,EAAAjH,QAGlC+K,IA6NAtL,EAAA6yC,iBAjMA,SAAAra,EAAAp2B,GAGA,OAAA3I,EAAAib,IAAA8jB,EAAA,SAAAI,GACA,IAAA53B,EAAA43B,EAAA,GACA53B,EAAAspB,EAAAtpB,EAAAoB,EAAApB,GACAA,EAAAqpB,EAAArpB,EAAAoB,EAAApB,EAAAoB,EAAA9F,OACA,IAAA2E,EAAA23B,EAAA,GAGA,OAFA33B,EAAAqpB,EAAArpB,EAAAmB,EAAAnB,GAEA,CAAAD,EADAC,EAAAopB,EAAAppB,EAAAmB,EAAAnB,EAAAmB,EAAA5B,YAyLAR,EAAA8yC,eA9KA,SAAAC,EAAA3wC,GACA,IAAApB,EAAAspB,EAAAyoB,EAAA/xC,EAAAoB,EAAApB,GACAiC,EAAAonB,EAAA0oB,EAAA/xC,EAAA+xC,EAAAz2C,MAAA8F,EAAApB,EAAAoB,EAAA9F,OACA2E,EAAAqpB,EAAAyoB,EAAA9xC,EAAAmB,EAAAnB,GACAiC,EAAAmnB,EAAA0oB,EAAA9xC,EAAA8xC,EAAAvyC,OAAA4B,EAAAnB,EAAAmB,EAAA5B,QAGA,GAAAyC,GAAAjC,GAAAkC,GAAAjC,EACA,OACAD,IACAC,IACA3E,MAAA2G,EAAAjC,EACAR,OAAA0C,EAAAjC,IAmKAjB,EAAAgzC,WAvJA,SAAAC,EAAAphB,EAAAzvB,GAIA,IAAAsB,GAHAmuB,EAAAp4B,EAAAkR,OAAA,CACAuoC,WAAA,GACGrhB,IACHnuB,MAAA,CACAyvC,eAAA,GASA,GAPA/wC,KAAA,CACApB,GAAA,EACAC,GAAA,EACA3E,MAAA,EACAkE,OAAA,GAGAyyC,EACA,WAAAA,EAAAruC,QAAA,aAAAlB,EAAAooB,MAAAmnB,EAAAjuC,MAAA,GAAAvL,EAAAu1B,SAAAtrB,EAAAtB,GAAA,IAAAyhC,EAAAhS,IAAA5sB,EAAAguC,EAAAplC,QAAA,cAAAgkB,EAAAzvB,EAAA,WAyIApC,EAAAozC,qBAvHA,SAAApF,EAAAC,EAAAC,EAAAC,EAAA3V,GACA,QAAA1wB,EAAA,EAAAurC,EAAA7a,IAAApoB,OAAA,GAAiDtI,EAAA0wB,EAAApoB,OAAmBtI,IAAA,CACpE,IAAA1I,EAAAo5B,EAAA1wB,GAEA,GAAAimC,GAAAC,EAAAC,EAAAC,EAAAC,EAAA/uC,EAAA,GAAAA,EAAA,GAAAi0C,EAAA,GAAAA,EAAA,IACA,SAGAA,EAAAj0C,IAgHAY,EAAA+tC,0CCn+CA,IAEAuF,EAFoB55C,EAAQ,KAE5B45C,iBAEAC,EAAc75C,EAAQ,IAEtB85C,EAAAD,EAAAC,iBACAC,EAAAF,EAAAE,UAIAC,EAFah6C,EAAQ,IAErBg6C,qBAoBAC,EAAA,cAEAp5C,EAAA,CAOA6c,cAAA,SAAAnP,EAAAuqB,GACA,IAAAv3B,EAAA6E,KAAA5E,QAAAs3B,GACAtb,EAAApX,KAAAqX,YAAAlP,EAAAuqB,GACAohB,EAAA34C,EAAAsmC,YAAAt5B,GACA3E,EAAArI,EAAAq+B,QAAArxB,GACA4rC,EAAA54C,EAAAkoC,eAAAl7B,GACAjE,EAAA/I,EAAAwxB,cAAAxkB,EAAA,SACA25B,EAAA3mC,EAAAwxB,cAAAxkB,EAAA,eACA6rC,EAAAh0C,KAAArF,QAAA2qB,aAAA,WACA2uB,EAAAD,KAAA/5C,IAAA,cACAi6C,EAAAN,EAAAK,GACA1uB,EAAAvlB,KAAAulB,SACA4uB,EAAA,WAAA5uB,EACA6uB,EAAAj5C,EAAAi5C,WACA,OACAtqC,cAAAyb,EACA8uB,iBAAAr0C,KAAAqM,QACA7R,eAAAwF,KAAAxF,eACAE,WAAAy5C,EAAAn0C,KAAAqM,QAAA,KACAnS,YAAA8F,KAAA9F,YACAo6C,SAAAH,EAAAn0C,KAAA0jB,GAAA,KACA6wB,WAAAJ,EAAAn0C,KAAAwD,KAAA,KACAA,OACA2E,UAAA2rC,EACA34C,KAAA44C,EACArhB,WACAxzB,MAAAkY,EACAlT,QACA49B,cACA0S,eAAAJ,IAAAI,eAAA,KACAC,OAAAL,IAAAK,OAAA,KACAC,OAAAhB,EAAA,CACAxvC,QACAgwC,eAGAS,MAAA,gCAcAlE,kBAAA,SAAAtoC,EAAA8tB,EAAAvD,EAAAkiB,EAAAtE,GACAra,KAAA,SACA,IAAA96B,EAAA6E,KAAA5E,QAAAs3B,GACAlb,EAAArc,EAAAsc,aAAAtP,GACAqB,EAAAxJ,KAAAsX,cAAAnP,EAAAuqB,GAEA,MAAAkiB,GAAAprC,EAAAtK,iBAAA++B,QACAz0B,EAAAtK,MAAAsK,EAAAtK,MAAA01C,IAGA,IAAAC,EAAAr9B,EAAAvd,IAAA,WAAAg8B,EAAA,CAAAqa,GAAA,sBAAAra,EAAAqa,GAAA,sBAEA,0BAAAuE,GACArrC,EAAAysB,SACAzsB,EAAAsrC,eAAAF,EACAC,EAAArrC,IACK,kBAAAqrC,EACLlB,EAAAkB,EAAArrC,GAGAuE,QAAA8lC,EAAA,SAAAkB,EAAAz6C,GACA,IAAAuE,EAAAvE,EAAAgW,OAMA,MAJA,MAAAhW,EAAA06C,OAAA,UAAA16C,EAAA06C,OAAAn2C,EAAA,KACAvE,KAAA4K,MAAA,EAAArG,EAAA,IAGA20C,EAAAr4C,EAAAgN,EAAA7N,UAXK,GAsBL+c,YAAA,SAAAnc,EAAAw3B,GACA,OAAA8gB,EAAAxzC,KAAA5E,QAAAs3B,GAAAx3B,IAUA+5C,cAAA,cAGAh1C,EAAAC,QAAAzF,uBC9IA,IAAAy6C,EAAYt7C,EAAQ,GAGpByU,GADA6mC,EAAAppC,OACAopC,EAAA7mC,SAEczU,EAAQ,IAEtB8P,QAsCA,SAAAyrC,EAAAC,GACAA,KAAA,GACAp1C,KAAAq1C,OAAAD,EAAA9uC,MACAtG,KAAAs1C,MAAAF,EAAAhvC,KACApG,KAAAu1C,OAAAH,EAAAp5C,MACAgE,KAAAw1C,SAAAJ,EAAAK,QACAz1C,KAAA01C,QAAA,EAGA11C,KAAAwG,QAGA,IAAAmvC,EAAAR,EAAAzuC,UASAivC,EAAAtlB,QAAA,SAAAulB,GACA,IAcAC,EAdAC,EAAA91C,KAAA+1C,UACAC,EAAAJ,KAAAI,KAIA,GAAAh2C,KAAA01C,QAAAI,EAAA,CACA,IAAAtvC,EAAAxG,KAAAwG,QACAA,EAAArL,KAAAqL,EAAAyvC,WAAAH,EAAAtvC,QAAAyvC,WAGAj2C,KAAAk2C,aACAl2C,KAAAk2C,WAAAC,YAAAn2C,MAKAA,KAAAs1C,QAAAU,IACAH,EAAA71C,KAAAs1C,MAAAt1C,KAAAwG,UAKA,IAeAiD,EAfA2sC,EAAAC,EAAAr2C,KAAAs2C,QACAC,EAAAv2C,KAAAw2C,eAAA,EACAC,EAAAJ,EAAAT,KAAAa,OACAC,EAAAd,KAAAc,cAAA,EAMA,SAAAL,EAAA73B,GAGA,QAFAA,GAAA,KAAAA,EAAA,GAEAA,EAPA43B,IAAAK,GAAAF,IAAAG,IACAb,EAAA,UAWA71C,KAAA01C,QAAA,UAAAG,KACA71C,KAAA01C,QAAA,EACAjsC,EAgGA,SAAAktC,EAAAX,GAGA,IAAAzsC,EACAE,EAHAktC,EAAAC,UAAAD,EAAAE,cAAAF,EAAAG,QAAA,EACAH,EAAAI,iBAAA,MAIAf,GAAAW,EAAAtB,UACA9rC,EAAAotC,EAAAtB,OAAAsB,EAAAnwC,WAEA+C,aACAE,EAAAF,EAAAE,mBACAF,cAIA8E,EAAA9E,OAAA+G,SACA/G,EAAA,OAIAotC,EAAAK,UAAAztC,EACAotC,EAAAL,OAAAK,EAAAH,cAAA,KACA,IAAAS,EAAAN,EAAAO,YAEA,OADAD,KAAAxyC,QACAgF,EAxHAnD,CAAAtG,KAAAg2C,IAGAh2C,KAAAs2C,OAAAG,EACAz2C,KAAAw2C,cAAAE,EACA,IAAAS,EAAAvB,KAAAuB,KAWA,GARAn3C,KAAA82C,QADAhB,EACAA,EAAAe,cAGA72C,KAAAu1C,OAAAv1C,KAAAu1C,OAAAv1C,KAAAwG,SAAA4X,IAKApe,KAAAg3C,UAAA,CACA,IAAAve,EAAAz4B,KAAA42C,UACA3gC,EAAAna,KAAAgB,IAAA,MAAAq6C,EAAAn3C,KAAA42C,UAAAO,EAAA/4B,IAAApe,KAAA82C,SAEA,IAAAd,IAAAvsC,GAAAgvB,EAAAxiB,GAAA,CACA,IAAA1M,EAAAvJ,KAAAg3C,UAEA,GAAA3oC,EAAA9E,GACA,QAAAvB,EAAA,EAAuBA,EAAAuB,EAAA+G,OAAqBtI,IAC5CovC,EAAAp3C,KAAAuJ,EAAAvB,GAAAywB,EAAAxiB,EAAAwgC,EAAAC,QAGAU,EAAAp3C,KAAAuJ,EAAAkvB,EAAAxiB,EAAAwgC,EAAAC,GAIA12C,KAAA42C,UAAA3gC,EAGA,IAAAohC,EAAA,MAAAr3C,KAAA+2C,iBAAA/2C,KAAA+2C,iBAAA9gC,EACAjW,KAAA62C,cAAAQ,OAKAr3C,KAAA42C,UAAA52C,KAAA62C,cAAA,MAAA72C,KAAA+2C,iBAAA/2C,KAAA+2C,iBAAA/2C,KAAA82C,QAGA,OAAA92C,KAAAymB,cAGA,IAAA6wB,EAAA,WACA,IAAArhC,EACAshC,EACAd,EACAC,EACAc,EACAC,EAAA,CACAnxC,MAAA,SAAAoxC,EAAAhqC,EAAAiqC,EAAAC,GACAL,EAAAG,EACAzhC,EAAAvI,EACA+oC,EAAAkB,EACAjB,EAAAkB,EACAJ,EAAA17C,KAAAgiC,KAAA4Y,EAAAD,GACAgB,EAAAlX,KAAAkW,EAAA,GAAAC,EAAA,EAAAmB,EAAAC,IAGA,OAAAL,EAEA,SAAAK,IACA,OAAAP,EAAAthC,EAAAshC,IAAA,KAGA,SAAAM,IACA,IAAA1vC,EAAAovC,EAAAC,EAAAf,EAAA36C,KAAAgiC,KAAAyZ,EAAAC,GACAz6C,EAAAw6C,GAAAthC,EAAA,KAAA9N,EAAAuuC,EAAAvuC,EAEAovC,EAEA,OADAA,IACAx6C,GA5BA,GAqCA,SAAAq6C,EAAAT,EAAAptC,EAAAkvB,EAAAxiB,EAAAwgC,EAAAC,GACAY,EAAAhxC,MAAAmyB,EAAAxiB,EAAAwgC,EAAAC,GACAC,EAAAoB,iBAAAxuC,EAEAotC,EAAAoB,iBAAA,CACAtf,QACAxiB,MACAja,MAAAia,EAAAwiB,EACA8H,KAAA+W,EAAA/W,MACGoW,EAAAnwC,SAdHmvC,EAAAlxC,MAAA,WACAzE,KAAA01C,QAAA,EACA11C,KAAAw1C,UAAAx1C,KAAAw1C,SAAAx1C,KAAAwG,UA8CAmvC,EAAAlvB,WAAA,WACA,OAAAzmB,KAAAg3C,WAAAh3C,KAAA42C,UAAA52C,KAAA82C,SAQAnB,EAAAqC,KAAA,SAAAC,IAEAj4C,KAAAk3C,cAAAe,GAAAj4C,KAAA01C,UACA11C,KAAAk3C,YAAAe,EACAA,EAAAlC,UAAA/1C,KACAi4C,EAAAxzC,UAIAkxC,EAAAxuC,QAAA,WACAnH,KAAAyjB,YAIAzjB,KAAA+1C,YAAA/1C,KAAA+1C,UAAAmB,YAAA,MACAl3C,KAAAk3C,cAAAl3C,KAAAk3C,YAAAnB,UAAA,MACA/1C,KAAA01C,QAAA,EACA11C,KAAAyjB,WAAA,IAGAkyB,EAAAuC,YAAA,WACA,OAAAl4C,KAAA+1C,WAGAJ,EAAAwC,cAAA,WACA,OAAAn4C,KAAAk3C,aAGAvB,EAAAyC,aAAA,SAAAniC,GAMAjW,KAAA62C,cAAA72C,KAAA+2C,iBAAA9gC,GA8CA/V,EAAAwF,WApSA,SAAA0vC,GACA,WAAAD,EAAAC,wBCjCA,IAAAz7C,EAAaC,EAAQ,GA8BrBy+C,EAAA,KAwRA,IAAAC,EAAA,oIAmFA,SAAAC,EAAA/5B,GACA,OAAAA,EACA,SAGA,IAAAg6B,EAAA18C,KAAA+hC,MAAA/hC,KAAA28C,IAAAj6B,GAAA1iB,KAAA48C,MAWA,OAJAl6B,EAAA1iB,KAAA68C,IAAA,GAAAH,IAAA,IACAA,IAGAA,EA4IAt4C,EAAA8X,UAvfA,SAAAwG,EAAAo6B,EAAAC,EAAAC,GACA,IAAAC,EAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAH,EAAA,GAAAA,EAAA,GAEA,OAAAE,EACA,WAAAC,EAAAH,EAAA,IAAAA,EAAA,GAAAA,EAAA,MAQA,GAAAC,EACA,GAAAC,EAAA,GACA,GAAAv6B,GAAAo6B,EAAA,GACA,OAAAC,EAAA,GACO,GAAAr6B,GAAAo6B,EAAA,GACP,OAAAC,EAAA,OAEK,CACL,GAAAr6B,GAAAo6B,EAAA,GACA,OAAAC,EAAA,GACO,GAAAr6B,GAAAo6B,EAAA,GACP,OAAAC,EAAA,OAGG,CACH,GAAAr6B,IAAAo6B,EAAA,GACA,OAAAC,EAAA,GAGA,GAAAr6B,IAAAo6B,EAAA,GACA,OAAAC,EAAA,GAIA,OAAAr6B,EAAAo6B,EAAA,IAAAG,EAAAC,EAAAH,EAAA,IAmdA34C,EAAArG,aAvcA,SAAAo/C,EAAApmC,GACA,OAAAomC,GACA,aACA,aACAA,EAAA,MACA,MAEA,WACA,UACAA,EAAA,KACA,MAEA,YACA,aACAA,EAAA,OAIA,wBAAAA,GAjFAC,EAkFAD,EAjFAC,EAAAnrC,QAAA,kBAiFAiB,MAAA,MACA2sB,WAAAsd,GAAA,IAAApmC,EAGA8oB,WAAAsd,GAGA,MAAAA,EAAAhgB,KAAAggB,EAzFA,IAAAC,GAugBAh5C,EAAAkc,MAjaA,SAAAlb,EAAA67B,EAAAoc,GAQA,OAPA,MAAApc,IACAA,EAAA,IAIAA,EAAAjhC,KAAAgB,IAAAhB,KAAAqB,IAAA,EAAA4/B,GAAA,IACA77B,OAAAmK,QAAA0xB,GACAoc,EAAAj4C,MA0ZAhB,EAAAk5C,IA/YA,SAAAC,GAIA,OAHAA,EAAAz7B,KAAA,SAAAtQ,EAAAC,GACA,OAAAD,EAAAC,IAEA8rC,GA4YAn5C,EAAAo5C,aApYA,SAAA96B,GAGA,GAFAA,KAEAua,MAAAva,GACA,SAUA,IAHA,IAAA9Q,EAAA,EACA1R,EAAA,EAEAF,KAAAsgB,MAAAoC,EAAA9Q,OAAA8Q,GACA9Q,GAAA,GACA1R,IAGA,OAAAA,GAkXAkE,EAAA88B,iBA1WA,SAAAxe,GACA,IAAA06B,EAAA16B,EAAA+6B,WAEAC,EAAAN,EAAAp0C,QAAA,KAEA,GAAA00C,EAAA,GACA,IAAAzc,GAAAmc,EAAAh0C,MAAAs0C,EAAA,GACA,OAAAzc,EAAA,GAAAA,EAAA,EAEA,IAAA0c,EAAAP,EAAAp0C,QAAA,KACA,OAAA20C,EAAA,IAAAP,EAAA5oC,OAAA,EAAAmpC,GAiWAv5C,EAAAw5C,kBArVA,SAAA1/B,EAAA2/B,GACA,IAAAlB,EAAA38C,KAAA28C,IACAC,EAAA58C,KAAA48C,KACAkB,EAAA99C,KAAA+hC,MAAA4a,EAAAz+B,EAAA,GAAAA,EAAA,IAAA0+B,GACAmB,EAAA/9C,KAAAsgB,MAAAq8B,EAAA38C,KAAAC,IAAA49C,EAAA,GAAAA,EAAA,KAAAjB,GAEA3b,EAAAjhC,KAAAgB,IAAAhB,KAAAqB,KAAAy8C,EAAAC,EAAA,OACA,OAAAvc,SAAAP,KAAA,IA+UA78B,EAAA45C,wBAhUA,SAAAC,EAAA7+C,EAAA6hC,GACA,IAAAgd,EAAA7+C,GACA,SAGA,IAAA8+C,EAAArgD,EAAAsgD,OAAAF,EAAA,SAAAG,EAAA17B,GACA,OAAA07B,GAAAnhB,MAAAva,GAAA,EAAAA,IACG,GAEH,OAAAw7B,EACA,SAmBA,IAhBA,IAAAG,EAAAr+C,KAAA68C,IAAA,GAAA5b,GACAqd,EAAAzgD,EAAAib,IAAAmlC,EAAA,SAAAv7B,GACA,OAAAua,MAAAva,GAAA,EAAAA,GAAAw7B,EAAAG,EAAA,MAEAE,EAAA,IAAAF,EACAG,EAAA3gD,EAAAib,IAAAwlC,EAAA,SAAAG,GAEA,OAAAz+C,KAAA+hC,MAAA0c,KAEAC,EAAA7gD,EAAAsgD,OAAAK,EAAA,SAAAJ,EAAA17B,GACA,OAAA07B,EAAA17B,GACG,GACHi8B,EAAA9gD,EAAAib,IAAAwlC,EAAA,SAAAG,EAAAr/C,GACA,OAAAq/C,EAAAD,EAAAp/C,KAGAs/C,EAAAH,GAAA,CAKA,IAHA,IAAAl9C,EAAAu9C,OAAAC,kBACAC,EAAA,KAEA5yC,EAAA,EAAAnJ,EAAA47C,EAAAnqC,OAA2CtI,EAAAnJ,IAASmJ,EACpDyyC,EAAAzyC,GAAA7K,IACAA,EAAAs9C,EAAAzyC,GACA4yC,EAAA5yC,KAKAsyC,EAAAM,GACAH,EAAAG,GAAA,IACAJ,EAGA,OAAAF,EAAAp/C,GAAAi/C,GAkRAj6C,EAAA26C,iBA9QA,iBA+QA36C,EAAA46C,UAxQA,SAAAC,GACA,IAAAC,EAAA,EAAAl/C,KAAAiE,GACA,OAAAg7C,EAAAC,QAuQA96C,EAAA+6C,mBA/PA,SAAAz8B,GACA,OAAAA,GAAA65B,GAAA75B,EAAA65B,GA+PAn4C,EAAAg7C,UAtOA,SAAAh8C,GACA,GAAAA,aAAA2S,KACA,OAAA3S,EACG,qBAAAA,EAAA,CAMH,IAAA8P,EAAAspC,EAAA1mC,KAAA1S,GAEA,IAAA8P,EAEA,WAAA6C,KAAAonB,KAIA,GAAAjqB,EAAA,GAWA,CACA,IAAAmsC,GAAAnsC,EAAA,MAMA,MAJA,MAAAA,EAAA,GAAAosC,gBACAD,GAAAnsC,EAAA,GAAA9J,MAAA,MAGA,IAAA2M,UAAAwpC,KAAArsC,EAAA,KAAAA,EAAA,UAAAA,EAAA,MAAAmsC,IAAAnsC,EAAA,QAAAA,EAAA,OAAAA,EAAA,QAfA,WAAA6C,MAAA7C,EAAA,KAAAA,EAAA,UAAAA,EAAA,OAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAAAA,EAAA,OAiBG,aAAA9P,EACH,IAAA2S,KAAAonB,KAGA,IAAApnB,KAAA/V,KAAAsgB,MAAAld,KA8LAgB,EAAAo7C,SApLA,SAAA98B,GACA,OAAA1iB,KAAA68C,IAAA,GAAAJ,EAAA/5B,KAoLAte,EAAAq4C,mBACAr4C,EAAAq7C,KA3IA,SAAA/8B,EAAApC,GACA,IAAAo/B,EAAAjD,EAAA/5B,GACAi9B,EAAA3/C,KAAA68C,IAAA,GAAA6C,GACA7tC,EAAA6Q,EAAAi9B,EAiCA,OAHAj9B,GA1BApC,EACAzO,EAAA,IACA,EACKA,EAAA,IACL,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EAEA,GAGAA,EAAA,EACA,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EACKA,EAAA,EACL,EAEA,IAIA8tC,EAGAD,IAAA,IAAAh9B,EAAAnT,QAAAmwC,EAAA,GAAAA,EAAA,GAAAh9B,GAwGAte,EAAAw7C,SA9FA,SAAAC,EAAAr8C,GACA,IAAAs8C,GAAAD,EAAArrC,OAAA,GAAAhR,EAAA,EACA+B,EAAAvF,KAAA+hC,MAAA+d,GACAhiC,GAAA+hC,EAAAt6C,EAAA,GACAqM,EAAAkuC,EAAAv6C,EACA,OAAAqM,EAAAkM,EAAAlM,GAAAiuC,EAAAt6C,GAAAuY,MA0FA1Z,EAAA27C,gBAhEA,SAAAtyB,GACAA,EAAA3L,KAAA,SAAAtQ,EAAAC,GACA,OA4BA,SAAAqP,EAAAtP,EAAAC,EAAAuuC,GACA,OAAAxuC,EAAAiR,SAAAu9B,GAAAvuC,EAAAgR,SAAAu9B,IAAAxuC,EAAAiR,SAAAu9B,KAAAvuC,EAAAgR,SAAAu9B,KAAAxuC,EAAAuP,MAAAi/B,GAAAvuC,EAAAsP,MAAAi/B,SAAA,OAAAA,GAAAl/B,EAAAtP,EAAAC,EAAA,IA7BAqP,CAAAtP,EAAAC,EAAA,UAKA,IAHA,IAAAwuC,GAAA,IACAC,EAAA,EAEAh0C,EAAA,EAAiBA,EAAAuhB,EAAAjZ,QAAiB,CAIlC,IAHA,IAAAiO,EAAAgL,EAAAvhB,GAAAuW,SACA1B,EAAA0M,EAAAvhB,GAAA6U,MAEAi/B,EAAA,EAAoBA,EAAA,EAAQA,IAC5Bv9B,EAAAu9B,IAAAC,IACAx9B,EAAAu9B,GAAAC,EACAl/B,EAAAi/B,KAAA,IAAAE,GAGAD,EAAAx9B,EAAAu9B,GACAE,EAAAn/B,EAAAi/B,GAGAv9B,EAAA,KAAAA,EAAA,IAAA1B,EAAA,GAAAA,EAAA,OACA0M,EAAAnZ,OAAApI,EAAA,GAEAA,IAIA,OAAAuhB,GAqCArpB,EAAA+7C,UArBA,SAAAriC,GACA,OAAAA,EAAA+hB,WAAA/hB,IAAA,uBCliBA,IAAAjgB,EAAaC,EAAQ,GAErBmnB,EAAUnnB,EAAQ,IAqBlBqB,EAAAtB,EAAAsB,KACAgd,EAAAte,EAAAse,SACA5J,EAAA1U,EAAA0U,QAOA6tC,EAAA,WAOA,SAAA3zC,EAAArJ,GACA,OAAAA,aAAA++B,MAAA/+B,EAAA,MAAAA,EAAA,IAAAA,GA0OA,SAAAi9C,EAAAC,GACA,OAAAnkC,EAAAmkC,MAAA14B,IAAA,KAAA04B,EAAA14B,GAAA,IAAA5e,QAAA,YA4GA,IAAAu3C,EAAA,EAkFA,SAAAvZ,EAAAt3B,EAAAyoB,GACA,OAAAzoB,KAAAwQ,eAAAiY,GA6CA/zB,EAAAqI,mBACArI,EAAAo8C,gBArcA,SAAAvqB,EAAA/U,EAAAu/B,GAEA,GAAAxqB,EAAA,CACAA,EAAA/U,GAAA+U,EAAA/U,IAAA,GACA+U,EAAAyqB,SAAAzqB,EAAAyqB,UAAA,GACAzqB,EAAAyqB,SAAAx/B,GAAA+U,EAAAyqB,SAAAx/B,IAAA,GAEA,QAAAhV,EAAA,EAAAnJ,EAAA09C,EAAAjsC,OAAyCtI,EAAAnJ,EAASmJ,IAAA,CAClD,IAAAy0C,EAAAF,EAAAv0C,IAEA+pB,EAAAyqB,SAAAx/B,GAAAhB,eAAAygC,IAAA1qB,EAAA/U,GAAAhB,eAAAygC,KACA1qB,EAAAyqB,SAAAx/B,GAAAy/B,GAAA1qB,EAAA/U,GAAAy/B,OA2bAv8C,EAAAw8C,mBArbA,0XAsbAx8C,EAAAy8C,iBAvaA,SAAAC,GACA,OAAA3kC,EAAA2kC,IAAAvuC,EAAAuuC,iBAAA/qC,KAAA+qC,IAAA19C,OAuaAgB,EAAA28C,iBA9ZA,SAAAD,GACA,OAAA3kC,EAAA2kC,mBAAA3e,QA8ZA/9B,EAAA48C,gBAhZA,SAAAC,EAAAC,GAOAA,MAAA,IAAA93C,QACA,IAAAnI,EAAApD,EAAAib,IAAAmoC,GAAA,YAAAvxC,EAAA4N,GACA,OACA6jC,MAAAzxC,KA+DA,OA3DAvQ,EAAA+hD,EAAA,SAAAZ,EAAAhjC,GACA,GAAAnB,EAAAmkC,GAAA,CAKA,QAAAp0C,EAAA,EAAmBA,EAAAjL,EAAAuT,OAAmBtI,IACtC,IAAAjL,EAAAiL,GAAAoQ,QACA,MAAAgkC,EAAA14B,IAAA3mB,EAAAiL,GAAAi1C,MAAAv5B,KAAA04B,EAAA14B,GAAA,GAGA,OAFA3mB,EAAAiL,GAAAoQ,OAAAgkC,OACAY,EAAA5jC,GAAA,MAKA,IAAApR,EAAA,EAAmBA,EAAAjL,EAAAuT,OAAmBtI,IAAA,CACtC,IAAAi1C,EAAAlgD,EAAAiL,GAAAi1C,MAEA,IAAAlgD,EAAAiL,GAAAoQ,SAEA,MAAA6kC,EAAAv5B,IAAA,MAAA04B,EAAA14B,KAAA,MAAA04B,EAAA54C,OAAA24C,EAAAC,KAAAD,EAAAc,MAAAz5C,OAAA44C,EAAA54C,KAAA,GAGA,OAFAzG,EAAAiL,GAAAoQ,OAAAgkC,OACAY,EAAA5jC,GAAA,UAMAne,EAAA+hD,EAAA,SAAAZ,EAAAhjC,GACA,GAAAnB,EAAAmkC,GAAA,CAMA,IAFA,IAAAp0C,EAAA,EAEUA,EAAAjL,EAAAuT,OAAmBtI,IAAA,CAC7B,IAAAi1C,EAAAlgD,EAAAiL,GAAAi1C,MAEA,IAAAlgD,EAAAiL,GAAAoQ,SAIA+jC,EAAAc,IAKA,MAAAb,EAAA14B,GAAA,CACA3mB,EAAAiL,GAAAoQ,OAAAgkC,EACA,OAIAp0C,GAAAjL,EAAAuT,QACAvT,EAAA2P,KAAA,CACA0L,OAAAgkC,OAIAr/C,GAwUAmD,EAAAg9C,cA3TA,SAAAC,GAUA,IAAAC,EAAAzjD,EAAA8zB,gBACAxyB,EAAAkiD,EAAA,SAAA3gC,EAAApD,GACA,IAAAikC,EAAA7gC,EAAAygC,MACAI,GAAAD,EAAAxvB,IAAAyvB,EAAA35B,GAAAlH,KAEAvhB,EAAAkiD,EAAA,SAAA3gC,EAAApD,GACA,IAAA2Y,EAAAvV,EAAApE,OACAze,EAAAmS,QAAAimB,GAAA,MAAAA,EAAArO,KAAA05B,EAAAnjD,IAAA83B,EAAArO,KAAA05B,EAAAnjD,IAAA83B,EAAArO,MAAAlH,EAAA,mBAAAuV,KAAArO,KACAqO,GAAA,MAAAA,EAAArO,IAAA05B,EAAAxvB,IAAAmE,EAAArO,GAAAlH,IACAA,EAAA8gC,UAAA9gC,EAAA8gC,QAAA,MAGAriD,EAAAkiD,EAAA,SAAA3gC,EAAApD,GACA,IAAAikC,EAAA7gC,EAAAygC,MACAlrB,EAAAvV,EAAApE,OACAklC,EAAA9gC,EAAA8gC,QAEA,GAAArlC,EAAA8Z,GAAA,CAYA,GAJAurB,EAAA95C,KAAA,MAAAuuB,EAAAvuB,KAAAuuB,EAAAvuB,KAAA,GAAA65C,IAAA75C,KAEA04C,EAAA9iC,EAEAikC,EACAC,EAAA55B,GAAA25B,EAAA35B,QACK,SAAAqO,EAAArO,GACL45B,EAAA55B,GAAAqO,EAAArO,GAAA,OACK,CAML,IAAA65B,EAAA,EAEA,GACAD,EAAA55B,GAAA,KAAA45B,EAAA95C,KAAA,KAAA+5C,UACOH,EAAAnjD,IAAAqjD,EAAA55B,KAGP05B,EAAAxvB,IAAA0vB,EAAA55B,GAAAlH,OAoQAtc,EAAAs9C,gBAhQA,SAAA3wB,GACA,IAAArpB,EAAAqpB,EAAArpB,KAEA,SAAAA,MAAAsB,QAAAo3C,KA8PAh8C,EAAAi8C,YACAj8C,EAAAu9C,gBAzOA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,GAGA,OAFAC,EAAAJ,GAAA,GAAAE,GACAE,EAAAH,GAAA,GAAAE,EAAAD,GACA,CAAAG,EAAAH,GAAAG,EAAAF,IAEA,SAAAC,EAAAE,EAAAppC,EAAAqpC,GACA,QAAAj2C,EAAA,EAAAnJ,EAAAm/C,EAAA1tC,OAA6CtI,EAAAnJ,EAASmJ,IAKtD,IAJA,IAAAssC,EAAA0J,EAAAh2C,GAAAssC,SACA4J,EAAA31C,EAAAy1C,EAAAh2C,GAAAG,WACAg2C,EAAAF,KAAA3J,GAEA3V,EAAA,EAAAyf,EAAAF,EAAA5tC,OAAgDquB,EAAAyf,EAAUzf,IAAA,CAC1D,IAAAx2B,EAAA+1C,EAAAvf,GAEAwf,KAAAh2C,GACAg2C,EAAAh2C,GAAA,MAEAyM,EAAA0/B,KAAA1/B,EAAA0/B,GAAA,KAA+CnsC,GAAA,GAM/C,SAAA41C,EAAAnpC,EAAAypC,GACA,IAAAthD,EAAA,GAEA,QAAAiL,KAAA4M,EACA,GAAAA,EAAAoH,eAAAhU,IAAA,MAAA4M,EAAA5M,GACA,GAAAq2C,EACAthD,EAAA2P,MAAA1E,OACS,CACT,IAAAk2C,EAAAH,EAAAnpC,EAAA5M,IAAA,GACAk2C,EAAA5tC,QAAAvT,EAAA2P,KAAA,CACA4nC,SAAAtsC,EACAG,UAAA+1C,IAMA,OAAAnhD,IAgMAmD,EAAAkI,eArLA,SAAAjN,EAAA0L,GACA,aAAAA,EAAA4lB,gBACA5lB,EAAA4lB,gBACG,MAAA5lB,EAAAsB,UACHxO,EAAA0U,QAAAxH,EAAAsB,WAAAxO,EAAAib,IAAA/N,EAAAsB,UAAA,SAAAjJ,GACA,OAAA/D,EAAAuxB,gBAAAxtB,KACK/D,EAAAuxB,gBAAA7lB,EAAAsB,WACF,MAAAtB,EAAArD,KACH7J,EAAA0U,QAAAxH,EAAArD,MAAA7J,EAAAib,IAAA/N,EAAArD,KAAA,SAAAtE,GACA,OAAA/D,EAAAu+B,YAAAx6B,KACK/D,EAAAu+B,YAAA7yB,EAAArD,WAHF,GA+KHtD,EAAA2F,UAnJA,WAEA,IAAAmX,EAAA,gBAAAq/B,IAAA,IAAAvgD,KAAAsP,SAAAC,QAAA,GACA,gBAAAizC,GACA,OAAAA,EAAAthC,KAAAshC,EAAAthC,GAAA,MAgJA9c,EAAAgnB,YAvGA,SAAAvsB,EAAAqsB,EAAA+K,GACA,GAAAp4B,EAAAoiB,SAAAiL,GAAA,CACA,IAAAxb,EAAA,GACAA,EAAAwb,EAAA,WACAA,EAAAxb,EAGA,IAAAghB,EAAAuF,KAAAvF,iBAEAA,GAAAsW,EAAA9b,EAAAwF,EAAA,UAAAsW,EAAA9b,EAAAwF,EAAA,OAAAsW,EAAA9b,EAAAwF,EAAA,UACAxF,EAAAwF,EAAA,YAGA,IAAAzvB,EAAA,GA6BA,OA5BA9B,EAAA+rB,EAAA,SAAA9nB,EAAA8d,GAGA,GAFA9d,EAAA8nB,EAAAhK,GAEA,cAAAA,GAAA,oBAAAA,EAAA,CAKA,IAAAuhC,EAAAvhC,EAAAhO,MAAA,8BACAuW,EAAAg5B,EAAA,GACAC,GAAAD,EAAA,QAAAv5C,cAEA,MAAAugB,IAAAi5B,GAAA,MAAAt/C,GAAA,UAAAs/C,GAAA,SAAAt/C,GAAA6yB,KAAA0sB,kBAAA9kD,EAAAmL,QAAAitB,EAAA0sB,iBAAAl5B,GAAA,IAIA,IAAAm5B,EAAA,CACAn5B,YAGA,UAAAi5B,GAAA,QAAAt/C,IACAw/C,EAAAF,GAAAt/C,GAGA,IAAAmtB,EAAA1xB,EAAAgkD,gBAAAD,GACA3hD,EAAAwoB,EAAA,UAAA8G,EACAtvB,EAAAwoB,EAAA,SAAA8G,EAAA,SAtBAtvB,EAAAigB,GAAA9d,IAwBAnC,GA8DAmD,EAAAgzB,aAvDA,SAAArP,EAAA7G,EAAA9d,GACA2kB,EAAAqP,aAAArP,EAAAqP,aAAAlW,EAAA9d,GAAA2kB,EAAA7G,GAAA9d,GAuDAgB,EAAAu0B,aApDA,SAAA5Q,EAAA7G,GACA,OAAA6G,EAAA4Q,aAAA5Q,EAAA4Q,aAAAzX,GAAA6G,EAAA7G,IAoDA9c,EAAA0zC,qBAjDA,SAAAK,GACA,eAAAA,EAEAlzB,EAAA69B,aAAA,kBAEA3K,GAAA,QA6CA/zC,EAAA2+C,UA7BA,SAAAC,EAAAC,GACA,IAAAC,EAAArlD,EAAA8zB,gBACAoV,EAAA,GAKA,OAJAlpC,EAAAsB,KAAA6jD,EAAA,SAAAtiC,GACA,IAAAQ,EAAA+hC,EAAAviC,IACAwiC,EAAA/kD,IAAA+iB,KAAA6lB,EAAAn2B,KAAAsQ,GAAAgiC,EAAApxB,IAAA5Q,EAAA,MAAAtQ,KAAA8P,KAEA,CACAqmB,OACAmc,iCC3fcplD,EAAQ,IAEtB8P,QAFA,IAIAwrC,EAAYt7C,EAAQ,GAEpBqB,EAAAi6C,EAAAj6C,KACAyC,EAAAw3C,EAAAx3C,OACAkX,EAAAsgC,EAAAtgC,IACAvG,EAAA6mC,EAAA7mC,QACAvJ,EAAAowC,EAAApwC,QACAmT,EAAAi9B,EAAAj9B,SACA8D,EAAAm5B,EAAAn5B,SACA0R,EAAAynB,EAAAznB,cACA3hB,EAAAopC,EAAAppC,OACA0M,EAAA08B,EAAA18B,MACAymC,EAAA/J,EAAA+J,MACAp0C,EAAAqqC,EAAArqC,OACAgc,EAAAquB,EAAAruB,MAEArhB,EAAgB5L,EAAQ,IAExBslD,EAAYtlD,EAAQ,IAEpB4nB,EAAqB5nB,EAAQ,IAE7BulD,EAAoBvlD,EAAQ,KAE5BwlD,EAAwBxlD,EAAQ,KAIhCylD,EAFoBzlD,EAAQ,KAE5BylD,qBAuCAC,EAAA,cASAp+B,EAAAg+B,EAAAr0C,OAAA,CACAlE,KAAA,SAAAyR,EAAAoyB,EAAA1mB,EAAAyE,GACAzE,KAAA,GACA9jB,KAAAoY,OAAA,KAOApY,KAAAwkB,OAAA,IAAA06B,EAAAp7B,GAKA9jB,KAAAu/C,eAAAh3B,GAEAH,UAAA,SAAAhQ,EAAAoQ,GACA1c,IAAAwzC,KAAAlnC,GAAA,gCAEApY,KAAAu/C,eAAAn3B,UAAAhQ,EAAAoQ,GAEAxoB,KAAAuxB,YAAA,OAUAA,YAAA,SAAA31B,GACA,IAAA01B,GAAA,EACA/I,EAAAvoB,KAAAu/C,eAEA,IAAA3jD,GAAA,aAAAA,EAAA,CACA,IAAA4jD,EAAAj3B,EAAAk3B,YAAA,aAAA7jD,GAEAoE,KAAAoY,QAAA,aAAAxc,GAGAoE,KAAAgtB,cACAhtB,KAAA0/C,YAAAF,IA2eA,SAAAA,GACAA,IAGAx/C,KAAAoY,OAAA,GACApY,KAAAoY,OAAAknC,GAAA,EAQAt/C,KAAA4kB,eAAA6I,EAAA,CACAzZ,OAAA,KASAhU,KAAA2/C,eACA3/C,KAAA4/C,kBA9CA,SAAAxnC,EAAA0L,GAGA,IAAA+7B,EAAAznC,EAAAlU,QAAAkU,EAAA0nC,WACA7kD,EAAA6oB,EAAA,SAAAi8B,EAAAv8C,GACA,eAAAA,GAAAq8C,GAKAr+B,EAAA7U,SAAAnJ,KACA,kBAAAu8C,EACA3nC,EAAA5U,GAAA4U,EAAA5U,GAAAy7C,EAAA7mC,EAAA5U,GAAAu8C,GAAA,GAAAvnC,EAAAunC,GAEA,MAAA3nC,EAAA5U,KACA4U,EAAA5U,GAAAu8C,MAgCAC,CAAAR,EAAAx/C,KAAAwkB,OAAApM,QAEA6mC,EAAAO,EAAAL,GAAA,GACAn/C,KAAA0/C,YAAAF,IA1gBAxyC,KAAAhN,KAAAw/C,GAMAluB,GAAA,EAOA,GAJA,aAAA11B,GAAA,UAAAA,GACAoE,KAAAgtB,eAGApxB,GAAA,aAAAA,GAAA,aAAAA,EAAA,CACA,IAAAqkD,EAAA13B,EAAA23B,kBAAAlgD,MACAigD,IAAAjgD,KAAA0/C,YAAAO,GAAA3uB,GAAA,GAGA,IAAA11B,GAAA,aAAAA,GAAA,UAAAA,EAAA,CACA,IAAAukD,EAAA53B,EAAA63B,eAAApgD,UAAA8kB,MAEAq7B,EAAA7vC,QACArV,EAAAklD,EAAA,SAAAE,GACArgD,KAAA0/C,YAAAW,EAAA/uB,GAAA,IACStxB,MAIT,OAAAsxB,GAMAouB,YAAA,SAAA9c,GACA,IAAAxqB,EAAApY,KAAAoY,OACAkoC,EAAAtgD,KAAA4kB,eACA27B,EAAA,GACAlB,EAAAr/C,MAGA/E,EAAA2nC,EAAA,SAAA4d,EAAAj7B,GACA,MAAAi7B,IAIAh/B,EAAA7U,SAAA4Y,GAGOA,GACPg7B,EAAA7zC,KAAA6Y,GAFAnN,EAAAmN,GAAA,MAAAnN,EAAAmN,GAAA/M,EAAAgoC,GAAAvB,EAAA7mC,EAAAmN,GAAAi7B,GAAA,MAKAh/B,EAAA/B,kBAAA8gC,EAAA/+B,EAAA5U,uBAEA,SAAA2Y,EAAAqQ,GACA,IAAA6qB,EAAAj7C,EAAA+C,iBAAAq6B,EAAArd,IACA43B,EAAA33C,EAAAs3C,gBAAAwD,EAAArmD,IAAAsrB,GAAAk7B,GACAj7C,EAAA03C,cAAAC,GAEAliD,EAAAkiD,EAAA,SAAA3gC,EAAApD,GACA,IAAA2Y,EAAAvV,EAAApE,OAEAH,EAAA8Z,KACAvV,EAAA8gC,QAAA/3B,WACA/I,EAAA8gC,QAAAjxC,QAkeA,SAAAkZ,EAAAm7B,EAAAC,GAIA,OAHAD,EAAA9kD,KAAA8kD,EAAA9kD,KAAA+kD,IAAAt0C,QACAmV,EAAAtC,iBAAAqG,EAAAm7B,GApeAxhC,CAAAqG,EAAAwM,EAAAvV,EAAAygC,UAGA,IAAA2D,EA+cA,SAAAN,EAAAzzC,GACAwB,EAAAxB,KACAA,IAAA,CAAAA,GAAA,IAGA,IAAA9C,EAAA,GAIA,OAHA9O,EAAA4R,EAAA,SAAAjR,GACAmO,EAAAnO,IAAA0kD,EAAArmD,IAAA2B,IAAA,IAAAsJ,UAEA6E,EAxdA82C,CAAAP,EAAA1qB,GACAxd,EAAAmN,GAAA,GACA+6B,EAAA1yB,IAAArI,EAAA,IACAtqB,EAAAkiD,EAAA,SAAA2D,EAAA1nC,GACA,IAAAyT,EAAAi0B,EAAA7D,MACAyD,EAAAI,EAAA1oC,OAKA,GAJAtM,EAAAmM,EAAAyoC,IAAA7zB,EAAA,8BAIA6zB,EAGS,CACT,IAAAK,EAAAv/B,EAAArV,SAAAoZ,EAAAu7B,EAAAxD,QAAAjxC,SAAA,GAEA,GAAAwgB,KAAAle,cAAAoyC,EACAl0B,EAAArpB,KAAAs9C,EAAAxD,QAAA95C,KAEAqpB,EAAA6yB,YAAAgB,EAAA1gD,MACA6sB,EAAAm0B,cAAAN,GAAA,OACW,CAEX,IAAAO,EAAAp2C,EAAA,CACA+1C,kBACApmD,eAAA4e,GACa0nC,EAAAxD,SACbzwB,EAAA,IAAAk0B,EAAAL,EAAA1gD,UAAAihD,GACAp2C,EAAAgiB,EAAAo0B,GACAp0B,EAAAlmB,KAAA+5C,EAAA1gD,UAAAihD,GAKAp0B,EAAAm0B,cAAA,eAvBAn0B,EAAA6yB,YAAA,GAAuC1/C,MACvC6sB,EAAAm0B,cAAA,IAAyC,GA0BzCV,EAAArmD,IAAAsrB,GAAAnM,GAAAyT,EACAzU,EAAAmN,GAAAnM,GAAAyT,EAAAzU,QACOpY,MAEP,WAAAulB,GACA27B,EAAAlhD,KAAAsgD,EAAArmD,IAAA,YA1DA+F,MA8DAA,KAAA4/C,kBAAAnyB,EAAAztB,KAAA2/C,eAAA3/C,KAAA2/C,gBAAA,KAQAh3B,UAAA,WACA,IAAAvQ,EAAAI,EAAAxY,KAAAoY,QAgBA,OAfAnd,EAAAmd,EAAA,SAAA2L,EAAAwB,GACA,GAAA/D,EAAA7U,SAAA4Y,GAAA,CAGA,IAFA,IAEAvd,GAFA+b,EAAAve,EAAA+C,iBAAAwb,IAEAzT,OAAA,EAAqCtI,GAAA,EAAQA,IAE7CxC,EAAA22C,UAAAp4B,EAAA/b,KACA+b,EAAA3T,OAAApI,EAAA,GAIAoQ,EAAAmN,GAAAxB,YAGA3L,EAAAknC,GACAlnC,GAMA+oC,SAAA,WACA,OAAAnhD,KAAAwkB,QAQAc,aAAA,SAAAC,EAAArqB,GACA,IAAAquB,EAAAvpB,KAAA4kB,eAAA3qB,IAAAsrB,GAEA,GAAAgE,EACA,OAAAA,EAAAruB,GAAA,IAcAyjD,gBAAA,SAAAtxC,GACA,IAAAkY,EAAAlY,EAAAkY,SAEA,IAAAA,EACA,SAGA,IAUAxoB,EAVAqc,EAAA/L,EAAA+L,MACAsK,EAAArW,EAAAqW,GACAlgB,EAAA6J,EAAA7J,KAEA49C,EAAAphD,KAAA4kB,eAAA3qB,IAAAsrB,GAEA,IAAA67B,MAAA9wC,OACA,SAKA,SAAA8I,EACA/K,EAAA+K,KACAA,EAAA,CAAAA,IAGArc,EAAAW,EAAAkX,EAAAwE,EAAA,SAAAle,GACA,OAAAkmD,EAAAlmD,KACO,SAAAsjB,GACP,QAAAA,SAEK,SAAAkF,EAAA,CACL,IAAA29B,EAAAhzC,EAAAqV,GACA3mB,EAAAW,EAAA0jD,EAAA,SAAAE,GACA,OAAAD,GAAAv8C,EAAA4e,EAAA49B,EAAA59B,KAAA,IAAA29B,GAAAC,EAAA59B,cAEK,SAAAlgB,EAAA,CACL,IAAA+9C,EAAAlzC,EAAA7K,GACAzG,EAAAW,EAAA0jD,EAAA,SAAAE,GACA,OAAAC,GAAAz8C,EAAAtB,EAAA89C,EAAA99C,OAAA,IAAA+9C,GAAAD,EAAA99C,gBAIAzG,EAAAqkD,EAAAl8C,QAGA,OAAAs8C,EAAAzkD,EAAAsQ,IA+BAusB,eAAA,SAAAvsB,GACA,IAmBAxJ,EAnBAuL,EAAA/B,EAAA+B,MACAmW,EAAAlY,EAAAkY,SACAk8B,EAIA,SAAA5yC,GACA,IAAA6yC,EAAAn8B,EAAA,QACAo8B,EAAAp8B,EAAA,KACAq8B,EAAAr8B,EAAA,OACA,OAAA1W,GAAA,MAAAA,EAAA6yC,IAAA,MAAA7yC,EAAA8yC,IAAA,MAAA9yC,EAAA+yC,GAMO,KANP,CACAr8B,WAEAnM,MAAAvK,EAAA6yC,GACAh+B,GAAA7U,EAAA8yC,GACAn+C,KAAAqL,EAAA+yC,IAbAC,CAAAzyC,GACArS,EAAA0kD,EAAAzhD,KAAA2+C,gBAAA8C,GAAAzhD,KAAA4kB,eAAA3qB,IAAAsrB,GACA,OAeA1hB,EAfA29C,EAAAzkD,EAAAsQ,GAgBAA,EAAA3P,SAAAmG,EAAAwJ,EAAA3P,QAAAmG,GA2BAimB,cAAA,SAAAvE,EAAAxT,EAAAvL,GACA,IAAA85C,EAAAtgD,KAAA4kB,eAEA,uBAAAW,EACA/e,EAAAuL,EACAA,EAAAwT,EACA+6B,EAAArlD,KAAA,SAAA6mD,EAAAh4C,GACA7O,EAAA6mD,EAAA,SAAA/3B,EAAA3Q,GACArH,EAAA/E,KAAAxG,EAAAsD,EAAAigB,EAAA3Q,YAGK,GAAA2C,EAAAwJ,GACLtqB,EAAAqlD,EAAArmD,IAAAsrB,GAAAxT,EAAAvL,QACK,GAAAyR,EAAAsN,GAAA,CACL,IAAAw8B,EAAA/hD,KAAA45B,eAAArU,GACAtqB,EAAA8mD,EAAAhwC,EAAAvL,KAQAw7C,gBAAA,SAAAx+C,GACA,IAAAwQ,EAAAhU,KAAA4kB,eAAA3qB,IAAA,UAEA,OAAAyD,EAAAsW,EAAA,SAAAiuC,GACA,OAAAA,EAAAz+C,YAQA2uB,iBAAA,SAAAj4B,GACA,OAAA8F,KAAA4kB,eAAA3qB,IAAA,UAAAC,IAUAyD,gBAAA,SAAA0O,GACA,IAAA2H,EAAAhU,KAAA4kB,eAAA3qB,IAAA,UAEA,OAAAyD,EAAAsW,EAAA,SAAAiuC,GACA,OAAAA,EAAA51C,eAOA61C,UAAA,WACA,OAAAliD,KAAA4kB,eAAA3qB,IAAA,UAAAiL,SAMAi9C,eAAA,WACA,OAAAniD,KAAA4kB,eAAA3qB,IAAA,UAAAqW,QAUAod,WAAA,SAAA3b,EAAAvL,GAEAvL,EAAA+E,KAAA2/C,eAAA,SAAAyC,GACA,IAAApuC,EAAAhU,KAAA4kB,eAAA3qB,IAAA,UAAAmoD,GAEArwC,EAAA/E,KAAAxG,EAAAwN,EAAAouC,IACKpiD,OASLqiD,cAAA,SAAAtwC,EAAAvL,GACAvL,EAAA+E,KAAA4kB,eAAA3qB,IAAA,UAAA8X,EAAAvL,IAWA3I,iBAAA,SAAAwO,EAAA0F,EAAAvL,GAEAvL,EAAA+E,KAAA2/C,eAAA,SAAAyC,GACA,IAAApuC,EAAAhU,KAAA4kB,eAAA3qB,IAAA,UAAAmoD,GAEApuC,EAAA3H,aACA0F,EAAA/E,KAAAxG,EAAAwN,EAAAouC,IAEKpiD,OAULsiD,oBAAA,SAAAj2C,EAAA0F,EAAAvL,GACA,OAAAvL,EAAA+E,KAAArC,gBAAA0O,GAAA0F,EAAAvL,IAMA5I,iBAAA,SAAA5D,GAEA,aAAAgG,KAAA4/C,kBAAA3lD,IAAAD,EAAAQ,iBAMA+nD,wBAAA,WACA,OAAAviD,KAAA2/C,gBAAA,IAAAz6C,SAOAs9C,aAAA,SAAAzwC,EAAAvL,GAGA06C,EAAAlhD,KADAtC,EAAAsC,KAAA4kB,eAAA3qB,IAAA,UAAA8X,EAAAvL,KAGAwmB,YAAA,SAAAnmB,GACA,IAAAy5C,EAAAtgD,KAAA4kB,eACAs8B,EAAAlhD,KAAAsgD,EAAArmD,IAAA,WACA,IAAAwoD,EAAA,GACAnC,EAAArlD,KAAA,SAAA6mD,EAAAh4C,GACA24C,EAAA/1C,KAAA5C,KAEA0X,EAAA/B,kBAAAgjC,EAAAjhC,EAAA5U,uBAAA,SAAA9C,EAAA8rB,GACA36B,EAAAqlD,EAAArmD,IAAA6P,GAAA,SAAAigB,IACA,WAAAjgB,IAMA,SAAA9P,EAAA6M,GACA,GAAAA,EAAA,CACA,IAAAuS,EAAAvS,EAAA67C,YACAh/B,EAAA7c,EAAAytC,SACA9wC,EAAAqD,EAAA0tC,WACA,aAAAn7B,GAAApf,EAAAQ,iBAAA4e,GAAA,MAAAsK,GAAA1pB,EAAA0pB,QAAA,MAAAlgB,GAAAxJ,EAAAwJ,UAXAm/C,CAAA54B,EAAAljB,KAAAkjB,EAAAiD,qBAyGA,SAAAk0B,EAAAvmD,EAAAwjC,GACAxjC,EAAAilD,kBAAAnyB,EAAA9yB,EAAAglD,eAAA/qC,EAAAupB,EAAA,SAAAnqB,GACA,OAAAA,EAAAxZ,kBACG,IAOH,SAAAgnD,EAAAM,EAAAz0C,GAGA,OAAAA,EAAA2O,eAAA,WAAAte,EAAAokD,EAAA,SAAAR,GACA,OAAAA,EAAAj1C,UAAAgB,EAAAhB,UACGy1C,EASHj7B,EAAA3F,EAAAk+B,GACA,IAAA3kD,EAAAymB,EACAjhB,EAAAC,QAAAzF,uBChsBA,IAAA4qB,EAAazrB,EAAQ,IAErBiM,EAAAwf,EAAAxf,UACA0C,EAAA8c,EAAA9c,iBAoBA3C,EAAAC,IAcA,IAAApL,EAAA,CACAyyB,kBAAA,WACAtnB,EAAA5F,MAAA4iD,SAAA,EACAh9C,EAAA5F,MAAA6iD,aAAA,IAUAhhB,oBAAA,SAAAr+B,EAAA+N,EAAAuxC,GAEA,IAAAC,EAAAn9C,EADA2L,KAAAvR,MAEA4iD,EAAAG,EAAAH,UAAA,EACAC,EAAAE,EAAAF,aAAAE,EAAAF,cAAA,GAEA,GAAAA,EAAA7mC,eAAAxY,GACA,OAAAq/C,EAAAr/C,GAGA,IAAAw/C,EAAAz6C,EAAAvI,KAAA/F,IAAA,aACAgpD,EAAAjjD,KAAA/F,IAAA,iBACAipD,EAAA,MAAAJ,GAAAG,EArCA,SAAAE,EAAAL,GAGA,IAFA,IAAAM,EAAAD,EAAA7yC,OAEAtI,EAAA,EAAiBA,EAAAo7C,EAAgBp7C,IACjC,GAAAm7C,EAAAn7C,GAAAsI,OAAAwyC,EACA,OAAAK,EAAAn7C,GAIA,OAAAm7C,EAAAC,EAAA,GA4BAC,CAAAJ,EAAAH,GAAAE,EAIA,IAFAE,KAAAF,IAEAE,EAAA5yC,OAAA,CAIA,IAAApM,EAAAg/C,EAAAN,GAOA,OALAp/C,IACAq/C,EAAAr/C,GAAAU,GAGA6+C,EAAAH,YAAA,GAAAM,EAAA5yC,OACApM,KAGAjE,EAAAC,QAAAzF,uBChFA,IAAAomB,EAAcjnB,EAAQ,KAEtBsG,EAAA2gB,UAEA,IAAA8iB,EAAa/pC,EAAQ,IAErBsG,EAAAyjC,SAEA,IAAAC,EAAahqC,EAAQ,IAErBsG,EAAA0jC,SAEA,IAAAjqC,EAAaC,EAAQ,GAErBknB,EAAgBlnB,EAAQ,KAExBsG,EAAAgE,MAAA4c,EAEA,IAAArb,EAAkB7L,EAAQ,IAE1ByhC,EAAiBzhC,EAAQ,IAEzBsG,EAAAojD,OAAAjoB,EAEA,IAAAC,EAAiB1hC,EAAQ,IAEzBsG,EAAAkN,OAAAkuB,EAEA,IAAAioB,EAAgB3pD,EAAQ,KAExB2pD,EAAAtyC,SACA/Q,EAAA+Q,SAAAsyC,EAAAtyC,SAEA,IAAAuyC,EAAe5pD,EAAQ,KAEvBsG,EAAAq7B,OAAAioB,EAEA,IAAAC,EAAmB7pD,EAAQ,KAE3BsG,EAAAujD,eAEA,IAAAC,EAAY9pD,EAAQ,KAEpBsG,EAAAyjD,KAAAD,EAEA,IAAAE,EAAahqD,EAAQ,IAErBsG,EAAAg/C,MAAA0E,EAEA,IAAAC,EAAYjqD,EAAQ,KAEpBsG,EAAA4jD,KAAAD,EAEA,IAAAE,EAAWnqD,EAAQ,IAEnBsG,EAAA6gB,IAAAgjC,EAwBA,IAAAC,EAAAP,EACAQ,EAAA,GACAtqD,EAAAsB,KAAA,wKAAAuI,GACAygD,EAAAzgD,GAAA7J,EAAA6J,KAEA,IAAArD,EAAA,GACAxG,EAAAsB,KAAA,mdAAAuI,GACArD,EAAAqD,GAAAiC,EAAAjC,KAEAtD,EAAA8jD,eACA9jD,EAAAgkD,KAAAD,EACA/jD,EAAAC,+BC1FA,IAAAk7B,EAAiBzhC,EAAQ,IAyBzB4hC,EAAAH,EAAAjf,MAoCA,SAAA2f,EAAAxd,GAEA,OAAA8c,EAAA2B,iBAAAze,GAAA,EAGA,SAAAu6B,EAAA5c,EAAAhhC,EAAAs/B,GACA0B,EAAAhhC,GAAAY,KAAAqB,IAAArB,KAAAgB,IAAAo/B,EAAAhhC,GAAAs/B,EAAA,IAAAA,EAAA,IAIA,SAAA2pB,EAAAjoB,EAAA1B,IACA8C,SAAApB,EAAA,MAAAA,EAAA,GAAA1B,EAAA,KACA8C,SAAApB,EAAA,MAAAA,EAAA,GAAA1B,EAAA,IACAse,EAAA5c,EAAA,EAAA1B,GACAse,EAAA5c,EAAA,EAAA1B,GAEA0B,EAAA,GAAAA,EAAA,KACAA,EAAA,GAAAA,EAAA,IAIAh8B,EAAAs9B,uBA/CA,SAAAhD,EAAAgC,EAAAW,EAAAC,GACA,IAAArgC,EAAA,GACAsgC,EAAA7C,EAAA,GAAAA,EAAA,GACAjc,EAAAxhB,EAAAwhB,SAAA8c,EAAAkgB,KAAAle,EAAAb,GAAA,GAEA,MAAAW,GAAA5e,EAAA4e,IACA5e,EAAAxhB,EAAAwhB,SAAA4e,GAGA,MAAAC,GAAA7e,EAAA6e,IACA7e,EAAAxhB,EAAAwhB,SAAA6e,GAIA,IAAAL,EAAAhgC,EAAAo/B,kBAAAJ,EAAAxd,GAIA,OADA4lC,EADApnD,EAAAm/B,eAAA,CAAAV,EAAA1/B,KAAAgiC,KAAAtD,EAAA,GAAAjc,KAAAwe,GAAAvB,EAAA1/B,KAAA+hC,MAAArD,EAAA,GAAAjc,KAAAwe,IACAvC,GACAz9B,GA8BAmD,EAAA67B,uBACA77B,EAAAikD,iCCpFA,IAAAxqD,EAAaC,EAAQ,GAErBqgC,EAAYrgC,EAAQ,KAEpByhC,EAAiBzhC,EAAQ,IAEzB6hC,EAAoB7hC,EAAQ,KA2B5BwqD,EAAAnqB,EAAAvzB,UACA29C,EAAA5oB,EAAA/0B,UACAs2B,EAAA3B,EAAA2B,iBACAsnB,EAAAjpB,EAAAjf,MACAmoC,EAAAzoD,KAAA+hC,MACA2mB,EAAA1oD,KAAAgiC,KACA2mB,EAAA3oD,KAAA68C,IACA+L,EAAA5oD,KAAA28C,IACAkM,EAAA1qB,EAAApvB,OAAA,CACAjP,KAAA,MACAijB,KAAA,GACAjU,aAAA,WACAqvB,EAAAzvB,MAAAxK,KAAAsK,WACAtK,KAAA4kD,eAAA,IAAAnpB,GAOAO,SAAA,SAAAC,GACA,IAAA4oB,EAAA7kD,KAAA4kD,eACApqB,EAAAx6B,KAAAo6B,QACA0qB,EAAAD,EAAAnpD,YACA,OAAA/B,EAAAib,IAAAyvC,EAAAroB,SAAAhvB,KAAAhN,KAAAi8B,GAAA,SAAAzd,GACA,IAAAumC,EAAA1pB,EAAAjf,MAAAqoC,EAAAzkD,KAAA6e,KAAAL,IAIA,OAFAumC,EAAAvmC,IAAAgc,EAAA,IAAAqqB,EAAAG,SAAAC,EAAAF,EAAAD,EAAA,IAAAC,EACAA,EAAAvmC,IAAAgc,EAAA,IAAAqqB,EAAAK,SAAAD,EAAAF,EAAAD,EAAA,IAAAC,GAEK/kD,OAOLu8B,cAAA8nB,EAAA9nB,cAMAnB,SAAAipB,EAAAjpB,SAMAV,MAAA,SAAAlc,GAEA,OADAA,EAAA4lC,EAAA1pB,MAAA1tB,KAAAhN,KAAAwe,GACAimC,EAAAzkD,KAAA6e,KAAAL,IAOAuc,UAAA,SAAAtC,EAAAxiB,GACA,IAAA4I,EAAA7e,KAAA6e,KACA4Z,EAAAisB,EAAAjsB,GAAAisB,EAAA7lC,GACA5I,EAAAyuC,EAAAzuC,GAAAyuC,EAAA7lC,GACAwlC,EAAAtpB,UAAA/tB,KAAAhN,KAAAy4B,EAAAxiB,IAMAva,UAAA,WACA,IAAAmjB,EAAA7e,KAAA6e,KACA2b,EAAA4pB,EAAA1oD,UAAAsR,KAAAhN,MACAw6B,EAAA,GAAAiqB,EAAA5lC,EAAA2b,EAAA,IACAA,EAAA,GAAAiqB,EAAA5lC,EAAA2b,EAAA,IAEA,IAAAqqB,EAAA7kD,KAAA4kD,eACAE,EAAAD,EAAAnpD,YAGA,OAFAmpD,EAAAG,WAAAxqB,EAAA,GAAAyqB,EAAAzqB,EAAA,GAAAsqB,EAAA,KACAD,EAAAK,WAAA1qB,EAAA,GAAAyqB,EAAAzqB,EAAA,GAAAsqB,EAAA,KACAtqB,GAMAG,YAAA,SAAAH,GACAx6B,KAAA4kD,eAAAjqB,YAAAH,GAEA,IAAA3b,EAAA7e,KAAA6e,KACA2b,EAAA,GAAAkqB,EAAAlqB,EAAA,IAAAkqB,EAAA7lC,GACA2b,EAAA,GAAAkqB,EAAAlqB,EAAA,IAAAkqB,EAAA7lC,GACAulC,EAAAzpB,YAAA3tB,KAAAhN,KAAAw6B,IAMAK,oBAAA,SAAA1/B,EAAAb,GAGA0F,KAAA26B,YAAAx/B,EAAA2/B,qBAAAxgC,KAOA4iC,UAAA,SAAAioB,GACAA,KAAA,GACA,IAAA3qB,EAAAx6B,KAAAo6B,QACAiD,EAAA7C,EAAA,GAAAA,EAAA,GAEA,KAAA6C,IAAAjf,KAAAif,GAAA,IAIA,IAAA9e,EAAA8c,EAAAigB,SAAAje,GAQA,IAPA8nB,EAAA9nB,EAAA9e,GAEA,KACAA,GAAA,KAIAwa,MAAAxa,IAAAziB,KAAAC,IAAAwiB,GAAA,GAAAziB,KAAAC,IAAAwiB,GAAA,GACAA,GAAA,GAGA,IAAAkf,EAAA,CAAApC,EAAAjf,MAAAooC,EAAAhqB,EAAA,GAAAjc,MAAA8c,EAAAjf,MAAAmoC,EAAA/pB,EAAA,GAAAjc,OACAve,KAAAq6B,UAAA9b,EACAve,KAAA87B,YAAA2B,IAOAA,WAAA,SAAA1L,GACAsyB,EAAA5mB,WAAAzwB,KAAAhN,KAAA+xB,GACA,IAAA8yB,EAAA7kD,KAAA4kD,eACAC,EAAAG,SAAAjzB,EAAA6L,OACAinB,EAAAK,SAAAnzB,EAAA4L,UAcA,SAAAsnB,EAAAzmC,EAAA4mC,GACA,OAAAd,EAAA9lC,EAAAwe,EAAAooB,IAZAzrD,EAAAsB,KAAA,iCAAA6N,GACA67C,EAAAj+C,UAAAoC,GAAA,SAAA0V,GAEA,OADAA,EAAAkmC,EAAAlmC,GAAAkmC,EAAA1kD,KAAA6e,MACAulC,EAAAt7C,GAAAkE,KAAAhN,KAAAwe,MAIAmmC,EAAA13B,OAAA,WACA,WAAA03B,GAOA,IAAAlqD,EAAAkqD,EACA1kD,EAAAC,QAAAzF,sBChMA,IAAAd,EAAaC,EAAQ,GAErBwG,EAAmBxG,EAAQ,IAI3BC,EAFcD,EAAQ,IAEtBC,aAEAyhC,EAAiB1hC,EAAQ,IAsBzBqB,EAAAtB,EAAAsB,KAKAoqD,EAAA,iDAKAC,EAAA,qDAEA,SAAAC,EAAAC,EAAAx/C,EAAA3J,EAAAI,EAAAgpD,GACA,IAAAvkD,EAAA,EACAC,EAAA,EAEA,MAAA1E,IACAA,EAAA2hB,KAGA,MAAAqnC,IACAA,EAAArnC,KAGA,IAAAsnC,EAAA,EACA1/C,EAAA2/C,UAAA,SAAAtd,EAAAntC,GACA,IAIA0qD,EACAC,EALAhT,EAAAxK,EAAAwK,SACAvwC,EAAA+lC,EAAA7C,kBACAsgB,EAAA9/C,EAAAkC,QAAAhN,EAAA,GACA6qD,EAAAD,KAAAtgB,kBAIA,kBAAAggB,EAAA,CACA,IAAAQ,EAAA1jD,EAAA9F,OAAAupD,KAAA7kD,EAAAoB,EAAApB,EAAA,IACA0kD,EAAA1kD,EAAA8kD,GAGAvpD,GAAA4rC,EAAA4d,SACA/kD,EAAA,EACA0kD,EAAAI,EACA7kD,GAAAukD,EAAArpD,EACAqpD,EAAApjD,EAAA5B,QAGAglD,EAAA5pD,KAAAqB,IAAAuoD,EAAApjD,EAAA5B,YAEK,CACL,IAAAwlD,EAAA5jD,EAAA5B,QAAAqlD,KAAA5kD,EAAAmB,EAAAnB,EAAA,IACA0kD,EAAA1kD,EAAA+kD,GAEAT,GAAApd,EAAA4d,SACA/kD,GAAAwkD,EAAArpD,EACA8E,EAAA,EACA0kD,EAAAK,EACAR,EAAApjD,EAAA9F,OAEAkpD,EAAA5pD,KAAAqB,IAAAuoD,EAAApjD,EAAA9F,OAIA6rC,EAAA4d,UAIApT,EAAA,GAAA3xC,EACA2xC,EAAA,GAAA1xC,EACA,eAAAqkD,EAAAtkD,EAAA0kD,EAAAvpD,EAAA8E,EAAA0kD,EAAAxpD,KAaA,IAAA8pD,EAAAZ,EASAa,EAAAzsD,EAAAuyB,MAAAq5B,EAAA,YASAc,EAAA1sD,EAAAuyB,MAAAq5B,EAAA,cAoDA,SAAAe,EAAAC,EAAAC,EAAAC,GACAA,EAAAnrB,EAAAorB,kBAAAD,GAAA,GACA,IAAAE,EAAAH,EAAAhqD,MACAoqD,EAAAJ,EAAA9lD,OACAgqB,EAAA7wB,EAAA0sD,EAAA77B,KAAAi8B,GACAh8B,EAAA9wB,EAAA0sD,EAAA57B,IAAAi8B,GACAh8B,EAAA/wB,EAAA0sD,EAAA37B,MAAA+7B,GACA97B,EAAAhxB,EAAA0sD,EAAA17B,OAAA+7B,GACApqD,EAAA3C,EAAA0sD,EAAA/pD,MAAAmqD,GACAjmD,EAAA7G,EAAA0sD,EAAA7lD,OAAAkmD,GACAC,EAAAJ,EAAA,GAAAA,EAAA,GACAK,EAAAL,EAAA,GAAAA,EAAA,GACA/gB,EAAA6gB,EAAA7gB,OA8CA,OA5CA3M,MAAAv8B,KACAA,EAAAmqD,EAAA/7B,EAAAk8B,EAAAp8B,GAGAqO,MAAAr4B,KACAA,EAAAkmD,EAAA/7B,EAAAg8B,EAAAl8B,GAGA,MAAA+a,IAQA3M,MAAAv8B,IAAAu8B,MAAAr4B,KACAglC,EAAAihB,EAAAC,EACApqD,EAAA,GAAAmqD,EAEAjmD,EAAA,GAAAkmD,GAKA7tB,MAAAv8B,KACAA,EAAAkpC,EAAAhlC,GAGAq4B,MAAAr4B,KACAA,EAAAlE,EAAAkpC,IAKA3M,MAAArO,KACAA,EAAAi8B,EAAA/7B,EAAApuB,EAAAsqD,GAGA/tB,MAAApO,KACAA,EAAAi8B,EAAA/7B,EAAAnqB,EAAAmmD,GAIAN,EAAA77B,MAAA67B,EAAA37B,OACA,aACAF,EAAAi8B,EAAA,EAAAnqD,EAAA,EAAAiqD,EAAA,GACA,MAEA,YACA/7B,EAAAi8B,EAAAnqD,EAAAsqD,EAIA,OAAAP,EAAA57B,KAAA47B,EAAA17B,QACA,aACA,aACAF,EAAAi8B,EAAA,EAAAlmD,EAAA,EAAA+lD,EAAA,GACA,MAEA,aACA97B,EAAAi8B,EAAAlmD,EAAAmmD,EAKAn8B,KAAA,EACAC,KAAA,EAEAoO,MAAAv8B,KAEAA,EAAAmqD,EAAAG,EAAAp8B,GAAAE,GAAA,IAGAmO,MAAAr4B,KAEAA,EAAAkmD,EAAAC,EAAAl8B,GAAAE,GAAA,IAGA,IAAAvoB,EAAA,IAAAlC,EAAAsqB,EAAA+7B,EAAA,GAAA97B,EAAA87B,EAAA,GAAAjqD,EAAAkE,GAEA,OADA4B,EAAAmkD,SACAnkD,EAkNA,SAAAykD,EAAAl2C,EAAAm2C,GAIA,OAHAA,GAAAn2C,GAAA5V,EAAAoqD,EAAA,SAAA7hD,GACAwjD,EAAAhrC,eAAAxY,KAAAqN,EAAArN,GAAAwjD,EAAAxjD,MAEAqN,EAGA3Q,EAAAmlD,kBACAnlD,EAAAolD,WACAplD,EAAAimD,MACAjmD,EAAAkmD,OACAlmD,EAAAmmD,OACAnmD,EAAA+mD,iBAhWA,SAAAV,EAAAC,EAAAC,GACA,IAAAE,EAAAH,EAAAhqD,MACAoqD,EAAAJ,EAAA9lD,OACAQ,EAAArH,EAAA0sD,EAAArlD,EAAAylD,GACAxlD,EAAAtH,EAAA0sD,EAAAplD,EAAAylD,GACAzjD,EAAAtJ,EAAA0sD,EAAApjD,GAAAwjD,GACAvjD,EAAAvJ,EAAA0sD,EAAAnjD,GAAAwjD,GAMA,OALA7tB,MAAA73B,IAAA63B,MAAA4C,WAAA4qB,EAAArlD,SAAA,IACA63B,MAAA51B,IAAA41B,MAAA4C,WAAA4qB,EAAApjD,UAAAwjD,IACA5tB,MAAA53B,IAAA43B,MAAA4C,WAAA4qB,EAAAplD,SAAA,IACA43B,MAAA31B,IAAA21B,MAAA4C,WAAA4qB,EAAAnjD,UAAAwjD,GACAH,EAAAnrB,EAAAorB,kBAAAD,GAAA,GACA,CACAjqD,MAAAV,KAAAqB,IAAAgG,EAAAjC,EAAAulD,EAAA,GAAAA,EAAA,MACA/lD,OAAA5E,KAAAqB,IAAAiG,EAAAjC,EAAAslD,EAAA,GAAAA,EAAA,QAmVAvmD,EAAAomD,gBACApmD,EAAAgnD,gBAtLA,SAAAx/C,EAAA6+C,EAAAC,EAAAC,EAAA10B,GACA,IAAA1wB,GAAA0wB,MAAAo1B,IAAAp1B,EAAAo1B,GAAA,GACAvtC,GAAAmY,MAAAo1B,IAAAp1B,EAAAo1B,GAAA,GACAC,EAAAr1B,KAAAq1B,cAAA,MAEA,GAAA/lD,GAAAuY,EAAA,CAIA,IAAAtX,EAEA,WAAA8kD,EACA9kD,EAAA,UAAAoF,EAAA9L,KAAA,IAAAwE,EAAA,KAAAmmD,EAAA/pD,OAAA,GAAA+pD,EAAA7lD,QAAA,GAAAgH,EAAA89B,uBAIA,GAFAljC,EAAAoF,EAAA89B,kBAEA99B,EAAA2/C,qBAAA,CACA,IAAAxZ,EAAAnmC,EAAAsmC,qBAGA1rC,IAAAkW,SACAotB,eAAAiI,GAKA0Y,EAAAD,EAAA3sD,EAAAu1B,SAAA,CACA1yB,MAAA8F,EAAA9F,MACAkE,OAAA4B,EAAA5B,QACG6lD,GAAAC,EAAAC,GAIH,IAAAa,EAAA5/C,EAAAmrC,SACArxC,EAAAH,EAAAklD,EAAArlD,EAAAoB,EAAApB,EAAA,EACAI,EAAAsY,EAAA2sC,EAAAplD,EAAAmB,EAAAnB,EAAA,EACAuG,EAAAimC,KAAA,mBAAAyZ,EAAA,CAAA5lD,EAAAF,GAAA,CAAAgmD,EAAA,GAAA9lD,EAAA8lD,EAAA,GAAAhmD,MAmJApB,EAAAqnD,eA3IA,SAAAnvC,EAAAovC,GACA,aAAApvC,EAAAktC,EAAAkC,GAAA,WAAApvC,EAAAktC,EAAAkC,GAAA,WAAApvC,EAAAktC,EAAAkC,GAAA,KA2IAtnD,EAAAunD,iBA9GA,SAAAC,EAAA9kB,EAAA7Q,IACAp4B,EAAAse,SAAA8Z,OAAA,IACA,IAAA41B,EAAA51B,EAAA41B,YACAhuD,EAAA0U,QAAAs5C,OAAA,CAAAA,MACA,IAAAC,EAAA3I,EAAAqG,EAAA,MACAuC,EAAA5I,EAAAqG,EAAA,MAIA,SAAArG,EAAA6I,EAAAN,GACA,IAAAO,EAAA,GACAC,EAAA,EACAC,EAAA,GACAC,EAAA,EAaA,GAXAjtD,EAAA6sD,EAAA,SAAAtkD,GACAykD,EAAAzkD,GAAAkkD,EAAAlkD,KAEAvI,EAAA6sD,EAAA,SAAAtkD,GAGA2kD,EAAAvlB,EAAAp/B,KAAAukD,EAAAvkD,GAAAykD,EAAAzkD,GAAAo/B,EAAAp/B,IACA4kD,EAAAL,EAAAvkD,IAAAwkD,IACAI,EAAAH,EAAAzkD,IAAA0kD,MAGAP,EAAAH,GAQA,OANAY,EAAAxlB,EAAAklB,EAAA,IACAG,EAAAH,EAAA,SACOM,EAAAxlB,EAAAklB,EAAA,MACPG,EAAAH,EAAA,UAGAG,EAOA,GA3BA,IA2BAC,GAAAF,EAKA,IAAAA,GAhCA,EAiCA,OAAAD,EAGA,QAAA//C,EAAA,EAAuBA,EAAA8/C,EAAAx3C,OAAkBtI,IAAA,CACzC,IAAAxE,EAAAskD,EAAA9/C,GAEA,IAAAmgD,EAAAJ,EAAAvkD,IAAA2kD,EAAAT,EAAAlkD,GAAA,CACAukD,EAAAvkD,GAAAkkD,EAAAlkD,GACA,OAIA,OAAAukD,EAjBA,OAAAE,EAqBA,SAAAE,EAAA38C,EAAAhI,GACA,OAAAgI,EAAAwQ,eAAAxY,GAGA,SAAA4kD,EAAA58C,EAAAhI,GACA,aAAAgI,EAAAhI,IAAA,SAAAgI,EAAAhI,GAGA,SAAA6kD,EAAAP,EAAAj3C,EAAAm2C,GACA/rD,EAAA6sD,EAAA,SAAAtkD,GACAqN,EAAArN,GAAAwjD,EAAAxjD,KAnEA6kD,EAAA/C,EAAA,GAAAoC,EAAAE,GACAS,EAAA/C,EAAA,GAAAoC,EAAAG,IAwGA3nD,EAAAooD,gBA3BA,SAAAtB,GACA,OAAAD,EAAA,GAA4BC,IA2B5B9mD,EAAA6mD,uCCvfA,IAAAptD,EAAaC,EAAQ,GAErB2uD,EAAkB3uD,EAAQ,IAE1ByhC,EAAiBzhC,EAAQ,IAuDzB,IAAA8sD,EAAA/sD,EAAA+sD,kBACA8B,EAAA,aACAC,EAAA,CACAC,IAAA,QACAC,IAAA,OACAC,IAAA,OACAC,IAAA,SACAC,IAAA,SAGA,SAAAC,EAAA/B,GACA,aAAAA,EAAA,IAAAA,EAAA,IAAAj5C,QAAAy6C,EAAA,SAAAtP,EAAA1rC,GACA,OAAAi7C,EAAAj7C,KAIA,IAAAw7C,EAAA,8BAEAC,EAAA,SAAAC,EAAAC,GACA,UAAWD,GAAA,MAAAC,EAAA,GAAAA,GAAA,KA8FX,SAAAC,EAAAlQ,EAAAr6C,GAEA,aAAAkG,OAAA,EAAAlG,GADAq6C,GAAA,IACA5oC,QAAA4oC,EAyCA,IAAAmQ,EAAAd,EAAAc,aA8CAnpD,EAAA+8B,UArOA,SAAA/7B,GACA,OAAA63B,MAAA73B,GACA,KAGAA,KAAA,IAAAgJ,MAAA,MACA,GAAA6D,QAAA,iCAA2C,QAAA7M,EAAAoP,OAAA,MAAApP,EAAA,QAgO3ChB,EAAAopD,YAvNA,SAAApQ,EAAAqQ,GASA,OARArQ,MAAA,IAAAl0C,cAAA+I,QAAA,iBAAAiB,EAAAw6C,GACA,OAAAA,EAAApO,gBAGAmO,GAAArQ,IACAA,IAAAlE,OAAA,GAAAoG,cAAAlC,EAAAh0C,MAAA,IAGAg0C,GA+MAh5C,EAAAwmD,oBACAxmD,EAAA6oD,aACA7oD,EAAAyzC,UAhLA,SAAA8V,EAAAC,EAAAjV,GACA96C,EAAA0U,QAAAq7C,KACAA,EAAA,CAAAA,IAGA,IAAAC,EAAAD,EAAAp5C,OAEA,IAAAq5C,EACA,SAKA,IAFA,IAAAhV,EAAA+U,EAAA,GAAA/U,OAAA,GAEA3sC,EAAA,EAAiBA,EAAA2sC,EAAArkC,OAAkBtI,IAAA,CACnC,IAAA4hD,EAAAZ,EAAAhhD,GACAyhD,IAAA17C,QAAAk7C,EAAAW,GAAAX,EAAAW,EAAA,IAGA,QAAAT,EAAA,EAAyBA,EAAAQ,EAAuBR,IAChD,QAAAz0C,EAAA,EAAmBA,EAAAigC,EAAArkC,OAAkBoE,IAAA,CACrC,IAAA8J,EAAAkrC,EAAAP,GAAAxU,EAAAjgC,IACA+0C,IAAA17C,QAAAk7C,EAAAD,EAAAt0C,GAAAy0C,GAAA1U,EAAAsU,EAAAvqC,MAIA,OAAAirC,GAwJAvpD,EAAA2pD,gBA5IA,SAAAJ,EAAAha,EAAAgF,GAIA,OAHA96C,EAAAsB,KAAAw0C,EAAA,SAAAvwC,EAAA8d,GACAysC,IAAA17C,QAAA,IAAwBiP,EAAA,IAAYy3B,EAAAsU,EAAA7pD,QAEpCuqD,GAyIAvpD,EAAAwzC,iBA5HA,SAAA3hB,EAAA+3B,GAKA,IAAA5lD,GAJA6tB,EAAAp4B,EAAAoiB,SAAAgW,GAAA,CACA7tB,MAAA6tB,EACA+3B,gBACG/3B,GAAA,IACH7tB,MACAtI,EAAAm2B,EAAAn2B,KAEAs4C,GADA4V,EAAA/3B,EAAA+3B,aACA/3B,EAAAmiB,YAAA,QACA6V,EAAAh4B,EAAAg4B,UAAA,IAEA,OAAA7lD,EAIA,SAAAgwC,EACA,YAAAt4C,EAAA,oJAAsKmtD,EAAA7kD,GAAA,KAA2C4lD,GAAA,iIAA4If,EAAA7kD,GAAA,KAA2C4lD,GAAA,gBAGxY,CACA5V,aACA1oB,QAAA,UAAiBu+B,EAAA,OACjBnmD,MAAA,CACAM,UAXA,IAiHAhE,EAAA8pD,WAjFA,SAAAP,EAAAvqD,EAAA+qD,GACA,SAAAR,GAAA,UAAAA,GAAA,YAAAA,GAAA,cAAAA,GAAA,SAAAA,IACAA,EAAA,eAGA,IAAAS,EAAA7uB,EAAA6f,UAAAh8C,GACAirD,EAAAF,EAAA,SACA9oD,EAAA+oD,EAAA,MAAAC,EAAA,cACAC,EAAAF,EAAA,MAAAC,EAAA,aACA18C,EAAAy8C,EAAA,MAAAC,EAAA,UACA9oD,EAAA6oD,EAAA,MAAAC,EAAA,WACAtkB,EAAAqkB,EAAA,MAAAC,EAAA,aACAzS,EAAAwS,EAAA,MAAAC,EAAA,aACAE,EAAAH,EAAA,MAAAC,EAAA,kBAEA,OADAV,IAAA17C,QAAA,KAAAq7C,EAAAgB,EAAA,IAAAr8C,QAAA,IAAAq8C,GAAAr8C,QAAA,OAAA5M,GAAA4M,QAAA,KAAA5M,EAAA,KAAA4M,QAAA,KAAAq7C,EAAA37C,EAAA,IAAAM,QAAA,IAAAN,GAAAM,QAAA,KAAAq7C,EAAA/nD,EAAA,IAAA0M,QAAA,IAAA1M,GAAA0M,QAAA,KAAAq7C,EAAAvjB,EAAA,IAAA93B,QAAA,IAAA83B,GAAA93B,QAAA,KAAAq7C,EAAA1R,EAAA,IAAA3pC,QAAA,IAAA2pC,GAAA3pC,QAAA,MAAAq7C,EAAAiB,EAAA,KAoEAnqD,EAAAoqD,aA1DA,SAAApR,GACA,OAAAA,IAAAlE,OAAA,GAAAoG,cAAAlC,EAAAn0C,OAAA,GAAAm0C,GA0DAh5C,EAAAmpD,eACAnpD,EAAAqqD,oBAzCA,SAAAx4B,GACA,OAAAw2B,EAAA/iB,gBAAAzT,EAAA8e,KAAA9e,EAAAy4B,KAAAz4B,EAAA2Z,UAAA3Z,EAAA4Z,kBAAA5Z,EAAAma,YAAAna,EAAA6Z,eAAA7Z,EAAAwY,KAAAxY,EAAA04B,WAyCAvqD,EAAAwqD,YA/BA,SAAA7Z,EAAA2Z,EAAA9e,EAAAC,EAAAO,EAAA3B,EAAAkgB,EAAA7e,GACA,OAAA2c,EAAA/iB,gBAAAqL,EAAA2Z,EAAA9e,EAAAC,EAAAO,EAAAN,EAAArB,EAAAkgB,IA+BAvqD,EAAAyqD,WAtBA,SAAAC,EAAA/5C,GACA,cAAAA,GAAA,UAAAA,EAAA,CACA,IAAAg6C,EAAAv8C,OAAAw8C,OACAD,EAAAE,OAAA,KACAF,EAAAG,SAAAJ,OAEAt8C,OAAAw8C,KAAAF,EAAA/5C,yBCjQA,IAAAlX,EAAaC,EAAQ,GAyBrBqxD,EAAA,CAIAhxD,IAAA,SAAAqe,EAAA0E,EAAAd,GACA,IAAAhd,EAAAvF,EAAA6e,OAAA0yC,EAAA5yC,IAAA,IAA6D0E,IAC7D,OAAAd,GAAAviB,EAAA0U,QAAAnP,OAAAoR,OAAA,GAAApR,IAGAgsD,EAAA,CACAhnD,MAAA,CACAinD,OAAA,sBACAC,SAAA,mBAEAlwC,SAAA,CACAiwC,OAAA,QACAC,SAAA,OAEA/vC,gBAAA,CACA8vC,OAAA,OACAC,SAAA,OAEA9vC,eAAA,CACA6vC,OAAA,QACAC,SAAA,OAEA7vC,WAAA,CACA4vC,OAAA,OACAC,SAAA,OAEA3vC,QAAA,CACA0vC,OAAA,OACAC,SAAA,OAEAp0C,OAAA,CACAm0C,OAAA,iCACAC,SAAA,UAEA70C,WAAA,CACA40C,OAAA,QACAC,SAAA,QAGA3wD,EAAAwwD,EACAhrD,EAAAC,QAAAzF,qBC7CAwF,EAAAC,QAAA,CACAkO,WALA,SAAAyC,GACA,0BAAAA,GAKAxC,QAjBA,SAAAwC,GACA,yBAAAw6C,OAAA3kD,UAAA6yC,SAAA/uC,MAAAqG,IAiBA5V,KAvCA,SAAAqwD,EAAAp6C,GAKA,IAJA,IAAAlJ,EAAA,EACAsI,EAAAg7C,EAAAh7C,OAGStI,EAAAsI,IAGT,IAFAY,EAAAo6C,EAAAtjD,MADqBA,4BCOrB,IAAArO,EAAaC,EAAQ,GAErBmnB,EAAUnnB,EAAQ,IAIlBiM,EAFajM,EAAQ,IAErBiM,UAEA0lD,EAAa3xD,EAAQ,KAErBuP,EAAAoiD,EAAApiD,kBACA8B,EAAAsgD,EAAAtgD,iBAEAugD,EAAqB5xD,EAAQ,KAE7B6xD,EAAqB7xD,EAAQ,KAE7B8xD,EAAqB9xD,EAAQ,KAE7B+xD,EAAqB/xD,EAAQ,KAyB7BitB,EAAAltB,EAAAktB,MACAjhB,EAAAC,IASA,SAAAq5C,EAAA9mC,EAAAoyB,EAAA7vC,GAKAqF,KAAAwqC,cAMAxqC,KAAArF,UAMAqF,KAAAoY,SA+GA,SAAAwzC,EAAApgD,EAAAqgD,EAAArhB,GACA,QAAAxiC,EAAA,EAAiBA,EAAA6jD,EAAAv7C,UAEjBu7C,EAAA7jD,IAOA,OAFAwD,KAAA,kBAAAA,IAAAqgD,EAAA7jD,IAAA,OAPqCA,KAkBrC,OAJA,MAAAwD,GAAAg/B,IACAh/B,EAAAg/B,EAAAvwC,IAAA4xD,IAGArgD,EAIA,SAAAsgD,EAAAvxD,EAAAqG,GACA,IAAAmrD,EAAAnmD,EAAArL,GAAAuxD,UACA,OAAAC,IAAA/+C,KAAAzS,EAAAqG,GAAArG,EAAAiwC,YA7HA0U,EAAAx4C,UAAA,CACAiI,YAAAuwC,EAMAv4C,KAAA,KAKA+4C,YAAA,SAAAtnC,GACAze,EAAAslD,MAAAj/C,KAAAoY,UAAA,IAQAne,IAAA,SAAA2G,EAAAorD,GACA,aAAAprD,EACAZ,KAAAoY,OAGAwzC,EAAA5rD,KAAAoY,OAAApY,KAAAisD,UAAArrD,IAAAorD,GAAAF,EAAA9rD,KAAAY,KAQA+W,WAAA,SAAAqF,EAAAgvC,GACA,IAAA5zC,EAAApY,KAAAoY,OACAoG,EAAA,MAAApG,MAAA4E,GACAwtB,GAAAwhB,GAAAF,EAAA9rD,KAAAgd,GAMA,OAJA,MAAAwB,GAAAgsB,IACAhsB,EAAAgsB,EAAA7yB,WAAAqF,IAGAwB,GAQAkK,SAAA,SAAA9nB,EAAA4pC,GACA,IACA0hB,EAEA,WAAAhN,EAHA,MAAAt+C,EAAAZ,KAAAoY,OAAAwzC,EAAA5rD,KAAAoY,OAAAxX,EAAAZ,KAAAisD,UAAArrD,IAEA4pC,MAAA0hB,EAAAJ,EAAA9rD,KAAAY,KAAAsrD,EAAAxjC,SAAA9nB,GACAZ,KAAArF,UAMAkK,QAAA,WACA,aAAA7E,KAAAoY,QAEA4U,YAAA,aAEAxU,MAAA,WAEA,WAAAjV,EADAvD,KAAA2O,aACAhV,EAAA6e,MAAAxY,KAAAoY,UAEAnL,YAAA,SAAAC,KAGA++C,UAAA,SAAArrD,GAKA,MAJA,kBAAAA,IACAA,IAAAsJ,MAAA,MAGAtJ,GAQAurD,mBAAA,SAAAJ,GACAnmD,EAAA5F,MAAA8rD,UAAAC,GAEA3e,mBAAA,WACA,IAAArsB,EAAAgQ,KAAA,CACA,SAAA/wB,KAAAoY,OAAAiO,UACA,QAAArmB,KAAAoY,OAAAiO,UACO,GAAArmB,KAAAwqC,YACP,OAAAxqC,KAAAwqC,YAAA4C,wBAmCAjkC,EAAA+1C,GACAj0C,EAAAi0C,GACAr4B,EAAAq4B,EAAAsM,GACA3kC,EAAAq4B,EAAAuM,GACA5kC,EAAAq4B,EAAAwM,GACA7kC,EAAAq4B,EAAAyM,GACA,IAAAlxD,EAAAykD,EACAj/C,EAAAC,QAAAzF,oCC1OA4wD,OAAAe,eAAAlsD,EAAA,cACAhB,OAAA,IAEAgB,EAAAmsD,QACAnsD,EAAAosD,QAQA,SAAA/7C,GACA,OAAA87C,EAAA97C,KAAA,IAAAA,EAAA3C,OAPA,IAAA2+C,EAAc3yD,EAAQ,KAEtB,SAAAyyD,EAAA97C,GACA,SAAAg8C,EAAAC,eAAAj8C,KAAA,EAAAg8C,EAAAxwC,UAAAxL,EAAA3U,OAAAyvD,OAAAxoB,KAAAtyB,GAAAk8C,MAAAC,GAOA,SAAAA,EAAA1vC,GACA,wCAAAlY,QAAAkY,IAAA,uBCDA,IAAArjB,EAAaC,EAAQ,GAErBslD,EAAYtlD,EAAQ,IAEpB0L,EAAoB1L,EAAQ,KAE5B2xD,EAAa3xD,EAAQ,KAErBwP,EAAAmiD,EAAAniD,sBACAS,EAAA0hD,EAAA1hD,eAIAhE,EAFajM,EAAQ,IAErBiM,UAEAk7B,EAAannC,EAAQ,IAErB+yD,EAAqB/yD,EAAQ,KA2B7BgM,EAAAC,IASA2b,EAAA09B,EAAAr0C,OAAA,CACAjP,KAAA,YAMA8nB,GAAA,GAWAlgB,KAAA,GAMA+hB,SAAA,GAMAlZ,QAAA,GAMA7R,eAAA,EAMA0wD,cAAA,KAMAvwD,QAAA,KAQAimD,gBAAA,GAMA36C,IAAA,KAQA2mD,WAAA,KACAhiD,aAAA,SAAAwN,EAAAoyB,EAAA7vC,EAAAsmD,GACA/B,EAAAlyC,KAAAhN,KAAAoY,EAAAoyB,EAAA7vC,EAAAsmD,GACAjhD,KAAAiG,IAAAX,EAAAY,OAAA,iBAEAS,KAAA,SAAAyR,EAAAoyB,EAAA7vC,EAAAsmD,GACAjhD,KAAA6sD,qBAAAz0C,EAAAzd,IAEAkyD,qBAAA,SAAAz0C,EAAAzd,GACA,IAAAiyD,EAAA5sD,KAAA4sD,WACAE,EAAAF,EAAA7rB,EAAAunB,gBAAAlwC,GAAA,GACA20C,EAAApyD,EAAAwmD,WACAxnD,EAAAslD,MAAA7mC,EAAA20C,EAAA9yD,IAAA+F,KAAAulB,WACA5rB,EAAAslD,MAAA7mC,EAAApY,KAAAgtD,oBAEAJ,GACA7rB,EAAA0mB,iBAAArvC,EAAA00C,EAAAF,IAGAlN,YAAA,SAAAtnC,EAAA6oC,GACAtnD,EAAAslD,MAAAj/C,KAAAoY,UAAA,GACA,IAAAw0C,EAAA5sD,KAAA4sD,WAEAA,GACA7rB,EAAA0mB,iBAAAznD,KAAAoY,SAAAw0C,IAIA5L,cAAA,SAAAN,EAAAuM,KACAD,iBAAA,WACA,IAAAE,EAAAtnD,EAAA5F,MAEA,IAAAktD,EAAAhC,cAAA,CAIA,IAHA,IAAAiC,EAAA,GACAC,EAAAptD,KAAA2O,YAEAy+C,GAAA,CACA,IAAAr7B,EAAAq7B,EAAA1mD,UAAAwkD,cACAn5B,GAAAo7B,EAAAzgD,KAAAqlB,GACAq7B,IAAA7iD,WAKA,IAFA,IAAA2gD,EAAA,GAEAljD,EAAAmlD,EAAA78C,OAAA,EAAsCtI,GAAA,EAAQA,IAC9CkjD,EAAAvxD,EAAAslD,MAAAiM,EAAAiC,EAAAnlD,IAAA,GAGAklD,EAAAhC,gBAGA,OAAAgC,EAAAhC,eAEAmC,uBAAA,SAAA9nC,GACA,OAAAvlB,KAAArF,QAAAgkD,gBAAA,CACAp5B,WACAnM,MAAApZ,KAAA/F,IAAAsrB,EAAA,YACA7B,GAAA1jB,KAAA/F,IAAAsrB,EAAA,cAkBAnc,EAAAoY,EAAA,CACAnY,oBAAA,IAEA/D,EAAAwZ,uBAAA0C,GAEAlc,EAAA8Z,wBAAAoC,EAEA,SAAA1X,GACA,IAAAwjD,EAAA,GACA3zD,EAAAsB,KAAAumB,EAAAhV,qBAAA1C,GAAA,SAAA+B,GACAyhD,IAAAj/B,OAAAxiB,EAAAnF,UAAAkvB,cAAA,MAGA03B,EAAA3zD,EAAAib,IAAA04C,EAAA,SAAA1xD,GACA,OAAAiO,EAAAjO,GAAAoO,OAGA,YAAAF,GAAAnQ,EAAAmL,QAAAwoD,EAAA,eACAA,EAAAC,QAAA,WAGA,OAAAD,IAGA3zD,EAAAktB,MAAArF,EAAAmrC,GACA,IAAAlyD,EAAA+mB,EACAvhB,EAAAC,QAAAzF,sBChOcb,EAAQ,IAEtB8P,QAFA,IAIA/P,EAAaC,EAAQ,GAErBmnB,EAAUnnB,EAAQ,IAElB65C,EAAc75C,EAAQ,IAEtBowD,EAAAvW,EAAAuW,WACAjB,EAAAtV,EAAAsV,WACA9rB,EAAAwW,EAAAxW,UACAyW,EAAAD,EAAAC,iBAEAluC,EAAgB5L,EAAQ,IAExB4nB,EAAqB5nB,EAAQ,IAE7BwlD,EAAwBxlD,EAAQ,KAEhC4zD,EAAsB5zD,EAAQ,KAE9B6zD,EAAc7zD,EAAQ,IAEtB0uD,EAAAmF,EAAAnF,gBACAb,EAAAgG,EAAAhG,iBAIA/hD,EAFY9L,EAAQ,KAEpB8L,WAEAgoD,EAAoB9zD,EAAQ,KAE5B+zD,EAAAD,EAAAC,cACAC,EAAAF,EAAAG,UAIAra,EAFoB55C,EAAQ,KAE5B45C,iBAoBA5tC,EAAAJ,EAAAK,YACA4b,EAAAD,EAAA3W,OAAA,CACAjP,KAAA,kBAKA1B,YAAA,EAEAmB,iBAAA,KAMA6vD,cAAA,KAOA4C,qBAAA,KAKAC,sBAAA,kBAKAC,4BAAA,wBAQApB,WAAA,KACAjmD,KAAA,SAAAyR,EAAAoyB,EAAA7vC,EAAAsmD,GAKAjhD,KAAA9F,YAAA8F,KAAAxF,eACAwF,KAAAiuD,SAAAvoD,EAAA,CACA1J,MAAAkyD,EACA5nD,MAAA6nD,IAEAnuD,KAAAiuD,SAAAznD,QAAA,CACAjM,MAAAyF,MAEAA,KAAA6sD,qBAAAz0C,EAAAzd,GACAgzD,EAAA3tD,MACA,IAAA7E,EAAA6E,KAAAouD,eAAAh2C,EAAAzd,GACA0zD,EAAAlzD,EAAA6E,MACAA,KAAAiuD,SAAAznD,QAAArL,OAMAyK,EAAA5F,MAAAsuD,oBAAAnzD,EAWAozD,EAAAvuD,OAQA6sD,qBAAA,SAAAz0C,EAAAzd,GACA,IAAAiyD,EAAA5sD,KAAA4sD,WACAE,EAAAF,EAAAtE,EAAAlwC,GAAA,GAKAo2C,EAAAxuD,KAAAqM,QAEAmV,EAAA7U,SAAA6hD,KACAA,GAAA,UAGA70D,EAAAslD,MAAA7mC,EAAAzd,EAAAwmD,WAAAlnD,IAAA+F,KAAAqM,UACA1S,EAAAslD,MAAA7mC,EAAApY,KAAAgtD,oBAEAxnD,EAAA82C,gBAAAlkC,EAAA,kBACApY,KAAAyuD,kBAAAr2C,EAAAjd,MAEAyxD,GACAnF,EAAArvC,EAAA00C,EAAAF,IAGAlN,YAAA,SAAAgP,EAAA/zD,GAEA+zD,EAAA/0D,EAAAslD,MAAAj/C,KAAAoY,OAAAs2C,GAAA,GACA1uD,KAAAyuD,kBAAAC,EAAAvzD,MACA,IAAAyxD,EAAA5sD,KAAA4sD,WAEAA,GACAnF,EAAAznD,KAAAoY,OAAAs2C,EAAA9B,GAGAe,EAAA3tD,MACA,IAAA7E,EAAA6E,KAAAouD,eAAAM,EAAA/zD,GACA0zD,EAAAlzD,EAAA6E,MACAA,KAAAiuD,SAAAxpD,QACAzE,KAAAiuD,SAAAznD,QAAArL,OACAyK,EAAA5F,MAAAsuD,oBAAAnzD,EACAozD,EAAAvuD,OAEAyuD,kBAAA,SAAAtzD,GAIA,GAAAA,IAAAxB,EAAAg1D,aAAAxzD,GAGA,IAFA,IAAA+xC,EAAA,SAEAllC,EAAA,EAAqBA,EAAA7M,EAAAmV,OAAiBtI,IACtC7M,EAAA6M,IAAA7M,EAAA6M,GAAA4mD,OACAppD,EAAA82C,gBAAAnhD,EAAA6M,GAAA,QAAAklC,IAUAkhB,eAAA,aAOAl8B,WAAA,SAAA1oB,GAIAxJ,KAAAo5B,aACAlH,WAAA1oB,EAAArO,OAWAC,QAAA,SAAAs3B,GACA,IAAAm8B,EAAAC,EAAA9uD,MAEA,GAAA6uD,EAAA,CACA,IAAA1zD,EAAA0zD,EAAAroD,QAAArL,KACA,aAAAu3B,EAAAv3B,IAAA4zD,cAAAr8B,GAMA,OAAA9sB,EAAA5F,MAAA7E,MAOA6zD,QAAA,SAAA7zD,GACA,IAAA0zD,EAAAC,EAAA9uD,MAEA,GAAA6uD,EAAA,CACA,IAAAroD,EAAAqoD,EAAAroD,QAEAA,EAAArL,UAAA0zD,EAAAI,iBACAJ,EAAAzW,aAAAj9C,EAAAa,SAGAwK,EAAAyvC,WAAA96C,EASA0zD,IAAA7uD,KAAAiuD,WACAznD,EAAArL,QAIAyK,EAAA5F,MAAA7E,QAOA0yD,UAAA,WACA,OAAAD,EAAA5tD,OAOAo5B,WAAA,WACA,OAAAxzB,EAAA5F,MAAAsuD,qBASA/yD,YAAA,WACA,IAAA4rB,EAAAnnB,KAAA3E,iBACA,OAAA8rB,KAAA5rB,aAAA4rB,EAAA5rB,eAiBA05C,cAAA,SAAA9sC,EAAA+mD,EAAAx8B,EAAAwhB,GACA,IAAAlgC,EAAAhU,KAEAmvD,EAAA,UADAjb,KAAA,QACA,aACAkb,EAAA,aAAAlb,EACAmb,EAAA,GACAtF,EAAA,EAkDA,SAAAuF,EAAA9wC,GAEA,OACA01B,aACA1oB,QAAAu9B,EAAA9rB,EAAAze,IACA5a,MAAAyrD,GAIA,IAAAl0D,EAAA6E,KAAA5E,UACAm0D,EAAAp0D,EAAAqD,aAAA,uBACAgxD,EAAAD,EAAAj/C,OACApR,EAAAc,KAAAqX,YAAAlP,GACAsnD,EAAA91D,EAAA0U,QAAAnP,GACAgF,EAAA/I,EAAAwxB,cAAAxkB,EAAA,SAEAxO,EAAAse,SAAA/T,MAAAwrD,aACAxrD,KAAAwrD,WAAA,QAAwCxrD,OAGxCA,KAAA,cAEA,IACAsnB,GADAgkC,EAAA,GAAAC,IAAAD,EAtEA,SAAAtwD,GAGA,IAAAywD,EAAAh2D,EAAAsgD,OAAA/6C,EAAA,SAAAywD,EAAAnxC,EAAAtjB,GACA,IAAA00D,EAAAz0D,EAAA00D,iBAAA30D,GACA,OAAAy0D,GAAAC,IAAA,IAAAA,EAAAE,SAAA,MAAAF,EAAAG,cACO,GACPhzD,EAAA,GAMA,SAAAizD,EAAAxxC,EAAAlkB,GACA,IAAA21D,EAAA90D,EAAA00D,iBAAAv1D,GAEA,GAAA21D,IAAA,IAAAA,EAAAC,UAAAJ,QAAA,CAIA,IAAAK,EAAAF,EAAAr0D,KACAw0D,EAAA,MAAAp8C,EAAA9Z,YAAA,KAAA6vD,EACAsG,EAAA3c,EAAA,CACAxvC,QACAtI,KAAA,UACAs4C,aACA6V,SAAAqG,IAEAE,EAAA,kBAAAD,MAAA7kC,QACA+kC,GAAAZ,EAAAW,EAAAvH,EAAAkH,EAAAF,aAAA,cACAhH,EAAA,YAAAoH,EAAA3xC,EAAA,YAAA2xC,EAAAjB,EAAA,GAAAlF,EAAA,sBAAAxrC,GAAAye,EAAAze,IACA+xC,GAAAxzD,EAAA2P,KAAA6jD,GAEAnB,IACAC,EAAAe,GAAAlsD,IACA6lD,IA3BAwF,EAAAj/C,OAAA3W,EAAAsB,KAAAs0D,EAAA,SAAAj1D,GACA01D,EAAAxc,EAAAr4C,EAAAgN,EAAA7N,QAEAX,EAAAsB,KAAAiE,EAAA8wD,GA4BA,IAAAb,EAAAQ,EAAAP,EAAA,gBACA5jC,EAAA2jC,EAAApyD,EAAAuO,KAAA6jD,GAAA,MACA,OACAjb,aACA1oB,UACA5nB,MAAAyrD,GA0BAmB,CAAAtxD,GAAAowD,EAAAE,EAAAhc,EAAAr4C,EAAAgN,EAAAonD,EAAA,IAAAE,EAAAvwD,EAAA,GAAAA,IACAssB,QACA4kC,EAAAp8C,EAAA9Z,YAAA,KAAA6vD,EACA0G,EAAA/c,EAAA,CACAxvC,QACAtI,KAAA,OACAs4C,aACA6V,SAAAqG,IAEAf,EAAAe,GAAAlsD,IACA6lD,EACA,IAAAvmD,EAAArI,EAAAq+B,QAAArxB,GACAosC,EAAAv0C,KAAAwD,KAEAgC,EAAAg4C,gBAAAx9C,QACAu0C,EAAA,IAGAA,IAAAwU,EAAAxU,IAAA2a,EAAA,KAAAC,GAAA,GACA,IAAAuB,EAAA,kBAAAD,MAAAjlC,QAEA,OACAmlC,KAFAzB,EAAAwB,EAAAnc,EAAA/oB,EAAA+oB,EAAAmc,GAAAltD,EAAAulD,EAAAvlD,GAAA,KAAAgoB,KAGA6jC,YAOAjiB,mBAAA,WACA,GAAArsB,EAAAgQ,KACA,SAGA,IAAA6/B,EAAA5wD,KAAA2X,WAAA,aAQA,OANAi5C,GACA5wD,KAAA5E,UAAAY,QAAAgE,KAAA2X,WAAA,wBACAi5C,GAAA,GAIAA,GAEA5jC,YAAA,WACAhtB,KAAAiuD,SAAAxpD,SAEAo9B,oBAAA,SAAAr+B,EAAA+N,EAAAuxC,GACA,IAAAnoD,EAAAqF,KAAArF,QAEAuJ,EAAAk7C,EAAAvd,oBAAA70B,KAAAhN,KAAAwD,EAAA+N,EAAAuxC,GAMA,OAJA5+C,IACAA,EAAAvJ,EAAAknC,oBAAAr+B,EAAA+N,EAAAuxC,IAGA5+C,GAOA2sD,kBAAA,SAAAC,GACA,OAAA9wD,KAAAo5B,aAAA56B,aAAAsyD,GAAA,IAOAC,eAAA,WACA,OAAA/wD,KAAA/F,IAAA,gBAOA+2D,wBAAA,WACA,OAAAhxD,KAAA/F,IAAA,yBAWAg3D,mBAAA,KAQAC,mBAAA,KAKAC,SAAA,KAOAC,mBAAA,KAOAxoD,gBAAA,OAUA,SAAA2lD,EAAAv0D,GAGA,IAAAwJ,EAAAxJ,EAAAwJ,KAEAgC,EAAAg4C,gBAAAxjD,KACAA,EAAAwJ,KAIA,SAAAxJ,GACA,IAAAmB,EAAAnB,EAAAo/B,aACAi4B,EAAAl2D,EAAAqD,aAAA,iBACA8yD,EAAA,GAKA,OAJA33D,EAAAsB,KAAAo2D,EAAA,SAAAE,GACA,IAAAtB,EAAA90D,EAAA00D,iBAAA0B,GACAtB,EAAAF,aAAAuB,EAAA5kD,KAAAujD,EAAAF,eAEAuB,EAAAhmD,KAAA,KAZAkmD,CAAAx3D,IAAAwJ,GAeA,SAAA0qD,EAAA1nD,GACA,OAAAA,EAAAjM,MAAA6+B,aAAAp9B,QAGA,SAAAmyD,EAAA3nD,GACA,IAAAxM,EAAAwM,EAAAjM,MAEA,OADAP,EAAAg1D,QAAAh1D,EAAAo/B,aAAAq4B,gBACAC,EAGA,SAAAA,EAAAjiB,EAAAjpC,GAEAA,EAAAyvC,YAAAxG,EAAAx5B,IAAAzP,EAAAyvC,WAAAj6C,SACAwK,EAAAjM,MAAA6+B,aAAAq4B,aAAAjrD,EAAAyvC,YAKA,SAAAoY,EAAAlzD,EAAAnB,GACAL,EAAAsB,KAAAE,EAAAw2D,kBAAA,SAAA7oD,GACA3N,EAAAy2D,WAAA9oD,EAAAnP,EAAAuyB,MAAA2lC,EAAA73D,MAIA,SAAA63D,EAAA73D,GACA,IAAA60D,EAAAC,EAAA90D,GAEA60D,GAEAA,EAAAzW,aAAAp4C,KAAAhE,SAIA,SAAA8yD,EAAA90D,GACA,IAAAotB,GAAAptB,EAAAW,SAAA,IAA4CysB,UAC5C0qC,EAAA1qC,KAAA2qC,YAAA/3D,EAAAiM,KAEA,GAAA6rD,EAAA,CAGA,IAAAjD,EAAAiD,EAAA3b,YAEA,GAAA0Y,EAAA,CACA,IAAAmD,EAAAnD,EAAAmD,aAEAA,IACAnD,EAAAmD,EAAA/3D,IAAAD,EAAAiM,MAIA,OAAA4oD,GA/EAl1D,EAAAktB,MAAApF,EAAA+rC,GACA7zD,EAAAktB,MAAApF,EAAA29B,GAkFA,IAAA3kD,EAAAgnB,EACAxhB,EAAAC,QAAAzF,qCCpmBA,SAAAw3D,GAGA,IAAAj1C,EAAA,uBAEA/c,EAAAC,QAAA,WACA,OAAA+xD,EAAAj1C,IAAAi1C,EAAAj1C,IAAA,8CCYA,IAqBAk1C,EArBsBt4D,EAAQ,IAqB9Bu4D,CAAA,2HAEA13D,EAAA,CACA23D,aAAA,SAAA1zC,GACA,IAAA9a,EAAAsuD,EAAAlyD,KAAA0e,GAKA,OADA9a,EAAAyuD,SAAAryD,KAAAsyD,YAAA1uD,EAAA2uD,WACA3uD,GAEA0uD,YAAA,SAAAC,GACA,MAAAA,IACAA,EAAA,GAGA,IAAAC,EAAAxyD,KAAA/F,IAAA,QACAw4D,EAAA32D,KAAAqB,IAAAo1D,EAAA,GACAG,EAAA,EAAAH,EACA,gBAAAC,GAAA,MAAAA,IAKA,WAAAA,EAAA,CAAAE,KAAA,CAAAD,QAGAxyD,EAAAC,QAAAzF,uBChDA,IAqBAk4D,EArBsB/4D,EAAQ,IAqB9Bu4D,CAAA,mGAEA13D,EAAA,CACAm4D,aAAA,SAAAl0C,EAAAC,GACA,OAAAg0C,EAAA3yD,KAAA0e,EAAAC,KAGA1e,EAAAC,QAAAzF,uBC5BA,IAAA8tD,EAAkB3uD,EAAQ,IAE1B6L,EAAkB7L,EAAQ,IAqB1Bi5D,EAAA,sBACAp4D,EAAA,CAMAq4D,aAAA,SAAAppB,GACA,IAAA/uC,EAAAqF,KAAArF,QACA,OAAAqF,KAAA2X,WAAA,YAAA+xB,GAAA/uC,IAAAV,IAAA44D,GAAA,OAOAzhB,QAAA,WACA,OAAA3rC,EAAA2rC,QAAA,CACA9F,UAAAtrC,KAAA2X,WAAA,aACA4zB,WAAAvrC,KAAA2X,WAAA,cACA6zB,SAAAxrC,KAAA2X,WAAA,YACA8zB,WAAAzrC,KAAA2X,WAAA,eACK3X,KAAArF,UAEL+vD,YAAA,SAAA7Z,GACA,OAAA0X,EAAA/iB,gBAAAqL,EAAA7wC,KAAAoxC,UAAApxC,KAAA2X,WAAA,SAAA3X,KAAA2X,WAAA,kBAAA3X,KAAA2X,WAAA,YAAA3X,KAAA2X,WAAA,WAAA3X,KAAA2X,WAAA,cAAA3X,KAAA2X,WAAA,QAAA3X,KAAA2X,WAAA,mBAGA1X,EAAAC,QAAAzF,uBCnDA,IAqBAs4D,EArBsBn5D,EAAQ,IAqB9Bu4D,CAAA,uLAEA13D,EAAA,CACAu4D,aAAA,SAAAt0C,EAAAC,GACA,IAAA/a,EAAAmvD,EAAA/yD,KAAA0e,EAAAC,GAEA0zC,EAAAryD,KAAAizD,oBAEA,OADAZ,IAAAzuD,EAAAyuD,YACAzuD,GAEAqvD,kBAAA,WACA,IAAAT,EAAAxyD,KAAA/F,IAAA,cACA,gBAAAu4D,GAAA,MAAAA,EAAA,gBAAAA,EAAA,cAGAvyD,EAAAC,QAAAzF,qBCLAwF,EAAAC,QAZA,CACAgzD,mBAAA,WACA,OACAxoC,KAAA1qB,KAAA/F,IAAA,QACA0wB,IAAA3qB,KAAA/F,IAAA,OACA2wB,MAAA5qB,KAAA/F,IAAA,SACA4wB,OAAA7qB,KAAA/F,IAAA,UACAuC,MAAAwD,KAAA/F,IAAA,SACAyG,OAAAV,KAAA/F,IAAA,gCCRA,IAAAk5D,EAAA,GAEA,qBAAAC,YACAD,EAAAC,UAAAD,UAAA,IAGA,IAAA14D,EAAA,CAQAyJ,MAAA,gHACAmvD,cAAA,gCAGA9pB,UAAA,CAIAkC,WAAA0nB,EAAAnkD,MAAA,uCAEAw8B,SAAA,GACAF,UAAA,SACAC,WAAA,UAKAhb,UAAA,KACAlK,UAAA,OACAitC,kBAAA,IACAC,wBAAA,IACAhmB,gBAAA,iBACAimB,sBAAA,WACAC,mBAAA,IAEAC,qBAAA,IACAC,YAAA,IAMAC,oBAAA,IAEAC,QAAA,GAEA5zD,EAAAC,QAAAzF,uBCrEA,IAAAd,EAAaC,EAAQ,GAErB4L,EAAgB5L,EAAQ,IAExB4nB,EAAqB5nB,EAAQ,IA2B7BqB,EAAAtB,EAAAsB,KACAud,EAAA7e,EAAA6e,MACA5D,EAAAjb,EAAAib,IACAqqC,EAAAtlD,EAAAslD,MACA6U,EAAA,mBAyDA,SAAAzyC,EAAAzmB,GAKAoF,KAAA8kB,KAAAlqB,EAMAoF,KAAA+zD,iBAAA,GAMA/zD,KAAAg0D,WAAA,GAMAh0D,KAAAi0D,cAQAj0D,KAAAk0D,qBAAA,GAMAl0D,KAAAm0D,cAMAn0D,KAAAo0D,eAoNA,SAAAC,EAAAjlD,EAAAklD,EAAAC,GACA,IAAAC,EAAA,CACAh4D,MAAA83D,EACA5zD,OAAA6zD,EACAE,YAAAH,EAAAC,GAGAG,GAAA,EAeA,OAdA/6D,EAAAsB,KAAAmU,EAAA,SAAAlQ,EAAAyuC,GACA,IAAAgnB,EAAAhnB,EAAA3+B,MAAA8kD,GAEA,GAAAa,KAAA,IAAAA,EAAA,IAIA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAAA3vD,eASA,SAAA8vD,EAAAC,EAAAH,GACA,cAAAA,EACAE,GAAAC,EACG,QAAAH,EACHE,GAAAC,EAGAD,IAAAC,GAdAC,CAAAR,EAAAK,GAAA31D,EAAA01D,KACAF,GAAA,MAGAA,EA/NArzC,EAAA3a,UAAA,CACAiI,YAAA0S,EASA+G,UAAA,SAAA6sC,EAAAzsC,GACAysC,GAEAt7D,EAAAsB,KAAAuK,EAAA+C,iBAAA0sD,EAAAjhD,QAAA,SAAAA,GACAA,KAAA7Y,MAAAxB,EAAAg1D,aAAA36C,EAAA7Y,OAAAxB,EAAAgtB,eAAA3S,EAAA7Y,QAOA85D,EAAAz8C,EAAAy8C,GAGA,IAgPAC,EAAAtyB,EAhPAuyB,EAAAn1D,KAAAm0D,cACAiB,EA6GA,SAAAH,EAAAzsC,EAAA6sC,GACA,IAEAC,EACA9V,EAHA+V,EAAA,GACAC,EAAA,GAIAC,EAAAR,EAAAS,SAEAT,EAAAzV,aACAA,EAAAyV,EAAAzV,aAIAiW,GAAAR,EAAAvpD,WACA8zC,KAAA,GACA+V,GAAAN,EAAAvpD,SAAA,IAAAxG,SAIA,GAAA+vD,EAAAU,MAAA,CACAnW,KAAA,GACA,IAAAmW,EAAAV,EAAAU,MACA16D,EAAA06D,EAAA,SAAAC,GACAA,KAAAx9C,SACAw9C,EAAAxmD,MACAomD,EAAA9oD,KAAAkpD,GACSN,IAETA,EAAAM,MAOApW,IACAA,EAAAyV,GAKAzV,EAAAkW,WACAlW,EAAAkW,SAAAD,GAWA,OAPAx6D,EAAA,CAAAukD,GAAAnxB,OAAAknC,GAAAlnC,OAAA10B,EAAAib,IAAA4gD,EAAA,SAAAG,GACA,OAAAA,EAAAv9C,UACG,SAAAA,GACHnd,EAAAutB,EAAA,SAAAqtC,GACAA,EAAAz9C,EAAAi9C,OAGA,CACA7V,aACA+V,kBACAD,eACAE,cAtKAxoD,KAAAhN,KAAAi1D,EAAAzsC,GAAA2sC,GACAn1D,KAAAo0D,eAAAgB,EAAA5V,WAEA2V,GA4OAD,EA1OAC,EAAA3V,WA0OA5c,EA1OAwyB,EAAA5V,WA4OAvkD,EADA2nC,KAAA,GACA,SAAAkzB,EAAAvwC,GACA,SAAAuwC,EAAA,CAIA,IAAAC,EAAAb,EAAA3vC,GAEA,GAAA/D,EAAA7U,SAAA4Y,GAEK,CACLuwC,EAAAtwD,EAAA+C,iBAAAutD,GACAC,EAAAvwD,EAAA+C,iBAAAwtD,GACA,IAAA5Y,EAAA33C,EAAAs3C,gBAAAiZ,EAAAD,GACAZ,EAAA3vC,GAAA3Q,EAAAuoC,EAAA,SAAA3gC,GACA,OAAAA,EAAApE,QAAAoE,EAAAygC,MAAAgC,EAAAziC,EAAAygC,MAAAzgC,EAAApE,QAAA,GAAAoE,EAAAygC,OAAAzgC,EAAApE,cANA88C,EAAA3vC,GAAA05B,EAAA8W,EAAAD,GAAA,MAhPAV,EAAAG,gBAAAjlD,SACA6kD,EAAAI,gBAAAH,EAAAG,iBAGAH,EAAAI,UAAAllD,SACA6kD,EAAAK,UAAAJ,EAAAI,WAGAJ,EAAAE,eACAH,EAAAG,aAAAF,EAAAE,eAGAt1D,KAAAm0D,cAAAiB,GAQA3V,YAAA,SAAAuW,GACA,IAAAC,EAAAj2D,KAAAm0D,cAOA,OAJAn0D,KAAA+zD,iBAAAn/C,EAAAqhD,EAAAV,gBAAA/8C,GACAxY,KAAAg0D,WAAAp/C,EAAAqhD,EAAAT,UAAAh9C,GACAxY,KAAAi0D,cAAAz7C,EAAAy9C,EAAAX,cACAt1D,KAAAk0D,qBAAA,GACA17C,EAAAw9C,EAKAC,EAAAzW,WAAAx/C,KAAAo0D,iBAOAlU,kBAAA,SAAAvlD,GACA,IAAAyd,EACAm9C,EAAAv1D,KAAA+zD,iBAEA,GAAAwB,EAAAjlD,OAAA,CAGA,IAAA4lD,EAAAv7D,EAAA2qB,aAAA,YAEA4wC,IACA99C,EAAAI,EAAA+8C,EAAAW,EAAAC,oBAAA,IAIA,OAAA/9C,GAOAgoC,eAAA,SAAAzlD,GACA,IA6IAy7D,EAAAC,EA7IA/B,EAAAt0D,KAAA8kB,KAAA8D,WAEA2rC,EAAAv0D,KAAA8kB,KAAA+D,YAEA2sC,EAAAx1D,KAAAg0D,WACAsB,EAAAt1D,KAAAi0D,cACAqC,EAAA,GACAv5D,EAAA,GAEA,IAAAy4D,EAAAllD,SAAAglD,EACA,OAAAv4D,EAIA,QAAAiL,EAAA,EAAAnJ,EAAA22D,EAAAllD,OAA2CtI,EAAAnJ,EAASmJ,IACpDqsD,EAAAmB,EAAAxtD,GAAAoH,MAAAklD,EAAAC,IACA+B,EAAA5pD,KAAA1E,GAkBA,OAZAsuD,EAAAhmD,QAAAglD,IACAgB,EAAA,MAGAA,EAAAhmD,SAmHA8lD,EAnHAE,EAmHAD,EAnHAr2D,KAAAk0D,qBAqHAkC,EAAA9qD,KAAA,OAAA+qD,EAAA/qD,KAAA,QApHAvO,EAAA6X,EAAA0hD,EAAA,SAAAl9C,GACA,OAAAZ,GAAA,IAAAY,EAAAk8C,EAAAl9C,OAAAo9C,EAAAp8C,GAAAhB,WAKApY,KAAAk0D,qBAAAoC,EACAv5D,IA4JA,IAAAtC,EAAA4mB,EACAphB,EAAAC,QAAAzF,uBCjbA,IAAAy6C,EAAYt7C,EAAQ,GAEpBqB,EAAAi6C,EAAAj6C,KACAoT,EAAA6mC,EAAA7mC,QACA4J,EAAAi9B,EAAAj9B,SAEAs+C,EAAkB38D,EAAQ,KAI1B2O,EAFa3O,EAAQ,IAErB2O,iBAwDA,SAAAiuD,EAAAp+C,GACAnd,EAAAw7D,EAAA,SAAAxiC,GACAA,EAAA,KAAA7b,KAAA6b,EAAA,KAAA7b,KACAA,EAAA6b,EAAA,IAAA7b,EAAA6b,EAAA,OAKA,IAAAwiC,EAAA,0DACAC,EAAA,uFAgDAz2D,EAAAC,QA9CA,SAAAkY,EAAAu+C,GACAJ,EAAAn+C,EAAAu+C,GAEAv+C,EAAApE,OAAAzL,EAAA6P,EAAApE,QACA/Y,EAAAmd,EAAApE,OAAA,SAAA4iD,GACA,GAAA3+C,EAAA2+C,GAAA,CAIA,IAAAl8D,EAAAk8D,EAAAh7D,KAEA,YAAAlB,EACA,MAAAk8D,EAAAC,eACAD,EAAAE,KAAAF,EAAAC,mBAEK,WAAAn8D,GAAA,UAAAA,EACL,MAAAk8D,EAAAG,YACAH,EAAAI,UAAAJ,EAAAG,gBAEK,aAAAr8D,EAAA,CACL,IAAAu8D,EAlEA,SAAAllC,EAAAnxB,GACAA,IAAAsJ,MAAA,KAGA,IAFA,IAAAsB,EAAAumB,EAEA/pB,EAAA,EAAiBA,EAAApH,EAAA0P,QAGjB,OAFA9E,OAAA5K,EAAAoH,KADkCA,KAQlC,OAAAwD,EAsDAvR,CAAA28D,EAAA,iBACA,MAAAK,GApDA,SAAAllC,EAAAnxB,EAAA4d,EAAA04C,GACAt2D,IAAAsJ,MAAA,KAIA,IAHA,IACA8S,EADAxR,EAAAumB,EAGA/pB,EAAA,EAAiBA,EAAApH,EAAA0P,OAAA,EAAqBtI,IAGtC,MAAAwD,EAFAwR,EAAApc,EAAAoH,MAGAwD,EAAAwR,GAAA,IAGAxR,IAAAwR,IAGAk6C,GAAA,MAAA1rD,EAAA5K,EAAAoH,OACAwD,EAAA5K,EAAAoH,IAAAwW,GAoCAoP,CAAAgpC,EAAA,kBAAAK,GAGAT,EAAAI,MAGAx+C,EAAA++C,YACA/+C,EAAAkrB,UAAAlrB,EAAA++C,WAGAl8D,EAAAy7D,EAAA,SAAAU,GACA,IAAA1rD,EAAA0M,EAAAg/C,GAEA1rD,IACA2C,EAAA3C,KACAA,EAAA,CAAAA,IAGAzQ,EAAAyQ,EAAA,SAAA0M,GACAo+C,EAAAp+C,8BCrHA,IAAAze,EAAaC,EAAQ,GAErB4L,EAAgB5L,EAAQ,IAqBxBqB,EAAAtB,EAAAsB,KACAgd,EAAAte,EAAAse,SACAo/C,EAAA,mFAEA,SAAAC,EAAAvlC,GACA,IAAAwlC,EAAAxlC,KAAAylC,UAEA,GAAAD,EAIA,QAAAvvD,EAAA,EAAAnJ,EAAAw4D,EAAA/mD,OAA+CtI,EAAAnJ,EAASmJ,IAAA,CACxD,IAAAyvD,EAAAJ,EAAArvD,GACA0vD,EAAAH,EAAAI,OACAC,EAAAL,EAAA/a,SAEAkb,KAAAD,KACA1lC,EAAA0lC,GAAA1lC,EAAA0lC,IAAA,GAEA1lC,EAAA0lC,GAAAE,OAGAh+D,EAAAslD,MAAAltB,EAAA0lC,GAAAE,OAAAD,EAAAD,IAFA1lC,EAAA0lC,GAAAE,OAAAD,EAAAD,GAKAC,EAAAD,GAAA,MAGAG,KAAAH,KACA1lC,EAAA0lC,GAAA1lC,EAAA0lC,IAAA,GAEA1lC,EAAA0lC,GAAAjb,SAGA7iD,EAAAslD,MAAAltB,EAAA0lC,GAAAjb,SAAAob,EAAAH,IAFA1lC,EAAA0lC,GAAAjb,SAAAob,EAAAH,GAKAG,EAAAH,GAAA,OAKA,SAAAI,EAAA9lC,EAAA+lC,EAAAC,GACA,GAAAhmC,KAAA+lC,KAAA/lC,EAAA+lC,GAAAH,QAAA5lC,EAAA+lC,GAAAtb,UAAA,CACA,IAAAwb,EAAAjmC,EAAA+lC,GAAAH,OACAM,EAAAlmC,EAAA+lC,GAAAtb,SAEAwb,IAEAD,GACAhmC,EAAA+lC,GAAAH,OAAA5lC,EAAA+lC,GAAAtb,SAAA,KACA7iD,EAAAu1B,SAAA6C,EAAA+lC,GAAAE,IAEAjmC,EAAA+lC,GAAAE,GAIAC,IACAlmC,EAAAyqB,SAAAzqB,EAAAyqB,UAAA,GACAzqB,EAAAyqB,SAAAsb,GAAAG,IAKA,SAAAC,EAAAnmC,GACA8lC,EAAA9lC,EAAA,aACA8lC,EAAA9lC,EAAA,aACA8lC,EAAA9lC,EAAA,aACA8lC,EAAA9lC,EAAA,SACA8lC,EAAA9lC,EAAA,aAEA8lC,EAAA9lC,EAAA,cAEA8lC,EAAA9lC,EAAA,aAGA,SAAAomC,EAAApmC,EAAAnT,GAEA,IAAAw5C,EAAAngD,EAAA8Z,MAAAnT,GACA2qB,EAAAtxB,EAAAmgD,MAAA7uB,UAEA,GAAAA,EACA,QAAAvhC,EAAA,EAAAnJ,EAAA2G,EAAAk3C,mBAAApsC,OAA8DtI,EAAAnJ,EAASmJ,IAAA,CACvE4W,EAAApZ,EAAAk3C,mBAAA10C,GAEAuhC,EAAAvtB,eAAA4C,KACAw5C,EAAAx5C,GAAA2qB,EAAA3qB,KAMA,SAAAy5C,EAAAtmC,GACAA,IACAmmC,EAAAnmC,GACAomC,EAAApmC,EAAA,SACAA,EAAAyqB,UAAA2b,EAAApmC,EAAAyqB,SAAA,UAgHA,SAAA8b,EAAA7rD,GACA,OAAA9S,EAAA0U,QAAA5B,OAAA,CAAAA,GAAA,GAGA,SAAA8rD,EAAA9rD,GACA,OAAA9S,EAAA0U,QAAA5B,KAAA,GAAAA,IAAA,GA+DAxM,EAAAC,QA5DA,SAAAkY,EAAAu+C,GACA17D,EAAAq9D,EAAAlgD,EAAApE,QAAA,SAAA4iD,GACA3+C,EAAA2+C,IAtHA,SAAAA,GACA,GAAA3+C,EAAA2+C,GAAA,CAIAU,EAAAV,GACAsB,EAAAtB,GACAuB,EAAAvB,EAAA,SAEAuB,EAAAvB,EAAA,cAEAuB,EAAAvB,EAAA,aAEAA,EAAApa,WACA2b,EAAAvB,EAAApa,SAAA,SAEA2b,EAAAvB,EAAApa,SAAA,cAEA2b,EAAAvB,EAAApa,SAAA,eAGAgc,EAAA5B,EAAA4B,aAGAlB,EAAAkB,GACAH,EAAAG,KAGAC,EAAA7B,EAAA6B,YAGAnB,EAAAmB,GACAJ,EAAAI,IAGA,IAAAC,EAAA9B,EAAA8B,SAEAA,GACAL,EAAAK,GAGA,IAyBAF,EAWAC,EApCAt9D,EAAAy7D,EAAAz7D,KAGA,aAAAy7D,EAAAh7D,KAAA,CACAT,KAAAy7D,EAAA+B,MACA,IAAAC,EAAAhC,EAAAiC,OAAAjC,EAAAkC,MAEA,GAAAF,IAAAj/D,EAAAg1D,aAAAiK,GACA,QAAA5wD,EAAA,EAAqBA,EAAA4wD,EAAAtoD,OAAqBtI,IAC1CqwD,EAAAO,EAAA5wD,IAIArO,EAAAsB,KAAA27D,EAAAp9C,WAAA,SAAAuY,GACAmmC,EAAAnmC,KAIA,GAAA52B,IAAAxB,EAAAg1D,aAAAxzD,GACA,IAAA6M,EAAA,EAAmBA,EAAA7M,EAAAmV,OAAiBtI,IACpCqwD,EAAAl9D,EAAA6M,IAOA,IAFAwwD,EAAA5B,EAAA4B,YAEAA,EAAAr9D,KACA,KAAA49D,EAAAP,EAAAr9D,KAEA,IAAA6M,EAAA,EAAmBA,EAAA+wD,EAAAzoD,OAAmBtI,IACtCqwD,EAAAU,EAAA/wD,IAOA,IAFAywD,EAAA7B,EAAA6B,WAEAA,EAAAt9D,KACA,KAAA69D,EAAAP,EAAAt9D,KAEA,IAAA6M,EAAA,EAAmBA,EAAAgxD,EAAA1oD,OAAmBtI,IACtCrO,EAAA0U,QAAA2qD,EAAAhxD,KACAqwD,EAAAW,EAAAhxD,GAAA,IACAqwD,EAAAW,EAAAhxD,GAAA,KAEAqwD,EAAAW,EAAAhxD,IAMA,UAAA4uD,EAAAh7D,MACAu8D,EAAAvB,EAAA,aACAuB,EAAAvB,EAAA,SACAuB,EAAAvB,EAAA,WACG,YAAAA,EAAAh7D,MACHi8D,EAAAjB,EAAAqC,WAAA,aACAt/D,EAAAsB,KAAA27D,EAAAsC,OAAA,SAAAnnC,GACAmmC,EAAAnmC,MAEG,SAAA6kC,EAAAh7D,MACHs8D,EAAAtB,EAAAuC,SAeAC,CAAAxC,KAEA,IAAAyC,EAAA,+EACA1C,GAAA0C,EAAA3sD,KAAA,iDACAzR,EAAAo+D,EAAA,SAAAC,GACAr+D,EAAAq9D,EAAAlgD,EAAAkhD,IAAA,SAAAC,GACAA,IACApB,EAAAoB,EAAA,aACApB,EAAAoB,EAAAC,YAAA,cAIAv+D,EAAAq9D,EAAAlgD,EAAAvD,UAAA,SAAA4kD,GACA,IAAAC,EAAAD,KAAAC,oBACAvB,EAAAuB,EAAA,aACAvB,EAAAuB,KAAAF,YAAA,WAEAv+D,EAAAq9D,EAAAlgD,EAAAuhD,UAAA,SAAAC,GACA/B,EAAA+B,EAAA,aACAzB,EAAAyB,EAAA,YACAzB,EAAAyB,EAAA,cACAzB,EAAAyB,EAAA,eAGA3+D,EAAAq9D,EAAAlgD,EAAA/D,OAAA,SAAAwlD,GACA1B,EAAA0B,EAAA,UAEA5+D,EAAAq9D,EAAAlgD,EAAA0hD,KAAA,SAAAC,GACA9hD,EAAA8hD,KACA1B,EAAA0B,GACA9+D,EAAAq9D,EAAAyB,EAAAC,SAAA,SAAAC,GACA5B,EAAA4B,QAIAh/D,EAAAq9D,EAAAlgD,EAAAs9C,UAAA,SAAAD,GACA4C,EAAA5C,GACAoC,EAAApC,EAAA,SACAoC,EAAApC,EAAA,aACAoC,EAAApC,EAAA,mBACA,IAAAt6D,EAAAs6D,EAAAt6D,KACAxB,EAAA0U,QAAAlT,IAAAxB,EAAAsB,KAAAE,EAAA,SAAAqhB,GACA7iB,EAAAse,SAAAuE,KACAq7C,EAAAr7C,EAAA,SACAq7C,EAAAr7C,EAAA,kBAIAvhB,EAAAq9D,EAAAlgD,EAAArF,SAAA,SAAAmnD,GACArC,EAAAqC,EAAA,aACAj/D,EAAAi/D,EAAAC,QAAA,SAAAC,GACAvC,EAAAuC,EAAA,iBAGAjC,EAAAI,EAAAngD,EAAAohD,aAAA,SACArB,EAAAI,EAAAngD,EAAA03C,SAAA0J,YAAA,+BCxSA,IAAAtkB,EAAYt7C,EAAQ,GAEpB6zB,EAAAynB,EAAAznB,cACAxyB,EAAAi6C,EAAAj6C,KAuDA,SAAAo/D,EAAAC,GACAr/D,EAAAq/D,EAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,GACAC,EAAA,CAAAzhC,SACAb,EAAA,CAAAmiC,EAAAI,qBAAAJ,EAAAK,sBACAC,EAAAN,EAAAp/D,KACA2/D,EAAAP,EAAAO,iBAGAC,EAAAF,EAAAjmD,IAAAwjB,EAAA,SAAA4iC,EAAAC,EAAA9yD,GACA,IAOA+yD,EACAC,EARAnhB,EAAA6gB,EAAA5gE,IAAAsgE,EAAAa,iBAAAjzD,GAGA,GAAA4wB,MAAAihB,GACA,OAAA0gB,EAMAI,EACAK,EAAAN,EAAAp5B,YAAAt5B,GAEA+yD,EAAAL,EAAA5gE,IAAAsgE,EAAAc,mBAAAlzD,GAMA,IAFA,IAAAmzD,EAAAriC,IAEA0F,EAAA67B,EAAA,EAAkC77B,GAAA,EAAQA,IAAA,CAC1C,IAAA48B,EAAAjB,EAAA37B,GAMA,GAJAm8B,IACAK,EAAAI,EAAApgE,KAAAqgE,WAAAD,EAAAF,mBAAAH,IAGAC,GAAA,GACA,IAAA38C,EAAA+8C,EAAApgE,KAAAsgE,cAAAF,EAAAZ,qBAAAQ,GAEA,GAAAnhB,GAAA,GAAAx7B,EAAA,GACAw7B,GAAA,GAAAx7B,EAAA,EACA,CACAw7B,GAAAx7B,EACA88C,EAAA98C,EACA,QAOA,OAFAi8C,EAAA,GAAAzgB,EACAygB,EAAA,GAAAa,EACAb,IAEAI,EAAAa,UAAA1M,QAAA+L,GAEAR,EAAAp/D,KAAA4/D,IAIA96D,EAAAC,QAzFA,SAAAvF,GACA,IAAAghE,EAAAluC,IACA9yB,EAAA+yB,WAAA,SAAA1zB,GACA,IAAAqD,EAAArD,EAAAC,IAAA,SAEA,GAAAoD,EAAA,CACA,IAAAi9D,EAAAqB,EAAA1hE,IAAAoD,IAAAs+D,EAAA/tC,IAAAvwB,EAAA,IACAlC,EAAAnB,EAAAoB,UACAmgE,EAAA,CAEAZ,qBAAAx/D,EAAAo9B,mBAAA,wBACAqiC,qBAAAz/D,EAAAo9B,mBAAA,wBACA6iC,iBAAAjgE,EAAAo9B,mBAAA,oBACA8iC,mBAAAlgE,EAAAo9B,mBAAA,sBACAuiC,iBAAA3/D,EAAAo9B,mBAAA,oBACAp9B,OACAnB,eAGA,IAAAuhE,EAAAH,mBAAAG,EAAAT,mBAAAS,EAAAF,mBACA,OAGAf,EAAAhqD,QAAAnV,EAAAygE,mBAAA,kBAAAtB,IAAAhqD,OAAA,GAAAtW,aACAsgE,EAAA5tD,KAAA6uD,MAGAI,EAAA1gE,KAAAo/D,yBCvDA,IAAAwB,EAAejiE,EAAQ,KAIvBwU,EAFYxU,EAAQ,GAEpBwU,WAoBA3T,EAAA,CACAqhE,mBAAA,EACAxlD,kBAAA,EACAhQ,MAAA,SAAAtM,EAAAW,GACA,IAAAQ,EAAAnB,EAAAoB,UACA2gE,GAAA/hE,EAAA+zD,uBAAA,mBAAA7jD,MAAA,KAEAhG,EAAAlK,EAAAC,IAAA8hE,GACAC,GAAA5tD,EAAAlK,iBAAA23D,EAAA,KAAA33D,EAEAA,IAAA83D,IACA93D,EAAAlK,EAAA6nC,oBACA7nC,EAAAwJ,KAAA,KAAA7I,EAAAwnD,mBAGAhnD,EAAA4b,UAAA,QAAA7S,GACA,IAAA+3D,GAAAjiE,EAAAg0D,6BAAA,yBAAA9jD,MAAA,KACA43B,EAAA9nC,EAAAC,IAAAgiE,GAGA,GAFA9gE,EAAA4b,UAAA,cAAA+qB,IAEAnnC,EAAAiD,iBAAA5D,GAAA,CACAgiE,GACA7gE,EAAAF,KAAA,SAAAC,GACAC,EAAAoc,cAAArc,EAAA,QAAA8gE,EAAAhiE,EAAAsd,cAAApc,OAmBA,OACAgc,SAAA/b,EAAAgc,cAfA,SAAAhc,EAAAD,GACA,IAAAsc,EAAArc,EAAAsc,aAAAvc,GACAgJ,EAAAsT,EAAAvd,IAAA8hE,GAAA,GACAj6B,EAAAtqB,EAAAvd,IAAAgiE,GAAA,GAEA,MAAA/3D,GACA/I,EAAAoc,cAAArc,EAAA,QAAAgJ,GAGA,MAAA49B,GACA3mC,EAAAoc,cAAArc,EAAA,cAAA4mC,IAKA,SAKA7hC,EAAAC,QAAAzF,uBCxEA,IAAAd,EAAaC,EAAQ,GAErB2Z,EAAW3Z,EAAQ,KAInB45C,EAFoB55C,EAAQ,KAE5B45C,iBAkJAvzC,EAAAC,QA9HA,SAAA2jB,EAAAlpB,GACA,IAAAuhE,EAAAvhE,EAAA+tB,SAAA,QAEA,GAAAwzC,EAAAjiE,IAAA,QAEG,GAAAiiE,EAAAjiE,IAAA,eACH4pB,EAAAqP,aAAA,aAAAgpC,EAAAjiE,IAAA,oBADG,CAKH,IAAAkiE,EAAA,EACAxhE,EAAA+yB,WAAA,SAAA1zB,EAAAkB,KACAihE,GACGn8D,MACH,IAGAo8D,EAHAC,EAAAH,EAAAjiE,IAAA,qBACAqiE,EAAAJ,EAAAjiE,IAAA,uBACAsiE,EAAAzgE,KAAAgB,IAAAq/D,EAAAG,GAGA,KAAAH,EAAA,IAIA,IAAAlpD,EAwFA,WACA,IAAAA,EAAAtY,EAAA+tB,SAAA,SAAAtQ,OAMA,OAJAnF,KAAA3C,SACA2C,IAAA,IAGAA,KAAA49B,KA/FA2rB,GAGAJ,EADAnpD,EACAlF,EAAA0uD,EAAA,sBACAxpD,UAGAwpD,EAAA,wBAGA,IAAAC,EAAA,GAEAN,GAAAruD,EAAA0uD,EADAN,EAAA,mDACA,CACAQ,YAAAR,IAEAxhE,EAAA+yB,WAAA,SAAA1zB,EAAAkB,GACA,GAAAA,EAAAqhE,EAAA,CACA,IAAAK,EACAroB,EAAAv6C,EAAAC,IAAA,QACA4iE,EAAA,WAAAV,EAAA,2BAEAS,EAAA7uD,EADA6uD,EAAAH,EAAAloB,EAAAsoB,EAAA,WAAAA,EAAA,eACA,CACAvoB,SAAAt6C,EAAAE,YACAq6C,WAAAv6C,EAAAC,IAAA,QACAS,YA0EAkB,EA1EA5B,EAAAqS,QA2EAkH,EAAAS,OAAAC,UAAArY,IAAA,8BAzEA,IAAAT,EAAAnB,EAAAoB,UACAkT,OAAAnT,OAEAA,EAAAa,QAAAqgE,EAEAO,GAAA7uD,EAAA0uD,EAAA,qBACAK,WAAAT,IAGAO,GAAAH,EAAA,gBAKA,IAFA,IAAAM,EAAA,GAEA/0D,EAAA,EAAuBA,EAAA7M,EAAAa,QAAkBgM,IACzC,GAAAA,EAAAq0D,EAAA,CACA,IAAA74D,EAAArI,EAAAq+B,QAAAxxB,GACA9I,EAAAs0C,EAAAr4C,EAAA6M,GACA+0D,EAAArwD,KAAAqB,EAAA0uD,EAAAj5D,EAAA,qCACAA,OACAtE,WAKA09D,GAAAG,EAAAzxD,KAAAmxD,EAAA,0BAAAA,EAAA,sBACAC,EAAAhwD,KAAAkwD,GA8CA,IAAAhhE,IA3CAwgE,GAAAM,EAAApxD,KAAAmxD,EAAA,qCAAAA,EAAA,iCACA54C,EAAAqP,aAAA,aAAAkpC,IAGA,SAAAruD,EAAAmrC,EAAA8jB,GACA,qBAAA9jB,EACA,OAAAA,EAGA,IAAAn8C,EAAAm8C,EAIA,OAHAv/C,EAAAsB,KAAA+hE,EAAA,SAAA99D,EAAA8d,GACAjgB,IAAAgR,QAAA,IAAAkvD,OAAA,UAA6CjgD,EAAA,UAAsB,KAAA9d,KAEnEnC,EAGA,SAAA0/D,EAAA77D,GACA,IAAAs8D,EAAAhB,EAAAjiE,IAAA2G,GAEA,SAAAs8D,EAAA,CAIA,IAHA,IAAArR,EAAAjrD,EAAAsJ,MAAA,KACAnN,EAAAwW,EAAA+B,KAEAtN,EAAA,EAAqBA,EAAA6jD,EAAAv7C,SAAoBtI,EACzCjL,IAAA8uD,EAAA7jD,IAGA,OAAAjL,EAEA,OAAAmgE,yBCrIA,IAAAvjE,EAAaC,EAAQ,GAErBuG,EAAcvG,EAAQ,IAEtB2uD,EAAkB3uD,EAAQ,IAqB1BmG,EAAAjE,KAAAiE,GAsGAE,EAAAC,QA5FA,SAAAtF,EAAAmpB,GACAA,KAAA,GACApqB,EAAAu1B,SAAAnL,EAAA,CACA8sB,KAAA,UACAssB,UAAA,OACA3xB,SAAA,OACA4xB,UAAA,2BACAC,aAAA,EACAn5D,MAAA,UACAo5D,cAAA,GACA/K,UAAA,EACAjgC,OAAA,IAEA,IAAAtsB,EAAA,IAAA7F,EAAAkF,MACAk4D,EAAA,IAAAp9D,EAAAoC,KAAA,CACAqB,MAAA,CACAY,KAAAuf,EAAAq5C,WAEA9qC,OAAAvO,EAAAuO,OACAD,EAAA,MAEArsB,EAAA6lB,IAAA0xC,GACA,IAAA/S,EAAAzmC,EAAAynB,SAAA,cACAgyB,EAAA,IAAAr9D,EAAAoC,KAAA,CACAqB,MAAA,CACAY,KAAA,OACAqsC,KAAA9sB,EAAA8sB,KACA2Z,OACA1mD,aAAA,QACAmmC,aAAA,GACAa,SAAA/mB,EAAAo5C,WAEA7qC,OAAAvO,EAAAuO,OACAD,EAAA,QAIA,GAFArsB,EAAA6lB,IAAA2xC,GAEAz5C,EAAAs5C,YAAA,CACA,IAAAt7D,EAAA,IAAA5B,EAAAmkC,IAAA,CACA7jC,MAAA,CACAzB,YAAAe,EAAA,EACAd,UAAAc,EAAA,KACAhB,EAAAglB,EAAAu5C,eAEA15D,MAAA,CACAU,OAAAyf,EAAA7f,MACAu5D,QAAA,QACAlL,UAAAxuC,EAAAwuC,WAEAjgC,OAAAvO,EAAAuO,OACAD,EAAA,QAEAtwB,EAAA27D,cAAA,GAAAC,KAAA,KACA1+D,SAAA,EAAAc,EAAA,IACK04B,MAAA,iBACL12B,EAAA27D,cAAA,GAAAC,KAAA,KACA3+D,WAAA,EAAAe,EAAA,IACKoR,MAAA,KAAAsnB,MAAA,iBACLzyB,EAAA6lB,IAAA9pB,GA+BA,OA3BAiE,EAAAmgB,OAAA,WACA,IAAA0lB,EAAA0c,EAAA3/B,SAAA7E,EAAA8sB,KAAA2Z,GACAzrD,EAAAglB,EAAAs5C,YAAAt5C,EAAAu5C,cAAA,EAGAn/D,GAAAvD,EAAAguB,WAAA,EAAA7pB,GAAAglB,EAAAs5C,aAAAxxB,EAAA,MAAAA,GAAA,GACA9nB,EAAAs5C,YAAA,EAAAxxB,EAAA,GACAztC,EAAAxD,EAAAiuB,YAAA,EACA9E,EAAAs5C,aAAAt7D,EAAA67D,SAAA,CACAz/D,KACAC,OAEAo/D,EAAAI,SAAA,CACA18D,EAAA/C,EAAAY,EACAoC,EAAA/C,EAAAW,EACAvC,MAAA,EAAAuC,EACA2B,OAAA,EAAA3B,IAEAw+D,EAAAK,SAAA,CACA18D,EAAA,EACAC,EAAA,EACA3E,MAAA5B,EAAAguB,WACAloB,OAAA9F,EAAAiuB,eAIA7iB,EAAAmgB,SACAngB,wBC5HA,IAAAkvC,EAAYt7C,EAAQ,GAEpBqB,EAAAi6C,EAAAj6C,KACA2Z,EAAAsgC,EAAAtgC,IACAxG,EAAA8mC,EAAA9mC,WACAqf,EAAAynB,EAAAznB,cACA9Q,EAAAu4B,EAAAv4B,KAIAjX,EAFY9L,EAAQ,KAEpB8L,WAIAQ,EAFiBtM,EAAQ,KAEzBsM,OAEAgb,EAAkBtnB,EAAQ,KAE1BunB,EAAmBvnB,EAAQ,KAI3B2O,EAFa3O,EAAQ,IAErB2O,iBA4BA,SAAAuZ,EAAAiD,EAAAnqB,EAAAijE,EAAAjlD,GACA5Y,KAAA+kB,aACA/kB,KAAApF,MACAoF,KAAAymB,WAKAo3C,EAAA79D,KAAA89D,uBAAAD,EAAA34D,QACA0T,EAAA5Y,KAAA+9D,gBAAAnlD,EAAA1T,QACAlF,KAAAg+D,aAAAH,EAAAxvC,OAAAzV,GAaA5Y,KAAAi+D,cAAAxwC,IAGA,IAAA3iB,EAAAgX,EAAApb,UAmJA,SAAAw3D,EAAA92C,EAAA+2C,EAAAxjE,EAAAkM,EAAAkrB,GAEA,IAAAtL,EAqDA,SAAA23C,EAAArsC,EAAA88B,GACA,OAAA98B,EAAAlE,YAAAkE,EAAAjE,UAAAiE,EAAAjE,SAAA7zB,IAAA40D,EAAA3Y,WAAAxyB,KAvDAqO,KAAA,GAEA92B,EAAAkjE,EAAA,SAAA7oC,EAAAp6B,GACA,IAAA62B,EAAAzZ,YAAAyZ,EAAAzZ,aAAAgd,EAAAhd,WAAA,CAIA,IAAA+lD,EAAAj3C,EAAA62C,cAAAhkE,IAAAq7B,EAAArvB,KAEAq4D,EAAAD,EAAAC,cACAC,EAAAF,EAAAE,YAEA,GAAAA,EAAA,CACA,IAAAC,EACAxM,EAAAuM,EAAAvM,aACAA,EAAA/2D,KAAA,SAAAwjE,GACAL,EAAArsC,EAAA0sC,KACAA,EAAAh6D,QACA+5D,GAAA,KAGAA,GAAAD,EAAA95D,QACA2rB,EAAAmuC,EAAA13D,GACA,IAAA+uC,EAAAxuB,EAAAkJ,eAAAiuC,EAAAxsC,EAAA2sC,OAKA1M,EAAA/2D,KAAA,SAAAwjE,GACAA,EAAApuC,QAAAulB,KAEAnvB,GAAA83C,EAAAluC,QAAAulB,QACK0oB,GACLA,EAAArjE,KAAA,SAAA4zD,EAAA8P,GACAP,EAAArsC,EAAA88B,IACAA,EAAApqD,QAGA,IAAAmxC,EAAAxuB,EAAAkJ,eAAAu+B,EAAA98B,EAAA2sC,OASA9oB,EAAAI,MAAA1gB,EAAAhf,kBAAA3b,EAAAiD,iBAAAixD,EAAAroD,QAAAjM,OACA61B,EAAAy+B,EAAAhoD,GACA4f,GAAAooC,EAAAx+B,QAAAulB,QASAxuB,EAAAX,cAxMA3b,EAAAkiB,YAAA,SAAAryB,EAAAkM,GAiBAlM,EAAAqyB,YAAAnmB,GAQA7G,KAAAi+D,cAAAhjE,KAAA,SAAA2jE,GACA,IAAAL,EAAAK,EAAAL,YACAA,KAAA95D,WAKAqG,EAAAwlB,eAAA,SAAAu+B,EAAAhkB,GAEA,GAAAgkB,EAAA3Y,WAAA,CAIA,IAAA4b,EAAA9xD,KAAA6+D,aAAA5kE,IAAA40D,EAAA3Y,WAAAxyB,IAEAo7C,EAAAhN,EAAAtrD,QAEA2wC,GADAtM,GAAAinB,EAAAiN,sBAAAD,KAAAn2D,oBAAAkmD,EAAAmQ,gBAAAlN,EAAAmN,WACAnN,EAAA3a,KAAA,KACAT,EAAAooB,KAAApoB,aAEA,OACAS,OACAV,MAHA,MAAAC,EAAA56C,KAAAgiC,KAAA4Y,EAAAS,GAAA,KAIAT,kBAIA5rC,EAAAinD,YAAA,SAAA4M,GACA,OAAA3+D,KAAA6+D,aAAA5kE,IAAA0kE,IAWA7zD,EAAAid,kBAAA,SAAA/tB,EAAAyM,GACA,IAAAqrD,EAAA9xD,KAAA6+D,aAAA5kE,IAAAD,EAAAiM,KAGAi5D,EADAllE,EAAAoB,UACAY,QAMA2M,EAAAmpD,EAAAiN,oBAAAt4D,EAAAW,0BAAA83D,GAAApN,EAAAqN,UACAhnC,EAAAn+B,EAAAC,IAAA,UAAAilE,GAAAllE,EAAAC,IAAA,kBAGAy8C,EAAA,QAAA18C,EAAAC,IAAA,wBAAAilE,EAAA,KACAllE,EAAA4O,gBAAAkpD,EAAAtrD,QAAA,CACAmC,oBACA+tC,eACAve,UAIArtB,EAAAijB,iBAAA,SAAApzB,GACA,IAAAysB,EAAApnB,KACAo/D,EAAAh4C,EAAAy3C,aAAApxC,IACA9yB,EAAA+yB,WAAA,SAAA1zB,GACA,IAAA25D,EAAA35D,EAAA+2D,iBACA4N,EAAA3kE,EAAAiM,IACAm5D,EAAAxxC,IAAA+wC,EAAA,CACAj7C,GAAAi7C,EACAU,KAAA,KACAC,KAAA,KACAH,UAAAnlE,EAAAg3D,0BACA+N,mBAAApL,KAAA35D,EAAAo3D,oBAAAp3D,EAAAo3D,sBACA6N,YAAA,EACA9nB,KAAAr7C,KAAAsgB,MAAAu3C,GAAA,KACA33D,MAAA,IAEAg8C,EAAA5wB,EAAAptB,IAAAi0D,aAIAnjD,EAAAkjB,kBAAA,WACA,IAAAuxC,EAAAv/D,KAAAi+D,cACAtjE,EAAAqF,KAAA+kB,WAAA2D,WACA9tB,EAAAoF,KAAApF,IACAK,EAAA+E,KAAAg+D,aAAA,SAAA/uD,GACA,IAAAuwD,EAAAD,EAAAtlE,IAAAgV,EAAAhJ,MAAAs5D,EAAA3xC,IAAA3e,EAAAhJ,IAAA,IACAgJ,EAAA3I,OAwHA,SAAA8gB,EAAAkO,EAAA+oC,EAAA1jE,EAAAC,GACA,IAAA0jE,EAAAD,EAAAC,gBAAAD,EAAAC,cAAA7wC,KACA/yB,EAAA46B,EAAA56B,WACAwmC,EAAA5L,EAAA4L,gBAIA5L,EAAAwmC,kBACAnhE,EAAA0nD,cAAAp1B,GACGvyB,EACHC,EAAA2nD,oBAAA5nD,EAAAuyB,GACGiU,GACHA,EAAAvmC,EAAAC,GAAAK,KAAAgyB,GAGA,SAAAA,EAAAjzB,GACA,IAAA2kE,EAAA3kE,EAAAiM,IAGA4oD,EAAAyP,EAAArkE,IAAA0kE,IAAAL,EAAA1wC,IAAA+wC,EAAAj5D,EAAA,CACAU,KAAAq5D,EACAn5D,MAAAo5D,EACA1jE,MAAA2jE,KAEA9Q,EAAAroD,QAAA,CACAjM,MAAAP,EACAW,UACAC,MACAglE,eAAAtqC,EAAAuqC,WAAAvqC,EAAAwqC,SACA15D,KAAAkvB,EAAAlvB,KACAE,MAAAgvB,EAAAhvB,MACA8gB,aAEA4wB,EAAA5wB,EAAAptB,EAAA60D,GAIA,IAAAuQ,EAAAh4C,EAAAy3C,aACAP,EAAArjE,KAAA,SAAA4zD,EAAA8P,GACAS,EAAAnlE,IAAA0kE,KACA9P,EAAA1nD,UACAm3D,EAAAyB,UAAApB,MAjKAqB,CAAAhgE,KAAAiP,EAAAuwD,EAAA7kE,EAAAC,GACAqU,EAAAgxD,cAqKA,SAAA74C,EAAAkO,EAAA+oC,EAAA1jE,EAAAC,GACA,IAAA2jE,EAAAF,EAAAE,YAAAF,EAAAE,aACA74D,EAAA,CACAY,MAAA45D,IAEA3B,EAAA/3D,QAAA,CACA7L,UACAC,MACAqlE,aAAA3qC,EAAA2qC,aACA74C,aAGA,IAAA4qC,EAAAuM,EAAAvM,aAAAuM,EAAAvM,cAAAvkC,IACA/yB,EAAA46B,EAAA56B,WACAwmC,EAAA5L,EAAA4L,gBACAi/B,GAAA,EACAlR,EAAA35B,EAAA25B,gBAKAv0D,EACAC,EAAA2nD,oBAAA5nD,EAAA0lE,GACGl/B,EACHA,EAAAvmC,EAAAC,GAAAK,KAAAmlE,IAMAD,GAAA,EACAllE,EAAAN,EAAAunD,YAAAke,IAGA,SAAAA,EAAApmE,GACA,IAAA2kE,EAAA3kE,EAAAiM,IACAw4D,EAAAzM,EAAA/3D,IAAA0kE,GAEAF,IACAA,EAAAzM,EAAApkC,IAAA+wC,EAAAj5D,EAAA,CACAY,MAAA+5D,EACA5qB,QAAA6qB,KAIA/B,EAAA95D,SAGAg6D,EAAAj4D,QAAA,CACAjM,MAAAP,EACAmmE,kBACAlR,mBAEAwP,EAAA8B,MAAAhC,EACAE,EAAA+B,QAAAL,EACAnoB,EAAA5wB,EAAAptB,EAAAykE,GAIA,IAAAW,EAAAh4C,EAAAy3C,aACA7M,EAAA/2D,KAAA,SAAAwjE,EAAAE,GACAS,EAAAnlE,IAAA0kE,KACAF,EAAAt3D,UAGAo3D,EAAA95D,QACAutD,EAAA+N,UAAApB,MAvOA8B,CAAAzgE,KAAAiP,EAAAuwD,EAAA7kE,EAAAC,IACGoF,OAGH8K,EAAAmjB,YAAA,SAAAxnB,EAAAlM,EAAAI,EAAAC,GACA,IAAAuL,EAAAM,EAAAN,WACAK,EAAAL,EAAAK,QACAA,EAAAjM,QACAiM,EAAA7L,UACA6L,EAAA5L,MACAuL,EAAAq6D,SAAA/5D,EAAAW,yBACA4wC,EAAAh4C,KAAAzF,EAAA4L,IAGA2E,EAAAgd,0BAAA,SAAAntB,EAAAkM,GAEAq3D,EAAAl+D,UAAA89D,uBAAAnjE,EAAAkM,EAAA,CACA63D,OAAA,KAOA5zD,EAAAkd,mBAAA,SAAArtB,EAAAkM,EAAAkrB,GACAmsC,EAAAl+D,UAAA+9D,gBAAApjE,EAAAkM,EAAAkrB,IAiEAjnB,EAAA+c,mBAAA,SAAAltB,GACA,IAAA8rB,EACA9rB,EAAA+yB,WAAA,SAAA1zB,GAEAysB,GAAAzsB,EAAAi0D,SAAA59B,YAEArwB,KAAAymB,eAGA3b,EAAA1E,KAAA,WAEApG,KAAA6+D,aAAA5jE,KAAA,SAAA62D,GACA,IAAAjD,EAAAiD,EAAAwN,KAEA,GACA,GAAAzQ,EAAA2R,QAAA,CACA1O,EAAAmN,WAAApQ,EAAAmQ,gBACA,MAGAnQ,IAAA3W,oBACK2W,MAIL,IAAAz+B,EAAAtlB,EAAAslB,cAAA,SAAAy+B,EAAAhoD,GACA,WAAAA,IAAAgoD,EAAAroD,QAAAK,YAwHA,SAAAq5D,EAAA15D,GACAA,EAAAy5D,aAAAz5D,EAAA7L,QAAA6L,EAAA5L,IAAA4L,EAAAK,SAGA,SAAAw5D,EAAA75D,EAAAk6D,GACA,OAAAl6D,EAAA25D,iBAAAQ,EAGA,SAAAA,IACA3gE,KAAAugE,MAAA97D,QACAzE,KAAAm4C,gBAAA1zC,QAGA,SAAA67D,IACAtgE,KAAAugE,OAAAvgE,KAAAugE,MAAA97D,QAGA,SAAAg7D,EAAAj5D,GACA,OAAAA,EAAAJ,MAAAI,EAAAJ,KAAAI,EAAAjM,MAAAiM,EAAA7L,QAAA6L,EAAA5L,IAAA4L,EAAAK,SAGA,SAAA64D,EAAAl5D,GACAA,EAAAo5D,gBACAp5D,EAAArL,KAAAylE,iBAGA,IAAAC,EAAAr6D,EAAAq6D,aAAAt4D,EAAA/B,EAAAF,MAAAE,EAAAjM,MAAAiM,EAAA7L,QAAA6L,EAAA5L,IAAA4L,EAAAK,UACA,OAAAg6D,EAAAvwD,OAAA,EAAAsE,EAAAisD,EAAA,SAAAjnD,EAAA1e,GACA,OAAA4lE,EAAA5lE,KACG6lE,EAGH,IAAAA,EAAAD,EAAA,GAEA,SAAAA,EAAAE,GACA,gBAAAx3D,EAAAhD,GACA,IAAArL,EAAAqL,EAAArL,KACA8lE,EAAAz6D,EAAAq6D,aAAAG,GAEA,GAAAC,KAAA/pD,SACA,QAAAlP,EAAAwB,EAAAivB,MAAgCzwB,EAAAwB,EAAAyM,IAAgBjO,IAChDi5D,EAAA/pD,SAAA/b,EAAA6M,QAEKi5D,KAAA13D,UACL03D,EAAA13D,SAAAC,EAAArO,IAKA,SAAAwkE,EAAAn5D,GACA,OAAAA,EAAArL,KAAAa,QAGA,SAAAg8C,EAAA5wB,EAAAptB,EAAA60D,GACA,IAAA8P,EAAA3kE,EAAAiM,IAEA6rD,EAAA1qC,EAAAy3C,aAAA5kE,IAAA0kE,IAEA7M,EAAAuN,OAAAvN,EAAAuN,KAAAxQ,GACAiD,EAAAwN,MAAAxN,EAAAwN,KAAAtnB,KAAA6W,GACAiD,EAAAwN,KAAAzQ,EACAA,EAAAmQ,gBAAAlN,EAAA91D,QACA6yD,EAAA3Y,WAAA4b,EAwBA,SAAAoP,EAAAC,GACAzmE,EAAA,KAEA,IAEAymE,EAAAC,EAAAC,GACG,MAAA3zD,IAEH,OAAAhT,EA7BAonB,EAAAyT,iBAAA,SAAAD,EAAAhd,GAUA,OATAlK,EAAAknB,KACAA,EAAA,CACA2qC,aAAA3qC,EACA56B,WAAAwmE,EAAA5rC,KAIAA,EAAArvB,IAAAC,EAAA,gBACAoS,IAAAgd,EAAAhd,cACAgd,GAsBA,IAEA56B,EAFA0mE,EAAA,GACAC,EAAA,GAeA,SAAAC,EAAAzwD,EAAA3F,GAEA,QAAA1H,KAAA0H,EAAAxE,UAEAmK,EAAArN,GAAAmZ,EAjBA2kD,EAAAF,EAAAlgD,GACAogD,EAAAD,EAAAlgD,GAEAigD,EAAAvjE,iBAAAujE,EAAA9e,oBAAA,SAAA1mD,GACAlB,EAAAkB,GAGAwlE,EAAAt3C,cAAA,SAAAy3C,GACA,WAAAA,EAAAh8C,UAAAg8C,EAAAl1D,UACA3R,EAAA6mE,EAAAl1D,UAcA,IAAA5R,EAAAqnB,EACA7hB,EAAAC,QAAAzF,qBCxhBA,IAAA+mE,EAAA,oIACA/mE,EAAA,CACAyJ,MAAAs9D,EACA1hB,WAAA,2LAAA0hB,IAEAvhE,EAAAC,QAAAzF,qBCLA,IAiCAyoD,EAAA,gHACAp/B,EAAA,CACA5f,MAAAg/C,EACA95B,gBAAA,OACA0mC,QAAA,CACA0J,YAAA,CACAiI,UAAA,CACAv9D,MAxCA,QA0CAw9D,WAAA,CACAx9D,MA3CA,QA6CA0qD,MAAA,CACA1qD,MAAA,UAIAyO,OAAA,CACA42B,UAAA,CACArlC,MApDA,SAuDAqlC,UAAA,CACArlC,MAxDA,QA0DA+O,MAAA,CACAs2B,UAAA,CACArlC,MA5DA,SA+DA6O,QAAA,CACA4uD,UAAA,CACAhK,OAAA,CACA71B,YAlEA,UAsEAtuB,SAAA,CACA+1B,UAAA,CACArlC,MAxEA,SA2EAo/B,UAAA,CACAiG,UAAA,CACArlC,MA7EA,SAgFAwxD,SAAA,CACA+L,UAAA,CACAv9D,MAlFA,QAoFAszD,UAAA,CACAG,OAAA,CACAzzD,MAAAg/C,EAAA,KAGA0L,MAAA,CACA+I,OAAA,CACApuB,UAAA,CACArlC,MA5FA,UAgGA09D,aAAA,CACAjK,OAAA,CACAzzD,MAlGA,OAmGA49B,YAnGA,UAuGA+/B,SApGA,CACAC,SAAA,CACAL,UAAA,CACAv9D,MANA,SASA69D,SAAA,CACAN,UAAA,CACAv9D,MAXA,SAcA89D,UAAA,CACAz4B,UAAA,CACArlC,MAhBA,SAmBA+9D,UAAA,CACAR,UAAA,CACA7lE,KAAA,SACAsI,MAAA,SAGAg+D,UAAA,CACAC,UAAA,CACAj+D,MA3BA,UAwGAk+D,QArGA,CACAN,SAAA,CACAL,UAAA,CACAv9D,MANA,SASA69D,SAAA,CACAN,UAAA,CACAv9D,MAXA,SAcA89D,UAAA,CACAz4B,UAAA,CACArlC,MAhBA,SAmBA+9D,UAAA,CACAR,UAAA,CACA7lE,KAAA,SACAsI,MAAA,SAGAg+D,UAAA,CACAC,UAAA,CACAj+D,MA3BA,UAyGAjG,UAtGA,CACA6jE,SAAA,CACAL,UAAA,CACAv9D,MANA,SASA69D,SAAA,CACAN,UAAA,CACAv9D,MAXA,SAcA89D,UAAA,CACAz4B,UAAA,CACArlC,MAhBA,SAmBA+9D,UAAA,CACAR,UAAA,CACA7lE,KAAA,SACAsI,MAAA,SAGAg+D,UAAA,CACAC,UAAA,CACAj+D,MA3BA,UA0GAm+D,aAvGA,CACAP,SAAA,CACAL,UAAA,CACAv9D,MANA,SASA69D,SAAA,CACAN,UAAA,CACAv9D,MAXA,SAcA89D,UAAA,CACAz4B,UAAA,CACArlC,MAhBA,SAmBA+9D,UAAA,CACAR,UAAA,CACA7lE,KAAA,SACAsI,MAAA,SAGAg+D,UAAA,CACAC,UAAA,CACAj+D,MA3BA,UA2GA9B,KAAA,CACA4U,OAAA,UAEAjC,MAAA,CACA7Q,MAAAg/C,GAEAhuC,MAAA,CACAjC,MAAA,CACAs2B,UAAA,CACArlC,MApHA,UAwHAuQ,YAAA,CACA+iD,UAAA,CACAG,OAAA,CACAzzD,MAAA,UACAo+D,OAAA,UACAxgC,YAAA,UACAygC,aAAA,cAKAz+C,EAAAu+C,aAAAJ,UAAAO,MAAA,EACA,IAAA/nE,EAAAqpB,EACA7jB,EAAAC,QAAAzF,uBCxJA,IAAAd,EAAaC,EAAQ,GAErB6oE,EAA0B7oE,EAAQ,KAElC8oE,EAAiB9oE,EAAQ,KAEzB+oE,EAA2B/oE,EAAQ,KAEnCslD,EAAYtlD,EAAQ,IAEpB6zD,EAAc7zD,EAAQ,IAEtB6zD,EAAAnH,cACApmD,EAAAomD,cAAAmH,EAAAnH,cAEA,IAAAsc,EAAuBhpE,EAAQ,KAE/BipE,EAAAD,EAAAC,gBACA/oE,EAAA8oE,EAAA9oE,mBACAgpE,EAAAF,EAAAE,oBAEAC,EAA0BnpE,EAAQ,KAElCsG,EAAA8iE,mBAAAD,EAEA,IAAAE,EAAwBrpE,EAAQ,KAEhCsG,EAAAgjE,iBAAAD,EAEA,IAAAE,EAAcvpE,EAAQ,KAEtBsG,EAAAwE,aAAAy+D,EAAAz+D,aAoCA,IAAA6c,EAAA,CACAznB,qBACA+oE,kBACAC,uBAiDA5iE,EAAAkjE,WA7DA,SAAAppE,GACA,OAAAyoE,EAAAzoE,EAAA6zD,YAAA7zD,IA6DAkG,EAAAqhB,YACArhB,EAAAmjE,YAjCA,SAAArpD,EAAA5B,GACA,IAAAkrD,EAAAlrD,EAEA8mC,EAAA3zC,WAAA6M,KACAkrD,EAAA,IAAApkB,EAAA9mC,GACAze,EAAAktB,MAAAy8C,EAAAX,IAGA,IAAAjoC,EAAAgoC,EAAAa,mBAAAD,GAGA,OAFA5oC,EAAAK,UAAA/gB,EAAA,GAAAA,EAAA,IACA0oD,EAAAc,gBAAA9oC,EAAA4oC,GACA5oC,GAuBAx6B,EAAAujE,4BAPA,SAAAvkB,GACAvlD,EAAAktB,MAAAq4B,EAAAyjB,yBCpHc/oE,EAAQ,IAEtB8P,QAFA,IAIAwrC,EAAYt7C,EAAQ,GAEpB6zB,EAAAynB,EAAAznB,cAEAxyB,GADAi6C,EAAAwuB,SACAxuB,EAAAj6C,MAiDA,SAAA0oE,EAAA3mE,GAIAgD,KAAAhD,eAKAgD,KAAA4jE,aAAA,GAKA5jE,KAAA6jE,QAAAp2C,IAKAztB,KAAA8jE,gBAAAr2C,IAKAztB,KAAA+jE,sBAAA,KAkBA,IAAAC,EAAA,CACAC,YAAA,SAAAjqE,EAAA+C,EAAA8mE,EAAAC,GACA,IAAAI,EAAAlqE,EAAAqzD,uBAAA,YACA8W,EAAAnqE,EAAAqzD,uBAAA,YACAtwD,EAAA6mE,aAAA,UACAC,EAAAj2C,IAAA,IAAAs2C,GACAL,EAAAj2C,IAAA,IAAAu2C,GAEAjoD,EAAAgoD,KACAJ,EAAAl2C,IAAA,IAAAs2C,GACAnnE,EAAAgnE,sBAAA,GAGA7nD,EAAAioD,KACAL,EAAAl2C,IAAA,IAAAu2C,GACApnE,EAAAgnE,sBAAAhnE,EAAAgnE,sBAAA,IAGAK,WAAA,SAAApqE,EAAA+C,EAAA8mE,EAAAC,GACA,IAAAO,EAAArqE,EAAAqzD,uBAAA,iBACAtwD,EAAA6mE,aAAA,WACAC,EAAAj2C,IAAA,SAAAy2C,GAEAnoD,EAAAmoD,KACAP,EAAAl2C,IAAA,SAAAy2C,GACAtnE,EAAAgnE,sBAAA,IAGA3pE,MAAA,SAAAJ,EAAA+C,EAAA8mE,EAAAC,GACA,IAAAQ,EAAAtqE,EAAAqzD,uBAAA,YACAkX,EAAAD,EAAAE,cAAA,cACAC,EAAAH,EAAAE,cAAA,aACAznE,EAAA6mE,aAAA,mBACAC,EAAAj2C,IAAA,SAAA22C,GACAV,EAAAj2C,IAAA,QAAA62C,GAEAvoD,EAAAqoD,KACAT,EAAAl2C,IAAA,SAAA22C,GACAxnE,EAAAgnE,sBAAA,GAGA7nD,EAAAuoD,KACAX,EAAAl2C,IAAA,QAAA62C,GACA,MAAA1nE,EAAAgnE,wBAAAhnE,EAAAgnE,sBAAA,KAGAjK,IAAA,SAAA9/D,EAAA+C,EAAA8mE,EAAAC,GACA/mE,EAAA6mE,aAAA,eAEA/uD,SAAA,SAAA7a,EAAA+C,EAAA8mE,EAAAC,GACA,IAAAnpE,EAAAX,EAAAW,QACA+pE,EAAA/pE,EAAA2qB,aAAA,WAAAtrB,EAAAC,IAAA,kBACA2pE,EAAA7mE,EAAA6mE,aAAAc,EAAA5tC,WAAA5xB,QACAjK,EAAAypE,EAAAC,kBAAA,SAAAC,EAAAxrD,GACA,IAAAkqD,EAAA3oE,EAAA2qB,aAAA,eAAAs/C,GACAC,EAAAjB,EAAAxqD,GACAyqD,EAAAj2C,IAAAi3C,EAAAvB,GAEApnD,EAAAonD,IAAA,MAAAvmE,EAAAgnE,wBACAD,EAAAl2C,IAAAi3C,EAAAvB,GACAvmE,EAAAgnE,sBAAA3qD,OAMA,SAAA8C,EAAAonD,GACA,mBAAAA,EAAArpE,IAAA,QAGAiG,EAAA4kE,wBAjFA,SAAA9qE,GACA,IAAAgD,EAAAhD,EAAAC,IAAA,oBACA8C,EAAA,IAAA4mE,EAAA3mE,GACA+nE,EAAAf,EAAAhnE,GAEA,GAAA+nE,EAEA,OADAA,EAAA/qE,EAAA+C,IAAA8mE,QAAA9mE,EAAA+mE,iBACA/mE,wBC/FA,IAAApD,EAAaC,EAAQ,GAErBqgC,EAAYrgC,EAAQ,KAEpBorE,EAAkBprE,EAAQ,KA6B1BwqD,EAAAnqB,EAAAvzB,UACAu+D,EAAAhrC,EAAApvB,OAAA,CACAjP,KAAA,UAKA+K,KAAA,SAAAu+D,EAAA1qC,GAGA0qC,IAAAvrE,EAAA0U,QAAA62D,KACAA,EAAA,IAAAF,EAAA,CACAxrD,WAAA0rD,KAIAllE,KAAAmlE,aAAAD,EACAllE,KAAAo6B,QAAAI,GAAA,GAAA0qC,EAAA1rD,WAAAlJ,OAAA,IAEAmM,MAAA,SAAA+B,GACA,wBAAAA,EAAAxe,KAAAmlE,aAAAC,WAAA5mD,GACA1iB,KAAAsgB,MAAAoC,IAEA+b,QAAA,SAAA8qC,GAEA,OADAA,EAAArlE,KAAAyc,MAAA4oD,GACAjhB,EAAA7pB,QAAAvtB,KAAAhN,KAAAqlE,IAAA,MAAArlE,KAAAmlE,aAAA3rD,WAAA6rD,IAQA5qC,UAAA,SAAAjc,GACA,OAAA4lC,EAAA3pB,UAAAztB,KAAAhN,UAAAyc,MAAA+B,KAEAkc,MAAA,SAAAlc,GACA,OAAA1iB,KAAAsgB,MAAAgoC,EAAA1pB,MAAA1tB,KAAAhN,KAAAwe,KAMAwd,SAAA,WAKA,IAJA,IAAAI,EAAA,GACA5B,EAAAx6B,KAAAo6B,QACAirC,EAAA7qC,EAAA,GAEA6qC,GAAA7qC,EAAA,IACA4B,EAAA1vB,KAAA24D,GACAA,IAGA,OAAAjpC,GAQAhB,SAAA,SAAA77B,GACA,IAAAS,KAAAi7B,UAEA,OAAAj7B,KAAAmlE,aAAA3rD,WAAAja,IAOAvD,MAAA,WACA,OAAAgE,KAAAo6B,QAAA,GAAAp6B,KAAAo6B,QAAA,MAMAS,oBAAA,SAAA1/B,EAAAb,GACA0F,KAAA26B,YAAAx/B,EAAA2/B,qBAAAxgC,KAEAgrE,eAAA,WACA,OAAAtlE,KAAAmlE,cAEAjoC,UAAAvjC,EAAAgjB,KACA8gB,WAAA9jC,EAAAgjB,OAMAsoD,EAAAh4C,OAAA,WACA,WAAAg4C,GAGA,IAAAxqE,EAAAwqE,EACAhlE,EAAAC,QAAAzF,uBCjIA,IAAAd,EAAaC,EAAQ,GAErByhC,EAAiBzhC,EAAQ,IAEzB0hC,EAAiB1hC,EAAQ,IAEzB2rE,EAAkB3rE,EAAQ,KAE1B6hC,EAAoB7hC,EAAQ,KAwC5ByqD,EAAA5oB,EAAA/0B,UACA89C,EAAA1oD,KAAAgiC,KACAymB,EAAAzoD,KAAA+hC,MAyBA2nC,EAAA/pC,EAAA5wB,OAAA,CACAjP,KAAA,OAKAw/B,SAAA,SAAA5c,GACA,IAAAinD,EAAAzlE,KAAA0lE,SACAxb,EAAA,IAAAr4C,KAAA2M,GACA,OAAA8c,EAAA0uB,WAAAyb,EAAA,GAAAvb,EAAAlqD,KAAAs6B,WAAA,YAMAmD,WAAA,SAAA1L,GACA,IAAAyI,EAAAx6B,KAAAo6B,QASA,GAPAI,EAAA,KAAAA,EAAA,KAEAA,EAAA,IAzCAmrC,MA0CAnrC,EAAA,IA1CAmrC,OA8CAnrC,EAAA,MAAApc,KAAAoc,EAAA,KAAApc,IAAA,CACA,IAAA3Q,EAAA,IAAAoE,KACA2oB,EAAA,QAAA3oB,KAAApE,EAAAm4D,cAAAn4D,EAAAo4D,WAAAp4D,EAAAq4D,WACAtrC,EAAA,GAAAA,EAAA,GAjDAmrC,MAoDA3lE,KAAAk9B,UAAAnL,EAAAyK,YAAAzK,EAAAoL,YAAApL,EAAAqL,aAEA,IAAA7e,EAAAve,KAAAq6B,UAEAtI,EAAA6L,SACApD,EAAA,GAAAa,EAAAjf,MAAAmoC,EAAA/pB,EAAA,GAAAjc,OAGAwT,EAAA4L,SACAnD,EAAA,GAAAa,EAAAjf,MAAAooC,EAAAhqB,EAAA,GAAAjc,QAOA2e,UAAA,SAAAioB,EAAAhoB,EAAAC,GACA+nB,KAAA,GACA,IAAA3qB,EAAAx6B,KAAAo6B,QACAiD,EAAA7C,EAAA,GAAAA,EAAA,GACAurC,EAAA1oC,EAAA8nB,EAEA,MAAAhoB,GAAA4oC,EAAA5oC,IACA4oC,EAAA5oC,GAGA,MAAAC,GAAA2oC,EAAA3oC,IACA2oC,EAAA3oC,GAGA,IAAA4oC,EAAAC,EAAA31D,OACApV,EAjFA,SAAAoS,EAAApM,EAAAglE,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EAEA74D,EAAA84D,GAAA,GAAAllE,EACAglE,EAAAE,EAAA,EAEAD,EAAAC,EAIA,OAAAF,EAsEAG,CAAAJ,EAAAF,EAAA,EAAAC,GACAM,EAAAL,EAAAnqE,KAAAgB,IAAA5B,EAAA8qE,EAAA,IACAznD,EAAA+nD,EAAA,GAEA,YAAAA,EAAA,IACA,IAAAC,EAAAlpC,EAAA9e,EAIAA,GADA8c,EAAAkgB,KAAAgrB,EAAAphB,GAAA,GAIA,IAAAqhB,EAAAxmE,KAAAs6B,WAAA,mBAAAzoB,MAAA2oB,EAAA,KAAAA,EAAA,IAAAisC,oBAAA,IACAhpC,EAAA,CAAA3hC,KAAAsgB,MAAAooC,GAAAhqB,EAAA,GAAAgsC,GAAAjoD,KAAAioD,GAAA1qE,KAAAsgB,MAAAmoC,GAAA/pB,EAAA,GAAAgsC,GAAAjoD,KAAAioD,IACAjB,EAAAphB,UAAA1mB,EAAAjD,GACAx6B,KAAA0lE,SAAAY,EAEAtmE,KAAAq6B,UAAA9b,EACAve,KAAA87B,YAAA2B,GAEAhhB,MAAA,SAAA+B,GAEA,OAAA6c,EAAA6f,UAAA18B,MAGA7kB,EAAAsB,KAAA,iCAAA6N,GACA08D,EAAA9+D,UAAAoC,GAAA,SAAA0V,GACA,OAAA6lC,EAAAv7C,GAAAkE,KAAAhN,UAAAyc,MAAA+B,OAUA,IAAAynD,EAAA,CACA,YA5HA,KA6HA,YAAAS,KACA,YAAAA,KACA,YAAAA,MACA,YAAAA,KACA,gBAhIAA,KAiIA,gBAAAC,KACA,gBAAAA,KACA,gBAAAA,KACA,gBAAAA,MACA,gBApIAA,MAqIA,gBAAAhB,MACA,gBAAAA,OACA,gBAAAA,OACA,eAvIAA,OAwIA,eAAAiB,QACA,eAAAA,QACA,eAAAA,QACA,eAAAA,OACA,eAAAA,QACA,QAAAA,QACA,eAAAA,OACA,QAAAA,SACA,QAAAA,SACA,SAAAA,SACA,QAAAA,SACA,SAAAA,SACA,QAAAA,QACA,WAAAA,QACA,SAAAA,UACA,SAAAA,SACA,aAAAA,SACA,SAAAA,UACA,SAAAA,SACA,QAAAA,UAOApB,EAAAv4C,OAAA,SAAA1yB,GACA,WAAAirE,EAAA,CACA3R,OAAAt5D,EAAAI,QAAAV,IAAA,aAIA,IAAAQ,EAAA+qE,EACAvlE,EAAAC,QAAAzF,qBC5MA,IAAAosE,EAAA,CACAC,QAAA,SAAAC,GAIA,IAHA,IAAA/sB,EAAA,EACAh+C,EAAA,EAEAgM,EAAA,EAAmBA,EAAA++D,EAAAz2D,OAAkBtI,IACrC+wB,MAAAguC,EAAA/+D,MACAgyC,GAAA+sB,EAAA/+D,GACAhM,KAKA,WAAAA,EAAAi9B,IAAA+gB,EAAAh+C,GAEAg+C,IAAA,SAAA+sB,GAGA,IAFA,IAAA/sB,EAAA,EAEAhyC,EAAA,EAAmBA,EAAA++D,EAAAz2D,OAAkBtI,IAErCgyC,GAAA+sB,EAAA/+D,IAAA,EAGA,OAAAgyC,GAEA78C,IAAA,SAAA4pE,GAGA,IAFA,IAAA5pE,GAAAihB,IAEApW,EAAA,EAAmBA,EAAA++D,EAAAz2D,OAAkBtI,IACrC++D,EAAA/+D,GAAA7K,MAAA4pE,EAAA/+D,IAIA,OAAAs1B,SAAAngC,KAAA87B,KAEAn8B,IAAA,SAAAiqE,GAGA,IAFA,IAAAjqE,EAAAshB,IAEApW,EAAA,EAAmBA,EAAA++D,EAAAz2D,OAAkBtI,IACrC++D,EAAA/+D,GAAAlL,MAAAiqE,EAAA/+D,IAIA,OAAAs1B,SAAAxgC,KAAAm8B,KAIA+tC,QAAA,SAAAD,GACA,OAAAA,EAAA,KAIAE,EAAA,SAAAF,EAAA7nE,GACA,OAAApD,KAAAsgB,MAAA2qD,EAAAz2D,OAAA,IAuCArQ,EAAAC,QApCA,SAAAxF,GACA,OACAA,aACAu0D,iBAAA,EACA3oD,MAAA,SAAAtM,EAAAW,EAAAC,GACA,IAAAO,EAAAnB,EAAAoB,UACA8rE,EAAAltE,EAAAC,IAAA,YACAktB,EAAAntB,EAAAqB,iBAEA,mBAAA8rB,EAAAvrB,MAAAsrE,EAAA,CACA,IAQAC,EARA7rE,EAAA6rB,EAAA5rB,cACA0C,EAAAkpB,EAAAjpB,aAAA5C,GACAk/B,EAAAl/B,EAAAI,YAEA2H,EAAAm3B,EAAA,GAAAA,EAAA,GACAjoB,EAAAzW,KAAAsgB,MAAAjhB,EAAAa,QAAAqH,GAEAkP,EAAA,IAGA,kBAAA20D,EACAC,EAAAN,EAAAK,GACW,oBAAAA,IACXC,EAAAD,GAGAC,GAEAntE,EAAAg1D,QAAA7zD,EAAAisE,WAAAjsE,EAAAqD,aAAAP,EAAA3D,KAAA,EAAAiY,EAAA40D,EAAAF,8BCvGA,IA2BAxsE,GAAA+F,EA3Be5G,EAAQ,IAEvB4G,aAyBA,CACA5E,KAAA,UACA6E,MAAA,CACAtC,GAAA,EACAC,GAAA,EACAU,GAAA,EACAC,EAAA,EACAC,WAAA,EACAC,SAAA,EAAAnD,KAAAiE,GACAi3D,WAAA,GAEAr2D,UAAA,SAAAuB,EAAAzB,GACA,IAAAS,EAAAT,EAAAtC,GACAgD,EAAAV,EAAArC,GACAU,EAAAhD,KAAAqB,IAAAsD,EAAA3B,IAAA,KACAC,EAAAjD,KAAAqB,IAAAsD,EAAA1B,EAAA,GACAsoE,EAAA,IAAAtoE,EAAAD,GACAwoE,EAAAxoE,EAAAuoE,EACAroE,EAAAyB,EAAAzB,WACAC,EAAAwB,EAAAxB,SACA+3D,EAAAv2D,EAAAu2D,UACAuQ,EAAAzrE,KAAA2F,IAAAzC,GACAwoE,EAAA1rE,KAAA6F,IAAA3C,GACAyoE,EAAA3rE,KAAA2F,IAAAxC,GACAyoE,EAAA5rE,KAAA6F,IAAA1C,IACA+3D,EAAA/3D,EAAAD,EAAA,EAAAlD,KAAAiE,GAAAf,EAAAC,EAAA,EAAAnD,KAAAiE,MAGAmC,EAAArB,OAAA0mE,EAAAzoE,EAAAoC,EAAAsmE,EAAA1oE,EAAAqC,GACAe,EAAAH,IAAAwlE,EAAAD,EAAApmE,EAAAsmE,EAAAF,EAAAnmE,EAAAkmE,GAAAvrE,KAAAiE,GAAAf,KAAAg4D,IAGA90D,EAAAH,IAAAb,EAAAC,EAAApC,EAAAC,EAAAC,GAAA+3D,GACA90D,EAAArB,OAAA4mE,EAAA1oE,EAAAmC,EAAAwmE,EAAA3oE,EAAAoC,GACAe,EAAAH,IAAA0lE,EAAAH,EAAApmE,EAAAwmE,EAAAJ,EAAAnmE,EAAAkmE,EAAApoE,EAAA,EAAAnD,KAAAiE,GAAAd,EAAAnD,KAAAiE,IAAAi3D,GAEA,IAAAl4D,IACAoD,EAAAH,IAAAb,EAAAC,EAAArC,EAAAG,EAAAD,EAAAg4D,GACA90D,EAAArB,OAAA0mE,EAAAzoE,EAAAoC,EAAAwmE,EAAA5oE,EAAAqC,IAGAe,EAAAnB,eAIAd,EAAAC,QAAAzF,uBCxEA,IAAAd,EAAaC,EAAQ,GAsHrBsG,EAAAynE,WAjFA,WACA,IAEAC,EAFAj8D,EAAA,GACAk8D,EAAA,GAEA,OAmBAh8C,IAAA,SAAAnkB,EAAAmJ,EAAAi3D,EAAA32D,EAAA42D,GAMA,OALApuE,EAAAoiB,SAAA5K,KACA42D,EAAA52D,EACAA,EAAA,IAGA02D,EAAAngE,EAAAgc,MAIAmkD,EAAAngE,EAAAgc,IAAA,EACA/X,EAAAe,KAAA,CACAhF,KACAmJ,SACAi3D,OACA32D,QACA42D,YAEA,IASAC,KAAA,SAAA5qD,GAEA,OADAwqD,EAAAxqD,EACApd,MAMAy4B,MAAA,WAGA,IAFA,IAAAz8B,EAAA2P,EAAA2E,OAEAtI,EAAA,EAAAnJ,EAAA8M,EAAA2E,OAA2CtI,EAAAnJ,EAASmJ,IAAA,CACpD,IAAAwU,EAAA7Q,EAAA3D,GACAwU,EAAA9U,GAAAgmC,UAAAlxB,EAAA3L,OAAA2L,EAAAsrD,KAAAtrD,EAAArL,MAAAqL,EAAAurD,OAAAC,GAGA,OAAAhoE,KAEA,SAAAgoE,MACAhsE,IAGA2P,EAAA2E,OAAA,EACAu3D,EAAA,GACAD","file":"static/js/main~92dba14a.716ba94a.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || '__ec_stack_' + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(polar, axis) {\n  return axis.dim + polar.model.componentIndex;\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction barLayoutPolar(seriesType, ecModel, api) {\n  var lastStackCoords = {};\n  var barWidthAndOffset = calRadialBar(zrUtil.filter(ecModel.getSeriesByType(seriesType), function (seriesModel) {\n    return !ecModel.isSeriesFiltered(seriesModel) && seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'polar';\n  }));\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for polar only\n    if (seriesModel.coordinateSystem.type !== 'polar') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisKey = getAxisKey(polar, baseAxis);\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[axisKey][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = polar.getOtherAxis(baseAxis);\n    var cx = seriesModel.coordinateSystem.cx;\n    var cy = seriesModel.coordinateSystem.cy;\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    var barMinAngle = seriesModel.get('barMinAngle') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var clampLayout = baseAxis.dim !== 'radius' || !seriesModel.get('roundCap', true);\n    var valueAxisStart = valueAxis.getExtent()[0];\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n      // Only ordinal axis can be stacked.\n\n      if (stacked) {\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var r0;\n      var r;\n      var startAngle;\n      var endAngle; // radial sector\n\n      if (valueAxis.dim === 'radius') {\n        var radiusSpan = valueAxis.dataToRadius(value) - valueAxisStart;\n        var angle = baseAxis.dataToAngle(baseValue);\n\n        if (Math.abs(radiusSpan) < barMinHeight) {\n          radiusSpan = (radiusSpan < 0 ? -1 : 1) * barMinHeight;\n        }\n\n        r0 = baseCoord;\n        r = baseCoord + radiusSpan;\n        startAngle = angle - columnOffset;\n        endAngle = startAngle - columnWidth;\n        stacked && (lastStackCoords[stackId][baseValue][sign] = r);\n      } // tangential sector\n      else {\n          var angleSpan = valueAxis.dataToAngle(value, clampLayout) - valueAxisStart;\n          var radius = baseAxis.dataToRadius(baseValue);\n\n          if (Math.abs(angleSpan) < barMinAngle) {\n            angleSpan = (angleSpan < 0 ? -1 : 1) * barMinAngle;\n          }\n\n          r0 = radius + columnOffset;\n          r = r0 + columnWidth;\n          startAngle = baseCoord;\n          endAngle = baseCoord + angleSpan; // if the previous stack is at the end of the ring,\n          // add a round to differentiate it from origin\n          // var extent = angleAxis.getExtent();\n          // var stackCoord = angle;\n          // if (stackCoord === extent[0] && value > 0) {\n          //     stackCoord = extent[1];\n          // }\n          // else if (stackCoord === extent[1] && value < 0) {\n          //     stackCoord = extent[0];\n          // }\n\n          stacked && (lastStackCoords[stackId][baseValue][sign] = endAngle);\n        }\n\n      data.setItemLayout(idx, {\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: r,\n        // Consider that positive angle is anti-clockwise,\n        // while positive radian of sector is clockwise\n        startAngle: -startAngle * Math.PI / 180,\n        endAngle: -endAngle * Math.PI / 180\n      });\n    }\n  }, this);\n}\n/**\n * Calculate bar width and offset for radial bar charts\n */\n\n\nfunction calRadialBar(barSeries, api) {\n  // Columns info on each category axis. Key is polar name\n  var columnsMap = {};\n  zrUtil.each(barSeries, function (seriesModel, idx) {\n    var data = seriesModel.getData();\n    var polar = seriesModel.coordinateSystem;\n    var baseAxis = polar.getBaseAxis();\n    var axisKey = getAxisKey(polar, baseAxis);\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth = baseAxis.type === 'category' ? baseAxis.getBandWidth() : Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = getSeriesStackId(seriesModel);\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    };\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n\n    if (barWidth && !stacks[stackId].width) {\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      stacks[stackId].width = barWidth;\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    barGap != null && (columnsOnAxis.gap = barGap);\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column, stack) {\n      var maxWidth = column.maxWidth;\n\n      if (maxWidth && maxWidth < autoWidth) {\n        maxWidth = Math.min(maxWidth, remainedWidth);\n\n        if (column.width) {\n          maxWidth = Math.min(maxWidth, column.width);\n        }\n\n        remainedWidth -= maxWidth;\n        column.width = maxWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n\nvar _default = barLayoutPolar;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"./graphic\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _text = require(\"zrender/lib/contain/text\");\n\nvar _calculateTextPosition = _text.calculateTextPosition;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Symbol factory\n\n/**\n * Triangle shape\n * @inner\n */\n\nvar Triangle = graphic.extendShape({\n  type: 'triangle',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy + height);\n    path.lineTo(cx - width, cy + height);\n    path.closePath();\n  }\n});\n/**\n * Diamond shape\n * @inner\n */\n\nvar Diamond = graphic.extendShape({\n  type: 'diamond',\n  shape: {\n    cx: 0,\n    cy: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var cx = shape.cx;\n    var cy = shape.cy;\n    var width = shape.width / 2;\n    var height = shape.height / 2;\n    path.moveTo(cx, cy - height);\n    path.lineTo(cx + width, cy);\n    path.lineTo(cx, cy + height);\n    path.lineTo(cx - width, cy);\n    path.closePath();\n  }\n});\n/**\n * Pin shape\n * @inner\n */\n\nvar Pin = graphic.extendShape({\n  type: 'pin',\n  shape: {\n    // x, y on the cusp\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(path, shape) {\n    var x = shape.x;\n    var y = shape.y;\n    var w = shape.width / 5 * 3; // Height must be larger than width\n\n    var h = Math.max(w, shape.height);\n    var r = w / 2; // Dist on y with tangent point and circle center\n\n    var dy = r * r / (h - r);\n    var cy = y - h + r + dy;\n    var angle = Math.asin(dy / r); // Dist on x with tangent point and circle center\n\n    var dx = Math.cos(angle) * r;\n    var tanX = Math.sin(angle);\n    var tanY = Math.cos(angle);\n    var cpLen = r * 0.6;\n    var cpLen2 = r * 0.7;\n    path.moveTo(x - dx, cy + dy);\n    path.arc(x, cy, r, Math.PI - angle, Math.PI * 2 + angle);\n    path.bezierCurveTo(x + dx - tanX * cpLen, cy + dy + tanY * cpLen, x, y - cpLen2, x, y);\n    path.bezierCurveTo(x, y - cpLen2, x - dx + tanX * cpLen, cy + dy + tanY * cpLen, x - dx, cy + dy);\n    path.closePath();\n  }\n});\n/**\n * Arrow shape\n * @inner\n */\n\nvar Arrow = graphic.extendShape({\n  type: 'arrow',\n  shape: {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var height = shape.height;\n    var width = shape.width;\n    var x = shape.x;\n    var y = shape.y;\n    var dx = width / 3 * 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + dx, y + height);\n    ctx.lineTo(x, y + height / 4 * 3);\n    ctx.lineTo(x - dx, y + height);\n    ctx.lineTo(x, y);\n    ctx.closePath();\n  }\n});\n/**\n * Map of path contructors\n * @type {Object.<string, module:zrender/graphic/Path>}\n */\n\nvar symbolCtors = {\n  line: graphic.Line,\n  rect: graphic.Rect,\n  roundRect: graphic.Rect,\n  square: graphic.Rect,\n  circle: graphic.Circle,\n  diamond: Diamond,\n  pin: Pin,\n  arrow: Arrow,\n  triangle: Triangle\n};\nvar symbolShapeMakers = {\n  line: function line(x, y, w, h, shape) {\n    // FIXME\n    shape.x1 = x;\n    shape.y1 = y + h / 2;\n    shape.x2 = x + w;\n    shape.y2 = y + h / 2;\n  },\n  rect: function rect(x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n  },\n  roundRect: function roundRect(x, y, w, h, shape) {\n    shape.x = x;\n    shape.y = y;\n    shape.width = w;\n    shape.height = h;\n    shape.r = Math.min(w, h) / 4;\n  },\n  square: function square(x, y, w, h, shape) {\n    var size = Math.min(w, h);\n    shape.x = x;\n    shape.y = y;\n    shape.width = size;\n    shape.height = size;\n  },\n  circle: function circle(x, y, w, h, shape) {\n    // Put circle in the center of square\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.r = Math.min(w, h) / 2;\n  },\n  diamond: function diamond(x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  pin: function pin(x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  arrow: function arrow(x, y, w, h, shape) {\n    shape.x = x + w / 2;\n    shape.y = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  },\n  triangle: function triangle(x, y, w, h, shape) {\n    shape.cx = x + w / 2;\n    shape.cy = y + h / 2;\n    shape.width = w;\n    shape.height = h;\n  }\n};\nvar symbolBuildProxies = {};\nzrUtil.each(symbolCtors, function (Ctor, name) {\n  symbolBuildProxies[name] = new Ctor();\n});\nvar SymbolClz = graphic.extendShape({\n  type: 'symbol',\n  shape: {\n    symbolType: '',\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0\n  },\n  calculateTextPosition: function calculateTextPosition(out, style, rect) {\n    var res = _calculateTextPosition(out, style, rect);\n\n    var shape = this.shape;\n\n    if (shape && shape.symbolType === 'pin' && style.textPosition === 'inside') {\n      res.y = rect.y + rect.height * 0.4;\n    }\n\n    return res;\n  },\n  buildPath: function buildPath(ctx, shape, inBundle) {\n    var symbolType = shape.symbolType;\n\n    if (symbolType !== 'none') {\n      var proxySymbol = symbolBuildProxies[symbolType];\n\n      if (!proxySymbol) {\n        // Default rect\n        symbolType = 'rect';\n        proxySymbol = symbolBuildProxies[symbolType];\n      }\n\n      symbolShapeMakers[symbolType](shape.x, shape.y, shape.width, shape.height, proxySymbol.shape);\n      proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n    }\n  }\n}); // Provide setColor helper method to avoid determine if set the fill or stroke outside\n\nfunction symbolPathSetColor(color, innerColor) {\n  if (this.type !== 'image') {\n    var symbolStyle = this.style;\n    var symbolShape = this.shape;\n\n    if (symbolShape && symbolShape.symbolType === 'line') {\n      symbolStyle.stroke = color;\n    } else if (this.__isEmptyBrush) {\n      symbolStyle.stroke = color;\n      symbolStyle.fill = innerColor || '#fff';\n    } else {\n      // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n      symbolStyle.fill && (symbolStyle.fill = color);\n      symbolStyle.stroke && (symbolStyle.stroke = color);\n    }\n\n    this.dirty(false);\n  }\n}\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolType\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n * @param {boolean} [keepAspect=false] whether to keep the ratio of w/h,\n *                            for path and image only.\n */\n\n\nfunction createSymbol(symbolType, x, y, w, h, color, keepAspect) {\n  // TODO Support image object, DynamicImage.\n  var isEmpty = symbolType.indexOf('empty') === 0;\n\n  if (isEmpty) {\n    symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n  }\n\n  var symbolPath;\n\n  if (symbolType.indexOf('image://') === 0) {\n    symbolPath = graphic.makeImage(symbolType.slice(8), new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else if (symbolType.indexOf('path://') === 0) {\n    symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h), keepAspect ? 'center' : 'cover');\n  } else {\n    symbolPath = new SymbolClz({\n      shape: {\n        symbolType: symbolType,\n        x: x,\n        y: y,\n        width: w,\n        height: h\n      }\n    });\n  }\n\n  symbolPath.__isEmptyBrush = isEmpty;\n  symbolPath.setColor = symbolPathSetColor;\n  symbolPath.setColor(color);\n  return symbolPath;\n}\n\nexports.createSymbol = createSymbol;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar inner = modelUtil.makeInner();\nvar renderPlanner = createRenderPlanner();\n\nfunction Chart() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewChart');\n  this.renderTask = createTask({\n    plan: renderTaskPlan,\n    reset: renderTaskReset\n  });\n  this.renderTask.context = {\n    view: this\n  };\n}\n\nChart.prototype = {\n  type: 'chart',\n\n  /**\n   * Init the chart.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function init(ecModel, api) {},\n\n  /**\n   * Render the chart.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  render: function render(seriesModel, ecModel, api, payload) {},\n\n  /**\n   * Highlight series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n  },\n\n  /**\n   * Downplay series or specified data item.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    toggleHighlight(seriesModel.getData(), payload, 'normal');\n  },\n\n  /**\n   * Remove self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  remove: function remove(ecModel, api) {\n    this.group.removeAll();\n  },\n\n  /**\n   * Dispose self.\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  dispose: function dispose() {},\n\n  /**\n   * Rendering preparation in progressive mode.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalPrepareRender: null,\n\n  /**\n   * Render in progressive mode.\n   * @param  {Object} params See taskParams in `stream/task.js`\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   */\n  incrementalRender: null,\n\n  /**\n   * Update transform directly.\n   * @param  {module:echarts/model/Series} seriesModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @param  {Object} payload\n   * @return {Object} {update: true}\n   */\n  updateTransform: null,\n\n  /**\n   * The view contains the given point.\n   * @interface\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  // containPoint: function () {}\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar chartProto = Chart.prototype;\n\nchartProto.updateView = chartProto.updateLayout = chartProto.updateVisual = function (seriesModel, ecModel, api, payload) {\n  this.render(seriesModel, ecModel, api, payload);\n};\n/**\n * Set state of single element\n * @param {module:zrender/Element} el\n * @param {string} state 'normal'|'emphasis'\n * @param {number} highlightDigit\n */\n\n\nfunction elSetState(el, state, highlightDigit) {\n  if (el) {\n    el.trigger(state, highlightDigit);\n\n    if (el.isGroup // Simple optimize.\n    && !graphicUtil.isHighDownDispatcher(el)) {\n      for (var i = 0, len = el.childCount(); i < len; i++) {\n        elSetState(el.childAt(i), state, highlightDigit);\n      }\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload\n * @param {string} state 'normal'|'emphasis'\n */\n\n\nfunction toggleHighlight(data, payload, state) {\n  var dataIndex = modelUtil.queryDataIndex(data, payload);\n  var highlightDigit = payload && payload.highlightKey != null ? graphicUtil.getHighlightDigit(payload.highlightKey) : null;\n\n  if (dataIndex != null) {\n    each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n      elSetState(data.getItemGraphicEl(dataIdx), state, highlightDigit);\n    });\n  } else {\n    data.eachItemGraphicEl(function (el) {\n      elSetState(el, state, highlightDigit);\n    });\n  }\n} // Enable Chart.extend.\n\n\nclazzUtil.enableClassExtend(Chart, ['dispose']); // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Chart, {\n  registerWhenExtend: true\n});\n\nChart.markUpdateMethod = function (payload, methodName) {\n  inner(payload).updateMethod = methodName;\n};\n\nfunction renderTaskPlan(context) {\n  return renderPlanner(context.model);\n}\n\nfunction renderTaskReset(context) {\n  var seriesModel = context.model;\n  var ecModel = context.ecModel;\n  var api = context.api;\n  var payload = context.payload; // ???! remove updateView updateVisual\n\n  var progressiveRender = seriesModel.pipelineContext.progressiveRender;\n  var view = context.view;\n  var updateMethod = payload && inner(payload).updateMethod;\n  var methodName = progressiveRender ? 'incrementalPrepareRender' : updateMethod && view[updateMethod] ? updateMethod // `appendData` is also supported when data amount\n  // is less than progressive threshold.\n  : 'render';\n\n  if (methodName !== 'render') {\n    view[methodName](seriesModel, ecModel, api, payload);\n  }\n\n  return progressMethodMap[methodName];\n}\n\nvar progressMethodMap = {\n  incrementalPrepareRender: {\n    progress: function progress(params, context) {\n      context.view.incrementalRender(params, context.model, context.ecModel, context.api, context.payload);\n    }\n  },\n  render: {\n    // Put view.render in `progress` to support appendData. But in this case\n    // view.render should not be called in reset, otherwise it will be called\n    // twise. Use `forceFirstProgress` to make sure that view.render is called\n    // in any cases.\n    forceFirstProgress: true,\n    progress: function progress(params, context) {\n      context.view.render(context.model, context.ecModel, context.api, context.payload);\n    }\n  }\n};\nvar _default = Chart;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar TYPE_DELIMITER = '.';\nvar IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n/**\n * Notice, parseClassType('') should returns {main: '', sub: ''}\n * @public\n */\n\nfunction parseClassType(componentType) {\n  var ret = {\n    main: '',\n    sub: ''\n  };\n\n  if (componentType) {\n    componentType = componentType.split(TYPE_DELIMITER);\n    ret.main = componentType[0] || '';\n    ret.sub = componentType[1] || '';\n  }\n\n  return ret;\n}\n/**\n * @public\n */\n\n\nfunction checkClassType(componentType) {\n  zrUtil.assert(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(componentType), 'componentType \"' + componentType + '\" illegal');\n}\n/**\n * @public\n */\n\n\nfunction enableClassExtend(RootClass, mandatoryMethods) {\n  RootClass.$constructor = RootClass;\n\n  RootClass.extend = function (proto) {\n    var superClass = this;\n\n    var ExtendedClass = function ExtendedClass() {\n      if (!proto.$constructor) {\n        superClass.apply(this, arguments);\n      } else {\n        proto.$constructor.apply(this, arguments);\n      }\n    };\n\n    zrUtil.extend(ExtendedClass.prototype, proto);\n    ExtendedClass.extend = this.extend;\n    ExtendedClass.superCall = superCall;\n    ExtendedClass.superApply = superApply;\n    zrUtil.inherits(ExtendedClass, this);\n    ExtendedClass.superClass = superClass;\n    return ExtendedClass;\n  };\n}\n\nvar classBase = 0;\n/**\n * Can not use instanceof, consider different scope by\n * cross domain or es module import in ec extensions.\n * Mount a method \"isInstance()\" to Clz.\n */\n\nfunction enableClassCheck(Clz) {\n  var classAttr = ['__\\0is_clz', classBase++, Math.random().toFixed(3)].join('_');\n  Clz.prototype[classAttr] = true;\n\n  Clz.isInstance = function (obj) {\n    return !!(obj && obj[classAttr]);\n  };\n} // superCall should have class info, which can not be fetch from 'this'.\n// Consider this case:\n// class A has method f,\n// class B inherits class A, overrides method f, f call superApply('f'),\n// class C inherits class B, do not overrides method f,\n// then when method of class C is called, dead loop occured.\n\n\nfunction superCall(context, methodName) {\n  var args = zrUtil.slice(arguments, 2);\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n\nfunction superApply(context, methodName, args) {\n  return this.superClass.prototype[methodName].apply(context, args);\n}\n/**\n * @param {Object} entity\n * @param {Object} options\n * @param {boolean} [options.registerWhenExtend]\n * @public\n */\n\n\nfunction enableClassManagement(entity, options) {\n  options = options || {};\n  /**\n   * Component model classes\n   * key: componentType,\n   * value:\n   *     componentClass, when componentType is 'xxx'\n   *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n   * @type {Object}\n   */\n\n  var storage = {};\n\n  entity.registerClass = function (Clazz, componentType) {\n    if (componentType) {\n      checkClassType(componentType);\n      componentType = parseClassType(componentType);\n\n      if (!componentType.sub) {\n        storage[componentType.main] = Clazz;\n      } else if (componentType.sub !== IS_CONTAINER) {\n        var container = makeContainer(componentType);\n        container[componentType.sub] = Clazz;\n      }\n    }\n\n    return Clazz;\n  };\n\n  entity.getClass = function (componentMainType, subType, throwWhenNotFound) {\n    var Clazz = storage[componentMainType];\n\n    if (Clazz && Clazz[IS_CONTAINER]) {\n      Clazz = subType ? Clazz[subType] : null;\n    }\n\n    if (throwWhenNotFound && !Clazz) {\n      throw new Error(!subType ? componentMainType + '.' + 'type should be specified.' : 'Component ' + componentMainType + '.' + (subType || '') + ' not exists. Load it first.');\n    }\n\n    return Clazz;\n  };\n\n  entity.getClassesByMainType = function (componentType) {\n    componentType = parseClassType(componentType);\n    var result = [];\n    var obj = storage[componentType.main];\n\n    if (obj && obj[IS_CONTAINER]) {\n      zrUtil.each(obj, function (o, type) {\n        type !== IS_CONTAINER && result.push(o);\n      });\n    } else {\n      result.push(obj);\n    }\n\n    return result;\n  };\n\n  entity.hasClass = function (componentType) {\n    // Just consider componentType.main.\n    componentType = parseClassType(componentType);\n    return !!storage[componentType.main];\n  };\n  /**\n   * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n   */\n\n\n  entity.getAllClassMainTypes = function () {\n    var types = [];\n    zrUtil.each(storage, function (obj, type) {\n      types.push(type);\n    });\n    return types;\n  };\n  /**\n   * If a main type is container and has sub types\n   * @param  {string}  mainType\n   * @return {boolean}\n   */\n\n\n  entity.hasSubTypes = function (componentType) {\n    componentType = parseClassType(componentType);\n    var obj = storage[componentType.main];\n    return obj && obj[IS_CONTAINER];\n  };\n\n  entity.parseClassType = parseClassType;\n\n  function makeContainer(componentType) {\n    var container = storage[componentType.main];\n\n    if (!container || !container[IS_CONTAINER]) {\n      container = storage[componentType.main] = {};\n      container[IS_CONTAINER] = true;\n    }\n\n    return container;\n  }\n\n  if (options.registerWhenExtend) {\n    var originalExtend = entity.extend;\n\n    if (originalExtend) {\n      entity.extend = function (proto) {\n        var ExtendedClass = originalExtend.call(this, proto);\n        return entity.registerClass(ExtendedClass, proto.type);\n      };\n    }\n  }\n\n  return entity;\n}\n/**\n * @param {string|Array.<string>} properties\n */\n\n\nfunction setReadOnly(obj, properties) {// FIXME It seems broken in IE8 simulation of IE11\n  // if (!zrUtil.isArray(properties)) {\n  //     properties = properties != null ? [properties] : [];\n  // }\n  // zrUtil.each(properties, function (prop) {\n  //     var value = obj[prop];\n  //     Object.defineProperty\n  //         && Object.defineProperty(obj, prop, {\n  //             value: value, writable: false\n  //         });\n  //     zrUtil.isArray(obj[prop])\n  //         && Object.freeze\n  //         && Object.freeze(obj[prop]);\n  // });\n}\n\nexports.parseClassType = parseClassType;\nexports.enableClassExtend = enableClassExtend;\nexports.enableClassCheck = enableClassCheck;\nexports.enableClassManagement = enableClassManagement;\nexports.setReadOnly = setReadOnly;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","var MediaQueryDispatch = require('./MediaQueryDispatch');\n\nmodule.exports = new MediaQueryDispatch();","var MediaQuery = require('./MediaQuery');\n\nvar Util = require('./Util');\n\nvar each = Util.each;\nvar isFunction = Util.isFunction;\nvar isArray = Util.isArray;\n/**\n * Allows for registration of query handlers.\n * Manages the query handler's state and is responsible for wiring up browser events\n *\n * @constructor\n */\n\nfunction MediaQueryDispatch() {\n  if (!window.matchMedia) {\n    throw new Error('matchMedia not present, legacy browsers require a polyfill');\n  }\n\n  this.queries = {};\n  this.browserIsIncapable = !window.matchMedia('only all').matches;\n}\n\nMediaQueryDispatch.prototype = {\n  constructor: MediaQueryDispatch,\n\n  /**\n   * Registers a handler for the given media query\n   *\n   * @param {string} q the media query\n   * @param {object || Array || Function} options either a single query handler object, a function, or an array of query handlers\n   * @param {function} options.match fired when query matched\n   * @param {function} [options.unmatch] fired when a query is no longer matched\n   * @param {function} [options.setup] fired when handler first triggered\n   * @param {boolean} [options.deferSetup=false] whether setup should be run immediately or deferred until query is first matched\n   * @param {boolean} [shouldDegrade=false] whether this particular media query should always run on incapable browsers\n   */\n  register: function register(q, options, shouldDegrade) {\n    var queries = this.queries,\n        isUnconditional = shouldDegrade && this.browserIsIncapable;\n\n    if (!queries[q]) {\n      queries[q] = new MediaQuery(q, isUnconditional);\n    } //normalise to object in an array\n\n\n    if (isFunction(options)) {\n      options = {\n        match: options\n      };\n    }\n\n    if (!isArray(options)) {\n      options = [options];\n    }\n\n    each(options, function (handler) {\n      if (isFunction(handler)) {\n        handler = {\n          match: handler\n        };\n      }\n\n      queries[q].addHandler(handler);\n    });\n    return this;\n  },\n\n  /**\n   * unregisters a query and all it's handlers, or a specific handler for a query\n   *\n   * @param {string} q the media query to target\n   * @param {object || function} [handler] specific handler to unregister\n   */\n  unregister: function unregister(q, handler) {\n    var query = this.queries[q];\n\n    if (query) {\n      if (handler) {\n        query.removeHandler(handler);\n      } else {\n        query.clear();\n        delete this.queries[q];\n      }\n    }\n\n    return this;\n  }\n};\nmodule.exports = MediaQueryDispatch;","var QueryHandler = require('./QueryHandler');\n\nvar each = require('./Util').each;\n/**\n * Represents a single media query, manages it's state and registered handlers for this query\n *\n * @constructor\n * @param {string} query the media query string\n * @param {boolean} [isUnconditional=false] whether the media query should run regardless of whether the conditions are met. Primarily for helping older browsers deal with mobile-first design\n */\n\n\nfunction MediaQuery(query, isUnconditional) {\n  this.query = query;\n  this.isUnconditional = isUnconditional;\n  this.handlers = [];\n  this.mql = window.matchMedia(query);\n  var self = this;\n\n  this.listener = function (mql) {\n    // Chrome passes an MediaQueryListEvent object, while other browsers pass MediaQueryList directly\n    self.mql = mql.currentTarget || mql;\n    self.assess();\n  };\n\n  this.mql.addListener(this.listener);\n}\n\nMediaQuery.prototype = {\n  constuctor: MediaQuery,\n\n  /**\n   * add a handler for this query, triggering if already active\n   *\n   * @param {object} handler\n   * @param {function} handler.match callback for when query is activated\n   * @param {function} [handler.unmatch] callback for when query is deactivated\n   * @param {function} [handler.setup] callback for immediate execution when a query handler is registered\n   * @param {boolean} [handler.deferSetup=false] should the setup callback be deferred until the first time the handler is matched?\n   */\n  addHandler: function addHandler(handler) {\n    var qh = new QueryHandler(handler);\n    this.handlers.push(qh);\n    this.matches() && qh.on();\n  },\n\n  /**\n   * removes the given handler from the collection, and calls it's destroy methods\n   *\n   * @param {object || function} handler the handler to remove\n   */\n  removeHandler: function removeHandler(handler) {\n    var handlers = this.handlers;\n    each(handlers, function (h, i) {\n      if (h.equals(handler)) {\n        h.destroy();\n        return !handlers.splice(i, 1); //remove from array and exit each early\n      }\n    });\n  },\n\n  /**\n   * Determine whether the media query should be considered a match\n   *\n   * @return {Boolean} true if media query can be considered a match, false otherwise\n   */\n  matches: function matches() {\n    return this.mql.matches || this.isUnconditional;\n  },\n\n  /**\n   * Clears all handlers and unbinds events\n   */\n  clear: function clear() {\n    each(this.handlers, function (handler) {\n      handler.destroy();\n    });\n    this.mql.removeListener(this.listener);\n    this.handlers.length = 0; //clear array\n  },\n\n  /*\n      * Assesses the query, turning on all handlers if it matches, turning them off if it doesn't match\n      */\n  assess: function assess() {\n    var action = this.matches() ? 'on' : 'off';\n    each(this.handlers, function (handler) {\n      handler[action]();\n    });\n  }\n};\nmodule.exports = MediaQuery;","/**\n * Delegate to handle a media query being matched and unmatched.\n *\n * @param {object} options\n * @param {function} options.match callback for when the media query is matched\n * @param {function} [options.unmatch] callback for when the media query is unmatched\n * @param {function} [options.setup] one-time callback triggered the first time a query is matched\n * @param {boolean} [options.deferSetup=false] should the setup callback be run immediately, rather than first time query is matched?\n * @constructor\n */\nfunction QueryHandler(options) {\n  this.options = options;\n  !options.deferSetup && this.setup();\n}\n\nQueryHandler.prototype = {\n  constructor: QueryHandler,\n\n  /**\n   * coordinates setup of the handler\n   *\n   * @function\n   */\n  setup: function setup() {\n    if (this.options.setup) {\n      this.options.setup();\n    }\n\n    this.initialised = true;\n  },\n\n  /**\n   * coordinates setup and triggering of the handler\n   *\n   * @function\n   */\n  on: function on() {\n    !this.initialised && this.setup();\n    this.options.match && this.options.match();\n  },\n\n  /**\n   * coordinates the unmatch event for the handler\n   *\n   * @function\n   */\n  off: function off() {\n    this.options.unmatch && this.options.unmatch();\n  },\n\n  /**\n   * called when a handler is to be destroyed.\n   * delegates to the destroy or unmatch callbacks, depending on availability.\n   *\n   * @function\n   */\n  destroy: function destroy() {\n    this.options.destroy ? this.options.destroy() : this.off();\n  },\n\n  /**\n   * determines equality by reference.\n   * if object is supplied compare options, if function, compare match callback\n   *\n   * @function\n   * @param {object || function} [target] the target for comparison\n   */\n  equals: function equals(target) {\n    return this.options === target || this.options.match === target;\n  }\n};\nmodule.exports = QueryHandler;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ORIGIN_METHOD = '\\0__throttleOriginMethod';\nvar RATE = '\\0__throttleRate';\nvar THROTTLE_TYPE = '\\0__throttleType';\n/**\n * @public\n * @param {(Function)} fn\n * @param {number} [delay=0] Unit: ms.\n * @param {boolean} [debounce=false]\n *        true: If call interval less than `delay`, only the last call works.\n *        false: If call interval less than `delay, call works on fixed rate.\n * @return {(Function)} throttled fn.\n */\n\nfunction throttle(fn, delay, debounce) {\n  var currCall;\n  var lastCall = 0;\n  var lastExec = 0;\n  var timer = null;\n  var diff;\n  var scope;\n  var args;\n  var debounceNextCall;\n  delay = delay || 0;\n\n  function exec() {\n    lastExec = new Date().getTime();\n    timer = null;\n    fn.apply(scope, args || []);\n  }\n\n  var cb = function cb() {\n    currCall = new Date().getTime();\n    scope = this;\n    args = arguments;\n    var thisDelay = debounceNextCall || delay;\n    var thisDebounce = debounceNextCall || debounce;\n    debounceNextCall = null;\n    diff = currCall - (thisDebounce ? lastCall : lastExec) - thisDelay;\n    clearTimeout(timer); // Here we should make sure that: the `exec` SHOULD NOT be called later\n    // than a new call of `cb`, that is, preserving the command order. Consider\n    // calculating \"scale rate\" when roaming as an example. When a call of `cb`\n    // happens, either the `exec` is called dierectly, or the call is delayed.\n    // But the delayed call should never be later than next call of `cb`. Under\n    // this assurance, we can simply update view state each time `dispatchAction`\n    // triggered by user roaming, but not need to add extra code to avoid the\n    // state being \"rolled-back\".\n\n    if (thisDebounce) {\n      timer = setTimeout(exec, thisDelay);\n    } else {\n      if (diff >= 0) {\n        exec();\n      } else {\n        timer = setTimeout(exec, -diff);\n      }\n    }\n\n    lastCall = currCall;\n  };\n  /**\n   * Clear throttle.\n   * @public\n   */\n\n\n  cb.clear = function () {\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n  };\n  /**\n   * Enable debounce once.\n   */\n\n\n  cb.debounceNextCall = function (debounceDelay) {\n    debounceNextCall = debounceDelay;\n  };\n\n  return cb;\n}\n/**\n * Create throttle method or update throttle rate.\n *\n * @example\n * ComponentView.prototype.render = function () {\n *     ...\n *     throttle.createOrUpdate(\n *         this,\n *         '_dispatchAction',\n *         this.model.get('throttle'),\n *         'fixRate'\n *     );\n * };\n * ComponentView.prototype.remove = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n * ComponentView.prototype.dispose = function () {\n *     throttle.clear(this, '_dispatchAction');\n * };\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n * @param {number} [rate]\n * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n * @return {Function} throttled function.\n */\n\n\nfunction createOrUpdate(obj, fnAttr, rate, throttleType) {\n  var fn = obj[fnAttr];\n\n  if (!fn) {\n    return;\n  }\n\n  var originFn = fn[ORIGIN_METHOD] || fn;\n  var lastThrottleType = fn[THROTTLE_TYPE];\n  var lastRate = fn[RATE];\n\n  if (lastRate !== rate || lastThrottleType !== throttleType) {\n    if (rate == null || !throttleType) {\n      return obj[fnAttr] = originFn;\n    }\n\n    fn = obj[fnAttr] = throttle(originFn, rate, throttleType === 'debounce');\n    fn[ORIGIN_METHOD] = originFn;\n    fn[THROTTLE_TYPE] = throttleType;\n    fn[RATE] = rate;\n  }\n\n  return fn;\n}\n/**\n * Clear throttle. Example see throttle.createOrUpdate.\n *\n * @public\n * @param {Object} obj\n * @param {string} fnAttr\n */\n\n\nfunction clear(obj, fnAttr) {\n  var fn = obj[fnAttr];\n\n  if (fn && fn[ORIGIN_METHOD]) {\n    obj[fnAttr] = fn[ORIGIN_METHOD];\n  }\n}\n\nexports.throttle = throttle;\nexports.createOrUpdate = createOrUpdate;\nexports.clear = clear;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Language: (Simplified) Chinese.\n */\nvar _default = {\n  legend: {\n    selector: {\n      all: '全选',\n      inverse: '反选'\n    }\n  },\n  toolbox: {\n    brush: {\n      title: {\n        rect: '矩形选择',\n        polygon: '圈选',\n        lineX: '横向选择',\n        lineY: '纵向选择',\n        keep: '保持选择',\n        clear: '清除选择'\n      }\n    },\n    dataView: {\n      title: '数据视图',\n      lang: ['数据视图', '关闭', '刷新']\n    },\n    dataZoom: {\n      title: {\n        zoom: '区域缩放',\n        back: '区域缩放还原'\n      }\n    },\n    magicType: {\n      title: {\n        line: '切换为折线图',\n        bar: '切换为柱状图',\n        stack: '切换为堆叠',\n        tiled: '切换为平铺'\n      }\n    },\n    restore: {\n      title: '还原'\n    },\n    saveAsImage: {\n      title: '保存为图片',\n      lang: ['右键另存为图片']\n    }\n  },\n  series: {\n    typeNames: {\n      pie: '饼图',\n      bar: '柱状图',\n      line: '折线图',\n      scatter: '散点图',\n      effectScatter: '涟漪散点图',\n      radar: '雷达图',\n      tree: '树图',\n      treemap: '矩形树图',\n      boxplot: '箱型图',\n      candlestick: 'K线图',\n      k: 'K线图',\n      heatmap: '热力图',\n      map: '地图',\n      parallel: '平行坐标图',\n      lines: '线图',\n      graph: '关系图',\n      sankey: '桑基图',\n      funnel: '漏斗图',\n      gauge: '仪表盘图',\n      pictorialBar: '象形柱图',\n      themeRiver: '主题河流图',\n      sunburst: '旭日图'\n    }\n  },\n  aria: {\n    general: {\n      withTitle: '这是一个关于“{title}”的图表。',\n      withoutTitle: '这是一个图表，'\n    },\n    series: {\n      single: {\n        prefix: '',\n        withName: '图表类型是{seriesType}，表示{seriesName}。',\n        withoutName: '图表类型是{seriesType}。'\n      },\n      multiple: {\n        prefix: '它由{seriesCount}个图表系列组成。',\n        withName: '第{seriesId}个系列是一个表示{seriesName}的{seriesType}，',\n        withoutName: '第{seriesId}个系列是一个{seriesType}，',\n        separator: {\n          middle: '；',\n          end: '。'\n        }\n      }\n    },\n    data: {\n      allData: '其数据是——',\n      partialData: '其中，前{displayCnt}项是——',\n      withName: '{name}的数据是{value}',\n      withoutName: '{value}',\n      separator: {\n        middle: '，',\n        end: ''\n      }\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isFunction = _util.isFunction;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(seriesType, defaultSymbolType, legendSymbol) {\n  // Encoding visual for all series include which is filtered for legend drawing\n  return {\n    seriesType: seriesType,\n    // For legend.\n    performRawSeries: true,\n    reset: function reset(seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var symbolType = seriesModel.get('symbol');\n      var symbolSize = seriesModel.get('symbolSize');\n      var keepAspect = seriesModel.get('symbolKeepAspect');\n      var symbolRotate = seriesModel.get('symbolRotate');\n      var hasSymbolTypeCallback = isFunction(symbolType);\n      var hasSymbolSizeCallback = isFunction(symbolSize);\n      var hasSymbolRotateCallback = isFunction(symbolRotate);\n      var hasCallback = hasSymbolTypeCallback || hasSymbolSizeCallback || hasSymbolRotateCallback;\n      var seriesSymbol = !hasSymbolTypeCallback && symbolType ? symbolType : defaultSymbolType;\n      var seriesSymbolSize = !hasSymbolSizeCallback ? symbolSize : null;\n      var seriesSymbolRotate = !hasSymbolRotateCallback ? seriesSymbolRotate : null;\n      data.setVisual({\n        legendSymbol: legendSymbol || seriesSymbol,\n        // If seting callback functions on `symbol` or `symbolSize`, for simplicity and avoiding\n        // to bring trouble, we do not pick a reuslt from one of its calling on data item here,\n        // but just use the default value. Callback on `symbol` or `symbolSize` is convenient in\n        // some cases but generally it is not recommanded.\n        symbol: seriesSymbol,\n        symbolSize: seriesSymbolSize,\n        symbolKeepAspect: keepAspect,\n        symbolRotate: symbolRotate\n      }); // Only visible series has each data be visual encoded\n\n      if (ecModel.isSeriesFiltered(seriesModel)) {\n        return;\n      }\n\n      function dataEach(data, idx) {\n        if (hasCallback) {\n          var rawValue = seriesModel.getRawValue(idx);\n          var params = seriesModel.getDataParams(idx);\n          hasSymbolTypeCallback && data.setItemVisual(idx, 'symbol', symbolType(rawValue, params));\n          hasSymbolSizeCallback && data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n          hasSymbolRotateCallback && data.setItemVisual(idx, 'symbolRotate', symbolRotate(rawValue, params));\n        }\n\n        if (data.hasItemOption) {\n          var itemModel = data.getItemModel(idx);\n          var itemSymbolType = itemModel.getShallow('symbol', true);\n          var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n          var itemSymbolRotate = itemModel.getShallow('symbolRotate', true);\n          var itemSymbolKeepAspect = itemModel.getShallow('symbolKeepAspect', true); // If has item symbol\n\n          if (itemSymbolType != null) {\n            data.setItemVisual(idx, 'symbol', itemSymbolType);\n          }\n\n          if (itemSymbolSize != null) {\n            // PENDING Transform symbolSize ?\n            data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n          }\n\n          if (itemSymbolRotate != null) {\n            data.setItemVisual(idx, 'symbolRotate', itemSymbolRotate);\n          }\n\n          if (itemSymbolKeepAspect != null) {\n            data.setItemVisual(idx, 'symbolKeepAspect', itemSymbolKeepAspect);\n          }\n        }\n      }\n\n      return {\n        dataEach: data.hasItemOption || hasCallback ? dataEach : null\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar CATEGORY_DEFAULT_VISUAL_INDEX = -1;\n/**\n * @param {Object} option\n * @param {string} [option.type] See visualHandlers.\n * @param {string} [option.mappingMethod] 'linear' or 'piecewise' or 'category' or 'fixed'\n * @param {Array.<number>=} [option.dataExtent] [minExtent, maxExtent],\n *                                              required when mappingMethod is 'linear'\n * @param {Array.<Object>=} [option.pieceList] [\n *                                             {value: someValue},\n *                                             {interval: [min1, max1], visual: {...}},\n *                                             {interval: [min2, max2]}\n *                                             ],\n *                                            required when mappingMethod is 'piecewise'.\n *                                            Visual for only each piece can be specified.\n * @param {Array.<string|Object>=} [option.categories] ['cate1', 'cate2']\n *                                            required when mappingMethod is 'category'.\n *                                            If no option.categories, categories is set\n *                                            as [0, 1, 2, ...].\n * @param {boolean} [option.loop=false] Whether loop mapping when mappingMethod is 'category'.\n * @param {(Array|Object|*)} [option.visual]  Visual data.\n *                                            when mappingMethod is 'category',\n *                                            visual data can be array or object\n *                                            (like: {cate1: '#222', none: '#fff'})\n *                                            or primary types (which represents\n *                                            defualt category visual), otherwise visual\n *                                            can be array or primary (which will be\n *                                            normalized to array).\n *\n */\n\nvar VisualMapping = function VisualMapping(option) {\n  var mappingMethod = option.mappingMethod;\n  var visualType = option.type;\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n\n  var thisOption = this.option = zrUtil.clone(option);\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.type = visualType;\n  /**\n   * @readOnly\n   * @type {string}\n   */\n\n  this.mappingMethod = mappingMethod;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._normalizeData = normalizers[mappingMethod];\n  var visualHandler = visualHandlers[visualType];\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.applyVisual = visualHandler.applyVisual;\n  /**\n   * @public\n   * @type {Function}\n   */\n\n  this.getColorMapper = visualHandler.getColorMapper;\n  /**\n   * @private\n   * @type {Function}\n   */\n\n  this._doMap = visualHandler._doMap[mappingMethod];\n\n  if (mappingMethod === 'piecewise') {\n    normalizeVisualRange(thisOption);\n    preprocessForPiecewise(thisOption);\n  } else if (mappingMethod === 'category') {\n    thisOption.categories ? preprocessForSpecifiedCategory(thisOption) // categories is ordinal when thisOption.categories not specified,\n    // which need no more preprocess except normalize visual.\n    : normalizeVisualRange(thisOption, true);\n  } else {\n    // mappingMethod === 'linear' or 'fixed'\n    zrUtil.assert(mappingMethod !== 'linear' || thisOption.dataExtent);\n    normalizeVisualRange(thisOption);\n  }\n};\n\nVisualMapping.prototype = {\n  constructor: VisualMapping,\n  mapValueToVisual: function mapValueToVisual(value) {\n    var normalized = this._normalizeData(value);\n\n    return this._doMap(normalized, value);\n  },\n  getNormalizer: function getNormalizer() {\n    return zrUtil.bind(this._normalizeData, this);\n  }\n};\nvar visualHandlers = VisualMapping.visualHandlers = {\n  color: {\n    applyVisual: makeApplyVisual('color'),\n\n    /**\n     * Create a mapper function\n     * @return {Function}\n     */\n    getColorMapper: function getColorMapper() {\n      var thisOption = this.option;\n      return zrUtil.bind(thisOption.mappingMethod === 'category' ? function (value, isNormalized) {\n        !isNormalized && (value = this._normalizeData(value));\n        return doMapCategory.call(this, value);\n      } : function (value, isNormalized, out) {\n        // If output rgb array\n        // which will be much faster and useful in pixel manipulation\n        var returnRGBArray = !!out;\n        !isNormalized && (value = this._normalizeData(value));\n        out = zrColor.fastLerp(value, thisOption.parsedVisual, out);\n        return returnRGBArray ? out : zrColor.stringify(out, 'rgba');\n      }, this);\n    },\n    _doMap: {\n      linear: function linear(normalized) {\n        return zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n      },\n      category: doMapCategory,\n      piecewise: function piecewise(normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = zrColor.stringify(zrColor.fastLerp(normalized, this.option.parsedVisual), 'rgba');\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  colorHue: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, value);\n  }),\n  colorSaturation: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, value);\n  }),\n  colorLightness: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyHSL(color, null, null, value);\n  }),\n  colorAlpha: makePartialColorVisualHandler(function (color, value) {\n    return zrColor.modifyAlpha(color, value);\n  }),\n  opacity: {\n    applyVisual: makeApplyVisual('opacity'),\n    _doMap: makeDoMap([0, 1])\n  },\n  liftZ: {\n    applyVisual: makeApplyVisual('liftZ'),\n    _doMap: {\n      linear: doMapFixed,\n      category: doMapFixed,\n      piecewise: doMapFixed,\n      fixed: doMapFixed\n    }\n  },\n  symbol: {\n    applyVisual: function applyVisual(value, getter, setter) {\n      var symbolCfg = this.mapValueToVisual(value);\n\n      if (zrUtil.isString(symbolCfg)) {\n        setter('symbol', symbolCfg);\n      } else if (isObject(symbolCfg)) {\n        for (var name in symbolCfg) {\n          if (symbolCfg.hasOwnProperty(name)) {\n            setter(name, symbolCfg[name]);\n          }\n        }\n      }\n    },\n    _doMap: {\n      linear: doMapToArray,\n      category: doMapCategory,\n      piecewise: function piecewise(normalized, value) {\n        var result = getSpecifiedVisual.call(this, value);\n\n        if (result == null) {\n          result = doMapToArray.call(this, normalized);\n        }\n\n        return result;\n      },\n      fixed: doMapFixed\n    }\n  },\n  symbolSize: {\n    applyVisual: makeApplyVisual('symbolSize'),\n    _doMap: makeDoMap([0, 1])\n  }\n};\n\nfunction preprocessForPiecewise(thisOption) {\n  var pieceList = thisOption.pieceList;\n  thisOption.hasSpecialVisual = false;\n  zrUtil.each(pieceList, function (piece, index) {\n    piece.originIndex = index; // piece.visual is \"result visual value\" but not\n    // a visual range, so it does not need to be normalized.\n\n    if (piece.visual != null) {\n      thisOption.hasSpecialVisual = true;\n    }\n  });\n}\n\nfunction preprocessForSpecifiedCategory(thisOption) {\n  // Hash categories.\n  var categories = thisOption.categories;\n  var visual = thisOption.visual;\n  var categoryMap = thisOption.categoryMap = {};\n  each(categories, function (cate, index) {\n    categoryMap[cate] = index;\n  }); // Process visual map input.\n\n  if (!zrUtil.isArray(visual)) {\n    var visualArr = [];\n\n    if (zrUtil.isObject(visual)) {\n      each(visual, function (v, cate) {\n        var index = categoryMap[cate];\n        visualArr[index != null ? index : CATEGORY_DEFAULT_VISUAL_INDEX] = v;\n      });\n    } else {\n      // Is primary type, represents default visual.\n      visualArr[CATEGORY_DEFAULT_VISUAL_INDEX] = visual;\n    }\n\n    visual = setVisualToOption(thisOption, visualArr);\n  } // Remove categories that has no visual,\n  // then we can mapping them to CATEGORY_DEFAULT_VISUAL_INDEX.\n\n\n  for (var i = categories.length - 1; i >= 0; i--) {\n    if (visual[i] == null) {\n      delete categoryMap[categories[i]];\n      categories.pop();\n    }\n  }\n}\n\nfunction normalizeVisualRange(thisOption, isCategory) {\n  var visual = thisOption.visual;\n  var visualArr = [];\n\n  if (zrUtil.isObject(visual)) {\n    each(visual, function (v) {\n      visualArr.push(v);\n    });\n  } else if (visual != null) {\n    visualArr.push(visual);\n  }\n\n  var doNotNeedPair = {\n    color: 1,\n    symbol: 1\n  };\n\n  if (!isCategory && visualArr.length === 1 && !doNotNeedPair.hasOwnProperty(thisOption.type)) {\n    // Do not care visualArr.length === 0, which is illegal.\n    visualArr[1] = visualArr[0];\n  }\n\n  setVisualToOption(thisOption, visualArr);\n}\n\nfunction makePartialColorVisualHandler(applyValue) {\n  return {\n    applyVisual: function applyVisual(value, getter, setter) {\n      value = this.mapValueToVisual(value); // Must not be array value\n\n      setter('color', applyValue(getter('color'), value));\n    },\n    _doMap: makeDoMap([0, 1])\n  };\n}\n\nfunction doMapToArray(normalized) {\n  var visual = this.option.visual;\n  return visual[Math.round(linearMap(normalized, [0, 1], [0, visual.length - 1], true))] || {};\n}\n\nfunction makeApplyVisual(visualType) {\n  return function (value, getter, setter) {\n    setter(visualType, this.mapValueToVisual(value));\n  };\n}\n\nfunction doMapCategory(normalized) {\n  var visual = this.option.visual;\n  return visual[this.option.loop && normalized !== CATEGORY_DEFAULT_VISUAL_INDEX ? normalized % visual.length : normalized];\n}\n\nfunction doMapFixed() {\n  return this.option.visual[0];\n}\n\nfunction makeDoMap(sourceExtent) {\n  return {\n    linear: function linear(normalized) {\n      return linearMap(normalized, sourceExtent, this.option.visual, true);\n    },\n    category: doMapCategory,\n    piecewise: function piecewise(normalized, value) {\n      var result = getSpecifiedVisual.call(this, value);\n\n      if (result == null) {\n        result = linearMap(normalized, sourceExtent, this.option.visual, true);\n      }\n\n      return result;\n    },\n    fixed: doMapFixed\n  };\n}\n\nfunction getSpecifiedVisual(value) {\n  var thisOption = this.option;\n  var pieceList = thisOption.pieceList;\n\n  if (thisOption.hasSpecialVisual) {\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList);\n    var piece = pieceList[pieceIndex];\n\n    if (piece && piece.visual) {\n      return piece.visual[this.type];\n    }\n  }\n}\n\nfunction setVisualToOption(thisOption, visualArr) {\n  thisOption.visual = visualArr;\n\n  if (thisOption.type === 'color') {\n    thisOption.parsedVisual = zrUtil.map(visualArr, function (item) {\n      return zrColor.parse(item);\n    });\n  }\n\n  return visualArr;\n}\n/**\n * Normalizers by mapping methods.\n */\n\n\nvar normalizers = {\n  linear: function linear(value) {\n    return linearMap(value, this.option.dataExtent, [0, 1], true);\n  },\n  piecewise: function piecewise(value) {\n    var pieceList = this.option.pieceList;\n    var pieceIndex = VisualMapping.findPieceIndex(value, pieceList, true);\n\n    if (pieceIndex != null) {\n      return linearMap(pieceIndex, [0, pieceList.length - 1], [0, 1], true);\n    }\n  },\n  category: function category(value) {\n    var index = this.option.categories ? this.option.categoryMap[value] : value; // ordinal\n\n    return index == null ? CATEGORY_DEFAULT_VISUAL_INDEX : index;\n  },\n  fixed: zrUtil.noop\n};\n/**\n * List available visual types.\n *\n * @public\n * @return {Array.<string>}\n */\n\nVisualMapping.listVisualTypes = function () {\n  var visualTypes = [];\n  zrUtil.each(visualHandlers, function (handler, key) {\n    visualTypes.push(key);\n  });\n  return visualTypes;\n};\n/**\n * @public\n */\n\n\nVisualMapping.addVisualHandler = function (name, handler) {\n  visualHandlers[name] = handler;\n};\n/**\n * @public\n */\n\n\nVisualMapping.isValidType = function (visualType) {\n  return visualHandlers.hasOwnProperty(visualType);\n};\n/**\n * Convinent method.\n * Visual can be Object or Array or primary type.\n *\n * @public\n */\n\n\nVisualMapping.eachVisual = function (visual, callback, context) {\n  if (zrUtil.isObject(visual)) {\n    zrUtil.each(visual, callback, context);\n  } else {\n    callback.call(context, visual);\n  }\n};\n\nVisualMapping.mapVisual = function (visual, callback, context) {\n  var isPrimary;\n  var newVisual = zrUtil.isArray(visual) ? [] : zrUtil.isObject(visual) ? {} : (isPrimary = true, null);\n  VisualMapping.eachVisual(visual, function (v, key) {\n    var newVal = callback.call(context, v, key);\n    isPrimary ? newVisual = newVal : newVisual[key] = newVal;\n  });\n  return newVisual;\n};\n/**\n * @public\n * @param {Object} obj\n * @return {Object} new object containers visual values.\n *                 If no visuals, return null.\n */\n\n\nVisualMapping.retrieveVisuals = function (obj) {\n  var ret = {};\n  var hasVisual;\n  obj && each(visualHandlers, function (h, visualType) {\n    if (obj.hasOwnProperty(visualType)) {\n      ret[visualType] = obj[visualType];\n      hasVisual = true;\n    }\n  });\n  return hasVisual ? ret : null;\n};\n/**\n * Give order to visual types, considering colorSaturation, colorAlpha depends on color.\n *\n * @public\n * @param {(Object|Array)} visualTypes If Object, like: {color: ..., colorSaturation: ...}\n *                                     IF Array, like: ['color', 'symbol', 'colorSaturation']\n * @return {Array.<string>} Sorted visual types.\n */\n\n\nVisualMapping.prepareVisualTypes = function (visualTypes) {\n  if (isObject(visualTypes)) {\n    var types = [];\n    each(visualTypes, function (item, type) {\n      types.push(type);\n    });\n    visualTypes = types;\n  } else if (zrUtil.isArray(visualTypes)) {\n    visualTypes = visualTypes.slice();\n  } else {\n    return [];\n  }\n\n  visualTypes.sort(function (type1, type2) {\n    // color should be front of colorSaturation, colorAlpha, ...\n    // symbol and symbolSize do not matter.\n    return type2 === 'color' && type1 !== 'color' && type1.indexOf('color') === 0 ? 1 : -1;\n  });\n  return visualTypes;\n};\n/**\n * 'color', 'colorSaturation', 'colorAlpha', ... are depends on 'color'.\n * Other visuals are only depends on themself.\n *\n * @public\n * @param {string} visualType1\n * @param {string} visualType2\n * @return {boolean}\n */\n\n\nVisualMapping.dependsOn = function (visualType1, visualType2) {\n  return visualType2 === 'color' ? !!(visualType1 && visualType1.indexOf(visualType2) === 0) : visualType1 === visualType2;\n};\n/**\n * @param {number} value\n * @param {Array.<Object>} pieceList [{value: ..., interval: [min, max]}, ...]\n *                         Always from small to big.\n * @param {boolean} [findClosestWhenOutside=false]\n * @return {number} index\n */\n\n\nVisualMapping.findPieceIndex = function (value, pieceList, findClosestWhenOutside) {\n  var possibleI;\n  var abs = Infinity; // value has the higher priority.\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var pieceValue = pieceList[i].value;\n\n    if (pieceValue != null) {\n      if (pieceValue === value // FIXME\n      // It is supposed to compare value according to value type of dimension,\n      // but currently value type can exactly be string or number.\n      // Compromise for numeric-like string (like '12'), especially\n      // in the case that visualMap.categories is ['22', '33'].\n      || typeof pieceValue === 'string' && pieceValue === value + '') {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(pieceValue, i);\n    }\n  }\n\n  for (var i = 0, len = pieceList.length; i < len; i++) {\n    var piece = pieceList[i];\n    var interval = piece.interval;\n    var close = piece.close;\n\n    if (interval) {\n      if (interval[0] === -Infinity) {\n        if (littleThan(close[1], value, interval[1])) {\n          return i;\n        }\n      } else if (interval[1] === Infinity) {\n        if (littleThan(close[0], interval[0], value)) {\n          return i;\n        }\n      } else if (littleThan(close[0], interval[0], value) && littleThan(close[1], value, interval[1])) {\n        return i;\n      }\n\n      findClosestWhenOutside && updatePossible(interval[0], i);\n      findClosestWhenOutside && updatePossible(interval[1], i);\n    }\n  }\n\n  if (findClosestWhenOutside) {\n    return value === Infinity ? pieceList.length - 1 : value === -Infinity ? 0 : possibleI;\n  }\n\n  function updatePossible(val, index) {\n    var newAbs = Math.abs(val - value);\n\n    if (newAbs < abs) {\n      abs = newAbs;\n      possibleI = index;\n    }\n  }\n};\n\nfunction littleThan(close, a, b) {\n  return close ? a <= b : a < b;\n}\n\nvar _default = VisualMapping;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n\nfunction _default(properties) {\n  // Normalize\n  for (var i = 0; i < properties.length; i++) {\n    if (!properties[i][1]) {\n      properties[i][1] = properties[i][0];\n    }\n  }\n\n  return function (model, excludes, includes) {\n    var style = {};\n\n    for (var i = 0; i < properties.length; i++) {\n      var propName = properties[i][1];\n\n      if (excludes && zrUtil.indexOf(excludes, propName) >= 0 || includes && zrUtil.indexOf(includes, propName) < 0) {\n        continue;\n      }\n\n      var val = model.getShallow(propName);\n\n      if (val != null) {\n        style[properties[i][0]] = val;\n      }\n    }\n\n    return style;\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"./clazz\");\n\nvar parseClassType = _clazz.parseClassType;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar base = 0;\n/**\n * @public\n * @param {string} type\n * @return {string}\n */\n\nfunction getUID(type) {\n  // Considering the case of crossing js context,\n  // use Math.random to make id as unique as possible.\n  return [type || '', base++, Math.random().toFixed(5)].join('_');\n}\n/**\n * @inner\n */\n\n\nfunction enableSubTypeDefaulter(entity) {\n  var subTypeDefaulters = {};\n\n  entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n    componentType = parseClassType(componentType);\n    subTypeDefaulters[componentType.main] = defaulter;\n  };\n\n  entity.determineSubType = function (componentType, option) {\n    var type = option.type;\n\n    if (!type) {\n      var componentTypeMain = parseClassType(componentType).main;\n\n      if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n        type = subTypeDefaulters[componentTypeMain](option);\n      }\n    }\n\n    return type;\n  };\n\n  return entity;\n}\n/**\n * Topological travel on Activity Network (Activity On Vertices).\n * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n *\n * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n *\n * If there is circle dependencey, Error will be thrown.\n *\n */\n\n\nfunction enableTopologicalTravel(entity, dependencyGetter) {\n  /**\n   * @public\n   * @param {Array.<string>} targetNameList Target Component type list.\n   *                                           Can be ['aa', 'bb', 'aa.xx']\n   * @param {Array.<string>} fullNameList By which we can build dependency graph.\n   * @param {Function} callback Params: componentType, dependencies.\n   * @param {Object} context Scope of callback.\n   */\n  entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n    if (!targetNameList.length) {\n      return;\n    }\n\n    var result = makeDepndencyGraph(fullNameList);\n    var graph = result.graph;\n    var stack = result.noEntryList;\n    var targetNameSet = {};\n    zrUtil.each(targetNameList, function (name) {\n      targetNameSet[name] = true;\n    });\n\n    while (stack.length) {\n      var currComponentType = stack.pop();\n      var currVertex = graph[currComponentType];\n      var isInTargetNameSet = !!targetNameSet[currComponentType];\n\n      if (isInTargetNameSet) {\n        callback.call(context, currComponentType, currVertex.originalDeps.slice());\n        delete targetNameSet[currComponentType];\n      }\n\n      zrUtil.each(currVertex.successor, isInTargetNameSet ? removeEdgeAndAdd : removeEdge);\n    }\n\n    zrUtil.each(targetNameSet, function () {\n      throw new Error('Circle dependency may exists');\n    });\n\n    function removeEdge(succComponentType) {\n      graph[succComponentType].entryCount--;\n\n      if (graph[succComponentType].entryCount === 0) {\n        stack.push(succComponentType);\n      }\n    } // Consider this case: legend depends on series, and we call\n    // chart.setOption({series: [...]}), where only series is in option.\n    // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n    // not be called, but only sereis.mergeOption is called. Thus legend\n    // have no chance to update its local record about series (like which\n    // name of series is available in legend).\n\n\n    function removeEdgeAndAdd(succComponentType) {\n      targetNameSet[succComponentType] = true;\n      removeEdge(succComponentType);\n    }\n  };\n  /**\n   * DepndencyGraph: {Object}\n   * key: conponentType,\n   * value: {\n   *     successor: [conponentTypes...],\n   *     originalDeps: [conponentTypes...],\n   *     entryCount: {number}\n   * }\n   */\n\n\n  function makeDepndencyGraph(fullNameList) {\n    var graph = {};\n    var noEntryList = [];\n    zrUtil.each(fullNameList, function (name) {\n      var thisItem = createDependencyGraphItem(graph, name);\n      var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n      var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n      thisItem.entryCount = availableDeps.length;\n\n      if (thisItem.entryCount === 0) {\n        noEntryList.push(name);\n      }\n\n      zrUtil.each(availableDeps, function (dependentName) {\n        if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n          thisItem.predecessor.push(dependentName);\n        }\n\n        var thatItem = createDependencyGraphItem(graph, dependentName);\n\n        if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n          thatItem.successor.push(name);\n        }\n      });\n    });\n    return {\n      graph: graph,\n      noEntryList: noEntryList\n    };\n  }\n\n  function createDependencyGraphItem(graph, name) {\n    if (!graph[name]) {\n      graph[name] = {\n        predecessor: [],\n        successor: []\n      };\n    }\n\n    return graph[name];\n  }\n\n  function getAvailableDependencies(originalDeps, fullNameList) {\n    var availableDeps = [];\n    zrUtil.each(originalDeps, function (dep) {\n      zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n    });\n    return availableDeps;\n  }\n}\n\nexports.getUID = getUID;\nexports.enableSubTypeDefaulter = enableSubTypeDefaulter;\nexports.enableTopologicalTravel = enableTopologicalTravel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"./config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrender = require(\"zrender/lib/zrender\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar timsort = require(\"zrender/lib/core/timsort\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar GlobalModel = require(\"./model/Global\");\n\nvar ExtensionAPI = require(\"./ExtensionAPI\");\n\nvar CoordinateSystemManager = require(\"./CoordinateSystem\");\n\nvar OptionManager = require(\"./model/OptionManager\");\n\nvar backwardCompat = require(\"./preprocessor/backwardCompat\");\n\nvar dataStack = require(\"./processor/dataStack\");\n\nvar ComponentModel = require(\"./model/Component\");\n\nvar SeriesModel = require(\"./model/Series\");\n\nvar ComponentView = require(\"./view/Component\");\n\nvar ChartView = require(\"./view/Chart\");\n\nvar graphic = require(\"./util/graphic\");\n\nvar modelUtil = require(\"./util/model\");\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\n\nvar seriesColor = require(\"./visual/seriesColor\");\n\nvar aria = require(\"./visual/aria\");\n\nvar loadingDefault = require(\"./loading/default\");\n\nvar Scheduler = require(\"./stream/Scheduler\");\n\nvar lightTheme = require(\"./theme/light\");\n\nvar darkTheme = require(\"./theme/dark\");\n\nrequire(\"./component/dataset\");\n\nvar mapDataStorage = require(\"./coord/geo/mapDataStorage\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar assert = zrUtil.assert;\nvar each = zrUtil.each;\nvar isFunction = zrUtil.isFunction;\nvar isObject = zrUtil.isObject;\nvar parseClassType = ComponentModel.parseClassType;\nvar version = '4.8.0';\nvar dependencies = {\n  zrender: '4.3.1'\n};\nvar TEST_FRAME_REMAIN_TIME = 1;\nvar PRIORITY_PROCESSOR_FILTER = 1000;\nvar PRIORITY_PROCESSOR_SERIES_FILTER = 800;\nvar PRIORITY_PROCESSOR_DATASTACK = 900;\nvar PRIORITY_PROCESSOR_STATISTIC = 5000;\nvar PRIORITY_VISUAL_LAYOUT = 1000;\nvar PRIORITY_VISUAL_PROGRESSIVE_LAYOUT = 1100;\nvar PRIORITY_VISUAL_GLOBAL = 2000;\nvar PRIORITY_VISUAL_CHART = 3000;\nvar PRIORITY_VISUAL_POST_CHART_LAYOUT = 3500;\nvar PRIORITY_VISUAL_COMPONENT = 4000; // FIXME\n// necessary?\n\nvar PRIORITY_VISUAL_BRUSH = 5000;\nvar PRIORITY = {\n  PROCESSOR: {\n    FILTER: PRIORITY_PROCESSOR_FILTER,\n    SERIES_FILTER: PRIORITY_PROCESSOR_SERIES_FILTER,\n    STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n  },\n  VISUAL: {\n    LAYOUT: PRIORITY_VISUAL_LAYOUT,\n    PROGRESSIVE_LAYOUT: PRIORITY_VISUAL_PROGRESSIVE_LAYOUT,\n    GLOBAL: PRIORITY_VISUAL_GLOBAL,\n    CHART: PRIORITY_VISUAL_CHART,\n    POST_CHART_LAYOUT: PRIORITY_VISUAL_POST_CHART_LAYOUT,\n    COMPONENT: PRIORITY_VISUAL_COMPONENT,\n    BRUSH: PRIORITY_VISUAL_BRUSH\n  }\n}; // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n// where they must not be invoked nestedly, except the only case: invoke\n// dispatchAction with updateMethod \"none\" in main process.\n// This flag is used to carry out this rule.\n// All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n\nvar IN_MAIN_PROCESS = '__flagInMainProcess';\nvar OPTION_UPDATED = '__optionUpdated';\nvar ACTION_REG = /^[a-zA-Z0-9_]+$/;\n\nfunction createRegisterEventWithLowercaseName(method, ignoreDisposed) {\n  return function (eventName, handler, context) {\n    if (!ignoreDisposed && this._disposed) {\n      disposedWarning(this.id);\n      return;\n    } // Event name is all lowercase\n\n\n    eventName = eventName && eventName.toLowerCase();\n    Eventful.prototype[method].call(this, eventName, handler, context);\n  };\n}\n/**\n * @module echarts~MessageCenter\n */\n\n\nfunction MessageCenter() {\n  Eventful.call(this);\n}\n\nMessageCenter.prototype.on = createRegisterEventWithLowercaseName('on', true);\nMessageCenter.prototype.off = createRegisterEventWithLowercaseName('off', true);\nMessageCenter.prototype.one = createRegisterEventWithLowercaseName('one', true);\nzrUtil.mixin(MessageCenter, Eventful);\n/**\n * @module echarts~ECharts\n */\n\nfunction ECharts(dom, theme, opts) {\n  opts = opts || {}; // Get theme by name\n\n  if (typeof theme === 'string') {\n    theme = themeStorage[theme];\n  }\n  /**\n   * @type {string}\n   */\n\n\n  this.id;\n  /**\n   * Group id\n   * @type {string}\n   */\n\n  this.group;\n  /**\n   * @type {HTMLElement}\n   * @private\n   */\n\n  this._dom = dom;\n  var defaultRenderer = 'canvas';\n  /**\n   * @type {module:zrender/ZRender}\n   * @private\n   */\n\n  var zr = this._zr = zrender.init(dom, {\n    renderer: opts.renderer || defaultRenderer,\n    devicePixelRatio: opts.devicePixelRatio,\n    width: opts.width,\n    height: opts.height\n  });\n  /**\n   * Expect 60 fps.\n   * @type {Function}\n   * @private\n   */\n\n  this._throttledZrFlush = throttle(zrUtil.bind(zr.flush, zr), 17);\n  var theme = zrUtil.clone(theme);\n  theme && backwardCompat(theme, true);\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._theme = theme;\n  /**\n   * @type {Array.<module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Chart>}\n   * @private\n   */\n\n  this._chartsMap = {};\n  /**\n   * @type {Array.<module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsViews = [];\n  /**\n   * @type {Object.<string, module:echarts/view/Component>}\n   * @private\n   */\n\n  this._componentsMap = {};\n  /**\n   * @type {module:echarts/CoordinateSystem}\n   * @private\n   */\n\n  this._coordSysMgr = new CoordinateSystemManager();\n  /**\n   * @type {module:echarts/ExtensionAPI}\n   * @private\n   */\n\n  var api = this._api = createExtensionAPI(this); // Sort on demand\n\n  function prioritySortFunc(a, b) {\n    return a.__prio - b.__prio;\n  }\n\n  timsort(visualFuncs, prioritySortFunc);\n  timsort(dataProcessorFuncs, prioritySortFunc);\n  /**\n   * @type {module:echarts/stream/Scheduler}\n   */\n\n  this._scheduler = new Scheduler(this, api, dataProcessorFuncs, visualFuncs);\n  Eventful.call(this, this._ecEventProcessor = new EventProcessor());\n  /**\n   * @type {module:echarts~MessageCenter}\n   * @private\n   */\n\n  this._messageCenter = new MessageCenter(); // Init mouse events\n\n  this._initEvents(); // In case some people write `window.onresize = chart.resize`\n\n\n  this.resize = zrUtil.bind(this.resize, this); // Can't dispatch action during rendering procedure\n\n  this._pendingActions = [];\n  zr.animation.on('frame', this._onframe, this);\n  bindRenderedEvent(zr, this); // ECharts instance can be used as value.\n\n  zrUtil.setAsPrimitive(this);\n}\n\nvar echartsProto = ECharts.prototype;\n\nechartsProto._onframe = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  var scheduler = this._scheduler; // Lazy update\n\n  if (this[OPTION_UPDATED]) {\n    var silent = this[OPTION_UPDATED].silent;\n    this[IN_MAIN_PROCESS] = true;\n    prepare(this);\n    updateMethods.update.call(this);\n    this[IN_MAIN_PROCESS] = false;\n    this[OPTION_UPDATED] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  } // Avoid do both lazy update and progress in one frame.\n  else if (scheduler.unfinished) {\n      // Stream progress.\n      var remainTime = TEST_FRAME_REMAIN_TIME;\n      var ecModel = this._model;\n      var api = this._api;\n      scheduler.unfinished = false;\n\n      do {\n        var startTime = +new Date();\n        scheduler.performSeriesTasks(ecModel); // Currently dataProcessorFuncs do not check threshold.\n\n        scheduler.performDataProcessorTasks(ecModel);\n        updateStreamModes(this, ecModel); // Do not update coordinate system here. Because that coord system update in\n        // each frame is not a good user experience. So we follow the rule that\n        // the extent of the coordinate system is determin in the first frame (the\n        // frame is executed immedietely after task reset.\n        // this._coordSysMgr.update(ecModel, api);\n        // console.log('--- ec frame visual ---', remainTime);\n\n        scheduler.performVisualTasks(ecModel);\n        renderSeries(this, this._model, api, 'remain');\n        remainTime -= +new Date() - startTime;\n      } while (remainTime > 0 && scheduler.unfinished); // Call flush explicitly for trigger finished event.\n\n\n      if (!scheduler.unfinished) {\n        this._zr.flush();\n      } // Else, zr flushing be ensue within the same frame,\n      // because zr flushing is after onframe event.\n\n    }\n};\n/**\n * @return {HTMLElement}\n */\n\n\nechartsProto.getDom = function () {\n  return this._dom;\n};\n/**\n * @return {module:zrender~ZRender}\n */\n\n\nechartsProto.getZr = function () {\n  return this._zr;\n};\n/**\n * Usage:\n * chart.setOption(option, notMerge, lazyUpdate);\n * chart.setOption(option, {\n *     notMerge: ...,\n *     lazyUpdate: ...,\n *     silent: ...\n * });\n *\n * @param {Object} option\n * @param {Object|boolean} [opts] opts or notMerge.\n * @param {boolean} [opts.notMerge=false]\n * @param {boolean} [opts.lazyUpdate=false] Useful when setOption frequently.\n */\n\n\nechartsProto.setOption = function (option, notMerge, lazyUpdate) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var silent;\n\n  if (isObject(notMerge)) {\n    lazyUpdate = notMerge.lazyUpdate;\n    silent = notMerge.silent;\n    notMerge = notMerge.notMerge;\n  }\n\n  this[IN_MAIN_PROCESS] = true;\n\n  if (!this._model || notMerge) {\n    var optionManager = new OptionManager(this._api);\n    var theme = this._theme;\n    var ecModel = this._model = new GlobalModel();\n    ecModel.scheduler = this._scheduler;\n    ecModel.init(null, null, theme, optionManager);\n  }\n\n  this._model.setOption(option, optionPreprocessorFuncs);\n\n  if (lazyUpdate) {\n    this[OPTION_UPDATED] = {\n      silent: silent\n    };\n    this[IN_MAIN_PROCESS] = false;\n  } else {\n    prepare(this);\n    updateMethods.update.call(this); // Ensure zr refresh sychronously, and then pixel in canvas can be\n    // fetched after `setOption`.\n\n    this._zr.flush();\n\n    this[OPTION_UPDATED] = false;\n    this[IN_MAIN_PROCESS] = false;\n    flushPendingActions.call(this, silent);\n    triggerUpdatedEvent.call(this, silent);\n  }\n};\n/**\n * @DEPRECATED\n */\n\n\nechartsProto.setTheme = function () {\n  console.error('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n};\n/**\n * @return {module:echarts/model/Global}\n */\n\n\nechartsProto.getModel = function () {\n  return this._model;\n};\n/**\n * @return {Object}\n */\n\n\nechartsProto.getOption = function () {\n  return this._model && this._model.getOption();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getWidth = function () {\n  return this._zr.getWidth();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getHeight = function () {\n  return this._zr.getHeight();\n};\n/**\n * @return {number}\n */\n\n\nechartsProto.getDevicePixelRatio = function () {\n  return this._zr.painter.dpr || window.devicePixelRatio || 1;\n};\n/**\n * Get canvas which has all thing rendered\n * @param {Object} opts\n * @param {string} [opts.backgroundColor]\n * @return {string}\n */\n\n\nechartsProto.getRenderedCanvas = function (opts) {\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  opts = opts || {};\n  opts.pixelRatio = opts.pixelRatio || 1;\n  opts.backgroundColor = opts.backgroundColor || this._model.get('backgroundColor');\n  var zr = this._zr; // var list = zr.storage.getDisplayList();\n  // Stop animations\n  // Never works before in init animation, so remove it.\n  // zrUtil.each(list, function (el) {\n  //     el.stopAnimation(true);\n  // });\n\n  return zr.painter.getRenderedCanvas(opts);\n};\n/**\n * Get svg data url\n * @return {string}\n */\n\n\nechartsProto.getSvgDataURL = function () {\n  if (!env.svgSupported) {\n    return;\n  }\n\n  var zr = this._zr;\n  var list = zr.storage.getDisplayList(); // Stop animations\n\n  zrUtil.each(list, function (el) {\n    el.stopAnimation(true);\n  });\n  return zr.painter.toDataURL();\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n * @param {string} [opts.excludeComponents]\n */\n\n\nechartsProto.getDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  opts = opts || {};\n  var excludeComponents = opts.excludeComponents;\n  var ecModel = this._model;\n  var excludesComponentViews = [];\n  var self = this;\n  each(excludeComponents, function (componentType) {\n    ecModel.eachComponent({\n      mainType: componentType\n    }, function (component) {\n      var view = self._componentsMap[component.__viewId];\n\n      if (!view.group.ignore) {\n        excludesComponentViews.push(view);\n        view.group.ignore = true;\n      }\n    });\n  });\n  var url = this._zr.painter.getType() === 'svg' ? this.getSvgDataURL() : this.getRenderedCanvas(opts).toDataURL('image/' + (opts && opts.type || 'png'));\n  each(excludesComponentViews, function (view) {\n    view.group.ignore = false;\n  });\n  return url;\n};\n/**\n * @return {string}\n * @param {Object} opts\n * @param {string} [opts.type='png']\n * @param {string} [opts.pixelRatio=1]\n * @param {string} [opts.backgroundColor]\n */\n\n\nechartsProto.getConnectedDataURL = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (!env.canvasSupported) {\n    return;\n  }\n\n  var isSvg = opts.type === 'svg';\n  var groupId = this.group;\n  var mathMin = Math.min;\n  var mathMax = Math.max;\n  var MAX_NUMBER = Infinity;\n\n  if (connectedGroups[groupId]) {\n    var left = MAX_NUMBER;\n    var top = MAX_NUMBER;\n    var right = -MAX_NUMBER;\n    var bottom = -MAX_NUMBER;\n    var canvasList = [];\n    var dpr = opts && opts.pixelRatio || 1;\n    zrUtil.each(instances, function (chart, id) {\n      if (chart.group === groupId) {\n        var canvas = isSvg ? chart.getZr().painter.getSvgDom().innerHTML : chart.getRenderedCanvas(zrUtil.clone(opts));\n        var boundingRect = chart.getDom().getBoundingClientRect();\n        left = mathMin(boundingRect.left, left);\n        top = mathMin(boundingRect.top, top);\n        right = mathMax(boundingRect.right, right);\n        bottom = mathMax(boundingRect.bottom, bottom);\n        canvasList.push({\n          dom: canvas,\n          left: boundingRect.left,\n          top: boundingRect.top\n        });\n      }\n    });\n    left *= dpr;\n    top *= dpr;\n    right *= dpr;\n    bottom *= dpr;\n    var width = right - left;\n    var height = bottom - top;\n    var targetCanvas = zrUtil.createCanvas();\n    var zr = zrender.init(targetCanvas, {\n      renderer: isSvg ? 'svg' : 'canvas'\n    });\n    zr.resize({\n      width: width,\n      height: height\n    });\n\n    if (isSvg) {\n      var content = '';\n      each(canvasList, function (item) {\n        var x = item.left - left;\n        var y = item.top - top;\n        content += '<g transform=\"translate(' + x + ',' + y + ')\">' + item.dom + '</g>';\n      });\n      zr.painter.getSvgRoot().innerHTML = content;\n\n      if (opts.connectedBackgroundColor) {\n        zr.painter.setBackgroundColor(opts.connectedBackgroundColor);\n      }\n\n      zr.refreshImmediately();\n      return zr.painter.toDataURL();\n    } else {\n      // Background between the charts\n      if (opts.connectedBackgroundColor) {\n        zr.add(new graphic.Rect({\n          shape: {\n            x: 0,\n            y: 0,\n            width: width,\n            height: height\n          },\n          style: {\n            fill: opts.connectedBackgroundColor\n          }\n        }));\n      }\n\n      each(canvasList, function (item) {\n        var img = new graphic.Image({\n          style: {\n            x: item.left * dpr - left,\n            y: item.top * dpr - top,\n            image: item.dom\n          }\n        });\n        zr.add(img);\n      });\n      zr.refreshImmediately();\n      return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n    }\n  } else {\n    return this.getDataURL(opts);\n  }\n};\n/**\n * Convert from logical coordinate system to pixel coordinate system.\n * See CoordinateSystem#convertToPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId, geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\n\nechartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n/**\n * Convert from pixel coordinate system to logical coordinate system.\n * See CoordinateSystem#convertFromPixel.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {Array|number} result\n */\n\nechartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\nfunction doConvertPixel(methodName, finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var ecModel = this._model;\n\n  var coordSysList = this._coordSysMgr.getCoordinateSystems();\n\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n\n  for (var i = 0; i < coordSysList.length; i++) {\n    var coordSys = coordSysList[i];\n\n    if (coordSys[methodName] && (result = coordSys[methodName](ecModel, finder, value)) != null) {\n      return result;\n    }\n  }\n}\n/**\n * Is the specified coordinate systems or components contain the given pixel point.\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            geoIndex / geoId / geoName,\n *            bmapIndex / bmapId / bmapName,\n *            xAxisIndex / xAxisId / xAxisName,\n *            yAxisIndex / yAxisId / yAxisName,\n *            gridIndex / gridId / gridName,\n *            ... (can be extended)\n *        }\n * @param {Array|number} value\n * @return {boolean} result\n */\n\n\nechartsProto.containPixel = function (finder, value) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var ecModel = this._model;\n  var result;\n  finder = modelUtil.parseFinder(ecModel, finder);\n  zrUtil.each(finder, function (models, key) {\n    key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n      var coordSys = model.coordinateSystem;\n\n      if (coordSys && coordSys.containPoint) {\n        result |= !!coordSys.containPoint(value);\n      } else if (key === 'seriesModels') {\n        var view = this._chartsMap[model.__viewId];\n\n        if (view && view.containPoint) {\n          result |= view.containPoint(value, model);\n        } else {}\n      } else {}\n    }, this);\n  }, this);\n  return !!result;\n};\n/**\n * Get visual from series or data.\n * @param {string|Object} finder\n *        If string, e.g., 'series', means {seriesIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex / seriesId / seriesName,\n *            dataIndex / dataIndexInside\n *        }\n *        If dataIndex is not specified, series visual will be fetched,\n *        but not data item visual.\n *        If all of seriesIndex, seriesId, seriesName are not specified,\n *        visual will be fetched from first series.\n * @param {string} visualType 'color', 'symbol', 'symbolSize'\n */\n\n\nechartsProto.getVisual = function (finder, visualType) {\n  var ecModel = this._model;\n  finder = modelUtil.parseFinder(ecModel, finder, {\n    defaultMainType: 'series'\n  });\n  var seriesModel = finder.seriesModel;\n  var data = seriesModel.getData();\n  var dataIndexInside = finder.hasOwnProperty('dataIndexInside') ? finder.dataIndexInside : finder.hasOwnProperty('dataIndex') ? data.indexOfRawIndex(finder.dataIndex) : null;\n  return dataIndexInside != null ? data.getItemVisual(dataIndexInside, visualType) : data.getVisual(visualType);\n};\n/**\n * Get view of corresponding component model\n * @param  {module:echarts/model/Component} componentModel\n * @return {module:echarts/view/Component}\n */\n\n\nechartsProto.getViewOfComponentModel = function (componentModel) {\n  return this._componentsMap[componentModel.__viewId];\n};\n/**\n * Get view of corresponding series model\n * @param  {module:echarts/model/Series} seriesModel\n * @return {module:echarts/view/Chart}\n */\n\n\nechartsProto.getViewOfSeriesModel = function (seriesModel) {\n  return this._chartsMap[seriesModel.__viewId];\n};\n\nvar updateMethods = {\n  prepareAndUpdate: function prepareAndUpdate(payload) {\n    prepare(this);\n    updateMethods.update.call(this, payload);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  update: function update(payload) {\n    // console.profile && console.profile('update');\n    var ecModel = this._model;\n    var api = this._api;\n    var zr = this._zr;\n    var coordSysMgr = this._coordSysMgr;\n    var scheduler = this._scheduler; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    scheduler.restoreData(ecModel, payload);\n    scheduler.performSeriesTasks(ecModel); // TODO\n    // Save total ecModel here for undo/redo (after restoring data and before processing data).\n    // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n    // Create new coordinate system each update\n    // In LineView may save the old coordinate system and use it to get the orignal point\n\n    coordSysMgr.create(ecModel, api);\n    scheduler.performDataProcessorTasks(ecModel, payload); // Current stream render is not supported in data process. So we can update\n    // stream modes after data processing, where the filtered data is used to\n    // deteming whether use progressive rendering.\n\n    updateStreamModes(this, ecModel); // We update stream modes before coordinate system updated, then the modes info\n    // can be fetched when coord sys updating (consider the barGrid extent fix). But\n    // the drawback is the full coord info can not be fetched. Fortunately this full\n    // coord is not requied in stream mode updater currently.\n\n    coordSysMgr.update(ecModel, api);\n    clearColorPalette(ecModel);\n    scheduler.performVisualTasks(ecModel, payload);\n    render(this, ecModel, api, payload); // Set background\n\n    var backgroundColor = ecModel.get('backgroundColor') || 'transparent'; // In IE8\n\n    if (!env.canvasSupported) {\n      var colorArr = colorTool.parse(backgroundColor);\n      backgroundColor = colorTool.stringify(colorArr, 'rgb');\n\n      if (colorArr[3] === 0) {\n        backgroundColor = 'transparent';\n      }\n    } else {\n      zr.setBackgroundColor(backgroundColor);\n    }\n\n    performPostUpdateFuncs(ecModel, api); // console.profile && console.profileEnd('update');\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateTransform: function updateTransform(payload) {\n    var ecModel = this._model;\n    var ecIns = this;\n    var api = this._api; // update before setOption\n\n    if (!ecModel) {\n      return;\n    } // ChartView.markUpdateMethod(payload, 'updateTransform');\n\n\n    var componentDirtyList = [];\n    ecModel.eachComponent(function (componentType, componentModel) {\n      var componentView = ecIns.getViewOfComponentModel(componentModel);\n\n      if (componentView && componentView.__alive) {\n        if (componentView.updateTransform) {\n          var result = componentView.updateTransform(componentModel, ecModel, api, payload);\n          result && result.update && componentDirtyList.push(componentView);\n        } else {\n          componentDirtyList.push(componentView);\n        }\n      }\n    });\n    var seriesDirtyMap = zrUtil.createHashMap();\n    ecModel.eachSeries(function (seriesModel) {\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.updateTransform) {\n        var result = chartView.updateTransform(seriesModel, ecModel, api, payload);\n        result && result.update && seriesDirtyMap.set(seriesModel.uid, 1);\n      } else {\n        seriesDirtyMap.set(seriesModel.uid, 1);\n      }\n    });\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true,\n      dirtyMap: seriesDirtyMap\n    }); // Currently, not call render of components. Geo render cost a lot.\n    // renderComponents(ecIns, ecModel, api, payload, componentDirtyList);\n\n\n    renderSeries(ecIns, ecModel, api, payload, seriesDirtyMap);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateView: function updateView(payload) {\n    var ecModel = this._model; // update before setOption\n\n    if (!ecModel) {\n      return;\n    }\n\n    ChartView.markUpdateMethod(payload, 'updateView');\n    clearColorPalette(ecModel); // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n\n    this._scheduler.performVisualTasks(ecModel, payload, {\n      setDirty: true\n    });\n\n    render(this, this._model, this._api, payload);\n    performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateVisual: function updateVisual(payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateVisual');\n    // clearColorPalette(ecModel);\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // this._scheduler.performVisualTasks(ecModel, payload, {visualType: 'visual', setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  },\n\n  /**\n   * @param {Object} payload\n   * @private\n   */\n  updateLayout: function updateLayout(payload) {\n    updateMethods.update.call(this, payload); // var ecModel = this._model;\n    // // update before setOption\n    // if (!ecModel) {\n    //     return;\n    // }\n    // ChartView.markUpdateMethod(payload, 'updateLayout');\n    // // Keep pipe to the exist pipeline because it depends on the render task of the full pipeline.\n    // // this._scheduler.performVisualTasks(ecModel, payload, 'layout', true);\n    // this._scheduler.performVisualTasks(ecModel, payload, {setDirty: true});\n    // render(this, this._model, this._api, payload);\n    // performPostUpdateFuncs(ecModel, this._api);\n  }\n};\n\nfunction prepare(ecIns) {\n  var ecModel = ecIns._model;\n  var scheduler = ecIns._scheduler;\n  scheduler.restorePipelines(ecModel);\n  scheduler.prepareStageTasks();\n  prepareView(ecIns, 'component', ecModel, scheduler);\n  prepareView(ecIns, 'chart', ecModel, scheduler);\n  scheduler.plan();\n}\n/**\n * @private\n */\n\n\nfunction updateDirectly(ecIns, method, payload, mainType, subType) {\n  var ecModel = ecIns._model; // broadcast\n\n  if (!mainType) {\n    // FIXME\n    // Chart will not be update directly here, except set dirty.\n    // But there is no such scenario now.\n    each(ecIns._componentsViews.concat(ecIns._chartsViews), callView);\n    return;\n  }\n\n  var query = {};\n  query[mainType + 'Id'] = payload[mainType + 'Id'];\n  query[mainType + 'Index'] = payload[mainType + 'Index'];\n  query[mainType + 'Name'] = payload[mainType + 'Name'];\n  var condition = {\n    mainType: mainType,\n    query: query\n  };\n  subType && (condition.subType = subType); // subType may be '' by parseClassType;\n\n  var excludeSeriesId = payload.excludeSeriesId;\n\n  if (excludeSeriesId != null) {\n    excludeSeriesId = zrUtil.createHashMap(modelUtil.normalizeToArray(excludeSeriesId));\n  } // If dispatchAction before setOption, do nothing.\n\n\n  ecModel && ecModel.eachComponent(condition, function (model) {\n    if (!excludeSeriesId || excludeSeriesId.get(model.id) == null) {\n      callView(ecIns[mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId]);\n    }\n  }, ecIns);\n\n  function callView(view) {\n    view && view.__alive && view[method] && view[method](view.__model, ecModel, ecIns._api, payload);\n  }\n}\n/**\n * Resize the chart\n * @param {Object} opts\n * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n * @param {boolean} [opts.silent=false]\n */\n\n\nechartsProto.resize = function (opts) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._zr.resize(opts);\n\n  var ecModel = this._model; // Resize loading effect\n\n  this._loadingFX && this._loadingFX.resize();\n\n  if (!ecModel) {\n    return;\n  }\n\n  var optionChanged = ecModel.resetOption('media');\n  var silent = opts && opts.silent;\n  this[IN_MAIN_PROCESS] = true;\n  optionChanged && prepare(this);\n  updateMethods.update.call(this);\n  this[IN_MAIN_PROCESS] = false;\n  flushPendingActions.call(this, silent);\n  triggerUpdatedEvent.call(this, silent);\n};\n\nfunction updateStreamModes(ecIns, ecModel) {\n  var chartsMap = ecIns._chartsMap;\n  var scheduler = ecIns._scheduler;\n  ecModel.eachSeries(function (seriesModel) {\n    scheduler.updateStreamModes(seriesModel, chartsMap[seriesModel.__viewId]);\n  });\n}\n/**\n * Show loading effect\n * @param  {string} [name='default']\n * @param  {Object} [cfg]\n */\n\n\nechartsProto.showLoading = function (name, cfg) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (isObject(name)) {\n    cfg = name;\n    name = '';\n  }\n\n  name = name || 'default';\n  this.hideLoading();\n\n  if (!loadingEffects[name]) {\n    return;\n  }\n\n  var el = loadingEffects[name](this._api, cfg);\n  var zr = this._zr;\n  this._loadingFX = el;\n  zr.add(el);\n};\n/**\n * Hide loading effect\n */\n\n\nechartsProto.hideLoading = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._loadingFX && this._zr.remove(this._loadingFX);\n  this._loadingFX = null;\n};\n/**\n * @param {Object} eventObj\n * @return {Object}\n */\n\n\nechartsProto.makeActionFromEvent = function (eventObj) {\n  var payload = zrUtil.extend({}, eventObj);\n  payload.type = eventActionMap[eventObj.type];\n  return payload;\n};\n/**\n * @pubilc\n * @param {Object} payload\n * @param {string} [payload.type] Action type\n * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n * @param {boolean} [opt.silent=false] Whether trigger events.\n * @param {boolean} [opt.flush=undefined]\n *                  true: Flush immediately, and then pixel in canvas can be fetched\n *                      immediately. Caution: it might affect performance.\n *                  false: Not flush.\n *                  undefined: Auto decide whether perform flush.\n */\n\n\nechartsProto.dispatchAction = function (payload, opt) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  if (!isObject(opt)) {\n    opt = {\n      silent: !!opt\n    };\n  }\n\n  if (!actions[payload.type]) {\n    return;\n  } // Avoid dispatch action before setOption. Especially in `connect`.\n\n\n  if (!this._model) {\n    return;\n  } // May dispatchAction in rendering procedure\n\n\n  if (this[IN_MAIN_PROCESS]) {\n    this._pendingActions.push(payload);\n\n    return;\n  }\n\n  doDispatchAction.call(this, payload, opt.silent);\n\n  if (opt.flush) {\n    this._zr.flush(true);\n  } else if (opt.flush !== false && env.browser.weChat) {\n    // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n    // hang when sliding page (on touch event), which cause that zr does not\n    // refresh util user interaction finished, which is not expected.\n    // But `dispatchAction` may be called too frequently when pan on touch\n    // screen, which impacts performance if do not throttle them.\n    this._throttledZrFlush();\n  }\n\n  flushPendingActions.call(this, opt.silent);\n  triggerUpdatedEvent.call(this, opt.silent);\n};\n\nfunction doDispatchAction(payload, silent) {\n  var payloadType = payload.type;\n  var escapeConnect = payload.escapeConnect;\n  var actionWrap = actions[payloadType];\n  var actionInfo = actionWrap.actionInfo;\n  var cptType = (actionInfo.update || 'update').split(':');\n  var updateMethod = cptType.pop();\n  cptType = cptType[0] != null && parseClassType(cptType[0]);\n  this[IN_MAIN_PROCESS] = true;\n  var payloads = [payload];\n  var batched = false; // Batch action\n\n  if (payload.batch) {\n    batched = true;\n    payloads = zrUtil.map(payload.batch, function (item) {\n      item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n      item.batch = null;\n      return item;\n    });\n  }\n\n  var eventObjBatch = [];\n  var eventObj;\n  var isHighDown = payloadType === 'highlight' || payloadType === 'downplay';\n  each(payloads, function (batchItem) {\n    // Action can specify the event by return it.\n    eventObj = actionWrap.action(batchItem, this._model, this._api); // Emit event outside\n\n    eventObj = eventObj || zrUtil.extend({}, batchItem); // Convert type to eventType\n\n    eventObj.type = actionInfo.event || eventObj.type;\n    eventObjBatch.push(eventObj); // light update does not perform data process, layout and visual.\n\n    if (isHighDown) {\n      // method, payload, mainType, subType\n      updateDirectly(this, updateMethod, batchItem, 'series');\n    } else if (cptType) {\n      updateDirectly(this, updateMethod, batchItem, cptType.main, cptType.sub);\n    }\n  }, this);\n\n  if (updateMethod !== 'none' && !isHighDown && !cptType) {\n    // Still dirty\n    if (this[OPTION_UPDATED]) {\n      // FIXME Pass payload ?\n      prepare(this);\n      updateMethods.update.call(this, payload);\n      this[OPTION_UPDATED] = false;\n    } else {\n      updateMethods[updateMethod].call(this, payload);\n    }\n  } // Follow the rule of action batch\n\n\n  if (batched) {\n    eventObj = {\n      type: actionInfo.event || payloadType,\n      escapeConnect: escapeConnect,\n      batch: eventObjBatch\n    };\n  } else {\n    eventObj = eventObjBatch[0];\n  }\n\n  this[IN_MAIN_PROCESS] = false;\n  !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n}\n\nfunction flushPendingActions(silent) {\n  var pendingActions = this._pendingActions;\n\n  while (pendingActions.length) {\n    var payload = pendingActions.shift();\n    doDispatchAction.call(this, payload, silent);\n  }\n}\n\nfunction triggerUpdatedEvent(silent) {\n  !silent && this.trigger('updated');\n}\n/**\n * Event `rendered` is triggered when zr\n * rendered. It is useful for realtime\n * snapshot (reflect animation).\n *\n * Event `finished` is triggered when:\n * (1) zrender rendering finished.\n * (2) initial animation finished.\n * (3) progressive rendering finished.\n * (4) no pending action.\n * (5) no delayed setOption needs to be processed.\n */\n\n\nfunction bindRenderedEvent(zr, ecIns) {\n  zr.on('rendered', function () {\n    ecIns.trigger('rendered'); // The `finished` event should not be triggered repeatly,\n    // so it should only be triggered when rendering indeed happend\n    // in zrender. (Consider the case that dipatchAction is keep\n    // triggering when mouse move).\n\n    if ( // Although zr is dirty if initial animation is not finished\n    // and this checking is called on frame, we also check\n    // animation finished for robustness.\n    zr.animation.isFinished() && !ecIns[OPTION_UPDATED] && !ecIns._scheduler.unfinished && !ecIns._pendingActions.length) {\n      ecIns.trigger('finished');\n    }\n  });\n}\n/**\n * @param {Object} params\n * @param {number} params.seriesIndex\n * @param {Array|TypedArray} params.data\n */\n\n\nechartsProto.appendData = function (params) {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  var seriesIndex = params.seriesIndex;\n  var ecModel = this.getModel();\n  var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n  seriesModel.appendData(params); // Note: `appendData` does not support that update extent of coordinate\n  // system, util some scenario require that. In the expected usage of\n  // `appendData`, the initial extent of coordinate system should better\n  // be fixed by axis `min`/`max` setting or initial data, otherwise if\n  // the extent changed while `appendData`, the location of the painted\n  // graphic elements have to be changed, which make the usage of\n  // `appendData` meaningless.\n\n  this._scheduler.unfinished = true;\n};\n/**\n * Register event\n * @method\n */\n\n\nechartsProto.on = createRegisterEventWithLowercaseName('on', false);\nechartsProto.off = createRegisterEventWithLowercaseName('off', false);\nechartsProto.one = createRegisterEventWithLowercaseName('one', false);\n/**\n * Prepare view instances of charts and components\n * @param  {module:echarts/model/Global} ecModel\n * @private\n */\n\nfunction prepareView(ecIns, type, ecModel, scheduler) {\n  var isComponent = type === 'component';\n  var viewList = isComponent ? ecIns._componentsViews : ecIns._chartsViews;\n  var viewMap = isComponent ? ecIns._componentsMap : ecIns._chartsMap;\n  var zr = ecIns._zr;\n  var api = ecIns._api;\n\n  for (var i = 0; i < viewList.length; i++) {\n    viewList[i].__alive = false;\n  }\n\n  isComponent ? ecModel.eachComponent(function (componentType, model) {\n    componentType !== 'series' && doPrepare(model);\n  }) : ecModel.eachSeries(doPrepare);\n\n  function doPrepare(model) {\n    // Consider: id same and type changed.\n    var viewId = '_ec_' + model.id + '_' + model.type;\n    var view = viewMap[viewId];\n\n    if (!view) {\n      var classType = parseClassType(model.type);\n      var Clazz = isComponent ? ComponentView.getClass(classType.main, classType.sub) : ChartView.getClass(classType.sub);\n      view = new Clazz();\n      view.init(ecModel, api);\n      viewMap[viewId] = view;\n      viewList.push(view);\n      zr.add(view.group);\n    }\n\n    model.__viewId = view.__id = viewId;\n    view.__alive = true;\n    view.__model = model;\n    view.group.__ecComponentInfo = {\n      mainType: model.mainType,\n      index: model.componentIndex\n    };\n    !isComponent && scheduler.prepareView(view, model, ecModel, api);\n  }\n\n  for (var i = 0; i < viewList.length;) {\n    var view = viewList[i];\n\n    if (!view.__alive) {\n      !isComponent && view.renderTask.dispose();\n      zr.remove(view.group);\n      view.dispose(ecModel, api);\n      viewList.splice(i, 1);\n      delete viewMap[view.__id];\n      view.__id = view.group.__ecComponentInfo = null;\n    } else {\n      i++;\n    }\n  }\n} // /**\n//  * Encode visual infomation from data after data processing\n//  *\n//  * @param {module:echarts/model/Global} ecModel\n//  * @param {object} layout\n//  * @param {boolean} [layoutFilter] `true`: only layout,\n//  *                                 `false`: only not layout,\n//  *                                 `null`/`undefined`: all.\n//  * @param {string} taskBaseTag\n//  * @private\n//  */\n// function startVisualEncoding(ecIns, ecModel, api, payload, layoutFilter) {\n//     each(visualFuncs, function (visual, index) {\n//         var isLayout = visual.isLayout;\n//         if (layoutFilter == null\n//             || (layoutFilter === false && !isLayout)\n//             || (layoutFilter === true && isLayout)\n//         ) {\n//             visual.func(ecModel, api, payload);\n//         }\n//     });\n// }\n\n\nfunction clearColorPalette(ecModel) {\n  ecModel.clearColorPalette();\n  ecModel.eachSeries(function (seriesModel) {\n    seriesModel.clearColorPalette();\n  });\n}\n\nfunction render(ecIns, ecModel, api, payload) {\n  renderComponents(ecIns, ecModel, api, payload);\n  each(ecIns._chartsViews, function (chart) {\n    chart.__alive = false;\n  });\n  renderSeries(ecIns, ecModel, api, payload); // Remove groups of unrendered charts\n\n  each(ecIns._chartsViews, function (chart) {\n    if (!chart.__alive) {\n      chart.remove(ecModel, api);\n    }\n  });\n}\n\nfunction renderComponents(ecIns, ecModel, api, payload, dirtyList) {\n  each(dirtyList || ecIns._componentsViews, function (componentView) {\n    var componentModel = componentView.__model;\n    componentView.render(componentModel, ecModel, api, payload);\n    updateZ(componentModel, componentView);\n  });\n}\n/**\n * Render each chart and component\n * @private\n */\n\n\nfunction renderSeries(ecIns, ecModel, api, payload, dirtyMap) {\n  // Render all charts\n  var scheduler = ecIns._scheduler;\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    var chartView = ecIns._chartsMap[seriesModel.__viewId];\n    chartView.__alive = true;\n    var renderTask = chartView.renderTask;\n    scheduler.updatePayload(renderTask, payload);\n\n    if (dirtyMap && dirtyMap.get(seriesModel.uid)) {\n      renderTask.dirty();\n    }\n\n    unfinished |= renderTask.perform(scheduler.getPerformArgs(renderTask));\n    chartView.group.silent = !!seriesModel.get('silent');\n    updateZ(seriesModel, chartView);\n    updateBlend(seriesModel, chartView);\n  });\n  scheduler.unfinished |= unfinished; // If use hover layer\n\n  updateHoverLayerStatus(ecIns, ecModel); // Add aria\n\n  aria(ecIns._zr.dom, ecModel);\n}\n\nfunction performPostUpdateFuncs(ecModel, api) {\n  each(postUpdateFuncs, function (func) {\n    func(ecModel, api);\n  });\n}\n\nvar MOUSE_EVENT_NAMES = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'globalout', 'contextmenu'];\n/**\n * @private\n */\n\nechartsProto._initEvents = function () {\n  each(MOUSE_EVENT_NAMES, function (eveName) {\n    var handler = function handler(e) {\n      var ecModel = this.getModel();\n      var el = e.target;\n      var params;\n      var isGlobalOut = eveName === 'globalout'; // no e.target when 'globalout'.\n\n      if (isGlobalOut) {\n        params = {};\n      } else if (el && el.dataIndex != null) {\n        var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n        params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType, el) || {};\n      } // If element has custom eventData of components\n      else if (el && el.eventData) {\n          params = zrUtil.extend({}, el.eventData);\n        } // Contract: if params prepared in mouse event,\n      // these properties must be specified:\n      // {\n      //    componentType: string (component main type)\n      //    componentIndex: number\n      // }\n      // Otherwise event query can not work.\n\n\n      if (params) {\n        var componentType = params.componentType;\n        var componentIndex = params.componentIndex; // Special handling for historic reason: when trigger by\n        // markLine/markPoint/markArea, the componentType is\n        // 'markLine'/'markPoint'/'markArea', but we should better\n        // enable them to be queried by seriesIndex, since their\n        // option is set in each series.\n\n        if (componentType === 'markLine' || componentType === 'markPoint' || componentType === 'markArea') {\n          componentType = 'series';\n          componentIndex = params.seriesIndex;\n        }\n\n        var model = componentType && componentIndex != null && ecModel.getComponent(componentType, componentIndex);\n        var view = model && this[model.mainType === 'series' ? '_chartsMap' : '_componentsMap'][model.__viewId];\n        params.event = e;\n        params.type = eveName;\n        this._ecEventProcessor.eventInfo = {\n          targetEl: el,\n          packedEvent: params,\n          model: model,\n          view: view\n        };\n        this.trigger(eveName, params);\n      }\n    }; // Consider that some component (like tooltip, brush, ...)\n    // register zr event handler, but user event handler might\n    // do anything, such as call `setOption` or `dispatchAction`,\n    // which probably update any of the content and probably\n    // cause problem if it is called previous other inner handlers.\n\n\n    handler.zrEventfulCallAtLast = true;\n\n    this._zr.on(eveName, handler, this);\n  }, this);\n  each(eventActionMap, function (actionType, eventType) {\n    this._messageCenter.on(eventType, function (event) {\n      this.trigger(eventType, event);\n    }, this);\n  }, this);\n};\n/**\n * @return {boolean}\n */\n\n\nechartsProto.isDisposed = function () {\n  return this._disposed;\n};\n/**\n * Clear\n */\n\n\nechartsProto.clear = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this.setOption({\n    series: []\n  }, true);\n};\n/**\n * Dispose instance\n */\n\n\nechartsProto.dispose = function () {\n  if (this._disposed) {\n    disposedWarning(this.id);\n    return;\n  }\n\n  this._disposed = true;\n  modelUtil.setAttribute(this.getDom(), DOM_ATTRIBUTE_KEY, '');\n  var api = this._api;\n  var ecModel = this._model;\n  each(this._componentsViews, function (component) {\n    component.dispose(ecModel, api);\n  });\n  each(this._chartsViews, function (chart) {\n    chart.dispose(ecModel, api);\n  }); // Dispose after all views disposed\n\n  this._zr.dispose();\n\n  delete instances[this.id];\n};\n\nzrUtil.mixin(ECharts, Eventful);\n\nfunction disposedWarning(id) {}\n\nfunction updateHoverLayerStatus(ecIns, ecModel) {\n  var zr = ecIns._zr;\n  var storage = zr.storage;\n  var elCount = 0;\n  storage.traverse(function (el) {\n    elCount++;\n  });\n\n  if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.preventUsingHoverLayer) {\n        return;\n      }\n\n      var chartView = ecIns._chartsMap[seriesModel.__viewId];\n\n      if (chartView.__alive) {\n        chartView.group.traverse(function (el) {\n          // Don't switch back.\n          el.useHoverLayer = true;\n        });\n      }\n    });\n  }\n}\n/**\n * Update chart progressive and blend.\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateBlend(seriesModel, chartView) {\n  var blendMode = seriesModel.get('blendMode') || null;\n  chartView.group.traverse(function (el) {\n    // FIXME marker and other components\n    if (!el.isGroup) {\n      // Only set if blendMode is changed. In case element is incremental and don't wan't to rerender.\n      if (el.style.blend !== blendMode) {\n        el.setStyle('blend', blendMode);\n      }\n    }\n\n    if (el.eachPendingDisplayable) {\n      el.eachPendingDisplayable(function (displayable) {\n        displayable.setStyle('blend', blendMode);\n      });\n    }\n  });\n}\n/**\n * @param {module:echarts/model/Series|module:echarts/model/Component} model\n * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n */\n\n\nfunction updateZ(model, view) {\n  var z = model.get('z');\n  var zlevel = model.get('zlevel'); // Set z and zlevel\n\n  view.group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n    }\n  });\n}\n\nfunction createExtensionAPI(ecInstance) {\n  var coordSysMgr = ecInstance._coordSysMgr;\n  return zrUtil.extend(new ExtensionAPI(ecInstance), {\n    // Inject methods\n    getCoordinateSystems: zrUtil.bind(coordSysMgr.getCoordinateSystems, coordSysMgr),\n    getComponentByElement: function getComponentByElement(el) {\n      while (el) {\n        var modelInfo = el.__ecComponentInfo;\n\n        if (modelInfo != null) {\n          return ecInstance._model.getComponent(modelInfo.mainType, modelInfo.index);\n        }\n\n        el = el.parent;\n      }\n    }\n  });\n}\n/**\n * @class\n * Usage of query:\n * `chart.on('click', query, handler);`\n * The `query` can be:\n * + The component type query string, only `mainType` or `mainType.subType`,\n *   like: 'xAxis', 'series', 'xAxis.category' or 'series.line'.\n * + The component query object, like:\n *   `{seriesIndex: 2}`, `{seriesName: 'xx'}`, `{seriesId: 'some'}`,\n *   `{xAxisIndex: 2}`, `{xAxisName: 'xx'}`, `{xAxisId: 'some'}`.\n * + The data query object, like:\n *   `{dataIndex: 123}`, `{dataType: 'link'}`, `{name: 'some'}`.\n * + The other query object (cmponent customized query), like:\n *   `{element: 'some'}` (only available in custom series).\n *\n * Caveat: If a prop in the `query` object is `null/undefined`, it is the\n * same as there is no such prop in the `query` object.\n */\n\n\nfunction EventProcessor() {\n  // These info required: targetEl, packedEvent, model, view\n  this.eventInfo;\n}\n\nEventProcessor.prototype = {\n  constructor: EventProcessor,\n  normalizeQuery: function normalizeQuery(query) {\n    var cptQuery = {};\n    var dataQuery = {};\n    var otherQuery = {}; // `query` is `mainType` or `mainType.subType` of component.\n\n    if (zrUtil.isString(query)) {\n      var condCptType = parseClassType(query); // `.main` and `.sub` may be ''.\n\n      cptQuery.mainType = condCptType.main || null;\n      cptQuery.subType = condCptType.sub || null;\n    } // `query` is an object, convert to {mainType, index, name, id}.\n    else {\n        // `xxxIndex`, `xxxName`, `xxxId`, `name`, `dataIndex`, `dataType` is reserved,\n        // can not be used in `compomentModel.filterForExposedEvent`.\n        var suffixes = ['Index', 'Name', 'Id'];\n        var dataKeys = {\n          name: 1,\n          dataIndex: 1,\n          dataType: 1\n        };\n        zrUtil.each(query, function (val, key) {\n          var reserved = false;\n\n          for (var i = 0; i < suffixes.length; i++) {\n            var propSuffix = suffixes[i];\n            var suffixPos = key.lastIndexOf(propSuffix);\n\n            if (suffixPos > 0 && suffixPos === key.length - propSuffix.length) {\n              var mainType = key.slice(0, suffixPos); // Consider `dataIndex`.\n\n              if (mainType !== 'data') {\n                cptQuery.mainType = mainType;\n                cptQuery[propSuffix.toLowerCase()] = val;\n                reserved = true;\n              }\n            }\n          }\n\n          if (dataKeys.hasOwnProperty(key)) {\n            dataQuery[key] = val;\n            reserved = true;\n          }\n\n          if (!reserved) {\n            otherQuery[key] = val;\n          }\n        });\n      }\n\n    return {\n      cptQuery: cptQuery,\n      dataQuery: dataQuery,\n      otherQuery: otherQuery\n    };\n  },\n  filter: function filter(eventType, query, args) {\n    // They should be assigned before each trigger call.\n    var eventInfo = this.eventInfo;\n\n    if (!eventInfo) {\n      return true;\n    }\n\n    var targetEl = eventInfo.targetEl;\n    var packedEvent = eventInfo.packedEvent;\n    var model = eventInfo.model;\n    var view = eventInfo.view; // For event like 'globalout'.\n\n    if (!model || !view) {\n      return true;\n    }\n\n    var cptQuery = query.cptQuery;\n    var dataQuery = query.dataQuery;\n    return check(cptQuery, model, 'mainType') && check(cptQuery, model, 'subType') && check(cptQuery, model, 'index', 'componentIndex') && check(cptQuery, model, 'name') && check(cptQuery, model, 'id') && check(dataQuery, packedEvent, 'name') && check(dataQuery, packedEvent, 'dataIndex') && check(dataQuery, packedEvent, 'dataType') && (!view.filterForExposedEvent || view.filterForExposedEvent(eventType, query.otherQuery, targetEl, packedEvent));\n\n    function check(query, host, prop, propOnHost) {\n      return query[prop] == null || host[propOnHost || prop] === query[prop];\n    }\n  },\n  afterTrigger: function afterTrigger() {\n    // Make sure the eventInfo wont be used in next trigger.\n    this.eventInfo = null;\n  }\n};\n/**\n * @type {Object} key: actionType.\n * @inner\n */\n\nvar actions = {};\n/**\n * Map eventType to actionType\n * @type {Object}\n */\n\nvar eventActionMap = {};\n/**\n * Data processor functions of each stage\n * @type {Array.<Object.<string, Function>>}\n * @inner\n */\n\nvar dataProcessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar optionPreprocessorFuncs = [];\n/**\n * @type {Array.<Function>}\n * @inner\n */\n\nvar postUpdateFuncs = [];\n/**\n * Visual encoding functions of each stage\n * @type {Array.<Object.<string, Function>>}\n */\n\nvar visualFuncs = [];\n/**\n * Theme storage\n * @type {Object.<key, Object>}\n */\n\nvar themeStorage = {};\n/**\n * Loading effects\n */\n\nvar loadingEffects = {};\nvar instances = {};\nvar connectedGroups = {};\nvar idBase = new Date() - 0;\nvar groupIdBase = new Date() - 0;\nvar DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n\nfunction enableConnect(chart) {\n  var STATUS_PENDING = 0;\n  var STATUS_UPDATING = 1;\n  var STATUS_UPDATED = 2;\n  var STATUS_KEY = '__connectUpdateStatus';\n\n  function updateConnectedChartsStatus(charts, status) {\n    for (var i = 0; i < charts.length; i++) {\n      var otherChart = charts[i];\n      otherChart[STATUS_KEY] = status;\n    }\n  }\n\n  each(eventActionMap, function (actionType, eventType) {\n    chart._messageCenter.on(eventType, function (event) {\n      if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n        if (event && event.escapeConnect) {\n          return;\n        }\n\n        var action = chart.makeActionFromEvent(event);\n        var otherCharts = [];\n        each(instances, function (otherChart) {\n          if (otherChart !== chart && otherChart.group === chart.group) {\n            otherCharts.push(otherChart);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n        each(otherCharts, function (otherChart) {\n          if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n            otherChart.dispatchAction(action);\n          }\n        });\n        updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n      }\n    });\n  });\n}\n/**\n * @param {HTMLElement} dom\n * @param {Object} [theme]\n * @param {Object} opts\n * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n * @param {string} [opts.renderer] Can choose 'canvas' or 'svg' to render the chart.\n * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n *                              Can be 'auto' (the same as null/undefined)\n * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n *                               Can be 'auto' (the same as null/undefined)\n */\n\n\nfunction init(dom, theme, opts) {\n  var existInstance = getInstanceByDom(dom);\n\n  if (existInstance) {\n    return existInstance;\n  }\n\n  var chart = new ECharts(dom, theme, opts);\n  chart.id = 'ec_' + idBase++;\n  instances[chart.id] = chart;\n  modelUtil.setAttribute(dom, DOM_ATTRIBUTE_KEY, chart.id);\n  enableConnect(chart);\n  return chart;\n}\n/**\n * @return {string|Array.<module:echarts~ECharts>} groupId\n */\n\n\nfunction connect(groupId) {\n  // Is array of charts\n  if (zrUtil.isArray(groupId)) {\n    var charts = groupId;\n    groupId = null; // If any chart has group\n\n    each(charts, function (chart) {\n      if (chart.group != null) {\n        groupId = chart.group;\n      }\n    });\n    groupId = groupId || 'g_' + groupIdBase++;\n    each(charts, function (chart) {\n      chart.group = groupId;\n    });\n  }\n\n  connectedGroups[groupId] = true;\n  return groupId;\n}\n/**\n * @DEPRECATED\n * @return {string} groupId\n */\n\n\nfunction disConnect(groupId) {\n  connectedGroups[groupId] = false;\n}\n/**\n * @return {string} groupId\n */\n\n\nvar disconnect = disConnect;\n/**\n * Dispose a chart instance\n * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n */\n\nfunction dispose(chart) {\n  if (typeof chart === 'string') {\n    chart = instances[chart];\n  } else if (!(chart instanceof ECharts)) {\n    // Try to treat as dom\n    chart = getInstanceByDom(chart);\n  }\n\n  if (chart instanceof ECharts && !chart.isDisposed()) {\n    chart.dispose();\n  }\n}\n/**\n * @param  {HTMLElement} dom\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceByDom(dom) {\n  return instances[modelUtil.getAttribute(dom, DOM_ATTRIBUTE_KEY)];\n}\n/**\n * @param {string} key\n * @return {echarts~ECharts}\n */\n\n\nfunction getInstanceById(key) {\n  return instances[key];\n}\n/**\n * Register theme\n */\n\n\nfunction registerTheme(name, theme) {\n  themeStorage[name] = theme;\n}\n/**\n * Register option preprocessor\n * @param {Function} preprocessorFunc\n */\n\n\nfunction registerPreprocessor(preprocessorFunc) {\n  optionPreprocessorFuncs.push(preprocessorFunc);\n}\n/**\n * @param {number} [priority=1000]\n * @param {Object|Function} processor\n */\n\n\nfunction registerProcessor(priority, processor) {\n  normalizeRegister(dataProcessorFuncs, priority, processor, PRIORITY_PROCESSOR_FILTER);\n}\n/**\n * Register postUpdater\n * @param {Function} postUpdateFunc\n */\n\n\nfunction registerPostUpdate(postUpdateFunc) {\n  postUpdateFuncs.push(postUpdateFunc);\n}\n/**\n * Usage:\n * registerAction('someAction', 'someEvent', function () { ... });\n * registerAction('someAction', function () { ... });\n * registerAction(\n *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n *     function () { ... }\n * );\n *\n * @param {(string|Object)} actionInfo\n * @param {string} actionInfo.type\n * @param {string} [actionInfo.event]\n * @param {string} [actionInfo.update]\n * @param {string} [eventName]\n * @param {Function} action\n */\n\n\nfunction registerAction(actionInfo, eventName, action) {\n  if (typeof eventName === 'function') {\n    action = eventName;\n    eventName = '';\n  }\n\n  var actionType = isObject(actionInfo) ? actionInfo.type : [actionInfo, actionInfo = {\n    event: eventName\n  }][0]; // Event name is all lowercase\n\n  actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n  eventName = actionInfo.event; // Validate action type and event name.\n\n  assert(ACTION_REG.test(actionType) && ACTION_REG.test(eventName));\n\n  if (!actions[actionType]) {\n    actions[actionType] = {\n      action: action,\n      actionInfo: actionInfo\n    };\n  }\n\n  eventActionMap[eventName] = actionType;\n}\n/**\n * @param {string} type\n * @param {*} CoordinateSystem\n */\n\n\nfunction registerCoordinateSystem(type, CoordinateSystem) {\n  CoordinateSystemManager.register(type, CoordinateSystem);\n}\n/**\n * Get dimensions of specified coordinate system.\n * @param {string} type\n * @return {Array.<string|Object>}\n */\n\n\nfunction getCoordinateSystemDimensions(type) {\n  var coordSysCreator = CoordinateSystemManager.get(type);\n\n  if (coordSysCreator) {\n    return coordSysCreator.getDimensionsInfo ? coordSysCreator.getDimensionsInfo() : coordSysCreator.dimensions.slice();\n  }\n}\n/**\n * Layout is a special stage of visual encoding\n * Most visual encoding like color are common for different chart\n * But each chart has it's own layout algorithm\n *\n * @param {number} [priority=1000]\n * @param {Function} layoutTask\n */\n\n\nfunction registerLayout(priority, layoutTask) {\n  normalizeRegister(visualFuncs, priority, layoutTask, PRIORITY_VISUAL_LAYOUT, 'layout');\n}\n/**\n * @param {number} [priority=3000]\n * @param {module:echarts/stream/Task} visualTask\n */\n\n\nfunction registerVisual(priority, visualTask) {\n  normalizeRegister(visualFuncs, priority, visualTask, PRIORITY_VISUAL_CHART, 'visual');\n}\n/**\n * @param {Object|Function} fn: {seriesType, createOnAllSeries, performRawSeries, reset}\n */\n\n\nfunction normalizeRegister(targetList, priority, fn, defaultPriority, visualType) {\n  if (isFunction(priority) || isObject(priority)) {\n    fn = priority;\n    priority = defaultPriority;\n  }\n\n  var stageHandler = Scheduler.wrapStageHandler(fn, visualType);\n  stageHandler.__prio = priority;\n  stageHandler.__raw = fn;\n  targetList.push(stageHandler);\n  return stageHandler;\n}\n/**\n * @param {string} name\n */\n\n\nfunction registerLoading(name, loadingFx) {\n  loadingEffects[name] = loadingFx;\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentModel(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentModel;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendComponentView(opts\n/*, superClass*/\n) {\n  // var Clazz = ComponentView;\n  // if (superClass) {\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n  // }\n  return ComponentView.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendSeriesModel(opts\n/*, superClass*/\n) {\n  // var Clazz = SeriesModel;\n  // if (superClass) {\n  //     superClass = 'series.' + superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n  // }\n  return SeriesModel.extend(opts);\n}\n/**\n * @param {Object} opts\n * @param {string} [superClass]\n */\n\n\nfunction extendChartView(opts\n/*, superClass*/\n) {\n  // var Clazz = ChartView;\n  // if (superClass) {\n  //     superClass = superClass.replace('series.', '');\n  //     var classType = parseClassType(superClass);\n  //     Clazz = ChartView.getClass(classType.main, true);\n  // }\n  return ChartView.extend(opts);\n}\n/**\n * ZRender need a canvas context to do measureText.\n * But in node environment canvas may be created by node-canvas.\n * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n *\n * Be careful of using it in the browser.\n *\n * @param {Function} creator\n * @example\n *     var Canvas = require('canvas');\n *     var echarts = require('echarts');\n *     echarts.setCanvasCreator(function () {\n *         // Small size is enough.\n *         return new Canvas(32, 32);\n *     });\n */\n\n\nfunction setCanvasCreator(creator) {\n  zrUtil.$override('createCanvas', creator);\n}\n/**\n * @param {string} mapName\n * @param {Array.<Object>|Object|string} geoJson\n * @param {Object} [specialAreas]\n *\n * @example GeoJSON\n *     $.get('USA.json', function (geoJson) {\n *         echarts.registerMap('USA', geoJson);\n *         // Or\n *         echarts.registerMap('USA', {\n *             geoJson: geoJson,\n *             specialAreas: {}\n *         })\n *     });\n *\n *     $.get('airport.svg', function (svg) {\n *         echarts.registerMap('airport', {\n *             svg: svg\n *         }\n *     });\n *\n *     echarts.registerMap('eu', [\n *         {svg: eu-topographic.svg},\n *         {geoJSON: eu.json}\n *     ])\n */\n\n\nfunction registerMap(mapName, geoJson, specialAreas) {\n  mapDataStorage.registerMap(mapName, geoJson, specialAreas);\n}\n/**\n * @param {string} mapName\n * @return {Object}\n */\n\n\nfunction getMap(mapName) {\n  // For backward compatibility, only return the first one.\n  var records = mapDataStorage.retrieveMap(mapName);\n  return records && records[0] && {\n    geoJson: records[0].geoJSON,\n    specialAreas: records[0].specialAreas\n  };\n}\n\nregisterVisual(PRIORITY_VISUAL_GLOBAL, seriesColor);\nregisterPreprocessor(backwardCompat);\nregisterProcessor(PRIORITY_PROCESSOR_DATASTACK, dataStack);\nregisterLoading('default', loadingDefault); // Default actions\n\nregisterAction({\n  type: 'highlight',\n  event: 'highlight',\n  update: 'highlight'\n}, zrUtil.noop);\nregisterAction({\n  type: 'downplay',\n  event: 'downplay',\n  update: 'downplay'\n}, zrUtil.noop); // Default theme\n\nregisterTheme('light', lightTheme);\nregisterTheme('dark', darkTheme); // For backward compatibility, where the namespace `dataTool` will\n// be mounted on `echarts` is the extension `dataTool` is imported.\n\nvar dataTool = {};\nexports.version = version;\nexports.dependencies = dependencies;\nexports.PRIORITY = PRIORITY;\nexports.init = init;\nexports.connect = connect;\nexports.disConnect = disConnect;\nexports.disconnect = disconnect;\nexports.dispose = dispose;\nexports.getInstanceByDom = getInstanceByDom;\nexports.getInstanceById = getInstanceById;\nexports.registerTheme = registerTheme;\nexports.registerPreprocessor = registerPreprocessor;\nexports.registerProcessor = registerProcessor;\nexports.registerPostUpdate = registerPostUpdate;\nexports.registerAction = registerAction;\nexports.registerCoordinateSystem = registerCoordinateSystem;\nexports.getCoordinateSystemDimensions = getCoordinateSystemDimensions;\nexports.registerLayout = registerLayout;\nexports.registerVisual = registerVisual;\nexports.registerLoading = registerLoading;\nexports.extendComponentModel = extendComponentModel;\nexports.extendComponentView = extendComponentView;\nexports.extendSeriesModel = extendSeriesModel;\nexports.extendChartView = extendChartView;\nexports.setCanvasCreator = setCanvasCreator;\nexports.registerMap = registerMap;\nexports.getMap = getMap;\nexports.dataTool = dataTool;\n\nvar ___ec_export = require(\"./export\");\n\n(function () {\n  for (var key in ___ec_export) {\n    if (___ec_export.hasOwnProperty(key)) {\n      exports[key] = ___ec_export[key];\n    }\n  }\n})();","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    plan: createRenderPlanner(),\n    reset: function reset(seriesModel) {\n      var data = seriesModel.getData();\n      var coordSys = seriesModel.coordinateSystem;\n      var pipelineContext = seriesModel.pipelineContext;\n      var isLargeRender = pipelineContext.large;\n\n      if (!coordSys) {\n        return;\n      }\n\n      var dims = map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }).slice(0, 2);\n      var dimLen = dims.length;\n      var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n      if (isDimensionStacked(data, dims[0]\n      /*, dims[1]*/\n      )) {\n        dims[0] = stackResultDim;\n      }\n\n      if (isDimensionStacked(data, dims[1]\n      /*, dims[0]*/\n      )) {\n        dims[1] = stackResultDim;\n      }\n\n      function progress(params, data) {\n        var segCount = params.end - params.start;\n        var points = isLargeRender && new Float32Array(segCount * dimLen);\n\n        for (var i = params.start, offset = 0, tmpIn = [], tmpOut = []; i < params.end; i++) {\n          var point;\n\n          if (dimLen === 1) {\n            var x = data.get(dims[0], i);\n            point = !isNaN(x) && coordSys.dataToPoint(x, null, tmpOut);\n          } else {\n            var x = tmpIn[0] = data.get(dims[0], i);\n            var y = tmpIn[1] = data.get(dims[1], i); // Also {Array.<number>}, not undefined to avoid if...else... statement\n\n            point = !isNaN(x) && !isNaN(y) && coordSys.dataToPoint(tmpIn, null, tmpOut);\n          }\n\n          if (isLargeRender) {\n            points[offset++] = point ? point[0] : NaN;\n            points[offset++] = point ? point[1] : NaN;\n          } else {\n            data.setItemLayout(i, point && point.slice() || [NaN, NaN]);\n          }\n        }\n\n        isLargeRender && data.setLayout('symbolPoints', points);\n      }\n\n      return dimLen && {\n        progress: progress\n      };\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * LegendVisualProvider is an bridge that pick encoded color from data and\n * provide to the legend component.\n * @param {Function} getDataWithEncodedVisual Function to get data after filtered. It stores all the encoding info\n * @param {Function} getRawData Function to get raw data before filtered.\n */\nfunction LegendVisualProvider(getDataWithEncodedVisual, getRawData) {\n  this.getAllNames = function () {\n    var rawData = getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  this.containName = function (name) {\n    var rawData = getRawData();\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  this.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = getDataWithEncodedVisual();\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  this.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = getDataWithEncodedVisual();\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n}\n\nvar _default = LegendVisualProvider;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function reset(seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar clazzUtil = require(\"../util/clazz\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Component = function Component() {\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n  this.group = new Group();\n  /**\n   * @type {string}\n   * @readOnly\n   */\n\n  this.uid = componentUtil.getUID('viewComponent');\n};\n\nComponent.prototype = {\n  constructor: Component,\n  init: function init(ecModel, api) {},\n  render: function render(componentModel, ecModel, api, payload) {},\n  dispose: function dispose() {},\n\n  /**\n   * @param {string} eventType\n   * @param {Object} query\n   * @param {module:zrender/Element} targetEl\n   * @param {Object} packedEvent\n   * @return {boolen} Pass only when return `true`.\n   */\n  filterForExposedEvent: null\n};\nvar componentProto = Component.prototype;\n\ncomponentProto.updateView = componentProto.updateLayout = componentProto.updateVisual = function (seriesModel, ecModel, api, payload) {// Do nothing;\n}; // Enable Component.extend.\n\n\nclazzUtil.enableClassExtend(Component); // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nclazzUtil.enableClassManagement(Component, {\n  registerWhenExtend: true\n});\nvar _default = Component;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar clazzUtil = require(\"../util/clazz\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n/**\n * @param {Object} [setting]\n */\n\n\nfunction Scale(setting) {\n  this._setting = setting || {};\n  /**\n   * Extent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._extent = [Infinity, -Infinity];\n  /**\n   * Step is calculated in adjustExtent\n   * @type {Array.<number>}\n   * @protected\n   */\n\n  this._interval = 0;\n  this.init && this.init.apply(this, arguments);\n}\n/**\n * Parse input val to valid inner number.\n * @param {*} val\n * @return {number}\n */\n\n\nScale.prototype.parse = function (val) {\n  // Notice: This would be a trap here, If the implementation\n  // of this method depends on extent, and this method is used\n  // before extent set (like in dataZoom), it would be wrong.\n  // Nevertheless, parse does not depend on extent generally.\n  return val;\n};\n\nScale.prototype.getSetting = function (name) {\n  return this._setting[name];\n};\n\nScale.prototype.contain = function (val) {\n  var extent = this._extent;\n  return val >= extent[0] && val <= extent[1];\n};\n/**\n * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.normalize = function (val) {\n  var extent = this._extent;\n\n  if (extent[1] === extent[0]) {\n    return 0.5;\n  }\n\n  return (val - extent[0]) / (extent[1] - extent[0]);\n};\n/**\n * Scale normalized value\n * @param {number} val\n * @return {number}\n */\n\n\nScale.prototype.scale = function (val) {\n  var extent = this._extent;\n  return val * (extent[1] - extent[0]) + extent[0];\n};\n/**\n * Set extent from data\n * @param {Array.<number>} other\n */\n\n\nScale.prototype.unionExtent = function (other) {\n  var extent = this._extent;\n  other[0] < extent[0] && (extent[0] = other[0]);\n  other[1] > extent[1] && (extent[1] = other[1]); // not setExtent because in log axis it may transformed to power\n  // this.setExtent(extent[0], extent[1]);\n};\n/**\n * Set extent from data\n * @param {module:echarts/data/List} data\n * @param {string} dim\n */\n\n\nScale.prototype.unionExtentFromData = function (data, dim) {\n  this.unionExtent(data.getApproximateExtent(dim));\n};\n/**\n * Get extent\n * @return {Array.<number>}\n */\n\n\nScale.prototype.getExtent = function () {\n  return this._extent.slice();\n};\n/**\n * Set extent\n * @param {number} start\n * @param {number} end\n */\n\n\nScale.prototype.setExtent = function (start, end) {\n  var thisExtent = this._extent;\n\n  if (!isNaN(start)) {\n    thisExtent[0] = start;\n  }\n\n  if (!isNaN(end)) {\n    thisExtent[1] = end;\n  }\n};\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\n\n\nScale.prototype.isBlank = function () {\n  return this._isBlank;\n},\n/**\n * When axis extent depends on data and no data exists,\n * axis ticks should not be drawn, which is named 'blank'.\n */\nScale.prototype.setBlank = function (isBlank) {\n  this._isBlank = isBlank;\n};\n/**\n * @abstract\n * @param {*} tick\n * @return {string} label of the tick.\n */\n\nScale.prototype.getLabel = null;\nclazzUtil.enableClassExtend(Scale);\nclazzUtil.enableClassManagement(Scale, {\n  registerWhenExtend: true\n});\nvar _default = Scale;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar Scale = require(\"./Scale\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\nvar roundNumber = numberUtil.round;\n/**\n * @alias module:echarts/coord/scale/Interval\n * @constructor\n */\n\nvar IntervalScale = Scale.extend({\n  type: 'interval',\n  _interval: 0,\n  _intervalPrecision: 2,\n  setExtent: function setExtent(start, end) {\n    var thisExtent = this._extent; //start,end may be a Number like '25',so...\n\n    if (!isNaN(start)) {\n      thisExtent[0] = parseFloat(start);\n    }\n\n    if (!isNaN(end)) {\n      thisExtent[1] = parseFloat(end);\n    }\n  },\n  unionExtent: function unionExtent(other) {\n    var extent = this._extent;\n    other[0] < extent[0] && (extent[0] = other[0]);\n    other[1] > extent[1] && (extent[1] = other[1]); // unionExtent may called by it's sub classes\n\n    IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n  },\n\n  /**\n   * Get interval\n   */\n  getInterval: function getInterval() {\n    return this._interval;\n  },\n\n  /**\n   * Set interval\n   */\n  setInterval: function setInterval(interval) {\n    this._interval = interval; // Dropped auto calculated niceExtent and use user setted extent\n    // We assume user wan't to set both interval, min, max to get a better result\n\n    this._niceExtent = this._extent.slice();\n    this._intervalPrecision = helper.getIntervalPrecision(interval);\n  },\n\n  /**\n   * @param {boolean} [expandToNicedExtent=false] If expand the ticks to niced extent.\n   * @return {Array.<number>}\n   */\n  getTicks: function getTicks(expandToNicedExtent) {\n    var interval = this._interval;\n    var extent = this._extent;\n    var niceTickExtent = this._niceExtent;\n    var intervalPrecision = this._intervalPrecision;\n    var ticks = []; // If interval is 0, return [];\n\n    if (!interval) {\n      return ticks;\n    } // Consider this case: using dataZoom toolbox, zoom and zoom.\n\n\n    var safeLimit = 10000;\n\n    if (extent[0] < niceTickExtent[0]) {\n      if (expandToNicedExtent) {\n        ticks.push(roundNumber(niceTickExtent[0] - interval, intervalPrecision));\n      } else {\n        ticks.push(extent[0]);\n      }\n    }\n\n    var tick = niceTickExtent[0];\n\n    while (tick <= niceTickExtent[1]) {\n      ticks.push(tick); // Avoid rounding error\n\n      tick = roundNumber(tick + interval, intervalPrecision);\n\n      if (tick === ticks[ticks.length - 1]) {\n        // Consider out of safe float point, e.g.,\n        // -3711126.9907707 + 2e-10 === -3711126.9907707\n        break;\n      }\n\n      if (ticks.length > safeLimit) {\n        return [];\n      }\n    } // Consider this case: the last item of ticks is smaller\n    // than niceTickExtent[1] and niceTickExtent[1] === extent[1].\n\n\n    var lastNiceTick = ticks.length ? ticks[ticks.length - 1] : niceTickExtent[1];\n\n    if (extent[1] > lastNiceTick) {\n      if (expandToNicedExtent) {\n        ticks.push(roundNumber(lastNiceTick + interval, intervalPrecision));\n      } else {\n        ticks.push(extent[1]);\n      }\n    }\n\n    return ticks;\n  },\n\n  /**\n   * @param {number} [splitNumber=5]\n   * @return {Array.<Array.<number>>}\n   */\n  getMinorTicks: function getMinorTicks(splitNumber) {\n    var ticks = this.getTicks(true);\n    var minorTicks = [];\n    var extent = this.getExtent();\n\n    for (var i = 1; i < ticks.length; i++) {\n      var nextTick = ticks[i];\n      var prevTick = ticks[i - 1];\n      var count = 0;\n      var minorTicksGroup = [];\n      var interval = nextTick - prevTick;\n      var minorInterval = interval / splitNumber;\n\n      while (count < splitNumber - 1) {\n        var minorTick = numberUtil.round(prevTick + (count + 1) * minorInterval); // For the first and last interval. The count may be less than splitNumber.\n\n        if (minorTick > extent[0] && minorTick < extent[1]) {\n          minorTicksGroup.push(minorTick);\n        }\n\n        count++;\n      }\n\n      minorTicks.push(minorTicksGroup);\n    }\n\n    return minorTicks;\n  },\n\n  /**\n   * @param {number} data\n   * @param {Object} [opt]\n   * @param {number|string} [opt.precision] If 'auto', use nice presision.\n   * @param {boolean} [opt.pad] returns 1.50 but not 1.5 if precision is 2.\n   * @return {string}\n   */\n  getLabel: function getLabel(data, opt) {\n    if (data == null) {\n      return '';\n    }\n\n    var precision = opt && opt.precision;\n\n    if (precision == null) {\n      precision = numberUtil.getPrecisionSafe(data) || 0;\n    } else if (precision === 'auto') {\n      // Should be more precise then tick.\n      precision = this._intervalPrecision;\n    } // (1) If `precision` is set, 12.005 should be display as '12.00500'.\n    // (2) Use roundNumber (toFixed) to avoid scientific notation like '3.5e-7'.\n\n\n    data = roundNumber(data, precision, true);\n    return formatUtil.addCommas(data);\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   *\n   * @param {number} [splitNumber = 5] Desired number of ticks\n   * @param {number} [minInterval]\n   * @param {number} [maxInterval]\n   */\n  niceTicks: function niceTicks(splitNumber, minInterval, maxInterval) {\n    splitNumber = splitNumber || 5;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (!isFinite(span)) {\n      return;\n    } // User may set axis min 0 and data are all negative\n    // FIXME If it needs to reverse ?\n\n\n    if (span < 0) {\n      span = -span;\n      extent.reverse();\n    }\n\n    var result = helper.intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval);\n    this._intervalPrecision = result.intervalPrecision;\n    this._interval = result.interval;\n    this._niceExtent = result.niceTickExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @param {Object} opt\n   * @param {number} [opt.splitNumber = 5] Given approx tick number\n   * @param {boolean} [opt.fixMin=false]\n   * @param {boolean} [opt.fixMax=false]\n   * @param {boolean} [opt.minInterval]\n   * @param {boolean} [opt.maxInterval]\n   */\n  niceExtent: function niceExtent(opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      if (extent[0] !== 0) {\n        // Expand extent\n        var expandSize = extent[0]; // In the fowllowing case\n        //      Axis has been fixed max 100\n        //      Plus data are all 100 and axis extent are [100, 100].\n        // Extend to the both side will cause expanded max is larger than fixed max.\n        // So only expand to the smaller side.\n\n        if (!opt.fixMax) {\n          extent[1] += expandSize / 2;\n          extent[0] -= expandSize / 2;\n        } else {\n          extent[0] -= expandSize / 2;\n        }\n      } else {\n        extent[1] = 1;\n      }\n    }\n\n    var span = extent[1] - extent[0]; // If there are no data and extent are [Infinity, -Infinity]\n\n    if (!isFinite(span)) {\n      extent[0] = 0;\n      extent[1] = 1;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = roundNumber(Math.floor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = roundNumber(Math.ceil(extent[1] / interval) * interval);\n    }\n  }\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nIntervalScale.create = function () {\n  return new IntervalScale();\n};\n\nvar _default = IntervalScale;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _dataStackHelper = require(\"../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar createRenderPlanner = require(\"../chart/helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n\n\nvar STACK_PREFIX = '__ec_stack_';\nvar LARGE_BAR_MIN_WIDTH = 0.5;\nvar LargeArr = typeof Float32Array !== 'undefined' ? Float32Array : Array;\n\nfunction getSeriesStackId(seriesModel) {\n  return seriesModel.get('stack') || STACK_PREFIX + seriesModel.seriesIndex;\n}\n\nfunction getAxisKey(axis) {\n  return axis.dim + axis.index;\n}\n/**\n * @param {Object} opt\n * @param {module:echarts/coord/Axis} opt.axis Only support category axis currently.\n * @param {number} opt.count Positive interger.\n * @param {number} [opt.barWidth]\n * @param {number} [opt.barMaxWidth]\n * @param {number} [opt.barMinWidth]\n * @param {number} [opt.barGap]\n * @param {number} [opt.barCategoryGap]\n * @return {Object} {width, offset, offsetCenter} If axis.type is not 'category', return undefined.\n */\n\n\nfunction getLayoutOnAxis(opt) {\n  var params = [];\n  var baseAxis = opt.axis;\n  var axisKey = 'axis0';\n\n  if (baseAxis.type !== 'category') {\n    return;\n  }\n\n  var bandWidth = baseAxis.getBandWidth();\n\n  for (var i = 0; i < opt.count || 0; i++) {\n    params.push(zrUtil.defaults({\n      bandWidth: bandWidth,\n      axisKey: axisKey,\n      stackId: STACK_PREFIX + i\n    }, opt));\n  }\n\n  var widthAndOffsets = doCalBarWidthAndOffset(params);\n  var result = [];\n\n  for (var i = 0; i < opt.count; i++) {\n    var item = widthAndOffsets[axisKey][STACK_PREFIX + i];\n    item.offsetCenter = item.offset + item.width / 2;\n    result.push(item);\n  }\n\n  return result;\n}\n\nfunction prepareLayoutBarSeries(seriesType, ecModel) {\n  var seriesModels = [];\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    // Check series coordinate, do layout for cartesian2d only\n    if (isOnCartesian(seriesModel) && !isInLargeMode(seriesModel)) {\n      seriesModels.push(seriesModel);\n    }\n  });\n  return seriesModels;\n}\n/**\n * Map from (baseAxis.dim + '_' + baseAxis.index) to min gap of two adjacent\n * values.\n * This works for time axes, value axes, and log axes.\n * For a single time axis, return value is in the form like\n * {'x_0': [1000000]}.\n * The value of 1000000 is in milliseconds.\n */\n\n\nfunction getValueAxesMinGaps(barSeries) {\n  /**\n   * Map from axis.index to values.\n   * For a single time axis, axisValues is in the form like\n   * {'x_0': [1495555200000, 1495641600000, 1495728000000]}.\n   * Items in axisValues[x], e.g. 1495555200000, are time values of all\n   * series.\n   */\n  var axisValues = {};\n  zrUtil.each(barSeries, function (seriesModel) {\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n\n    if (baseAxis.type !== 'time' && baseAxis.type !== 'value') {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var key = baseAxis.dim + '_' + baseAxis.index;\n    var dim = data.mapDimension(baseAxis.dim);\n\n    for (var i = 0, cnt = data.count(); i < cnt; ++i) {\n      var value = data.get(dim, i);\n\n      if (!axisValues[key]) {\n        // No previous data for the axis\n        axisValues[key] = [value];\n      } else {\n        // No value in previous series\n        axisValues[key].push(value);\n      } // Ignore duplicated time values in the same axis\n\n    }\n  });\n  var axisMinGaps = [];\n\n  for (var key in axisValues) {\n    if (axisValues.hasOwnProperty(key)) {\n      var valuesInAxis = axisValues[key];\n\n      if (valuesInAxis) {\n        // Sort axis values into ascending order to calculate gaps\n        valuesInAxis.sort(function (a, b) {\n          return a - b;\n        });\n        var min = null;\n\n        for (var j = 1; j < valuesInAxis.length; ++j) {\n          var delta = valuesInAxis[j] - valuesInAxis[j - 1];\n\n          if (delta > 0) {\n            // Ignore 0 delta because they are of the same axis value\n            min = min === null ? delta : Math.min(min, delta);\n          }\n        } // Set to null if only have one data\n\n\n        axisMinGaps[key] = min;\n      }\n    }\n  }\n\n  return axisMinGaps;\n}\n\nfunction makeColumnLayout(barSeries) {\n  var axisMinGaps = getValueAxesMinGaps(barSeries);\n  var seriesInfoList = [];\n  zrUtil.each(barSeries, function (seriesModel) {\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var axisExtent = baseAxis.getExtent();\n    var bandWidth;\n\n    if (baseAxis.type === 'category') {\n      bandWidth = baseAxis.getBandWidth();\n    } else if (baseAxis.type === 'value' || baseAxis.type === 'time') {\n      var key = baseAxis.dim + '_' + baseAxis.index;\n      var minGap = axisMinGaps[key];\n      var extentSpan = Math.abs(axisExtent[1] - axisExtent[0]);\n      var scale = baseAxis.scale.getExtent();\n      var scaleSpan = Math.abs(scale[1] - scale[0]);\n      bandWidth = minGap ? extentSpan / scaleSpan * minGap : extentSpan; // When there is only one data value\n    } else {\n      var data = seriesModel.getData();\n      bandWidth = Math.abs(axisExtent[1] - axisExtent[0]) / data.count();\n    }\n\n    var barWidth = parsePercent(seriesModel.get('barWidth'), bandWidth);\n    var barMaxWidth = parsePercent(seriesModel.get('barMaxWidth'), bandWidth);\n    var barMinWidth = parsePercent( // barMinWidth by default is 1 in cartesian. Because in value axis,\n    // the auto-calculated bar width might be less than 1.\n    seriesModel.get('barMinWidth') || 1, bandWidth);\n    var barGap = seriesModel.get('barGap');\n    var barCategoryGap = seriesModel.get('barCategoryGap');\n    seriesInfoList.push({\n      bandWidth: bandWidth,\n      barWidth: barWidth,\n      barMaxWidth: barMaxWidth,\n      barMinWidth: barMinWidth,\n      barGap: barGap,\n      barCategoryGap: barCategoryGap,\n      axisKey: getAxisKey(baseAxis),\n      stackId: getSeriesStackId(seriesModel)\n    });\n  });\n  return doCalBarWidthAndOffset(seriesInfoList);\n}\n\nfunction doCalBarWidthAndOffset(seriesInfoList) {\n  // Columns info on each category axis. Key is cartesian name\n  var columnsMap = {};\n  zrUtil.each(seriesInfoList, function (seriesInfo, idx) {\n    var axisKey = seriesInfo.axisKey;\n    var bandWidth = seriesInfo.bandWidth;\n    var columnsOnAxis = columnsMap[axisKey] || {\n      bandWidth: bandWidth,\n      remainedWidth: bandWidth,\n      autoWidthCount: 0,\n      categoryGap: '20%',\n      gap: '30%',\n      stacks: {}\n    };\n    var stacks = columnsOnAxis.stacks;\n    columnsMap[axisKey] = columnsOnAxis;\n    var stackId = seriesInfo.stackId;\n\n    if (!stacks[stackId]) {\n      columnsOnAxis.autoWidthCount++;\n    }\n\n    stacks[stackId] = stacks[stackId] || {\n      width: 0,\n      maxWidth: 0\n    }; // Caution: In a single coordinate system, these barGrid attributes\n    // will be shared by series. Consider that they have default values,\n    // only the attributes set on the last series will work.\n    // Do not change this fact unless there will be a break change.\n\n    var barWidth = seriesInfo.barWidth;\n\n    if (barWidth && !stacks[stackId].width) {\n      // See #6312, do not restrict width.\n      stacks[stackId].width = barWidth;\n      barWidth = Math.min(columnsOnAxis.remainedWidth, barWidth);\n      columnsOnAxis.remainedWidth -= barWidth;\n    }\n\n    var barMaxWidth = seriesInfo.barMaxWidth;\n    barMaxWidth && (stacks[stackId].maxWidth = barMaxWidth);\n    var barMinWidth = seriesInfo.barMinWidth;\n    barMinWidth && (stacks[stackId].minWidth = barMinWidth);\n    var barGap = seriesInfo.barGap;\n    barGap != null && (columnsOnAxis.gap = barGap);\n    var barCategoryGap = seriesInfo.barCategoryGap;\n    barCategoryGap != null && (columnsOnAxis.categoryGap = barCategoryGap);\n  });\n  var result = {};\n  zrUtil.each(columnsMap, function (columnsOnAxis, coordSysName) {\n    result[coordSysName] = {};\n    var stacks = columnsOnAxis.stacks;\n    var bandWidth = columnsOnAxis.bandWidth;\n    var categoryGap = parsePercent(columnsOnAxis.categoryGap, bandWidth);\n    var barGapPercent = parsePercent(columnsOnAxis.gap, 1);\n    var remainedWidth = columnsOnAxis.remainedWidth;\n    var autoWidthCount = columnsOnAxis.autoWidthCount;\n    var autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0); // Find if any auto calculated bar exceeded maxBarWidth\n\n    zrUtil.each(stacks, function (column) {\n      var maxWidth = column.maxWidth;\n      var minWidth = column.minWidth;\n\n      if (!column.width) {\n        var finalWidth = autoWidth;\n\n        if (maxWidth && maxWidth < finalWidth) {\n          finalWidth = Math.min(maxWidth, remainedWidth);\n        } // `minWidth` has higher priority. `minWidth` decide that wheter the\n        // bar is able to be visible. So `minWidth` should not be restricted\n        // by `maxWidth` or `remainedWidth` (which is from `bandWidth`). In\n        // the extreme cases for `value` axis, bars are allowed to overlap\n        // with each other if `minWidth` specified.\n\n\n        if (minWidth && minWidth > finalWidth) {\n          finalWidth = minWidth;\n        }\n\n        if (finalWidth !== autoWidth) {\n          column.width = finalWidth;\n          remainedWidth -= finalWidth + barGapPercent * finalWidth;\n          autoWidthCount--;\n        }\n      } else {\n        // `barMinWidth/barMaxWidth` has higher priority than `barWidth`, as\n        // CSS does. Becuase barWidth can be a percent value, where\n        // `barMaxWidth` can be used to restrict the final width.\n        var finalWidth = column.width;\n\n        if (maxWidth) {\n          finalWidth = Math.min(finalWidth, maxWidth);\n        } // `minWidth` has higher priority, as described above\n\n\n        if (minWidth) {\n          finalWidth = Math.max(finalWidth, minWidth);\n        }\n\n        column.width = finalWidth;\n        remainedWidth -= finalWidth + barGapPercent * finalWidth;\n        autoWidthCount--;\n      }\n    }); // Recalculate width again\n\n    autoWidth = (remainedWidth - categoryGap) / (autoWidthCount + (autoWidthCount - 1) * barGapPercent);\n    autoWidth = Math.max(autoWidth, 0);\n    var widthSum = 0;\n    var lastColumn;\n    zrUtil.each(stacks, function (column, idx) {\n      if (!column.width) {\n        column.width = autoWidth;\n      }\n\n      lastColumn = column;\n      widthSum += column.width * (1 + barGapPercent);\n    });\n\n    if (lastColumn) {\n      widthSum -= lastColumn.width * barGapPercent;\n    }\n\n    var offset = -widthSum / 2;\n    zrUtil.each(stacks, function (column, stackId) {\n      result[coordSysName][stackId] = result[coordSysName][stackId] || {\n        bandWidth: bandWidth,\n        offset: offset,\n        width: column.width\n      };\n      offset += column.width * (1 + barGapPercent);\n    });\n  });\n  return result;\n}\n/**\n * @param {Object} barWidthAndOffset The result of makeColumnLayout\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Series} [seriesModel] If not provided, return all.\n * @return {Object} {stackId: {offset, width}} or {offset, width} if seriesModel provided.\n */\n\n\nfunction retrieveColumnLayout(barWidthAndOffset, axis, seriesModel) {\n  if (barWidthAndOffset && axis) {\n    var result = barWidthAndOffset[getAxisKey(axis)];\n\n    if (result != null && seriesModel != null) {\n      result = result[getSeriesStackId(seriesModel)];\n    }\n\n    return result;\n  }\n}\n/**\n * @param {string} seriesType\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction layout(seriesType, ecModel) {\n  var seriesModels = prepareLayoutBarSeries(seriesType, ecModel);\n  var barWidthAndOffset = makeColumnLayout(seriesModels);\n  var lastStackCoords = {};\n  var lastStackCoordsOrigin = {};\n  zrUtil.each(seriesModels, function (seriesModel) {\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var baseAxis = cartesian.getBaseAxis();\n    var stackId = getSeriesStackId(seriesModel);\n    var columnLayoutInfo = barWidthAndOffset[getAxisKey(baseAxis)][stackId];\n    var columnOffset = columnLayoutInfo.offset;\n    var columnWidth = columnLayoutInfo.width;\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var barMinHeight = seriesModel.get('barMinHeight') || 0;\n    lastStackCoords[stackId] = lastStackCoords[stackId] || [];\n    lastStackCoordsOrigin[stackId] = lastStackCoordsOrigin[stackId] || []; // Fix #4243\n\n    data.setLayout({\n      bandWidth: columnLayoutInfo.bandWidth,\n      offset: columnOffset,\n      size: columnWidth\n    });\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var stacked = isDimensionStacked(data, valueDim\n    /*, baseDim*/\n    );\n    var isValueAxisH = valueAxis.isHorizontal();\n    var valueAxisStart = getValueAxisStart(baseAxis, valueAxis, stacked);\n\n    for (var idx = 0, len = data.count(); idx < len; idx++) {\n      var value = data.get(valueDim, idx);\n      var baseValue = data.get(baseDim, idx);\n      var sign = value >= 0 ? 'p' : 'n';\n      var baseCoord = valueAxisStart; // Because of the barMinHeight, we can not use the value in\n      // stackResultDimension directly.\n\n      if (stacked) {\n        // Only ordinal axis can be stacked.\n        if (!lastStackCoords[stackId][baseValue]) {\n          lastStackCoords[stackId][baseValue] = {\n            p: valueAxisStart,\n            // Positive stack\n            n: valueAxisStart // Negative stack\n\n          };\n        } // Should also consider #4243\n\n\n        baseCoord = lastStackCoords[stackId][baseValue][sign];\n      }\n\n      var x;\n      var y;\n      var width;\n      var height;\n\n      if (isValueAxisH) {\n        var coord = cartesian.dataToPoint([value, baseValue]);\n        x = baseCoord;\n        y = coord[1] + columnOffset;\n        width = coord[0] - valueAxisStart;\n        height = columnWidth;\n\n        if (Math.abs(width) < barMinHeight) {\n          width = (width < 0 ? -1 : 1) * barMinHeight;\n        } // Ignore stack from NaN value\n\n\n        if (!isNaN(width)) {\n          stacked && (lastStackCoords[stackId][baseValue][sign] += width);\n        }\n      } else {\n        var coord = cartesian.dataToPoint([baseValue, value]);\n        x = coord[0] + columnOffset;\n        y = baseCoord;\n        width = columnWidth;\n        height = coord[1] - valueAxisStart;\n\n        if (Math.abs(height) < barMinHeight) {\n          // Include zero to has a positive bar\n          height = (height <= 0 ? -1 : 1) * barMinHeight;\n        } // Ignore stack from NaN value\n\n\n        if (!isNaN(height)) {\n          stacked && (lastStackCoords[stackId][baseValue][sign] += height);\n        }\n      }\n\n      data.setItemLayout(idx, {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      });\n    }\n  }, this);\n} // TODO: Do not support stack in large mode yet.\n\n\nvar largeLayout = {\n  seriesType: 'bar',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    if (!isOnCartesian(seriesModel) || !isInLargeMode(seriesModel)) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var cartesian = seriesModel.coordinateSystem;\n    var coordLayout = cartesian.grid.getRect();\n    var baseAxis = cartesian.getBaseAxis();\n    var valueAxis = cartesian.getOtherAxis(baseAxis);\n    var valueDim = data.mapDimension(valueAxis.dim);\n    var baseDim = data.mapDimension(baseAxis.dim);\n    var valueAxisHorizontal = valueAxis.isHorizontal();\n    var valueDimIdx = valueAxisHorizontal ? 0 : 1;\n    var barWidth = retrieveColumnLayout(makeColumnLayout([seriesModel]), baseAxis, seriesModel).width;\n\n    if (!(barWidth > LARGE_BAR_MIN_WIDTH)) {\n      // jshint ignore:line\n      barWidth = LARGE_BAR_MIN_WIDTH;\n    }\n\n    return {\n      progress: progress\n    };\n\n    function progress(params, data) {\n      var count = params.count;\n      var largePoints = new LargeArr(count * 2);\n      var largeBackgroundPoints = new LargeArr(count * 2);\n      var largeDataIndices = new LargeArr(count);\n      var dataIndex;\n      var coord = [];\n      var valuePair = [];\n      var pointsOffset = 0;\n      var idxOffset = 0;\n\n      while ((dataIndex = params.next()) != null) {\n        valuePair[valueDimIdx] = data.get(valueDim, dataIndex);\n        valuePair[1 - valueDimIdx] = data.get(baseDim, dataIndex);\n        coord = cartesian.dataToPoint(valuePair, null, coord); // Data index might not be in order, depends on `progressiveChunkMode`.\n\n        largeBackgroundPoints[pointsOffset] = valueAxisHorizontal ? coordLayout.x + coordLayout.width : coord[0];\n        largePoints[pointsOffset++] = coord[0];\n        largeBackgroundPoints[pointsOffset] = valueAxisHorizontal ? coord[1] : coordLayout.y + coordLayout.height;\n        largePoints[pointsOffset++] = coord[1];\n        largeDataIndices[idxOffset++] = dataIndex;\n      }\n\n      data.setLayout({\n        largePoints: largePoints,\n        largeDataIndices: largeDataIndices,\n        largeBackgroundPoints: largeBackgroundPoints,\n        barWidth: barWidth,\n        valueAxisStart: getValueAxisStart(baseAxis, valueAxis, false),\n        backgroundStart: valueAxisHorizontal ? coordLayout.x : coordLayout.y,\n        valueAxisHorizontal: valueAxisHorizontal\n      });\n    }\n  }\n};\n\nfunction isOnCartesian(seriesModel) {\n  return seriesModel.coordinateSystem && seriesModel.coordinateSystem.type === 'cartesian2d';\n}\n\nfunction isInLargeMode(seriesModel) {\n  return seriesModel.pipelineContext && seriesModel.pipelineContext.large;\n} // See cases in `test/bar-start.html` and `#7412`, `#8747`.\n\n\nfunction getValueAxisStart(baseAxis, valueAxis, stacked) {\n  return valueAxis.toGlobalCoord(valueAxis.dataToCoord(valueAxis.type === 'log' ? 1 : 0));\n}\n\nexports.getLayoutOnAxis = getLayoutOnAxis;\nexports.prepareLayoutBarSeries = prepareLayoutBarSeries;\nexports.makeColumnLayout = makeColumnLayout;\nexports.retrieveColumnLayout = retrieveColumnLayout;\nexports.layout = layout;\nexports.largeLayout = largeLayout;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Pick color from palette for each data item.\n// Applicable for charts that require applying color palette\n// in data level (like pie, funnel, chord).\n\nfunction _default(seriesType) {\n  return {\n    getTargetSeries: function getTargetSeries(ecModel) {\n      // Pie and funnel may use diferrent scope\n      var paletteScope = {};\n      var seiresModelMap = createHashMap();\n      ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n        seriesModel.__paletteScope = paletteScope;\n        seiresModelMap.set(seriesModel.uid, seriesModel);\n      });\n      return seiresModelMap;\n    },\n    reset: function reset(seriesModel, ecModel) {\n      var dataAll = seriesModel.getRawData();\n      var idxMap = {};\n      var data = seriesModel.getData();\n      data.each(function (idx) {\n        var rawIdx = data.getRawIndex(idx);\n        idxMap[rawIdx] = idx;\n      });\n      dataAll.each(function (rawIdx) {\n        var filteredIdx = idxMap[rawIdx]; // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n\n        var singleDataColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'color', true);\n        var singleDataBorderColor = filteredIdx != null && data.getItemVisual(filteredIdx, 'borderColor', true);\n        var itemModel;\n\n        if (!singleDataColor || !singleDataBorderColor) {\n          // FIXME Performance\n          itemModel = dataAll.getItemModel(rawIdx);\n        }\n\n        if (!singleDataColor) {\n          var color = itemModel.get('itemStyle.color') || seriesModel.getColorFromPalette(dataAll.getName(rawIdx) || rawIdx + '', seriesModel.__paletteScope, dataAll.count()); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'color', color);\n          }\n        }\n\n        if (!singleDataBorderColor) {\n          var borderColor = itemModel.get('itemStyle.borderColor'); // Data is not filtered\n\n          if (filteredIdx != null) {\n            data.setItemVisual(filteredIdx, 'borderColor', borderColor);\n          }\n        }\n      });\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapping = require(\"./VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual solution, for consistent option specification.\n */\n\n\nvar each = zrUtil.each;\n\nfunction hasKeys(obj) {\n  if (obj) {\n    for (var name in obj) {\n      if (obj.hasOwnProperty(name)) {\n        return true;\n      }\n    }\n  }\n}\n/**\n * @param {Object} option\n * @param {Array.<string>} stateList\n * @param {Function} [supplementVisualOption]\n * @return {Object} visualMappings <state, <visualType, module:echarts/visual/VisualMapping>>\n */\n\n\nfunction createVisualMappings(option, stateList, supplementVisualOption) {\n  var visualMappings = {};\n  each(stateList, function (state) {\n    var mappings = visualMappings[state] = createMappings();\n    each(option[state], function (visualData, visualType) {\n      if (!VisualMapping.isValidType(visualType)) {\n        return;\n      }\n\n      var mappingOption = {\n        type: visualType,\n        visual: visualData\n      };\n      supplementVisualOption && supplementVisualOption(mappingOption, state);\n      mappings[visualType] = new VisualMapping(mappingOption); // Prepare a alpha for opacity, for some case that opacity\n      // is not supported, such as rendering using gradient color.\n\n      if (visualType === 'opacity') {\n        mappingOption = zrUtil.clone(mappingOption);\n        mappingOption.type = 'colorAlpha';\n        mappings.__hidden.__alphaForOpacity = new VisualMapping(mappingOption);\n      }\n    });\n  });\n  return visualMappings;\n\n  function createMappings() {\n    var Creater = function Creater() {}; // Make sure hidden fields will not be visited by\n    // object iteration (with hasOwnProperty checking).\n\n\n    Creater.prototype.__hidden = Creater.prototype;\n    var obj = new Creater();\n    return obj;\n  }\n}\n/**\n * @param {Object} thisOption\n * @param {Object} newOption\n * @param {Array.<string>} keys\n */\n\n\nfunction replaceVisualOption(thisOption, newOption, keys) {\n  // Visual attributes merge is not supported, otherwise it\n  // brings overcomplicated merge logic. See #2853. So if\n  // newOption has anyone of these keys, all of these keys\n  // will be reset. Otherwise, all keys remain.\n  var has;\n  zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      has = true;\n    }\n  });\n  has && zrUtil.each(keys, function (key) {\n    if (newOption.hasOwnProperty(key) && hasKeys(newOption[key])) {\n      thisOption[key] = zrUtil.clone(newOption[key]);\n    } else {\n      delete thisOption[key];\n    }\n  });\n}\n/**\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {module:echarts/data/List} list\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {object} [scope] Scope for getValueState\n * @param {string} [dimension] Concrete dimension, if used.\n */\n// ???! handle brush?\n\n\nfunction applyVisual(stateList, visualMappings, data, getValueState, scope, dimension) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n  var dataIndex;\n\n  function getVisual(key) {\n    return data.getItemVisual(dataIndex, key);\n  }\n\n  function setVisual(key, value) {\n    data.setItemVisual(dataIndex, key, value);\n  }\n\n  if (dimension == null) {\n    data.each(eachItem);\n  } else {\n    data.each([dimension], eachItem);\n  }\n\n  function eachItem(valueOrIndex, index) {\n    dataIndex = dimension == null ? valueOrIndex : index;\n    var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n    if (rawDataItem && rawDataItem.visualMap === false) {\n      return;\n    }\n\n    var valueState = getValueState.call(scope, valueOrIndex);\n    var mappings = visualMappings[valueState];\n    var visualTypes = visualTypesMap[valueState];\n\n    for (var i = 0, len = visualTypes.length; i < len; i++) {\n      var type = visualTypes[i];\n      mappings[type] && mappings[type].applyVisual(valueOrIndex, getVisual, setVisual);\n    }\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Array.<string>} stateList\n * @param {Object} visualMappings <state, Object.<visualType, module:echarts/visual/VisualMapping>>\n * @param {Function} getValueState param: valueOrIndex, return: state.\n * @param {number} [dim] dimension or dimension index.\n */\n\n\nfunction incrementalApplyVisual(stateList, visualMappings, getValueState, dim) {\n  var visualTypesMap = {};\n  zrUtil.each(stateList, function (state) {\n    var visualTypes = VisualMapping.prepareVisualTypes(visualMappings[state]);\n    visualTypesMap[state] = visualTypes;\n  });\n\n  function progress(params, data) {\n    if (dim != null) {\n      dim = data.getDimension(dim);\n    }\n\n    function getVisual(key) {\n      return data.getItemVisual(dataIndex, key);\n    }\n\n    function setVisual(key, value) {\n      data.setItemVisual(dataIndex, key, value);\n    }\n\n    var dataIndex;\n\n    while ((dataIndex = params.next()) != null) {\n      var rawDataItem = data.getRawDataItem(dataIndex); // Consider performance\n\n      if (rawDataItem && rawDataItem.visualMap === false) {\n        continue;\n      }\n\n      var value = dim != null ? data.get(dim, dataIndex, true) : dataIndex;\n      var valueState = getValueState(value);\n      var mappings = visualMappings[valueState];\n      var visualTypes = visualTypesMap[valueState];\n\n      for (var i = 0, len = visualTypes.length; i < len; i++) {\n        var type = visualTypes[i];\n        mappings[type] && mappings[type].applyVisual(value, getVisual, setVisual);\n      }\n    }\n  }\n\n  return {\n    progress: progress\n  };\n}\n\nexports.createVisualMappings = createVisualMappings;\nexports.replaceVisualOption = replaceVisualOption;\nexports.applyVisual = applyVisual;\nexports.incrementalApplyVisual = incrementalApplyVisual;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar pathTool = require(\"zrender/lib/tool/path\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n\nvar ZImage = require(\"zrender/lib/graphic/Image\");\n\nexports.Image = ZImage;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nexports.Group = Group;\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n\nexports.Text = Text;\n\nvar Circle = require(\"zrender/lib/graphic/shape/Circle\");\n\nexports.Circle = Circle;\n\nvar Sector = require(\"zrender/lib/graphic/shape/Sector\");\n\nexports.Sector = Sector;\n\nvar Ring = require(\"zrender/lib/graphic/shape/Ring\");\n\nexports.Ring = Ring;\n\nvar Polygon = require(\"zrender/lib/graphic/shape/Polygon\");\n\nexports.Polygon = Polygon;\n\nvar Polyline = require(\"zrender/lib/graphic/shape/Polyline\");\n\nexports.Polyline = Polyline;\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nexports.Rect = Rect;\n\nvar Line = require(\"zrender/lib/graphic/shape/Line\");\n\nexports.Line = Line;\n\nvar BezierCurve = require(\"zrender/lib/graphic/shape/BezierCurve\");\n\nexports.BezierCurve = BezierCurve;\n\nvar Arc = require(\"zrender/lib/graphic/shape/Arc\");\n\nexports.Arc = Arc;\n\nvar CompoundPath = require(\"zrender/lib/graphic/CompoundPath\");\n\nexports.CompoundPath = CompoundPath;\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nexports.LinearGradient = LinearGradient;\n\nvar RadialGradient = require(\"zrender/lib/graphic/RadialGradient\");\n\nexports.RadialGradient = RadialGradient;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nexports.BoundingRect = BoundingRect;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nexports.IncrementalDisplayable = IncrementalDisplayable;\n\nvar subPixelOptimizeUtil = require(\"zrender/lib/graphic/helper/subPixelOptimize\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar EMPTY_OBJ = {};\nvar Z2_EMPHASIS_LIFT = 1; // key: label model property nane, value: style property name.\n\nvar CACHED_LABEL_STYLE_PROPERTIES = {\n  color: 'textFill',\n  textBorderColor: 'textStroke',\n  textBorderWidth: 'textStrokeWidth'\n};\nvar EMPHASIS = 'emphasis';\nvar NORMAL = 'normal'; // Reserve 0 as default.\n\nvar _highlightNextDigit = 1;\nvar _highlightKeyMap = {};\nvar _customShapeMap = {};\n/**\n * Extend shape with parameters\n */\n\nfunction extendShape(opts) {\n  return Path.extend(opts);\n}\n/**\n * Extend path\n */\n\n\nfunction extendPath(pathData, opts) {\n  return pathTool.extendFromString(pathData, opts);\n}\n/**\n * Register a user defined shape.\n * The shape class can be fetched by `getShapeClass`\n * This method will overwrite the registered shapes, including\n * the registered built-in shapes, if using the same `name`.\n * The shape can be used in `custom series` and\n * `graphic component` by declaring `{type: name}`.\n *\n * @param {string} name\n * @param {Object} ShapeClass Can be generated by `extendShape`.\n */\n\n\nfunction registerShape(name, ShapeClass) {\n  _customShapeMap[name] = ShapeClass;\n}\n/**\n * Find shape class registered by `registerShape`. Usually used in\n * fetching user defined shape.\n *\n * [Caution]:\n * (1) This method **MUST NOT be used inside echarts !!!**, unless it is prepared\n * to use user registered shapes.\n * Because the built-in shape (see `getBuiltInShape`) will be registered by\n * `registerShape` by default. That enables users to get both built-in\n * shapes as well as the shapes belonging to themsleves. But users can overwrite\n * the built-in shapes by using names like 'circle', 'rect' via calling\n * `registerShape`. So the echarts inner featrues should not fetch shapes from here\n * in case that it is overwritten by users, except that some features, like\n * `custom series`, `graphic component`, do it deliberately.\n *\n * (2) In the features like `custom series`, `graphic component`, the user input\n * `{tpye: 'xxx'}` does not only specify shapes but also specify other graphic\n * elements like `'group'`, `'text'`, `'image'` or event `'path'`. Those names\n * are reserved names, that is, if some user register a shape named `'image'`,\n * the shape will not be used. If we intending to add some more reserved names\n * in feature, that might bring break changes (disable some existing user shape\n * names). But that case probably rearly happen. So we dont make more mechanism\n * to resolve this issue here.\n *\n * @param {string} name\n * @return {Object} The shape class. If not found, return nothing.\n */\n\n\nfunction getShapeClass(name) {\n  if (_customShapeMap.hasOwnProperty(name)) {\n    return _customShapeMap[name];\n  }\n}\n/**\n * Create a path element from path data string\n * @param {string} pathData\n * @param {Object} opts\n * @param {module:zrender/core/BoundingRect} rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makePath(pathData, opts, rect, layout) {\n  var path = pathTool.createFromString(pathData, opts);\n\n  if (rect) {\n    if (layout === 'center') {\n      rect = centerGraphic(rect, path.getBoundingRect());\n    }\n\n    resizePath(path, rect);\n  }\n\n  return path;\n}\n/**\n * Create a image element from image url\n * @param {string} imageUrl image url\n * @param {Object} opts options\n * @param {module:zrender/core/BoundingRect} rect constrain rect\n * @param {string} [layout=cover] 'center' or 'cover'\n */\n\n\nfunction makeImage(imageUrl, rect, layout) {\n  var path = new ZImage({\n    style: {\n      image: imageUrl,\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    onload: function onload(img) {\n      if (layout === 'center') {\n        var boundingRect = {\n          width: img.width,\n          height: img.height\n        };\n        path.setStyle(centerGraphic(rect, boundingRect));\n      }\n    }\n  });\n  return path;\n}\n/**\n * Get position of centered element in bounding box.\n *\n * @param  {Object} rect         element local bounding box\n * @param  {Object} boundingRect constraint bounding box\n * @return {Object} element position containing x, y, width, and height\n */\n\n\nfunction centerGraphic(rect, boundingRect) {\n  // Set rect to center, keep width / height ratio.\n  var aspect = boundingRect.width / boundingRect.height;\n  var width = rect.height * aspect;\n  var height;\n\n  if (width <= rect.width) {\n    height = rect.height;\n  } else {\n    width = rect.width;\n    height = width / aspect;\n  }\n\n  var cx = rect.x + rect.width / 2;\n  var cy = rect.y + rect.height / 2;\n  return {\n    x: cx - width / 2,\n    y: cy - height / 2,\n    width: width,\n    height: height\n  };\n}\n\nvar mergePath = pathTool.mergePath;\n/**\n * Resize a path to fit the rect\n * @param {module:zrender/graphic/Path} path\n * @param {Object} rect\n */\n\nfunction resizePath(path, rect) {\n  if (!path.applyTransform) {\n    return;\n  }\n\n  var pathRect = path.getBoundingRect();\n  var m = pathRect.calculateTransform(rect);\n  path.applyTransform(m);\n}\n/**\n * Sub pixel optimize line for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x1]\n * @param {number} [param.shape.y1]\n * @param {number} [param.shape.x2]\n * @param {number} [param.shape.y2]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeLine(param) {\n  subPixelOptimizeUtil.subPixelOptimizeLine(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize rect for canvas\n *\n * @param {Object} param\n * @param {Object} [param.shape]\n * @param {number} [param.shape.x]\n * @param {number} [param.shape.y]\n * @param {number} [param.shape.width]\n * @param {number} [param.shape.height]\n * @param {Object} [param.style]\n * @param {number} [param.style.lineWidth]\n * @return {Object} Modified param\n */\n\n\nfunction subPixelOptimizeRect(param) {\n  subPixelOptimizeUtil.subPixelOptimizeRect(param.shape, param.shape, param.style);\n  return param;\n}\n/**\n * Sub pixel optimize for canvas\n *\n * @param {number} position Coordinate, such as x, y\n * @param {number} lineWidth Should be nonnegative integer.\n * @param {boolean=} positiveOrNegative Default false (negative).\n * @return {number} Optimized position.\n */\n\n\nvar subPixelOptimize = subPixelOptimizeUtil.subPixelOptimize;\n\nfunction hasFillOrStroke(fillOrStroke) {\n  return fillOrStroke != null && fillOrStroke !== 'none';\n} // Most lifted color are duplicated.\n\n\nvar liftedColorMap = zrUtil.createHashMap();\nvar liftedColorCount = 0;\n\nfunction liftColor(color) {\n  if (typeof color !== 'string') {\n    return color;\n  }\n\n  var liftedColor = liftedColorMap.get(color);\n\n  if (!liftedColor) {\n    liftedColor = colorTool.lift(color, -0.1);\n\n    if (liftedColorCount < 10000) {\n      liftedColorMap.set(color, liftedColor);\n      liftedColorCount++;\n    }\n  }\n\n  return liftedColor;\n}\n\nfunction cacheElementStl(el) {\n  if (!el.__hoverStlDirty) {\n    return;\n  }\n\n  el.__hoverStlDirty = false;\n  var hoverStyle = el.__hoverStl;\n\n  if (!hoverStyle) {\n    el.__cachedNormalStl = el.__cachedNormalZ2 = null;\n    return;\n  }\n\n  var normalStyle = el.__cachedNormalStl = {};\n  el.__cachedNormalZ2 = el.z2;\n  var elStyle = el.style;\n\n  for (var name in hoverStyle) {\n    // See comment in `singleEnterEmphasis`.\n    if (hoverStyle[name] != null) {\n      normalStyle[name] = elStyle[name];\n    }\n  } // Always cache fill and stroke to normalStyle for lifting color.\n\n\n  normalStyle.fill = elStyle.fill;\n  normalStyle.stroke = elStyle.stroke;\n}\n\nfunction singleEnterEmphasis(el) {\n  var hoverStl = el.__hoverStl;\n\n  if (!hoverStl || el.__highlighted) {\n    return;\n  }\n\n  var zr = el.__zr;\n  var useHoverLayer = el.useHoverLayer && zr && zr.painter.type === 'canvas';\n  el.__highlighted = useHoverLayer ? 'layer' : 'plain';\n\n  if (el.isGroup || !zr && el.useHoverLayer) {\n    return;\n  }\n\n  var elTarget = el;\n  var targetStyle = el.style;\n\n  if (useHoverLayer) {\n    elTarget = zr.addHover(el);\n    targetStyle = elTarget.style;\n  }\n\n  rollbackDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    cacheElementStl(elTarget);\n  } // styles can be:\n  // {\n  //    label: {\n  //        show: false,\n  //        position: 'outside',\n  //        fontSize: 18\n  //    },\n  //    emphasis: {\n  //        label: {\n  //            show: true\n  //        }\n  //    }\n  // },\n  // where properties of `emphasis` may not appear in `normal`. We previously use\n  // module:echarts/util/model#defaultEmphasis to merge `normal` to `emphasis`.\n  // But consider rich text and setOption in merge mode, it is impossible to cover\n  // all properties in merge. So we use merge mode when setting style here.\n  // But we choose the merge strategy that only properties that is not `null/undefined`.\n  // Because when making a textStyle (espacially rich text), it is not easy to distinguish\n  // `hasOwnProperty` and `null/undefined` in code, so we trade them as the same for simplicity.\n  // But this strategy brings a trouble that `null/undefined` can not be used to remove\n  // style any more in `emphasis`. Users can both set properties directly on normal and\n  // emphasis to avoid this issue, or we might support `'none'` for this case if required.\n\n\n  targetStyle.extendFrom(hoverStl);\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'fill');\n  setDefaultHoverFillStroke(targetStyle, hoverStl, 'stroke');\n  applyDefaultTextStyle(targetStyle);\n\n  if (!useHoverLayer) {\n    el.dirty(false);\n    el.z2 += Z2_EMPHASIS_LIFT;\n  }\n}\n\nfunction setDefaultHoverFillStroke(targetStyle, hoverStyle, prop) {\n  if (!hasFillOrStroke(hoverStyle[prop]) && hasFillOrStroke(targetStyle[prop])) {\n    targetStyle[prop] = liftColor(targetStyle[prop]);\n  }\n}\n\nfunction singleEnterNormal(el) {\n  var highlighted = el.__highlighted;\n\n  if (!highlighted) {\n    return;\n  }\n\n  el.__highlighted = false;\n\n  if (el.isGroup) {\n    return;\n  }\n\n  if (highlighted === 'layer') {\n    el.__zr && el.__zr.removeHover(el);\n  } else {\n    var style = el.style;\n    var normalStl = el.__cachedNormalStl;\n\n    if (normalStl) {\n      rollbackDefaultTextStyle(style);\n      el.setStyle(normalStl);\n      applyDefaultTextStyle(style);\n    } // `__cachedNormalZ2` will not be reset if calling `setElementHoverStyle`\n    // when `el` is on emphasis state. So here by comparing with 1, we try\n    // hard to make the bug case rare.\n\n\n    var normalZ2 = el.__cachedNormalZ2;\n\n    if (normalZ2 != null && el.z2 - normalZ2 === Z2_EMPHASIS_LIFT) {\n      el.z2 = normalZ2;\n    }\n  }\n}\n\nfunction traverseUpdate(el, updater, commonParam) {\n  // If root is group, also enter updater for `highDownOnUpdate`.\n  var fromState = NORMAL;\n  var toState = NORMAL;\n  var trigger; // See the rule of `highDownOnUpdate` on `graphic.setAsHighDownDispatcher`.\n\n  el.__highlighted && (fromState = EMPHASIS, trigger = true);\n  updater(el, commonParam);\n  el.__highlighted && (toState = EMPHASIS, trigger = true);\n  el.isGroup && el.traverse(function (child) {\n    !child.isGroup && updater(child, commonParam);\n  });\n  trigger && el.__highDownOnUpdate && el.__highDownOnUpdate(fromState, toState);\n}\n/**\n * Set hover style (namely \"emphasis style\") of element, based on the current\n * style of the given `el`.\n * This method should be called after all of the normal styles have been adopted\n * to the `el`. See the reason on `setHoverStyle`.\n *\n * @param {module:zrender/Element} el Should not be `zrender/container/Group`.\n * @param {Object} [el.hoverStyle] Can be set on el or its descendants,\n *        e.g., `el.hoverStyle = ...; graphic.setHoverStyle(el); `.\n *        Often used when item group has a label element and it's hoverStyle is different.\n * @param {Object|boolean} [hoverStl] The specified hover style.\n *        If set as `false`, disable the hover style.\n *        Similarly, The `el.hoverStyle` can alse be set\n *        as `false` to disable the hover style.\n *        Otherwise, use the default hover style if not provided.\n */\n\n\nfunction setElementHoverStyle(el, hoverStl) {\n  // For performance consideration, it might be better to make the \"hover style\" only the\n  // difference properties from the \"normal style\", but not a entire copy of all styles.\n  hoverStl = el.__hoverStl = hoverStl !== false && (el.hoverStyle || hoverStl || {});\n  el.__hoverStlDirty = true; // FIXME\n  // It is not completely right to save \"normal\"/\"emphasis\" flag on elements.\n  // It probably should be saved on `data` of series. Consider the cases:\n  // (1) A highlighted elements are moved out of the view port and re-enter\n  // again by dataZoom.\n  // (2) call `setOption` and replace elements totally when they are highlighted.\n\n  if (el.__highlighted) {\n    // Consider the case:\n    // The styles of a highlighted `el` is being updated. The new \"emphasis style\"\n    // should be adapted to the `el`. Notice here new \"normal styles\" should have\n    // been set outside and the cached \"normal style\" is out of date.\n    el.__cachedNormalStl = null; // Do not clear `__cachedNormalZ2` here, because setting `z2` is not a constraint\n    // of this method. In most cases, `z2` is not set and hover style should be able\n    // to rollback. Of course, that would bring bug, but only in a rare case, see\n    // `doSingleLeaveHover` for details.\n\n    singleEnterNormal(el);\n    singleEnterEmphasis(el);\n  }\n}\n\nfunction onElementMouseOver(e) {\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\n  && !this.__highByOuter && traverseUpdate(this, singleEnterEmphasis);\n}\n\nfunction onElementMouseOut(e) {\n  !shouldSilent(this, e) // \"emphasis\" event highlight has higher priority than mouse highlight.\n  && !this.__highByOuter && traverseUpdate(this, singleEnterNormal);\n}\n\nfunction onElementEmphasisEvent(highlightDigit) {\n  this.__highByOuter |= 1 << (highlightDigit || 0);\n  traverseUpdate(this, singleEnterEmphasis);\n}\n\nfunction onElementNormalEvent(highlightDigit) {\n  !(this.__highByOuter &= ~(1 << (highlightDigit || 0))) && traverseUpdate(this, singleEnterNormal);\n}\n\nfunction shouldSilent(el, e) {\n  return el.__highDownSilentOnTouch && e.zrByTouch;\n}\n/**\n * Set hover style (namely \"emphasis style\") of element,\n * based on the current style of the given `el`.\n *\n * (1)\n * **CONSTRAINTS** for this method:\n * <A> This method MUST be called after all of the normal styles having been adopted\n * to the `el`.\n * <B> The input `hoverStyle` (that is, \"emphasis style\") MUST be the subset of the\n * \"normal style\" having been set to the el.\n * <C> `color` MUST be one of the \"normal styles\" (because color might be lifted as\n * a default hover style).\n *\n * The reason: this method treat the current style of the `el` as the \"normal style\"\n * and cache them when enter/update the \"emphasis style\". Consider the case: the `el`\n * is in \"emphasis\" state and `setOption`/`dispatchAction` trigger the style updating\n * logic, where the el should shift from the original emphasis style to the new\n * \"emphasis style\" and should be able to \"downplay\" back to the new \"normal style\".\n *\n * Indeed, it is error-prone to make a interface has so many constraints, but I have\n * not found a better solution yet to fit the backward compatibility, performance and\n * the current programming style.\n *\n * (2)\n * Call the method for a \"root\" element once. Do not call it for each descendants.\n * If the descendants elemenets of a group has itself hover style different from the\n * root group, we can simply mount the style on `el.hoverStyle` for them, but should\n * not call this method for them.\n *\n * (3) These input parameters can be set directly on `el`:\n *\n * @param {module:zrender/Element} el\n * @param {Object} [el.hoverStyle] See `graphic.setElementHoverStyle`.\n * @param {boolean} [el.highDownSilentOnTouch=false] See `graphic.setAsHighDownDispatcher`.\n * @param {Function} [el.highDownOnUpdate] See `graphic.setAsHighDownDispatcher`.\n * @param {Object|boolean} [hoverStyle] See `graphic.setElementHoverStyle`.\n */\n\n\nfunction setHoverStyle(el, hoverStyle) {\n  setAsHighDownDispatcher(el, true);\n  traverseUpdate(el, setElementHoverStyle, hoverStyle);\n}\n/**\n * @param {module:zrender/Element} el\n * @param {Function} [el.highDownOnUpdate] Called when state updated.\n *        Since `setHoverStyle` has the constraint that it must be called after\n *        all of the normal style updated, `highDownOnUpdate` is not needed to\n *        trigger if both `fromState` and `toState` is 'normal', and needed to\n *        trigger if both `fromState` and `toState` is 'emphasis', which enables\n *        to sync outside style settings to \"emphasis\" state.\n *        @this {string} This dispatcher `el`.\n *        @param {string} fromState Can be \"normal\" or \"emphasis\".\n *               `fromState` might equal to `toState`,\n *               for example, when this method is called when `el` is\n *               on \"emphasis\" state.\n *        @param {string} toState Can be \"normal\" or \"emphasis\".\n *\n *        FIXME\n *        CAUTION: Do not expose `highDownOnUpdate` outside echarts.\n *        Because it is not a complete solution. The update\n *        listener should not have been mount in element,\n *        and the normal/emphasis state should not have\n *        mantained on elements.\n *\n * @param {boolean} [el.highDownSilentOnTouch=false]\n *        In touch device, mouseover event will be trigger on touchstart event\n *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n *        conveniently use hoverStyle when tap on touch screen without additional\n *        code for compatibility.\n *        But if the chart/component has select feature, which usually also use\n *        hoverStyle, there might be conflict between 'select-highlight' and\n *        'hover-highlight' especially when roam is enabled (see geo for example).\n *        In this case, `highDownSilentOnTouch` should be used to disable\n *        hover-highlight on touch device.\n * @param {boolean} [asDispatcher=true] If `false`, do not set as \"highDownDispatcher\".\n */\n\n\nfunction setAsHighDownDispatcher(el, asDispatcher) {\n  var disable = asDispatcher === false; // Make `highDownSilentOnTouch` and `highDownOnUpdate` only work after\n  // `setAsHighDownDispatcher` called. Avoid it is modified by user unexpectedly.\n\n  el.__highDownSilentOnTouch = el.highDownSilentOnTouch;\n  el.__highDownOnUpdate = el.highDownOnUpdate; // Simple optimize, since this method might be\n  // called for each elements of a group in some cases.\n\n  if (!disable || el.__highDownDispatcher) {\n    var method = disable ? 'off' : 'on'; // Duplicated function will be auto-ignored, see Eventful.js.\n\n    el[method]('mouseover', onElementMouseOver)[method]('mouseout', onElementMouseOut); // Emphasis, normal can be triggered manually by API or other components like hover link.\n\n    el[method]('emphasis', onElementEmphasisEvent)[method]('normal', onElementNormalEvent); // Also keep previous record.\n\n    el.__highByOuter = el.__highByOuter || 0;\n    el.__highDownDispatcher = !disable;\n  }\n}\n/**\n * @param {module:zrender/src/Element} el\n * @return {boolean}\n */\n\n\nfunction isHighDownDispatcher(el) {\n  return !!(el && el.__highDownDispatcher);\n}\n/**\n * Support hightlight/downplay record on each elements.\n * For the case: hover highlight/downplay (legend, visualMap, ...) and\n * user triggerred hightlight/downplay should not conflict.\n * Only all of the highlightDigit cleared, return to normal.\n * @param {string} highlightKey\n * @return {number} highlightDigit\n */\n\n\nfunction getHighlightDigit(highlightKey) {\n  var highlightDigit = _highlightKeyMap[highlightKey];\n\n  if (highlightDigit == null && _highlightNextDigit <= 32) {\n    highlightDigit = _highlightKeyMap[highlightKey] = _highlightNextDigit++;\n  }\n\n  return highlightDigit;\n}\n/**\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} normalStyle\n * @param {Object} emphasisStyle\n * @param {module:echarts/model/Model} normalModel\n * @param {module:echarts/model/Model} emphasisModel\n * @param {Object} opt Check `opt` of `setTextStyleCommon` to find other props.\n * @param {string|Function} [opt.defaultText]\n * @param {module:echarts/model/Model} [opt.labelFetcher] Fetch text by\n *      `opt.labelFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\n * @param {number} [opt.labelDataIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\n * @param {number} [opt.labelDimIndex] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\n * @param {string} [opt.labelProp] Fetch text by\n *      `opt.textFetcher.getFormattedLabel(opt.labelDataIndex, 'normal'/'emphasis', null, opt.labelDimIndex, opt.labelProp)`\n * @param {Object} [normalSpecified]\n * @param {Object} [emphasisSpecified]\n */\n\n\nfunction setLabelStyle(normalStyle, emphasisStyle, normalModel, emphasisModel, opt, normalSpecified, emphasisSpecified) {\n  opt = opt || EMPTY_OBJ;\n  var labelFetcher = opt.labelFetcher;\n  var labelDataIndex = opt.labelDataIndex;\n  var labelDimIndex = opt.labelDimIndex;\n  var labelProp = opt.labelProp; // This scenario, `label.normal.show = true; label.emphasis.show = false`,\n  // is not supported util someone requests.\n\n  var showNormal = normalModel.getShallow('show');\n  var showEmphasis = emphasisModel.getShallow('show'); // Consider performance, only fetch label when necessary.\n  // If `normal.show` is `false` and `emphasis.show` is `true` and `emphasis.formatter` is not set,\n  // label should be displayed, where text is fetched by `normal.formatter` or `opt.defaultText`.\n\n  var baseText;\n\n  if (showNormal || showEmphasis) {\n    if (labelFetcher) {\n      baseText = labelFetcher.getFormattedLabel(labelDataIndex, 'normal', null, labelDimIndex, labelProp);\n    }\n\n    if (baseText == null) {\n      baseText = zrUtil.isFunction(opt.defaultText) ? opt.defaultText(labelDataIndex, opt) : opt.defaultText;\n    }\n  }\n\n  var normalStyleText = showNormal ? baseText : null;\n  var emphasisStyleText = showEmphasis ? zrUtil.retrieve2(labelFetcher ? labelFetcher.getFormattedLabel(labelDataIndex, 'emphasis', null, labelDimIndex, labelProp) : null, baseText) : null; // Optimize: If style.text is null, text will not be drawn.\n\n  if (normalStyleText != null || emphasisStyleText != null) {\n    // Always set `textStyle` even if `normalStyle.text` is null, because default\n    // values have to be set on `normalStyle`.\n    // If we set default values on `emphasisStyle`, consider case:\n    // Firstly, `setOption(... label: {normal: {text: null}, emphasis: {show: true}} ...);`\n    // Secondly, `setOption(... label: {noraml: {show: true, text: 'abc', color: 'red'} ...);`\n    // Then the 'red' will not work on emphasis.\n    setTextStyle(normalStyle, normalModel, normalSpecified, opt);\n    setTextStyle(emphasisStyle, emphasisModel, emphasisSpecified, opt, true);\n  }\n\n  normalStyle.text = normalStyleText;\n  emphasisStyle.text = emphasisStyleText;\n}\n/**\n * Modify label style manually.\n * Only works after `setLabelStyle` and `setElementHoverStyle` called.\n *\n * @param {module:zrender/src/Element} el\n * @param {Object} [normalStyleProps] optional\n * @param {Object} [emphasisStyleProps] optional\n */\n\n\nfunction modifyLabelStyle(el, normalStyleProps, emphasisStyleProps) {\n  var elStyle = el.style;\n\n  if (normalStyleProps) {\n    rollbackDefaultTextStyle(elStyle);\n    el.setStyle(normalStyleProps);\n    applyDefaultTextStyle(elStyle);\n  }\n\n  elStyle = el.__hoverStl;\n\n  if (emphasisStyleProps && elStyle) {\n    rollbackDefaultTextStyle(elStyle);\n    zrUtil.extend(elStyle, emphasisStyleProps);\n    applyDefaultTextStyle(elStyle);\n  }\n}\n/**\n * Set basic textStyle properties.\n * See more info in `setTextStyleCommon`.\n * @param {Object|module:zrender/graphic/Style} textStyle\n * @param {module:echarts/model/Model} model\n * @param {Object} [specifiedTextStyle] Can be overrided by settings in model.\n * @param {Object} [opt] See `opt` of `setTextStyleCommon`.\n * @param {boolean} [isEmphasis]\n */\n\n\nfunction setTextStyle(textStyle, textStyleModel, specifiedTextStyle, opt, isEmphasis) {\n  setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis);\n  specifiedTextStyle && zrUtil.extend(textStyle, specifiedTextStyle); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n\n  return textStyle;\n}\n/**\n * Set text option in the style.\n * See more info in `setTextStyleCommon`.\n * @deprecated\n * @param {Object} textStyle\n * @param {module:echarts/model/Model} labelModel\n * @param {string|boolean} defaultColor Default text color.\n *        If set as false, it will be processed as a emphasis style.\n */\n\n\nfunction setText(textStyle, labelModel, defaultColor) {\n  var opt = {\n    isRectText: true\n  };\n  var isEmphasis;\n\n  if (defaultColor === false) {\n    isEmphasis = true;\n  } else {\n    // Support setting color as 'auto' to get visual color.\n    opt.autoColor = defaultColor;\n  }\n\n  setTextStyleCommon(textStyle, labelModel, opt, isEmphasis); // textStyle.host && textStyle.host.dirty && textStyle.host.dirty(false);\n}\n/**\n * The uniform entry of set text style, that is, retrieve style definitions\n * from `model` and set to `textStyle` object.\n *\n * Never in merge mode, but in overwrite mode, that is, all of the text style\n * properties will be set. (Consider the states of normal and emphasis and\n * default value can be adopted, merge would make the logic too complicated\n * to manage.)\n *\n * The `textStyle` object can either be a plain object or an instance of\n * `zrender/src/graphic/Style`, and either be the style of normal or emphasis.\n * After this mothod called, the `textStyle` object can then be used in\n * `el.setStyle(textStyle)` or `el.hoverStyle = textStyle`.\n *\n * Default value will be adopted and `insideRollbackOpt` will be created.\n * See `applyDefaultTextStyle` `rollbackDefaultTextStyle` for more details.\n *\n * opt: {\n *      disableBox: boolean, Whether diable drawing box of block (outer most).\n *      isRectText: boolean,\n *      autoColor: string, specify a color when color is 'auto',\n *              for textFill, textStroke, textBackgroundColor, and textBorderColor.\n *              If autoColor specified, it is used as default textFill.\n *      useInsideStyle:\n *              `true`: Use inside style (textFill, textStroke, textStrokeWidth)\n *                  if `textFill` is not specified.\n *              `false`: Do not use inside style.\n *              `null/undefined`: use inside style if `isRectText` is true and\n *                  `textFill` is not specified and textPosition contains `'inside'`.\n *      forceRich: boolean\n * }\n */\n\n\nfunction setTextStyleCommon(textStyle, textStyleModel, opt, isEmphasis) {\n  // Consider there will be abnormal when merge hover style to normal style if given default value.\n  opt = opt || EMPTY_OBJ;\n\n  if (opt.isRectText) {\n    var textPosition;\n\n    if (opt.getTextPosition) {\n      textPosition = opt.getTextPosition(textStyleModel, isEmphasis);\n    } else {\n      textPosition = textStyleModel.getShallow('position') || (isEmphasis ? null : 'inside'); // 'outside' is not a valid zr textPostion value, but used\n      // in bar series, and magric type should be considered.\n\n      textPosition === 'outside' && (textPosition = 'top');\n    }\n\n    textStyle.textPosition = textPosition;\n    textStyle.textOffset = textStyleModel.getShallow('offset');\n    var labelRotate = textStyleModel.getShallow('rotate');\n    labelRotate != null && (labelRotate *= Math.PI / 180);\n    textStyle.textRotation = labelRotate;\n    textStyle.textDistance = zrUtil.retrieve2(textStyleModel.getShallow('distance'), isEmphasis ? null : 5);\n  }\n\n  var ecModel = textStyleModel.ecModel;\n  var globalTextStyle = ecModel && ecModel.option.textStyle; // Consider case:\n  // {\n  //     data: [{\n  //         value: 12,\n  //         label: {\n  //             rich: {\n  //                 // no 'a' here but using parent 'a'.\n  //             }\n  //         }\n  //     }],\n  //     rich: {\n  //         a: { ... }\n  //     }\n  // }\n\n  var richItemNames = getRichItemNames(textStyleModel);\n  var richResult;\n\n  if (richItemNames) {\n    richResult = {};\n\n    for (var name in richItemNames) {\n      if (richItemNames.hasOwnProperty(name)) {\n        // Cascade is supported in rich.\n        var richTextStyle = textStyleModel.getModel(['rich', name]); // In rich, never `disableBox`.\n        // FIXME: consider `label: {formatter: '{a|xx}', color: 'blue', rich: {a: {}}}`,\n        // the default color `'blue'` will not be adopted if no color declared in `rich`.\n        // That might confuses users. So probably we should put `textStyleModel` as the\n        // root ancestor of the `richTextStyle`. But that would be a break change.\n\n        setTokenTextStyle(richResult[name] = {}, richTextStyle, globalTextStyle, opt, isEmphasis);\n      }\n    }\n  }\n\n  textStyle.rich = richResult;\n  setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, true);\n\n  if (opt.forceRich && !opt.textStyle) {\n    opt.textStyle = {};\n  }\n\n  return textStyle;\n} // Consider case:\n// {\n//     data: [{\n//         value: 12,\n//         label: {\n//             rich: {\n//                 // no 'a' here but using parent 'a'.\n//             }\n//         }\n//     }],\n//     rich: {\n//         a: { ... }\n//     }\n// }\n\n\nfunction getRichItemNames(textStyleModel) {\n  // Use object to remove duplicated names.\n  var richItemNameMap;\n\n  while (textStyleModel && textStyleModel !== textStyleModel.ecModel) {\n    var rich = (textStyleModel.option || EMPTY_OBJ).rich;\n\n    if (rich) {\n      richItemNameMap = richItemNameMap || {};\n\n      for (var name in rich) {\n        if (rich.hasOwnProperty(name)) {\n          richItemNameMap[name] = 1;\n        }\n      }\n    }\n\n    textStyleModel = textStyleModel.parentModel;\n  }\n\n  return richItemNameMap;\n}\n\nfunction setTokenTextStyle(textStyle, textStyleModel, globalTextStyle, opt, isEmphasis, isBlock) {\n  // In merge mode, default value should not be given.\n  globalTextStyle = !isEmphasis && globalTextStyle || EMPTY_OBJ;\n  textStyle.textFill = getAutoColor(textStyleModel.getShallow('color'), opt) || globalTextStyle.color;\n  textStyle.textStroke = getAutoColor(textStyleModel.getShallow('textBorderColor'), opt) || globalTextStyle.textBorderColor;\n  textStyle.textStrokeWidth = zrUtil.retrieve2(textStyleModel.getShallow('textBorderWidth'), globalTextStyle.textBorderWidth);\n\n  if (!isEmphasis) {\n    if (isBlock) {\n      textStyle.insideRollbackOpt = opt;\n      applyDefaultTextStyle(textStyle);\n    } // Set default finally.\n\n\n    if (textStyle.textFill == null) {\n      textStyle.textFill = opt.autoColor;\n    }\n  } // Do not use `getFont` here, because merge should be supported, where\n  // part of these properties may be changed in emphasis style, and the\n  // others should remain their original value got from normal style.\n\n\n  textStyle.fontStyle = textStyleModel.getShallow('fontStyle') || globalTextStyle.fontStyle;\n  textStyle.fontWeight = textStyleModel.getShallow('fontWeight') || globalTextStyle.fontWeight;\n  textStyle.fontSize = textStyleModel.getShallow('fontSize') || globalTextStyle.fontSize;\n  textStyle.fontFamily = textStyleModel.getShallow('fontFamily') || globalTextStyle.fontFamily;\n  textStyle.textAlign = textStyleModel.getShallow('align');\n  textStyle.textVerticalAlign = textStyleModel.getShallow('verticalAlign') || textStyleModel.getShallow('baseline');\n  textStyle.textLineHeight = textStyleModel.getShallow('lineHeight');\n  textStyle.textWidth = textStyleModel.getShallow('width');\n  textStyle.textHeight = textStyleModel.getShallow('height');\n  textStyle.textTag = textStyleModel.getShallow('tag');\n\n  if (!isBlock || !opt.disableBox) {\n    textStyle.textBackgroundColor = getAutoColor(textStyleModel.getShallow('backgroundColor'), opt);\n    textStyle.textPadding = textStyleModel.getShallow('padding');\n    textStyle.textBorderColor = getAutoColor(textStyleModel.getShallow('borderColor'), opt);\n    textStyle.textBorderWidth = textStyleModel.getShallow('borderWidth');\n    textStyle.textBorderRadius = textStyleModel.getShallow('borderRadius');\n    textStyle.textBoxShadowColor = textStyleModel.getShallow('shadowColor');\n    textStyle.textBoxShadowBlur = textStyleModel.getShallow('shadowBlur');\n    textStyle.textBoxShadowOffsetX = textStyleModel.getShallow('shadowOffsetX');\n    textStyle.textBoxShadowOffsetY = textStyleModel.getShallow('shadowOffsetY');\n  }\n\n  textStyle.textShadowColor = textStyleModel.getShallow('textShadowColor') || globalTextStyle.textShadowColor;\n  textStyle.textShadowBlur = textStyleModel.getShallow('textShadowBlur') || globalTextStyle.textShadowBlur;\n  textStyle.textShadowOffsetX = textStyleModel.getShallow('textShadowOffsetX') || globalTextStyle.textShadowOffsetX;\n  textStyle.textShadowOffsetY = textStyleModel.getShallow('textShadowOffsetY') || globalTextStyle.textShadowOffsetY;\n}\n\nfunction getAutoColor(color, opt) {\n  return color !== 'auto' ? color : opt && opt.autoColor ? opt.autoColor : null;\n}\n/**\n * Give some default value to the input `textStyle` object, based on the current settings\n * in this `textStyle` object.\n *\n * The Scenario:\n * when text position is `inside` and `textFill` is not specified, we show\n * text border by default for better view. But it should be considered that text position\n * might be changed when hovering or being emphasis, where the `insideRollback` is used to\n * restore the style.\n *\n * Usage (& NOTICE):\n * When a style object (eithor plain object or instance of `zrender/src/graphic/Style`) is\n * about to be modified on its text related properties, `rollbackDefaultTextStyle` should\n * be called before the modification and `applyDefaultTextStyle` should be called after that.\n * (For the case that all of the text related properties is reset, like `setTextStyleCommon`\n * does, `rollbackDefaultTextStyle` is not needed to be called).\n */\n\n\nfunction applyDefaultTextStyle(textStyle) {\n  var textPosition = textStyle.textPosition;\n  var opt = textStyle.insideRollbackOpt;\n  var insideRollback;\n\n  if (opt && textStyle.textFill == null) {\n    var autoColor = opt.autoColor;\n    var isRectText = opt.isRectText;\n    var useInsideStyle = opt.useInsideStyle;\n    var useInsideStyleCache = useInsideStyle !== false && (useInsideStyle === true || isRectText && textPosition // textPosition can be [10, 30]\n    && typeof textPosition === 'string' && textPosition.indexOf('inside') >= 0);\n    var useAutoColorCache = !useInsideStyleCache && autoColor != null; // All of the props declared in `CACHED_LABEL_STYLE_PROPERTIES` are to be cached.\n\n    if (useInsideStyleCache || useAutoColorCache) {\n      insideRollback = {\n        textFill: textStyle.textFill,\n        textStroke: textStyle.textStroke,\n        textStrokeWidth: textStyle.textStrokeWidth\n      };\n    }\n\n    if (useInsideStyleCache) {\n      textStyle.textFill = '#fff'; // Consider text with #fff overflow its container.\n\n      if (textStyle.textStroke == null) {\n        textStyle.textStroke = autoColor;\n        textStyle.textStrokeWidth == null && (textStyle.textStrokeWidth = 2);\n      }\n    }\n\n    if (useAutoColorCache) {\n      textStyle.textFill = autoColor;\n    }\n  } // Always set `insideRollback`, so that the previous one can be cleared.\n\n\n  textStyle.insideRollback = insideRollback;\n}\n/**\n * Consider the case: in a scatter,\n * label: {\n *     normal: {position: 'inside'},\n *     emphasis: {position: 'top'}\n * }\n * In the normal state, the `textFill` will be set as '#fff' for pretty view (see\n * `applyDefaultTextStyle`), but when switching to emphasis state, the `textFill`\n * should be retured to 'autoColor', but not keep '#fff'.\n */\n\n\nfunction rollbackDefaultTextStyle(style) {\n  var insideRollback = style.insideRollback;\n\n  if (insideRollback) {\n    // Reset all of the props in `CACHED_LABEL_STYLE_PROPERTIES`.\n    style.textFill = insideRollback.textFill;\n    style.textStroke = insideRollback.textStroke;\n    style.textStrokeWidth = insideRollback.textStrokeWidth;\n    style.insideRollback = null;\n  }\n}\n\nfunction getFont(opt, ecModel) {\n  var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n  return zrUtil.trim([// FIXME in node-canvas fontWeight is before fontStyle\n  opt.fontStyle || gTextStyleModel && gTextStyleModel.getShallow('fontStyle') || '', opt.fontWeight || gTextStyleModel && gTextStyleModel.getShallow('fontWeight') || '', (opt.fontSize || gTextStyleModel && gTextStyleModel.getShallow('fontSize') || 12) + 'px', opt.fontFamily || gTextStyleModel && gTextStyleModel.getShallow('fontFamily') || 'sans-serif'].join(' '));\n}\n\nfunction animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n  if (typeof dataIndex === 'function') {\n    cb = dataIndex;\n    dataIndex = null;\n  } // Do not check 'animation' property directly here. Consider this case:\n  // animation model is an `itemModel`, whose does not have `isAnimationEnabled`\n  // but its parent model (`seriesModel`) does.\n\n\n  var animationEnabled = animatableModel && animatableModel.isAnimationEnabled();\n\n  if (animationEnabled) {\n    var postfix = isUpdate ? 'Update' : '';\n    var duration = animatableModel.getShallow('animationDuration' + postfix);\n    var animationEasing = animatableModel.getShallow('animationEasing' + postfix);\n    var animationDelay = animatableModel.getShallow('animationDelay' + postfix);\n\n    if (typeof animationDelay === 'function') {\n      animationDelay = animationDelay(dataIndex, animatableModel.getAnimationDelayParams ? animatableModel.getAnimationDelayParams(el, dataIndex) : null);\n    }\n\n    if (typeof duration === 'function') {\n      duration = duration(dataIndex);\n    }\n\n    duration > 0 ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb, !!cb) : (el.stopAnimation(), el.attr(props), cb && cb());\n  } else {\n    el.stopAnimation();\n    el.attr(props);\n    cb && cb();\n  }\n}\n/**\n * Update graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} [cb]\n * @example\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n *     // Or\n *     graphic.updateProps(el, {\n *         position: [100, 100]\n *     }, seriesModel, function () { console.log('Animation done!'); });\n */\n\n\nfunction updateProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Init graphic element properties with or without animation according to the\n * configuration in series.\n *\n * Caution: this method will stop previous animation.\n * So do not use this method to one element twice before\n * animation starts, unless you know what you are doing.\n *\n * @param {module:zrender/Element} el\n * @param {Object} props\n * @param {module:echarts/model/Model} [animatableModel]\n * @param {number} [dataIndex]\n * @param {Function} cb\n */\n\n\nfunction initProps(el, props, animatableModel, dataIndex, cb) {\n  animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n}\n/**\n * Get transform matrix of target (param target),\n * in coordinate of its ancestor (param ancestor)\n *\n * @param {module:zrender/mixin/Transformable} target\n * @param {module:zrender/mixin/Transformable} [ancestor]\n */\n\n\nfunction getTransform(target, ancestor) {\n  var mat = matrix.identity([]);\n\n  while (target && target !== ancestor) {\n    matrix.mul(mat, target.getLocalTransform(), mat);\n    target = target.parent;\n  }\n\n  return mat;\n}\n/**\n * Apply transform to an vertex.\n * @param {Array.<number>} target [x, y]\n * @param {Array.<number>|TypedArray.<number>|Object} transform Can be:\n *      + Transform matrix: like [1, 0, 0, 1, 0, 0]\n *      + {position, rotation, scale}, the same as `zrender/Transformable`.\n * @param {boolean=} invert Whether use invert matrix.\n * @return {Array.<number>} [x, y]\n */\n\n\nfunction applyTransform(target, transform, invert) {\n  if (transform && !zrUtil.isArrayLike(transform)) {\n    transform = Transformable.getLocalTransform(transform);\n  }\n\n  if (invert) {\n    transform = matrix.invert([], transform);\n  }\n\n  return vector.applyTransform([], target, transform);\n}\n/**\n * @param {string} direction 'left' 'right' 'top' 'bottom'\n * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n * @param {boolean=} invert Whether use invert matrix.\n * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n */\n\n\nfunction transformDirection(direction, transform, invert) {\n  // Pick a base, ensure that transform result will not be (0, 0).\n  var hBase = transform[4] === 0 || transform[5] === 0 || transform[0] === 0 ? 1 : Math.abs(2 * transform[4] / transform[0]);\n  var vBase = transform[4] === 0 || transform[5] === 0 || transform[2] === 0 ? 1 : Math.abs(2 * transform[4] / transform[2]);\n  var vertex = [direction === 'left' ? -hBase : direction === 'right' ? hBase : 0, direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0];\n  vertex = applyTransform(vertex, transform, invert);\n  return Math.abs(vertex[0]) > Math.abs(vertex[1]) ? vertex[0] > 0 ? 'right' : 'left' : vertex[1] > 0 ? 'bottom' : 'top';\n}\n/**\n * Apply group transition animation from g1 to g2.\n * If no animatableModel, no animation.\n */\n\n\nfunction groupTransition(g1, g2, animatableModel, cb) {\n  if (!g1 || !g2) {\n    return;\n  }\n\n  function getElMap(g) {\n    var elMap = {};\n    g.traverse(function (el) {\n      if (!el.isGroup && el.anid) {\n        elMap[el.anid] = el;\n      }\n    });\n    return elMap;\n  }\n\n  function getAnimatableProps(el) {\n    var obj = {\n      position: vector.clone(el.position),\n      rotation: el.rotation\n    };\n\n    if (el.shape) {\n      obj.shape = zrUtil.extend({}, el.shape);\n    }\n\n    return obj;\n  }\n\n  var elMap1 = getElMap(g1);\n  g2.traverse(function (el) {\n    if (!el.isGroup && el.anid) {\n      var oldEl = elMap1[el.anid];\n\n      if (oldEl) {\n        var newProp = getAnimatableProps(el);\n        el.attr(getAnimatableProps(oldEl));\n        updateProps(el, newProp, animatableModel, el.dataIndex);\n      } // else {\n      //     if (el.previousProps) {\n      //         graphic.updateProps\n      //     }\n      // }\n\n    }\n  });\n}\n/**\n * @param {Array.<Array.<number>>} points Like: [[23, 44], [53, 66], ...]\n * @param {Object} rect {x, y, width, height}\n * @return {Array.<Array.<number>>} A new clipped points.\n */\n\n\nfunction clipPointsByRect(points, rect) {\n  // FIXME: this way migth be incorrect when grpahic clipped by a corner.\n  // and when element have border.\n  return zrUtil.map(points, function (point) {\n    var x = point[0];\n    x = mathMax(x, rect.x);\n    x = mathMin(x, rect.x + rect.width);\n    var y = point[1];\n    y = mathMax(y, rect.y);\n    y = mathMin(y, rect.y + rect.height);\n    return [x, y];\n  });\n}\n/**\n * @param {Object} targetRect {x, y, width, height}\n * @param {Object} rect {x, y, width, height}\n * @return {Object} A new clipped rect. If rect size are negative, return undefined.\n */\n\n\nfunction clipRectByRect(targetRect, rect) {\n  var x = mathMax(targetRect.x, rect.x);\n  var x2 = mathMin(targetRect.x + targetRect.width, rect.x + rect.width);\n  var y = mathMax(targetRect.y, rect.y);\n  var y2 = mathMin(targetRect.y + targetRect.height, rect.y + rect.height); // If the total rect is cliped, nothing, including the border,\n  // should be painted. So return undefined.\n\n  if (x2 >= x && y2 >= y) {\n    return {\n      x: x,\n      y: y,\n      width: x2 - x,\n      height: y2 - y\n    };\n  }\n}\n/**\n * @param {string} iconStr Support 'image://' or 'path://' or direct svg path.\n * @param {Object} [opt] Properties of `module:zrender/Element`, except `style`.\n * @param {Object} [rect] {x, y, width, height}\n * @return {module:zrender/Element} Icon path or image element.\n */\n\n\nfunction createIcon(iconStr, opt, rect) {\n  opt = zrUtil.extend({\n    rectHover: true\n  }, opt);\n  var style = opt.style = {\n    strokeNoScale: true\n  };\n  rect = rect || {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  };\n\n  if (iconStr) {\n    return iconStr.indexOf('image://') === 0 ? (style.image = iconStr.slice(8), zrUtil.defaults(style, rect), new ZImage(opt)) : makePath(iconStr.replace('path://', ''), opt, rect, 'center');\n  }\n}\n/**\n * Return `true` if the given line (line `a`) and the given polygon\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n *\n * @param {number} a1x\n * @param {number} a1y\n * @param {number} a2x\n * @param {number} a2y\n * @param {Array.<Array.<number>>} points Points of the polygon.\n * @return {boolean}\n */\n\n\nfunction linePolygonIntersect(a1x, a1y, a2x, a2y, points) {\n  for (var i = 0, p2 = points[points.length - 1]; i < points.length; i++) {\n    var p = points[i];\n\n    if (lineLineIntersect(a1x, a1y, a2x, a2y, p[0], p[1], p2[0], p2[1])) {\n      return true;\n    }\n\n    p2 = p;\n  }\n}\n/**\n * Return `true` if the given two lines (line `a` and line `b`)\n * are intersect.\n * Note that we do not count colinear as intersect here because no\n * requirement for that. We could do that if required in future.\n *\n * @param {number} a1x\n * @param {number} a1y\n * @param {number} a2x\n * @param {number} a2y\n * @param {number} b1x\n * @param {number} b1y\n * @param {number} b2x\n * @param {number} b2y\n * @return {boolean}\n */\n\n\nfunction lineLineIntersect(a1x, a1y, a2x, a2y, b1x, b1y, b2x, b2y) {\n  // let `vec_m` to be `vec_a2 - vec_a1` and `vec_n` to be `vec_b2 - vec_b1`.\n  var mx = a2x - a1x;\n  var my = a2y - a1y;\n  var nx = b2x - b1x;\n  var ny = b2y - b1y; // `vec_m` and `vec_n` are parallel iff\n  //     exising `k` such that `vec_m = k · vec_n`, equivalent to `vec_m X vec_n = 0`.\n\n  var nmCrossProduct = crossProduct2d(nx, ny, mx, my);\n\n  if (nearZero(nmCrossProduct)) {\n    return false;\n  } // `vec_m` and `vec_n` are intersect iff\n  //     existing `p` and `q` in [0, 1] such that `vec_a1 + p * vec_m = vec_b1 + q * vec_n`,\n  //     such that `q = ((vec_a1 - vec_b1) X vec_m) / (vec_n X vec_m)`\n  //           and `p = ((vec_a1 - vec_b1) X vec_n) / (vec_n X vec_m)`.\n\n\n  var b1a1x = a1x - b1x;\n  var b1a1y = a1y - b1y;\n  var q = crossProduct2d(b1a1x, b1a1y, mx, my) / nmCrossProduct;\n\n  if (q < 0 || q > 1) {\n    return false;\n  }\n\n  var p = crossProduct2d(b1a1x, b1a1y, nx, ny) / nmCrossProduct;\n\n  if (p < 0 || p > 1) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Cross product of 2-dimension vector.\n */\n\n\nfunction crossProduct2d(x1, y1, x2, y2) {\n  return x1 * y2 - x2 * y1;\n}\n\nfunction nearZero(val) {\n  return val <= 1e-6 && val >= -1e-6;\n} // Register built-in shapes. These shapes might be overwirtten\n// by users, although we do not recommend that.\n\n\nregisterShape('circle', Circle);\nregisterShape('sector', Sector);\nregisterShape('ring', Ring);\nregisterShape('polygon', Polygon);\nregisterShape('polyline', Polyline);\nregisterShape('rect', Rect);\nregisterShape('line', Line);\nregisterShape('bezierCurve', BezierCurve);\nregisterShape('arc', Arc);\nexports.Z2_EMPHASIS_LIFT = Z2_EMPHASIS_LIFT;\nexports.CACHED_LABEL_STYLE_PROPERTIES = CACHED_LABEL_STYLE_PROPERTIES;\nexports.extendShape = extendShape;\nexports.extendPath = extendPath;\nexports.registerShape = registerShape;\nexports.getShapeClass = getShapeClass;\nexports.makePath = makePath;\nexports.makeImage = makeImage;\nexports.mergePath = mergePath;\nexports.resizePath = resizePath;\nexports.subPixelOptimizeLine = subPixelOptimizeLine;\nexports.subPixelOptimizeRect = subPixelOptimizeRect;\nexports.subPixelOptimize = subPixelOptimize;\nexports.setElementHoverStyle = setElementHoverStyle;\nexports.setHoverStyle = setHoverStyle;\nexports.setAsHighDownDispatcher = setAsHighDownDispatcher;\nexports.isHighDownDispatcher = isHighDownDispatcher;\nexports.getHighlightDigit = getHighlightDigit;\nexports.setLabelStyle = setLabelStyle;\nexports.modifyLabelStyle = modifyLabelStyle;\nexports.setTextStyle = setTextStyle;\nexports.setText = setText;\nexports.getFont = getFont;\nexports.updateProps = updateProps;\nexports.initProps = initProps;\nexports.getTransform = getTransform;\nexports.applyTransform = applyTransform;\nexports.transformDirection = transformDirection;\nexports.groupTransition = groupTransition;\nexports.clipPointsByRect = clipPointsByRect;\nexports.clipRectByRect = clipRectByRect;\nexports.createIcon = createIcon;\nexports.linePolygonIntersect = linePolygonIntersect;\nexports.lineLineIntersect = lineLineIntersect;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n\nvar _format = require(\"../../util/format\");\n\nvar getTooltipMarker = _format.getTooltipMarker;\nvar formatTpl = _format.formatTpl;\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar DIMENSION_LABEL_REG = /\\{@(.+?)\\}/g; // PENDING A little ugly\n\nvar _default = {\n  /**\n   * Get params for formatter\n   * @param {number} dataIndex\n   * @param {string} [dataType]\n   * @return {Object}\n   */\n  getDataParams: function getDataParams(dataIndex, dataType) {\n    var data = this.getData(dataType);\n    var rawValue = this.getRawValue(dataIndex, dataType);\n    var rawDataIndex = data.getRawIndex(dataIndex);\n    var name = data.getName(dataIndex);\n    var itemOpt = data.getRawDataItem(dataIndex);\n    var color = data.getItemVisual(dataIndex, 'color');\n    var borderColor = data.getItemVisual(dataIndex, 'borderColor');\n    var tooltipModel = this.ecModel.getComponent('tooltip');\n    var renderModeOption = tooltipModel && tooltipModel.get('renderMode');\n    var renderMode = getTooltipRenderMode(renderModeOption);\n    var mainType = this.mainType;\n    var isSeries = mainType === 'series';\n    var userOutput = data.userOutput;\n    return {\n      componentType: mainType,\n      componentSubType: this.subType,\n      componentIndex: this.componentIndex,\n      seriesType: isSeries ? this.subType : null,\n      seriesIndex: this.seriesIndex,\n      seriesId: isSeries ? this.id : null,\n      seriesName: isSeries ? this.name : null,\n      name: name,\n      dataIndex: rawDataIndex,\n      data: itemOpt,\n      dataType: dataType,\n      value: rawValue,\n      color: color,\n      borderColor: borderColor,\n      dimensionNames: userOutput ? userOutput.dimensionNames : null,\n      encode: userOutput ? userOutput.encode : null,\n      marker: getTooltipMarker({\n        color: color,\n        renderMode: renderMode\n      }),\n      // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n      $vars: ['seriesName', 'name', 'value']\n    };\n  },\n\n  /**\n   * Format label\n   * @param {number} dataIndex\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @param {string} [dataType]\n   * @param {number} [dimIndex] Only used in some chart that\n   *        use formatter in different dimensions, like radar.\n   * @param {string} [labelProp='label']\n   * @return {string} If not formatter, return null/undefined\n   */\n  getFormattedLabel: function getFormattedLabel(dataIndex, status, dataType, dimIndex, labelProp) {\n    status = status || 'normal';\n    var data = this.getData(dataType);\n    var itemModel = data.getItemModel(dataIndex);\n    var params = this.getDataParams(dataIndex, dataType);\n\n    if (dimIndex != null && params.value instanceof Array) {\n      params.value = params.value[dimIndex];\n    }\n\n    var formatter = itemModel.get(status === 'normal' ? [labelProp || 'label', 'formatter'] : [status, labelProp || 'label', 'formatter']);\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      params.dimensionIndex = dimIndex;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      var str = formatTpl(formatter, params); // Support 'aaa{@[3]}bbb{@product}ccc'.\n      // Do not support '}' in dim name util have to.\n\n      return str.replace(DIMENSION_LABEL_REG, function (origin, dim) {\n        var len = dim.length;\n\n        if (dim.charAt(0) === '[' && dim.charAt(len - 1) === ']') {\n          dim = +dim.slice(1, len - 1); // Also: '[]' => 0\n        }\n\n        return retrieveRawValue(data, dataIndex, dim);\n      });\n    }\n  },\n\n  /**\n   * Get raw value in option\n   * @param {number} idx\n   * @param {string} [dataType]\n   * @return {Array|number|string}\n   */\n  getRawValue: function getRawValue(idx, dataType) {\n    return retrieveRawValue(this.getData(dataType), idx);\n  },\n\n  /**\n   * Should be implemented.\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @return {string} tooltip string\n   */\n  formatTooltip: function formatTooltip() {// Empty function\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\n\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function reset(s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The method \"quantile\" was copied from \"d3.js\".\n* (See more details in the comment of the method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n\nvar RADIAN_EPSILON = 1e-4;\n\nfunction _trim(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n/**\n * Linear mapping a value from domain to range\n * @memberOf module:echarts/util/number\n * @param  {(number|Array.<number>)} val\n * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n * @param  {boolean} clamp\n * @return {(number|Array.<number>}\n */\n\n\nfunction linearMap(val, domain, range, clamp) {\n  var subDomain = domain[1] - domain[0];\n  var subRange = range[1] - range[0];\n\n  if (subDomain === 0) {\n    return subRange === 0 ? range[0] : (range[0] + range[1]) / 2;\n  } // Avoid accuracy problem in edge, such as\n  // 146.39 - 62.83 === 83.55999999999999.\n  // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n  // It is a little verbose for efficiency considering this method\n  // is a hotspot.\n\n\n  if (clamp) {\n    if (subDomain > 0) {\n      if (val <= domain[0]) {\n        return range[0];\n      } else if (val >= domain[1]) {\n        return range[1];\n      }\n    } else {\n      if (val >= domain[0]) {\n        return range[0];\n      } else if (val <= domain[1]) {\n        return range[1];\n      }\n    }\n  } else {\n    if (val === domain[0]) {\n      return range[0];\n    }\n\n    if (val === domain[1]) {\n      return range[1];\n    }\n  }\n\n  return (val - domain[0]) / subDomain * subRange + range[0];\n}\n/**\n * Convert a percent string to absolute number.\n * Returns NaN if percent is not a valid string or number\n * @memberOf module:echarts/util/number\n * @param {string|number} percent\n * @param {number} all\n * @return {number}\n */\n\n\nfunction parsePercent(percent, all) {\n  switch (percent) {\n    case 'center':\n    case 'middle':\n      percent = '50%';\n      break;\n\n    case 'left':\n    case 'top':\n      percent = '0%';\n      break;\n\n    case 'right':\n    case 'bottom':\n      percent = '100%';\n      break;\n  }\n\n  if (typeof percent === 'string') {\n    if (_trim(percent).match(/%$/)) {\n      return parseFloat(percent) / 100 * all;\n    }\n\n    return parseFloat(percent);\n  }\n\n  return percent == null ? NaN : +percent;\n}\n/**\n * (1) Fix rounding error of float numbers.\n * (2) Support return string to avoid scientific notation like '3.5e-7'.\n *\n * @param {number} x\n * @param {number} [precision]\n * @param {boolean} [returnStr]\n * @return {number|string}\n */\n\n\nfunction round(x, precision, returnStr) {\n  if (precision == null) {\n    precision = 10;\n  } // Avoid range error\n\n\n  precision = Math.min(Math.max(0, precision), 20);\n  x = (+x).toFixed(precision);\n  return returnStr ? x : +x;\n}\n/**\n * asc sort arr.\n * The input arr will be modified.\n *\n * @param {Array} arr\n * @return {Array} The input arr.\n */\n\n\nfunction asc(arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  return arr;\n}\n/**\n * Get precision\n * @param {number} val\n */\n\n\nfunction getPrecision(val) {\n  val = +val;\n\n  if (isNaN(val)) {\n    return 0;\n  } // It is much faster than methods converting number to string as follows\n  //      var tmp = val.toString();\n  //      return tmp.length - 1 - tmp.indexOf('.');\n  // especially when precision is low\n\n\n  var e = 1;\n  var count = 0;\n\n  while (Math.round(val * e) / e !== val) {\n    e *= 10;\n    count++;\n  }\n\n  return count;\n}\n/**\n * @param {string|number} val\n * @return {number}\n */\n\n\nfunction getPrecisionSafe(val) {\n  var str = val.toString(); // Consider scientific notation: '3.4e-12' '3.4e+12'\n\n  var eIndex = str.indexOf('e');\n\n  if (eIndex > 0) {\n    var precision = +str.slice(eIndex + 1);\n    return precision < 0 ? -precision : 0;\n  } else {\n    var dotIndex = str.indexOf('.');\n    return dotIndex < 0 ? 0 : str.length - 1 - dotIndex;\n  }\n}\n/**\n * Minimal dicernible data precisioin according to a single pixel.\n *\n * @param {Array.<number>} dataExtent\n * @param {Array.<number>} pixelExtent\n * @return {number} precision\n */\n\n\nfunction getPixelPrecision(dataExtent, pixelExtent) {\n  var log = Math.log;\n  var LN10 = Math.LN10;\n  var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n  var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10); // toFixed() digits argument must be between 0 and 20.\n\n  var precision = Math.min(Math.max(-dataQuantity + sizeQuantity, 0), 20);\n  return !isFinite(precision) ? 20 : precision;\n}\n/**\n * Get a data of given precision, assuring the sum of percentages\n * in valueList is 1.\n * The largest remainer method is used.\n * https://en.wikipedia.org/wiki/Largest_remainder_method\n *\n * @param {Array.<number>} valueList a list of all data\n * @param {number} idx index of the data to be processed in valueList\n * @param {number} precision integer number showing digits of precision\n * @return {number} percent ranging from 0 to 100\n */\n\n\nfunction getPercentWithPrecision(valueList, idx, precision) {\n  if (!valueList[idx]) {\n    return 0;\n  }\n\n  var sum = zrUtil.reduce(valueList, function (acc, val) {\n    return acc + (isNaN(val) ? 0 : val);\n  }, 0);\n\n  if (sum === 0) {\n    return 0;\n  }\n\n  var digits = Math.pow(10, precision);\n  var votesPerQuota = zrUtil.map(valueList, function (val) {\n    return (isNaN(val) ? 0 : val) / sum * digits * 100;\n  });\n  var targetSeats = digits * 100;\n  var seats = zrUtil.map(votesPerQuota, function (votes) {\n    // Assign automatic seats.\n    return Math.floor(votes);\n  });\n  var currentSum = zrUtil.reduce(seats, function (acc, val) {\n    return acc + val;\n  }, 0);\n  var remainder = zrUtil.map(votesPerQuota, function (votes, idx) {\n    return votes - seats[idx];\n  }); // Has remainding votes.\n\n  while (currentSum < targetSeats) {\n    // Find next largest remainder.\n    var max = Number.NEGATIVE_INFINITY;\n    var maxId = null;\n\n    for (var i = 0, len = remainder.length; i < len; ++i) {\n      if (remainder[i] > max) {\n        max = remainder[i];\n        maxId = i;\n      }\n    } // Add a vote to max remainder.\n\n\n    ++seats[maxId];\n    remainder[maxId] = 0;\n    ++currentSum;\n  }\n\n  return seats[idx] / digits;\n} // Number.MAX_SAFE_INTEGER, ie do not support.\n\n\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * To 0 - 2 * PI, considering negative radian.\n * @param {number} radian\n * @return {number}\n */\n\nfunction remRadian(radian) {\n  var pi2 = Math.PI * 2;\n  return (radian % pi2 + pi2) % pi2;\n}\n/**\n * @param {type} radian\n * @return {boolean}\n */\n\n\nfunction isRadianAroundZero(val) {\n  return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n}\n/* eslint-disable */\n\n\nvar TIME_REG = /^(?:(\\d{4})(?:[-\\/](\\d{1,2})(?:[-\\/](\\d{1,2})(?:[T ](\\d{1,2})(?::(\\d\\d)(?::(\\d\\d)(?:[.,](\\d+))?)?)?(Z|[\\+\\-]\\d\\d:?\\d\\d)?)?)?)?)?$/; // jshint ignore:line\n\n/* eslint-enable */\n\n/**\n * @param {string|Date|number} value These values can be accepted:\n *   + An instance of Date, represent a time in its own time zone.\n *   + Or string in a subset of ISO 8601, only including:\n *     + only year, month, date: '2012-03', '2012-03-01', '2012-03-01 05', '2012-03-01 05:06',\n *     + separated with T or space: '2012-03-01T12:22:33.123', '2012-03-01 12:22:33.123',\n *     + time zone: '2012-03-01T12:22:33Z', '2012-03-01T12:22:33+8000', '2012-03-01T12:22:33-05:00',\n *     all of which will be treated as local time if time zone is not specified\n *     (see <https://momentjs.com/>).\n *   + Or other string format, including (all of which will be treated as loacal time):\n *     '2012', '2012-3-1', '2012/3/1', '2012/03/01',\n *     '2009/6/12 2:00', '2009/6/12 2:05:08', '2009/6/12 2:05:08.123'\n *   + a timestamp, which represent a time in UTC.\n * @return {Date} date\n */\n\nfunction parseDate(value) {\n  if (value instanceof Date) {\n    return value;\n  } else if (typeof value === 'string') {\n    // Different browsers parse date in different way, so we parse it manually.\n    // Some other issues:\n    // new Date('1970-01-01') is UTC,\n    // new Date('1970/01/01') and new Date('1970-1-01') is local.\n    // See issue #3623\n    var match = TIME_REG.exec(value);\n\n    if (!match) {\n      // return Invalid Date.\n      return new Date(NaN);\n    } // Use local time when no timezone offset specifed.\n\n\n    if (!match[8]) {\n      // match[n] can only be string or undefined.\n      // But take care of '12' + 1 => '121'.\n      return new Date(+match[1], +(match[2] || 1) - 1, +match[3] || 1, +match[4] || 0, +(match[5] || 0), +match[6] || 0, +match[7] || 0);\n    } // Timezoneoffset of Javascript Date has considered DST (Daylight Saving Time,\n    // https://tc39.github.io/ecma262/#sec-daylight-saving-time-adjustment).\n    // For example, system timezone is set as \"Time Zone: America/Toronto\",\n    // then these code will get different result:\n    // `new Date(1478411999999).getTimezoneOffset();  // get 240`\n    // `new Date(1478412000000).getTimezoneOffset();  // get 300`\n    // So we should not use `new Date`, but use `Date.UTC`.\n    else {\n        var hour = +match[4] || 0;\n\n        if (match[8].toUpperCase() !== 'Z') {\n          hour -= match[8].slice(0, 3);\n        }\n\n        return new Date(Date.UTC(+match[1], +(match[2] || 1) - 1, +match[3] || 1, hour, +(match[5] || 0), +match[6] || 0, +match[7] || 0));\n      }\n  } else if (value == null) {\n    return new Date(NaN);\n  }\n\n  return new Date(Math.round(value));\n}\n/**\n * Quantity of a number. e.g. 0.1, 1, 10, 100\n *\n * @param  {number} val\n * @return {number}\n */\n\n\nfunction quantity(val) {\n  return Math.pow(10, quantityExponent(val));\n}\n/**\n * Exponent of the quantity of a number\n * e.g., 1234 equals to 1.234*10^3, so quantityExponent(1234) is 3\n *\n * @param  {number} val non-negative value\n * @return {number}\n */\n\n\nfunction quantityExponent(val) {\n  if (val === 0) {\n    return 0;\n  }\n\n  var exp = Math.floor(Math.log(val) / Math.LN10);\n  /**\n   * exp is expected to be the rounded-down result of the base-10 log of val.\n   * But due to the precision loss with Math.log(val), we need to restore it\n   * using 10^exp to make sure we can get val back from exp. #11249\n   */\n\n  if (val / Math.pow(10, exp) >= 10) {\n    exp++;\n  }\n\n  return exp;\n}\n/**\n * find a “nice” number approximately equal to x. Round the number if round = true,\n * take ceiling if round = false. The primary observation is that the “nicest”\n * numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n *\n * See \"Nice Numbers for Graph Labels\" of Graphic Gems.\n *\n * @param  {number} val Non-negative value.\n * @param  {boolean} round\n * @return {number}\n */\n\n\nfunction nice(val, round) {\n  var exponent = quantityExponent(val);\n  var exp10 = Math.pow(10, exponent);\n  var f = val / exp10; // 1 <= f < 10\n\n  var nf;\n\n  if (round) {\n    if (f < 1.5) {\n      nf = 1;\n    } else if (f < 2.5) {\n      nf = 2;\n    } else if (f < 4) {\n      nf = 3;\n    } else if (f < 7) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  } else {\n    if (f < 1) {\n      nf = 1;\n    } else if (f < 2) {\n      nf = 2;\n    } else if (f < 3) {\n      nf = 3;\n    } else if (f < 5) {\n      nf = 5;\n    } else {\n      nf = 10;\n    }\n  }\n\n  val = nf * exp10; // Fix 3 * 0.1 === 0.30000000000000004 issue (see IEEE 754).\n  // 20 is the uppper bound of toFixed.\n\n  return exponent >= -20 ? +val.toFixed(exponent < 0 ? -exponent : 0) : val;\n}\n/**\n * This code was copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/arrays/quantile.js>.\n * See the license statement at the head of this file.\n * @param {Array.<number>} ascArr\n */\n\n\nfunction quantile(ascArr, p) {\n  var H = (ascArr.length - 1) * p + 1;\n  var h = Math.floor(H);\n  var v = +ascArr[h - 1];\n  var e = H - h;\n  return e ? v + e * (ascArr[h] - v) : v;\n}\n/**\n * Order intervals asc, and split them when overlap.\n * expect(numberUtil.reformIntervals([\n *     {interval: [18, 62], close: [1, 1]},\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [1, 1]},\n *     {interval: [62, 150], close: [1, 1]},\n *     {interval: [106, 150], close: [1, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ])).toEqual([\n *     {interval: [-Infinity, -70], close: [0, 0]},\n *     {interval: [-70, -26], close: [1, 1]},\n *     {interval: [-26, 18], close: [0, 1]},\n *     {interval: [18, 62], close: [0, 1]},\n *     {interval: [62, 150], close: [0, 1]},\n *     {interval: [150, Infinity], close: [0, 0]}\n * ]);\n * @param {Array.<Object>} list, where `close` mean open or close\n *        of the interval, and Infinity can be used.\n * @return {Array.<Object>} The origin list, which has been reformed.\n */\n\n\nfunction reformIntervals(list) {\n  list.sort(function (a, b) {\n    return littleThan(a, b, 0) ? -1 : 1;\n  });\n  var curr = -Infinity;\n  var currClose = 1;\n\n  for (var i = 0; i < list.length;) {\n    var interval = list[i].interval;\n    var close = list[i].close;\n\n    for (var lg = 0; lg < 2; lg++) {\n      if (interval[lg] <= curr) {\n        interval[lg] = curr;\n        close[lg] = !lg ? 1 - currClose : 1;\n      }\n\n      curr = interval[lg];\n      currClose = close[lg];\n    }\n\n    if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n      list.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n\n  return list;\n\n  function littleThan(a, b, lg) {\n    return a.interval[lg] < b.interval[lg] || a.interval[lg] === b.interval[lg] && (a.close[lg] - b.close[lg] === (!lg ? 1 : -1) || !lg && littleThan(a, b, 1));\n  }\n}\n/**\n * parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n * ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n * subtraction forces infinities to NaN\n *\n * @param {*} v\n * @return {boolean}\n */\n\n\nfunction isNumeric(v) {\n  return v - parseFloat(v) >= 0;\n}\n\nexports.linearMap = linearMap;\nexports.parsePercent = parsePercent;\nexports.round = round;\nexports.asc = asc;\nexports.getPrecision = getPrecision;\nexports.getPrecisionSafe = getPrecisionSafe;\nexports.getPixelPrecision = getPixelPrecision;\nexports.getPercentWithPrecision = getPercentWithPrecision;\nexports.MAX_SAFE_INTEGER = MAX_SAFE_INTEGER;\nexports.remRadian = remRadian;\nexports.isRadianAroundZero = isRadianAroundZero;\nexports.parseDate = parseDate;\nexports.quantity = quantity;\nexports.quantityExponent = quantityExponent;\nexports.nice = nice;\nexports.quantile = quantile;\nexports.reformIntervals = reformIntervals;\nexports.isNumeric = isNumeric;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar isArray = zrUtil.isArray;\n/**\n * Make the name displayable. But we should\n * make sure it is not duplicated with user\n * specified name, so use '\\0';\n */\n\nvar DUMMY_COMPONENT_NAME_PREFIX = 'series\\0';\n/**\n * If value is not array, then translate it to array.\n * @param  {*} value\n * @return {Array} [value] or value\n */\n\nfunction normalizeToArray(value) {\n  return value instanceof Array ? value : value == null ? [] : [value];\n}\n/**\n * Sync default option between normal and emphasis like `position` and `show`\n * In case some one will write code like\n *     label: {\n *          show: false,\n *          position: 'outside',\n *          fontSize: 18\n *     },\n *     emphasis: {\n *          label: { show: true }\n *     }\n * @param {Object} opt\n * @param {string} key\n * @param {Array.<string>} subOpts\n */\n\n\nfunction defaultEmphasis(opt, key, subOpts) {\n  // Caution: performance sensitive.\n  if (opt) {\n    opt[key] = opt[key] || {};\n    opt.emphasis = opt.emphasis || {};\n    opt.emphasis[key] = opt.emphasis[key] || {}; // Default emphasis option from normal\n\n    for (var i = 0, len = subOpts.length; i < len; i++) {\n      var subOptName = subOpts[i];\n\n      if (!opt.emphasis[key].hasOwnProperty(subOptName) && opt[key].hasOwnProperty(subOptName)) {\n        opt.emphasis[key][subOptName] = opt[key][subOptName];\n      }\n    }\n  }\n}\n\nvar TEXT_STYLE_OPTIONS = ['fontStyle', 'fontWeight', 'fontSize', 'fontFamily', 'rich', 'tag', 'color', 'textBorderColor', 'textBorderWidth', 'width', 'height', 'lineHeight', 'align', 'verticalAlign', 'baseline', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'textShadowColor', 'textShadowBlur', 'textShadowOffsetX', 'textShadowOffsetY', 'backgroundColor', 'borderColor', 'borderWidth', 'borderRadius', 'padding']; // modelUtil.LABEL_OPTIONS = modelUtil.TEXT_STYLE_OPTIONS.concat([\n//     'position', 'offset', 'rotate', 'origin', 'show', 'distance', 'formatter',\n//     'fontStyle', 'fontWeight', 'fontSize', 'fontFamily',\n//     // FIXME: deprecated, check and remove it.\n//     'textStyle'\n// ]);\n\n/**\n * The method do not ensure performance.\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method retieves value from data.\n * @param {string|number|Date|Array|Object} dataItem\n * @return {number|string|Date|Array.<number|string|Date>}\n */\n\nfunction getDataItemValue(dataItem) {\n  return isObject(dataItem) && !isArray(dataItem) && !(dataItem instanceof Date) ? dataItem.value : dataItem;\n}\n/**\n * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n * This helper method determine if dataItem has extra option besides value\n * @param {string|number|Date|Array|Object} dataItem\n */\n\n\nfunction isDataItemOption(dataItem) {\n  return isObject(dataItem) && !(dataItem instanceof Array); // // markLine data can be array\n  // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n}\n/**\n * Mapping to exists for merge.\n *\n * @public\n * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n * @param {Object|Array.<Object>} newCptOptions\n * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          index of which is the same as exists.\n */\n\n\nfunction mappingToExists(exists, newCptOptions) {\n  // Mapping by the order by original option (but not order of\n  // new option) in merge mode. Because we should ensure\n  // some specified index (like xAxisIndex) is consistent with\n  // original option, which is easy to understand, espatially in\n  // media query. And in most case, merge option is used to\n  // update partial option but not be expected to change order.\n  newCptOptions = (newCptOptions || []).slice();\n  var result = zrUtil.map(exists || [], function (obj, index) {\n    return {\n      exist: obj\n    };\n  }); // Mapping by id or name if specified.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    } // id has highest priority.\n\n\n    for (var i = 0; i < result.length; i++) {\n      if (!result[i].option // Consider name: two map to one.\n      && cptOption.id != null && result[i].exist.id === cptOption.id + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n\n    for (var i = 0; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Consider name: two map to one.\n      // Can not match when both ids exist but different.\n      && (exist.id == null || cptOption.id == null) && cptOption.name != null && !isIdInner(cptOption) && !isIdInner(exist) && exist.name === cptOption.name + '') {\n        result[i].option = cptOption;\n        newCptOptions[index] = null;\n        return;\n      }\n    }\n  }); // Otherwise mapping by index.\n\n  each(newCptOptions, function (cptOption, index) {\n    if (!isObject(cptOption)) {\n      return;\n    }\n\n    var i = 0;\n\n    for (; i < result.length; i++) {\n      var exist = result[i].exist;\n\n      if (!result[i].option // Existing model that already has id should be able to\n      // mapped to (because after mapping performed model may\n      // be assigned with a id, whish should not affect next\n      // mapping), except those has inner id.\n      && !isIdInner(exist) // Caution:\n      // Do not overwrite id. But name can be overwritten,\n      // because axis use name as 'show label text'.\n      // 'exist' always has id and name and we dont\n      // need to check it.\n      && cptOption.id == null) {\n        result[i].option = cptOption;\n        break;\n      }\n    }\n\n    if (i >= result.length) {\n      result.push({\n        option: cptOption\n      });\n    }\n  });\n  return result;\n}\n/**\n * Make id and name for mapping result (result of mappingToExists)\n * into `keyInfo` field.\n *\n * @public\n * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n *                          which order is the same as exists.\n * @return {Array.<Object>} The input.\n */\n\n\nfunction makeIdAndName(mapResult) {\n  // We use this id to hash component models and view instances\n  // in echarts. id can be specified by user, or auto generated.\n  // The id generation rule ensures new view instance are able\n  // to mapped to old instance when setOption are called in\n  // no-merge mode. So we generate model id by name and plus\n  // type in view id.\n  // name can be duplicated among components, which is convenient\n  // to specify multi components (like series) by one name.\n  // Ensure that each id is distinct.\n  var idMap = zrUtil.createHashMap();\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    existCpt && idMap.set(existCpt.id, item);\n  });\n  each(mapResult, function (item, index) {\n    var opt = item.option;\n    zrUtil.assert(!opt || opt.id == null || !idMap.get(opt.id) || idMap.get(opt.id) === item, 'id duplicates: ' + (opt && opt.id));\n    opt && opt.id != null && idMap.set(opt.id, item);\n    !item.keyInfo && (item.keyInfo = {});\n  }); // Make name and id.\n\n  each(mapResult, function (item, index) {\n    var existCpt = item.exist;\n    var opt = item.option;\n    var keyInfo = item.keyInfo;\n\n    if (!isObject(opt)) {\n      return;\n    } // name can be overwitten. Consider case: axis.name = '20km'.\n    // But id generated by name will not be changed, which affect\n    // only in that case: setOption with 'not merge mode' and view\n    // instance will be recreated, which can be accepted.\n\n\n    keyInfo.name = opt.name != null ? opt.name + '' : existCpt ? existCpt.name // Avoid diffferent series has the same name,\n    // because name may be used like in color pallet.\n    : DUMMY_COMPONENT_NAME_PREFIX + index;\n\n    if (existCpt) {\n      keyInfo.id = existCpt.id;\n    } else if (opt.id != null) {\n      keyInfo.id = opt.id + '';\n    } else {\n      // Consider this situatoin:\n      //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n      //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n      // Series with the same name between optionA and optionB\n      // should be mapped.\n      var idNum = 0;\n\n      do {\n        keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n      } while (idMap.get(keyInfo.id));\n    }\n\n    idMap.set(keyInfo.id, item);\n  });\n}\n\nfunction isNameSpecified(componentModel) {\n  var name = componentModel.name; // Is specified when `indexOf` get -1 or > 0.\n\n  return !!(name && name.indexOf(DUMMY_COMPONENT_NAME_PREFIX));\n}\n/**\n * @public\n * @param {Object} cptOption\n * @return {boolean}\n */\n\n\nfunction isIdInner(cptOption) {\n  return isObject(cptOption) && cptOption.id && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n}\n/**\n * A helper for removing duplicate items between batchA and batchB,\n * and in themselves, and categorize by series.\n *\n * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n */\n\n\nfunction compressBatches(batchA, batchB) {\n  var mapA = {};\n  var mapB = {};\n  makeMap(batchA || [], mapA);\n  makeMap(batchB || [], mapB, mapA);\n  return [mapToArray(mapA), mapToArray(mapB)];\n\n  function makeMap(sourceBatch, map, otherMap) {\n    for (var i = 0, len = sourceBatch.length; i < len; i++) {\n      var seriesId = sourceBatch[i].seriesId;\n      var dataIndices = normalizeToArray(sourceBatch[i].dataIndex);\n      var otherDataIndices = otherMap && otherMap[seriesId];\n\n      for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n        var dataIndex = dataIndices[j];\n\n        if (otherDataIndices && otherDataIndices[dataIndex]) {\n          otherDataIndices[dataIndex] = null;\n        } else {\n          (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n        }\n      }\n    }\n  }\n\n  function mapToArray(map, isData) {\n    var result = [];\n\n    for (var i in map) {\n      if (map.hasOwnProperty(i) && map[i] != null) {\n        if (isData) {\n          result.push(+i);\n        } else {\n          var dataIndices = mapToArray(map[i], true);\n          dataIndices.length && result.push({\n            seriesId: i,\n            dataIndex: dataIndices\n          });\n        }\n      }\n    }\n\n    return result;\n  }\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n *                         each of which can be Array or primary type.\n * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n */\n\n\nfunction queryDataIndex(data, payload) {\n  if (payload.dataIndexInside != null) {\n    return payload.dataIndexInside;\n  } else if (payload.dataIndex != null) {\n    return zrUtil.isArray(payload.dataIndex) ? zrUtil.map(payload.dataIndex, function (value) {\n      return data.indexOfRawIndex(value);\n    }) : data.indexOfRawIndex(payload.dataIndex);\n  } else if (payload.name != null) {\n    return zrUtil.isArray(payload.name) ? zrUtil.map(payload.name, function (value) {\n      return data.indexOfName(value);\n    }) : data.indexOfName(payload.name);\n  }\n}\n/**\n * Enable property storage to any host object.\n * Notice: Serialization is not supported.\n *\n * For example:\n * var inner = zrUitl.makeInner();\n *\n * function some1(hostObj) {\n *      inner(hostObj).someProperty = 1212;\n *      ...\n * }\n * function some2() {\n *      var fields = inner(this);\n *      fields.someProperty1 = 1212;\n *      fields.someProperty2 = 'xx';\n *      ...\n * }\n *\n * @return {Function}\n */\n\n\nfunction makeInner() {\n  // Consider different scope by es module import.\n  var key = '__\\0ec_inner_' + innerUniqueIndex++ + '_' + Math.random().toFixed(5);\n  return function (hostObj) {\n    return hostObj[key] || (hostObj[key] = {});\n  };\n}\n\nvar innerUniqueIndex = 0;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {string|Object} finder\n *        If string, e.g., 'geo', means {geoIndex: 0}.\n *        If Object, could contain some of these properties below:\n *        {\n *            seriesIndex, seriesId, seriesName,\n *            geoIndex, geoId, geoName,\n *            bmapIndex, bmapId, bmapName,\n *            xAxisIndex, xAxisId, xAxisName,\n *            yAxisIndex, yAxisId, yAxisName,\n *            gridIndex, gridId, gridName,\n *            ... (can be extended)\n *        }\n *        Each properties can be number|string|Array.<number>|Array.<string>\n *        For example, a finder could be\n *        {\n *            seriesIndex: 3,\n *            geoId: ['aa', 'cc'],\n *            gridName: ['xx', 'rr']\n *        }\n *        xxxIndex can be set as 'all' (means all xxx) or 'none' (means not specify)\n *        If nothing or null/undefined specified, return nothing.\n * @param {Object} [opt]\n * @param {string} [opt.defaultMainType]\n * @param {Array.<string>} [opt.includeMainTypes]\n * @return {Object} result like:\n *        {\n *            seriesModels: [seriesModel1, seriesModel2],\n *            seriesModel: seriesModel1, // The first model\n *            geoModels: [geoModel1, geoModel2],\n *            geoModel: geoModel1, // The first model\n *            ...\n *        }\n */\n\nfunction parseFinder(ecModel, finder, opt) {\n  if (zrUtil.isString(finder)) {\n    var obj = {};\n    obj[finder + 'Index'] = 0;\n    finder = obj;\n  }\n\n  var defaultMainType = opt && opt.defaultMainType;\n\n  if (defaultMainType && !has(finder, defaultMainType + 'Index') && !has(finder, defaultMainType + 'Id') && !has(finder, defaultMainType + 'Name')) {\n    finder[defaultMainType + 'Index'] = 0;\n  }\n\n  var result = {};\n  each(finder, function (value, key) {\n    var value = finder[key]; // Exclude 'dataIndex' and other illgal keys.\n\n    if (key === 'dataIndex' || key === 'dataIndexInside') {\n      result[key] = value;\n      return;\n    }\n\n    var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n    var mainType = parsedKey[1];\n    var queryType = (parsedKey[2] || '').toLowerCase();\n\n    if (!mainType || !queryType || value == null || queryType === 'index' && value === 'none' || opt && opt.includeMainTypes && zrUtil.indexOf(opt.includeMainTypes, mainType) < 0) {\n      return;\n    }\n\n    var queryParam = {\n      mainType: mainType\n    };\n\n    if (queryType !== 'index' || value !== 'all') {\n      queryParam[queryType] = value;\n    }\n\n    var models = ecModel.queryComponents(queryParam);\n    result[mainType + 'Models'] = models;\n    result[mainType + 'Model'] = models[0];\n  });\n  return result;\n}\n\nfunction has(obj, prop) {\n  return obj && obj.hasOwnProperty(prop);\n}\n\nfunction setAttribute(dom, key, value) {\n  dom.setAttribute ? dom.setAttribute(key, value) : dom[key] = value;\n}\n\nfunction getAttribute(dom, key) {\n  return dom.getAttribute ? dom.getAttribute(key) : dom[key];\n}\n\nfunction getTooltipRenderMode(renderModeOption) {\n  if (renderModeOption === 'auto') {\n    // Using html when `document` exists, use richText otherwise\n    return env.domSupported ? 'html' : 'richText';\n  } else {\n    return renderModeOption || 'html';\n  }\n}\n/**\n * Group a list by key.\n *\n * @param {Array} array\n * @param {Function} getKey\n *        param {*} Array item\n *        return {string} key\n * @return {Object} Result\n *        {Array}: keys,\n *        {module:zrender/core/util/HashMap} buckets: {key -> Array}\n */\n\n\nfunction groupData(array, getKey) {\n  var buckets = zrUtil.createHashMap();\n  var keys = [];\n  zrUtil.each(array, function (item) {\n    var key = getKey(item);\n    (buckets.get(key) || (keys.push(key), buckets.set(key, []))).push(item);\n  });\n  return {\n    keys: keys,\n    buckets: buckets\n  };\n}\n\nexports.normalizeToArray = normalizeToArray;\nexports.defaultEmphasis = defaultEmphasis;\nexports.TEXT_STYLE_OPTIONS = TEXT_STYLE_OPTIONS;\nexports.getDataItemValue = getDataItemValue;\nexports.isDataItemOption = isDataItemOption;\nexports.mappingToExists = mappingToExists;\nexports.makeIdAndName = makeIdAndName;\nexports.isNameSpecified = isNameSpecified;\nexports.isIdInner = isIdInner;\nexports.compressBatches = compressBatches;\nexports.queryDataIndex = queryDataIndex;\nexports.makeInner = makeInner;\nexports.parseFinder = parseFinder;\nexports.setAttribute = setAttribute;\nexports.getAttribute = getAttribute;\nexports.getTooltipRenderMode = getTooltipRenderMode;\nexports.groupData = groupData;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar filter = _util.filter;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar indexOf = _util.indexOf;\nvar isObject = _util.isObject;\nvar isString = _util.isString;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\nvar clone = _util.clone;\nvar merge = _util.merge;\nvar extend = _util.extend;\nvar mixin = _util.mixin;\n\nvar modelUtil = require(\"../util/model\");\n\nvar Model = require(\"./Model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar globalDefault = require(\"./globalDefault\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar resetSourceDefaulter = _sourceHelper.resetSourceDefaulter;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n/**\n * Caution: If the mechanism should be changed some day, these cases\n * should be considered:\n *\n * (1) In `merge option` mode, if using the same option to call `setOption`\n * many times, the result should be the same (try our best to ensure that).\n * (2) In `merge option` mode, if a component has no id/name specified, it\n * will be merged by index, and the result sequence of the components is\n * consistent to the original sequence.\n * (3) `reset` feature (in toolbox). Find detailed info in comments about\n * `mergeOption` in module:echarts/model/OptionManager.\n */\n\nvar OPTION_INNER_KEY = '\\0_ec_inner';\n/**\n * @alias module:echarts/model/Global\n *\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {Object} theme\n */\n\nvar GlobalModel = Model.extend({\n  init: function init(option, parentModel, theme, optionManager) {\n    theme = theme || {};\n    this.option = null; // Mark as not initialized.\n\n    /**\n     * @type {module:echarts/model/Model}\n     * @private\n     */\n\n    this._theme = new Model(theme);\n    /**\n     * @type {module:echarts/model/OptionManager}\n     */\n\n    this._optionManager = optionManager;\n  },\n  setOption: function setOption(option, optionPreprocessorFuncs) {\n    assert(!(OPTION_INNER_KEY in option), 'please use chart.getOption()');\n\n    this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n    this.resetOption(null);\n  },\n\n  /**\n   * @param {string} type null/undefined: reset all.\n   *                      'recreate': force recreate all.\n   *                      'timeline': only reset timeline option\n   *                      'media': only reset media query option\n   * @return {boolean} Whether option changed.\n   */\n  resetOption: function resetOption(type) {\n    var optionChanged = false;\n    var optionManager = this._optionManager;\n\n    if (!type || type === 'recreate') {\n      var baseOption = optionManager.mountOption(type === 'recreate');\n\n      if (!this.option || type === 'recreate') {\n        initBase.call(this, baseOption);\n      } else {\n        this.restoreData();\n        this.mergeOption(baseOption);\n      }\n\n      optionChanged = true;\n    }\n\n    if (type === 'timeline' || type === 'media') {\n      this.restoreData();\n    }\n\n    if (!type || type === 'recreate' || type === 'timeline') {\n      var timelineOption = optionManager.getTimelineOption(this);\n      timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n    }\n\n    if (!type || type === 'recreate' || type === 'media') {\n      var mediaOptions = optionManager.getMediaOption(this, this._api);\n\n      if (mediaOptions.length) {\n        each(mediaOptions, function (mediaOption) {\n          this.mergeOption(mediaOption, optionChanged = true);\n        }, this);\n      }\n    }\n\n    return optionChanged;\n  },\n\n  /**\n   * @protected\n   */\n  mergeOption: function mergeOption(newOption) {\n    var option = this.option;\n    var componentsMap = this._componentsMap;\n    var newCptTypes = [];\n    resetSourceDefaulter(this); // If no component class, merge directly.\n    // For example: color, animaiton options, etc.\n\n    each(newOption, function (componentOption, mainType) {\n      if (componentOption == null) {\n        return;\n      }\n\n      if (!ComponentModel.hasClass(mainType)) {\n        // globalSettingTask.dirty();\n        option[mainType] = option[mainType] == null ? clone(componentOption) : merge(option[mainType], componentOption, true);\n      } else if (mainType) {\n        newCptTypes.push(mainType);\n      }\n    });\n    ComponentModel.topologicalTravel(newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this);\n\n    function visitComponent(mainType, dependencies) {\n      var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n      var mapResult = modelUtil.mappingToExists(componentsMap.get(mainType), newCptOptionList);\n      modelUtil.makeIdAndName(mapResult); // Set mainType and complete subType.\n\n      each(mapResult, function (item, index) {\n        var opt = item.option;\n\n        if (isObject(opt)) {\n          item.keyInfo.mainType = mainType;\n          item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n        }\n      });\n      var dependentModels = getComponentsByTypes(componentsMap, dependencies);\n      option[mainType] = [];\n      componentsMap.set(mainType, []);\n      each(mapResult, function (resultItem, index) {\n        var componentModel = resultItem.exist;\n        var newCptOption = resultItem.option;\n        assert(isObject(newCptOption) || componentModel, 'Empty component definition'); // Consider where is no new option and should be merged using {},\n        // see removeEdgeAndAdd in topologicalTravel and\n        // ComponentModel.getAllClassMainTypes.\n\n        if (!newCptOption) {\n          componentModel.mergeOption({}, this);\n          componentModel.optionUpdated({}, false);\n        } else {\n          var ComponentModelClass = ComponentModel.getClass(mainType, resultItem.keyInfo.subType, true);\n\n          if (componentModel && componentModel.constructor === ComponentModelClass) {\n            componentModel.name = resultItem.keyInfo.name; // componentModel.settingTask && componentModel.settingTask.dirty();\n\n            componentModel.mergeOption(newCptOption, this);\n            componentModel.optionUpdated(newCptOption, false);\n          } else {\n            // PENDING Global as parent ?\n            var extraOpt = extend({\n              dependentModels: dependentModels,\n              componentIndex: index\n            }, resultItem.keyInfo);\n            componentModel = new ComponentModelClass(newCptOption, this, this, extraOpt);\n            extend(componentModel, extraOpt);\n            componentModel.init(newCptOption, this, this, extraOpt); // Call optionUpdated after init.\n            // newCptOption has been used as componentModel.option\n            // and may be merged with theme and default, so pass null\n            // to avoid confusion.\n\n            componentModel.optionUpdated(null, true);\n          }\n        }\n\n        componentsMap.get(mainType)[index] = componentModel;\n        option[mainType][index] = componentModel.option;\n      }, this); // Backup series for filtering.\n\n      if (mainType === 'series') {\n        createSeriesIndices(this, componentsMap.get('series'));\n      }\n    }\n\n    this._seriesIndicesMap = createHashMap(this._seriesIndices = this._seriesIndices || []);\n  },\n\n  /**\n   * Get option for output (cloned option and inner info removed)\n   * @public\n   * @return {Object}\n   */\n  getOption: function getOption() {\n    var option = clone(this.option);\n    each(option, function (opts, mainType) {\n      if (ComponentModel.hasClass(mainType)) {\n        var opts = modelUtil.normalizeToArray(opts);\n\n        for (var i = opts.length - 1; i >= 0; i--) {\n          // Remove options with inner id.\n          if (modelUtil.isIdInner(opts[i])) {\n            opts.splice(i, 1);\n          }\n        }\n\n        option[mainType] = opts;\n      }\n    });\n    delete option[OPTION_INNER_KEY];\n    return option;\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getTheme: function getTheme() {\n    return this._theme;\n  },\n\n  /**\n   * @param {string} mainType\n   * @param {number} [idx=0]\n   * @return {module:echarts/model/Component}\n   */\n  getComponent: function getComponent(mainType, idx) {\n    var list = this._componentsMap.get(mainType);\n\n    if (list) {\n      return list[idx || 0];\n    }\n  },\n\n  /**\n   * If none of index and id and name used, return all components with mainType.\n   * @param {Object} condition\n   * @param {string} condition.mainType\n   * @param {string} [condition.subType] If ignore, only query by mainType\n   * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n   * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  queryComponents: function queryComponents(condition) {\n    var mainType = condition.mainType;\n\n    if (!mainType) {\n      return [];\n    }\n\n    var index = condition.index;\n    var id = condition.id;\n    var name = condition.name;\n\n    var cpts = this._componentsMap.get(mainType);\n\n    if (!cpts || !cpts.length) {\n      return [];\n    }\n\n    var result;\n\n    if (index != null) {\n      if (!isArray(index)) {\n        index = [index];\n      }\n\n      result = filter(map(index, function (idx) {\n        return cpts[idx];\n      }), function (val) {\n        return !!val;\n      });\n    } else if (id != null) {\n      var isIdArray = isArray(id);\n      result = filter(cpts, function (cpt) {\n        return isIdArray && indexOf(id, cpt.id) >= 0 || !isIdArray && cpt.id === id;\n      });\n    } else if (name != null) {\n      var isNameArray = isArray(name);\n      result = filter(cpts, function (cpt) {\n        return isNameArray && indexOf(name, cpt.name) >= 0 || !isNameArray && cpt.name === name;\n      });\n    } else {\n      // Return all components with mainType\n      result = cpts.slice();\n    }\n\n    return filterBySubType(result, condition);\n  },\n\n  /**\n   * The interface is different from queryComponents,\n   * which is convenient for inner usage.\n   *\n   * @usage\n   * var result = findComponents(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n   * );\n   * var result = findComponents(\n   *     {mainType: 'series',\n   *     filter: function (model, index) {...}}\n   * );\n   * // result like [component0, componnet1, ...]\n   *\n   * @param {Object} condition\n   * @param {string} condition.mainType Mandatory.\n   * @param {string} [condition.subType] Optional.\n   * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n   *        where xxx is mainType.\n   *        If query attribute is null/undefined or has no index/id/name,\n   *        do not filtering by query conditions, which is convenient for\n   *        no-payload situations or when target of action is global.\n   * @param {Function} [condition.filter] parameter: component, return boolean.\n   * @return {Array.<module:echarts/model/Component>}\n   */\n  findComponents: function findComponents(condition) {\n    var query = condition.query;\n    var mainType = condition.mainType;\n    var queryCond = getQueryCond(query);\n    var result = queryCond ? this.queryComponents(queryCond) : this._componentsMap.get(mainType);\n    return doFilter(filterBySubType(result, condition));\n\n    function getQueryCond(q) {\n      var indexAttr = mainType + 'Index';\n      var idAttr = mainType + 'Id';\n      var nameAttr = mainType + 'Name';\n      return q && (q[indexAttr] != null || q[idAttr] != null || q[nameAttr] != null) ? {\n        mainType: mainType,\n        // subType will be filtered finally.\n        index: q[indexAttr],\n        id: q[idAttr],\n        name: q[nameAttr]\n      } : null;\n    }\n\n    function doFilter(res) {\n      return condition.filter ? filter(res, condition.filter) : res;\n    }\n  },\n\n  /**\n   * @usage\n   * eachComponent('legend', function (legendModel, index) {\n   *     ...\n   * });\n   * eachComponent(function (componentType, model, index) {\n   *     // componentType does not include subType\n   *     // (componentType is 'xxx' but not 'xxx.aa')\n   * });\n   * eachComponent(\n   *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n   *     function (model, index) {...}\n   * );\n   * eachComponent(\n   *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n   *     function (model, index) {...}\n   * );\n   *\n   * @param {string|Object=} mainType When mainType is object, the definition\n   *                                  is the same as the method 'findComponents'.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachComponent: function eachComponent(mainType, cb, context) {\n    var componentsMap = this._componentsMap;\n\n    if (typeof mainType === 'function') {\n      context = cb;\n      cb = mainType;\n      componentsMap.each(function (components, componentType) {\n        each(components, function (component, index) {\n          cb.call(context, componentType, component, index);\n        });\n      });\n    } else if (isString(mainType)) {\n      each(componentsMap.get(mainType), cb, context);\n    } else if (isObject(mainType)) {\n      var queryResult = this.findComponents(mainType);\n      each(queryResult, cb, context);\n    }\n  },\n\n  /**\n   * @param {string} name\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByName: function getSeriesByName(name) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.name === name;\n    });\n  },\n\n  /**\n   * @param {number} seriesIndex\n   * @return {module:echarts/model/Series}\n   */\n  getSeriesByIndex: function getSeriesByIndex(seriesIndex) {\n    return this._componentsMap.get('series')[seriesIndex];\n  },\n\n  /**\n   * Get series list before filtered by type.\n   * FIXME: rename to getRawSeriesByType?\n   *\n   * @param {string} subType\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeriesByType: function getSeriesByType(subType) {\n    var series = this._componentsMap.get('series');\n\n    return filter(series, function (oneSeries) {\n      return oneSeries.subType === subType;\n    });\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Series>}\n   */\n  getSeries: function getSeries() {\n    return this._componentsMap.get('series').slice();\n  },\n\n  /**\n   * @return {number}\n   */\n  getSeriesCount: function getSeriesCount() {\n    return this._componentsMap.get('series').length;\n  },\n\n  /**\n   * After filtering, series may be different\n   * frome raw series.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeries: function eachSeries(cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      cb.call(context, series, rawSeriesIndex);\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered.\n   *\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeries: function eachRawSeries(cb, context) {\n    each(this._componentsMap.get('series'), cb, context);\n  },\n\n  /**\n   * After filtering, series may be different.\n   * frome raw series.\n   *\n   * @param {string} subType.\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachSeriesByType: function eachSeriesByType(subType, cb, context) {\n    assertSeriesInitialized(this);\n    each(this._seriesIndices, function (rawSeriesIndex) {\n      var series = this._componentsMap.get('series')[rawSeriesIndex];\n\n      if (series.subType === subType) {\n        cb.call(context, series, rawSeriesIndex);\n      }\n    }, this);\n  },\n\n  /**\n   * Iterate raw series before filtered of given type.\n   *\n   * @parma {string} subType\n   * @param {Function} cb\n   * @param {*} context\n   */\n  eachRawSeriesByType: function eachRawSeriesByType(subType, cb, context) {\n    return each(this.getSeriesByType(subType), cb, context);\n  },\n\n  /**\n   * @param {module:echarts/model/Series} seriesModel\n   */\n  isSeriesFiltered: function isSeriesFiltered(seriesModel) {\n    assertSeriesInitialized(this);\n    return this._seriesIndicesMap.get(seriesModel.componentIndex) == null;\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getCurrentSeriesIndices: function getCurrentSeriesIndices() {\n    return (this._seriesIndices || []).slice();\n  },\n\n  /**\n   * @param {Function} cb\n   * @param {*} context\n   */\n  filterSeries: function filterSeries(cb, context) {\n    assertSeriesInitialized(this);\n    var filteredSeries = filter(this._componentsMap.get('series'), cb, context);\n    createSeriesIndices(this, filteredSeries);\n  },\n  restoreData: function restoreData(payload) {\n    var componentsMap = this._componentsMap;\n    createSeriesIndices(this, componentsMap.get('series'));\n    var componentTypes = [];\n    componentsMap.each(function (components, componentType) {\n      componentTypes.push(componentType);\n    });\n    ComponentModel.topologicalTravel(componentTypes, ComponentModel.getAllClassMainTypes(), function (componentType, dependencies) {\n      each(componentsMap.get(componentType), function (component) {\n        (componentType !== 'series' || !isNotTargetSeries(component, payload)) && component.restoreData();\n      });\n    });\n  }\n});\n\nfunction isNotTargetSeries(seriesModel, payload) {\n  if (payload) {\n    var index = payload.seiresIndex;\n    var id = payload.seriesId;\n    var name = payload.seriesName;\n    return index != null && seriesModel.componentIndex !== index || id != null && seriesModel.id !== id || name != null && seriesModel.name !== name;\n  }\n}\n/**\n * @inner\n */\n\n\nfunction mergeTheme(option, theme) {\n  // PENDING\n  // NOT use `colorLayer` in theme if option has `color`\n  var notMergeColorLayer = option.color && !option.colorLayer;\n  each(theme, function (themeItem, name) {\n    if (name === 'colorLayer' && notMergeColorLayer) {\n      return;\n    } // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n\n\n    if (!ComponentModel.hasClass(name)) {\n      if (typeof themeItem === 'object') {\n        option[name] = !option[name] ? clone(themeItem) : merge(option[name], themeItem, false);\n      } else {\n        if (option[name] == null) {\n          option[name] = themeItem;\n        }\n      }\n    }\n  });\n}\n\nfunction initBase(baseOption) {\n  baseOption = baseOption; // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n  // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n\n  this.option = {};\n  this.option[OPTION_INNER_KEY] = 1;\n  /**\n   * Init with series: [], in case of calling findSeries method\n   * before series initialized.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @private\n   */\n\n  this._componentsMap = createHashMap({\n    series: []\n  });\n  /**\n   * Mapping between filtered series list and raw series list.\n   * key: filtered series indices, value: raw series indices.\n   * @type {Array.<nubmer>}\n   * @private\n   */\n\n  this._seriesIndices;\n  this._seriesIndicesMap;\n  mergeTheme(baseOption, this._theme.option); // TODO Needs clone when merging to the unexisted property\n\n  merge(baseOption, globalDefault, false);\n  this.mergeOption(baseOption);\n}\n/**\n * @inner\n * @param {Array.<string>|string} types model types\n * @return {Object} key: {string} type, value: {Array.<Object>} models\n */\n\n\nfunction getComponentsByTypes(componentsMap, types) {\n  if (!isArray(types)) {\n    types = types ? [types] : [];\n  }\n\n  var ret = {};\n  each(types, function (type) {\n    ret[type] = (componentsMap.get(type) || []).slice();\n  });\n  return ret;\n}\n/**\n * @inner\n */\n\n\nfunction determineSubType(mainType, newCptOption, existComponent) {\n  var subType = newCptOption.type ? newCptOption.type : existComponent ? existComponent.subType // Use determineSubType only when there is no existComponent.\n  : ComponentModel.determineSubType(mainType, newCptOption); // tooltip, markline, markpoint may always has no subType\n\n  return subType;\n}\n/**\n * @inner\n */\n\n\nfunction createSeriesIndices(ecModel, seriesModels) {\n  ecModel._seriesIndicesMap = createHashMap(ecModel._seriesIndices = map(seriesModels, function (series) {\n    return series.componentIndex;\n  }) || []);\n}\n/**\n * @inner\n */\n\n\nfunction filterBySubType(components, condition) {\n  // Using hasOwnProperty for restrict. Consider\n  // subType is undefined in user payload.\n  return condition.hasOwnProperty('subType') ? filter(components, function (cpt) {\n    return cpt.subType === condition.subType;\n  }) : components;\n}\n/**\n * @inner\n */\n\n\nfunction assertSeriesInitialized(ecModel) {}\n\nmixin(GlobalModel, colorPaletteMixin);\nvar _default = GlobalModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar normalizeToArray = _model.normalizeToArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\n\nfunction getNearestColorPalette(colors, requestColorNum) {\n  var paletteNum = colors.length; // TODO colors must be in order\n\n  for (var i = 0; i < paletteNum; i++) {\n    if (colors[i].length > requestColorNum) {\n      return colors[i];\n    }\n  }\n\n  return colors[paletteNum - 1];\n}\n\nvar _default = {\n  clearColorPalette: function clearColorPalette() {\n    inner(this).colorIdx = 0;\n    inner(this).colorNameMap = {};\n  },\n\n  /**\n   * @param {string} name MUST NOT be null/undefined. Otherwise call this function\n   *                 twise with the same parameters will get different result.\n   * @param {Object} [scope=this]\n   * @param {Object} [requestColorNum]\n   * @return {string} color string.\n   */\n  getColorFromPalette: function getColorFromPalette(name, scope, requestColorNum) {\n    scope = scope || this;\n    var scopeFields = inner(scope);\n    var colorIdx = scopeFields.colorIdx || 0;\n    var colorNameMap = scopeFields.colorNameMap = scopeFields.colorNameMap || {}; // Use `hasOwnProperty` to avoid conflict with Object.prototype.\n\n    if (colorNameMap.hasOwnProperty(name)) {\n      return colorNameMap[name];\n    }\n\n    var defaultColorPalette = normalizeToArray(this.get('color', true));\n    var layeredColorPalette = this.get('colorLayer', true);\n    var colorPalette = requestColorNum == null || !layeredColorPalette ? defaultColorPalette : getNearestColorPalette(layeredColorPalette, requestColorNum); // In case can't find in layered color palette.\n\n    colorPalette = colorPalette || defaultColorPalette;\n\n    if (!colorPalette || !colorPalette.length) {\n      return;\n    }\n\n    var color = colorPalette[colorIdx];\n\n    if (name) {\n      colorNameMap[name] = color;\n    }\n\n    scopeFields.colorIdx = (colorIdx + 1) % colorPalette.length;\n    return color;\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrender = require(\"zrender/lib/zrender\");\n\nexports.zrender = zrender;\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nexports.matrix = matrix;\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nexports.vector = vector;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorTool = require(\"zrender/lib/tool/color\");\n\nexports.color = colorTool;\n\nvar graphicUtil = require(\"./util/graphic\");\n\nvar numberUtil = require(\"./util/number\");\n\nexports.number = numberUtil;\n\nvar formatUtil = require(\"./util/format\");\n\nexports.format = formatUtil;\n\nvar _throttle = require(\"./util/throttle\");\n\nvar throttle = _throttle.throttle;\nexports.throttle = _throttle.throttle;\n\nvar ecHelper = require(\"./helper\");\n\nexports.helper = ecHelper;\n\nvar parseGeoJSON = require(\"./coord/geo/parseGeoJson\");\n\nexports.parseGeoJSON = parseGeoJSON;\n\nvar _List = require(\"./data/List\");\n\nexports.List = _List;\n\nvar _Model = require(\"./model/Model\");\n\nexports.Model = _Model;\n\nvar _Axis = require(\"./coord/Axis\");\n\nexports.Axis = _Axis;\n\nvar _env = require(\"zrender/lib/core/env\");\n\nexports.env = _env;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Do not mount those modules on 'src/echarts' for better tree shaking.\n */\n\nvar parseGeoJson = parseGeoJSON;\nvar ecUtil = {};\nzrUtil.each(['map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter', 'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction', 'extend', 'defaults', 'clone', 'merge'], function (name) {\n  ecUtil[name] = zrUtil[name];\n});\nvar graphic = {};\nzrUtil.each(['extendShape', 'extendPath', 'makePath', 'makeImage', 'mergePath', 'resizePath', 'createIcon', 'setHoverStyle', 'setLabelStyle', 'setTextStyle', 'setText', 'getFont', 'updateProps', 'initProps', 'getTransform', 'clipPointsByRect', 'clipRectByRect', 'registerShape', 'getShapeClass', 'Group', 'Image', 'Text', 'Circle', 'Sector', 'Ring', 'Polygon', 'Polyline', 'Rect', 'Line', 'BezierCurve', 'Arc', 'IncrementalDisplayable', 'CompoundPath', 'LinearGradient', 'RadialGradient', 'BoundingRect'], function (name) {\n  graphic[name] = graphicUtil[name];\n});\nexports.parseGeoJson = parseGeoJson;\nexports.util = ecUtil;\nexports.graphic = graphic;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar numberUtil = require(\"../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For testable.\n */\n\n\nvar roundNumber = numberUtil.round;\n/**\n * @param {Array.<number>} extent Both extent[0] and extent[1] should be valid number.\n *                                Should be extent[0] < extent[1].\n * @param {number} splitNumber splitNumber should be >= 1.\n * @param {number} [minInterval]\n * @param {number} [maxInterval]\n * @return {Object} {interval, intervalPrecision, niceTickExtent}\n */\n\nfunction intervalScaleNiceTicks(extent, splitNumber, minInterval, maxInterval) {\n  var result = {};\n  var span = extent[1] - extent[0];\n  var interval = result.interval = numberUtil.nice(span / splitNumber, true);\n\n  if (minInterval != null && interval < minInterval) {\n    interval = result.interval = minInterval;\n  }\n\n  if (maxInterval != null && interval > maxInterval) {\n    interval = result.interval = maxInterval;\n  } // Tow more digital for tick.\n\n\n  var precision = result.intervalPrecision = getIntervalPrecision(interval); // Niced extent inside original extent\n\n  var niceTickExtent = result.niceTickExtent = [roundNumber(Math.ceil(extent[0] / interval) * interval, precision), roundNumber(Math.floor(extent[1] / interval) * interval, precision)];\n  fixExtent(niceTickExtent, extent);\n  return result;\n}\n/**\n * @param {number} interval\n * @return {number} interval precision\n */\n\n\nfunction getIntervalPrecision(interval) {\n  // Tow more digital for tick.\n  return numberUtil.getPrecisionSafe(interval) + 2;\n}\n\nfunction clamp(niceTickExtent, idx, extent) {\n  niceTickExtent[idx] = Math.max(Math.min(niceTickExtent[idx], extent[1]), extent[0]);\n} // In some cases (e.g., splitNumber is 1), niceTickExtent may be out of extent.\n\n\nfunction fixExtent(niceTickExtent, extent) {\n  !isFinite(niceTickExtent[0]) && (niceTickExtent[0] = extent[0]);\n  !isFinite(niceTickExtent[1]) && (niceTickExtent[1] = extent[1]);\n  clamp(niceTickExtent, 0, extent);\n  clamp(niceTickExtent, 1, extent);\n\n  if (niceTickExtent[0] > niceTickExtent[1]) {\n    niceTickExtent[0] = niceTickExtent[1];\n  }\n}\n\nexports.intervalScaleNiceTicks = intervalScaleNiceTicks;\nexports.getIntervalPrecision = getIntervalPrecision;\nexports.fixExtent = fixExtent;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar IntervalScale = require(\"./Interval\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n// Use some method of IntervalScale\n\n\nvar scaleProto = Scale.prototype;\nvar intervalScaleProto = IntervalScale.prototype;\nvar getPrecisionSafe = numberUtil.getPrecisionSafe;\nvar roundingErrorFix = numberUtil.round;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar mathPow = Math.pow;\nvar mathLog = Math.log;\nvar LogScale = Scale.extend({\n  type: 'log',\n  base: 10,\n  $constructor: function $constructor() {\n    Scale.apply(this, arguments);\n    this._originalScale = new IntervalScale();\n  },\n\n  /**\n   * @param {boolean} [expandToNicedExtent=false] If expand the ticks to niced extent.\n   * @return {Array.<number>}\n   */\n  getTicks: function getTicks(expandToNicedExtent) {\n    var originalScale = this._originalScale;\n    var extent = this._extent;\n    var originalExtent = originalScale.getExtent();\n    return zrUtil.map(intervalScaleProto.getTicks.call(this, expandToNicedExtent), function (val) {\n      var powVal = numberUtil.round(mathPow(this.base, val)); // Fix #4158\n\n      powVal = val === extent[0] && originalScale.__fixMin ? fixRoundingError(powVal, originalExtent[0]) : powVal;\n      powVal = val === extent[1] && originalScale.__fixMax ? fixRoundingError(powVal, originalExtent[1]) : powVal;\n      return powVal;\n    }, this);\n  },\n\n  /**\n   * @param {number} splitNumber\n   * @return {Array.<Array.<number>>}\n   */\n  getMinorTicks: intervalScaleProto.getMinorTicks,\n\n  /**\n   * @param {number} val\n   * @return {string}\n   */\n  getLabel: intervalScaleProto.getLabel,\n\n  /**\n   * @param  {number} val\n   * @return {number}\n   */\n  scale: function scale(val) {\n    val = scaleProto.scale.call(this, val);\n    return mathPow(this.base, val);\n  },\n\n  /**\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function setExtent(start, end) {\n    var base = this.base;\n    start = mathLog(start) / mathLog(base);\n    end = mathLog(end) / mathLog(base);\n    intervalScaleProto.setExtent.call(this, start, end);\n  },\n\n  /**\n   * @return {number} end\n   */\n  getExtent: function getExtent() {\n    var base = this.base;\n    var extent = scaleProto.getExtent.call(this);\n    extent[0] = mathPow(base, extent[0]);\n    extent[1] = mathPow(base, extent[1]); // Fix #4158\n\n    var originalScale = this._originalScale;\n    var originalExtent = originalScale.getExtent();\n    originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n    originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n    return extent;\n  },\n\n  /**\n   * @param  {Array.<number>} extent\n   */\n  unionExtent: function unionExtent(extent) {\n    this._originalScale.unionExtent(extent);\n\n    var base = this.base;\n    extent[0] = mathLog(extent[0]) / mathLog(base);\n    extent[1] = mathLog(extent[1]) / mathLog(base);\n    scaleProto.unionExtent.call(this, extent);\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function unionExtentFromData(data, dim) {\n    // TODO\n    // filter value that <= 0\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n\n  /**\n   * Update interval and extent of intervals for nice ticks\n   * @param  {number} [approxTickNum = 10] Given approx tick number\n   */\n  niceTicks: function niceTicks(approxTickNum) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n\n    if (span === Infinity || span <= 0) {\n      return;\n    }\n\n    var interval = numberUtil.quantity(span);\n    var err = approxTickNum / span * interval; // Filter ticks to get closer to the desired count.\n\n    if (err <= 0.5) {\n      interval *= 10;\n    } // Interval should be integer\n\n\n    while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n      interval *= 10;\n    }\n\n    var niceExtent = [numberUtil.round(mathCeil(extent[0] / interval) * interval), numberUtil.round(mathFloor(extent[1] / interval) * interval)];\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n\n  /**\n   * Nice extent.\n   * @override\n   */\n  niceExtent: function niceExtent(opt) {\n    intervalScaleProto.niceExtent.call(this, opt);\n    var originalScale = this._originalScale;\n    originalScale.__fixMin = opt.fixMin;\n    originalScale.__fixMax = opt.fixMax;\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  LogScale.prototype[methodName] = function (val) {\n    val = mathLog(val) / mathLog(this.base);\n    return scaleProto[methodName].call(this, val);\n  };\n});\n\nLogScale.create = function () {\n  return new LogScale();\n};\n\nfunction fixRoundingError(val, originalVal) {\n  return roundingErrorFix(val, getPrecisionSafe(originalVal));\n}\n\nvar _default = LogScale;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"./number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar formatUtil = require(\"./format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Layout helpers for each component positioning\n\n\nvar each = zrUtil.each;\n/**\n * @public\n */\n\nvar LOCATION_PARAMS = ['left', 'right', 'top', 'bottom', 'width', 'height'];\n/**\n * @public\n */\n\nvar HV_NAMES = [['width', 'left', 'right'], ['height', 'top', 'bottom']];\n\nfunction boxLayout(orient, group, gap, maxWidth, maxHeight) {\n  var x = 0;\n  var y = 0;\n\n  if (maxWidth == null) {\n    maxWidth = Infinity;\n  }\n\n  if (maxHeight == null) {\n    maxHeight = Infinity;\n  }\n\n  var currentLineMaxSize = 0;\n  group.eachChild(function (child, idx) {\n    var position = child.position;\n    var rect = child.getBoundingRect();\n    var nextChild = group.childAt(idx + 1);\n    var nextChildRect = nextChild && nextChild.getBoundingRect();\n    var nextX;\n    var nextY;\n\n    if (orient === 'horizontal') {\n      var moveX = rect.width + (nextChildRect ? -nextChildRect.x + rect.x : 0);\n      nextX = x + moveX; // Wrap when width exceeds maxWidth or meet a `newline` group\n      // FIXME compare before adding gap?\n\n      if (nextX > maxWidth || child.newline) {\n        x = 0;\n        nextX = moveX;\n        y += currentLineMaxSize + gap;\n        currentLineMaxSize = rect.height;\n      } else {\n        // FIXME: consider rect.y is not `0`?\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n      }\n    } else {\n      var moveY = rect.height + (nextChildRect ? -nextChildRect.y + rect.y : 0);\n      nextY = y + moveY; // Wrap when width exceeds maxHeight or meet a `newline` group\n\n      if (nextY > maxHeight || child.newline) {\n        x += currentLineMaxSize + gap;\n        y = 0;\n        nextY = moveY;\n        currentLineMaxSize = rect.width;\n      } else {\n        currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n      }\n    }\n\n    if (child.newline) {\n      return;\n    }\n\n    position[0] = x;\n    position[1] = y;\n    orient === 'horizontal' ? x = nextX + gap : y = nextY + gap;\n  });\n}\n/**\n * VBox or HBox layouting\n * @param {string} orient\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\n\nvar box = boxLayout;\n/**\n * VBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar vbox = zrUtil.curry(boxLayout, 'vertical');\n/**\n * HBox layouting\n * @param {module:zrender/container/Group} group\n * @param {number} gap\n * @param {number} [width=Infinity]\n * @param {number} [height=Infinity]\n */\n\nvar hbox = zrUtil.curry(boxLayout, 'horizontal');\n/**\n * If x or x2 is not specified or 'center' 'left' 'right',\n * the width would be as long as possible.\n * If y or y2 is not specified or 'middle' 'top' 'bottom',\n * the height would be as long as possible.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.x]\n * @param {number|string} [positionInfo.y]\n * @param {number|string} [positionInfo.x2]\n * @param {number|string} [positionInfo.y2]\n * @param {Object} containerRect {width, height}\n * @param {string|number} margin\n * @return {Object} {width, height}\n */\n\nfunction getAvailableSize(positionInfo, containerRect, margin) {\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var x = parsePercent(positionInfo.x, containerWidth);\n  var y = parsePercent(positionInfo.y, containerHeight);\n  var x2 = parsePercent(positionInfo.x2, containerWidth);\n  var y2 = parsePercent(positionInfo.y2, containerHeight);\n  (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n  (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n  (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n  (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  return {\n    width: Math.max(x2 - x - margin[1] - margin[3], 0),\n    height: Math.max(y2 - y - margin[0] - margin[2], 0)\n  };\n}\n/**\n * Parse position info.\n *\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width]\n * @param {number|string} [positionInfo.height]\n * @param {number|string} [positionInfo.aspect] Aspect is width / height\n * @param {Object} containerRect\n * @param {string|number} [margin]\n *\n * @return {module:zrender/core/BoundingRect}\n */\n\n\nfunction getLayoutRect(positionInfo, containerRect, margin) {\n  margin = formatUtil.normalizeCssArray(margin || 0);\n  var containerWidth = containerRect.width;\n  var containerHeight = containerRect.height;\n  var left = parsePercent(positionInfo.left, containerWidth);\n  var top = parsePercent(positionInfo.top, containerHeight);\n  var right = parsePercent(positionInfo.right, containerWidth);\n  var bottom = parsePercent(positionInfo.bottom, containerHeight);\n  var width = parsePercent(positionInfo.width, containerWidth);\n  var height = parsePercent(positionInfo.height, containerHeight);\n  var verticalMargin = margin[2] + margin[0];\n  var horizontalMargin = margin[1] + margin[3];\n  var aspect = positionInfo.aspect; // If width is not specified, calculate width from left and right\n\n  if (isNaN(width)) {\n    width = containerWidth - right - horizontalMargin - left;\n  }\n\n  if (isNaN(height)) {\n    height = containerHeight - bottom - verticalMargin - top;\n  }\n\n  if (aspect != null) {\n    // If width and height are not given\n    // 1. Graph should not exceeds the container\n    // 2. Aspect must be keeped\n    // 3. Graph should take the space as more as possible\n    // FIXME\n    // Margin is not considered, because there is no case that both\n    // using margin and aspect so far.\n    if (isNaN(width) && isNaN(height)) {\n      if (aspect > containerWidth / containerHeight) {\n        width = containerWidth * 0.8;\n      } else {\n        height = containerHeight * 0.8;\n      }\n    } // Calculate width or height with given aspect\n\n\n    if (isNaN(width)) {\n      width = aspect * height;\n    }\n\n    if (isNaN(height)) {\n      height = width / aspect;\n    }\n  } // If left is not specified, calculate left from right and width\n\n\n  if (isNaN(left)) {\n    left = containerWidth - right - width - horizontalMargin;\n  }\n\n  if (isNaN(top)) {\n    top = containerHeight - bottom - height - verticalMargin;\n  } // Align left and top\n\n\n  switch (positionInfo.left || positionInfo.right) {\n    case 'center':\n      left = containerWidth / 2 - width / 2 - margin[3];\n      break;\n\n    case 'right':\n      left = containerWidth - width - horizontalMargin;\n      break;\n  }\n\n  switch (positionInfo.top || positionInfo.bottom) {\n    case 'middle':\n    case 'center':\n      top = containerHeight / 2 - height / 2 - margin[0];\n      break;\n\n    case 'bottom':\n      top = containerHeight - height - verticalMargin;\n      break;\n  } // If something is wrong and left, top, width, height are calculated as NaN\n\n\n  left = left || 0;\n  top = top || 0;\n\n  if (isNaN(width)) {\n    // Width may be NaN if only one value is given except width\n    width = containerWidth - horizontalMargin - left - (right || 0);\n  }\n\n  if (isNaN(height)) {\n    // Height may be NaN if only one value is given except height\n    height = containerHeight - verticalMargin - top - (bottom || 0);\n  }\n\n  var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n  rect.margin = margin;\n  return rect;\n}\n/**\n * Position a zr element in viewport\n *  Group position is specified by either\n *  {left, top}, {right, bottom}\n *  If all properties exists, right and bottom will be igonred.\n *\n * Logic:\n *     1. Scale (against origin point in parent coord)\n *     2. Rotate (against origin point in parent coord)\n *     3. Traslate (with el.position by this method)\n * So this method only fixes the last step 'Traslate', which does not affect\n * scaling and rotating.\n *\n * If be called repeatly with the same input el, the same result will be gotten.\n *\n * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n * @param {Object} positionInfo\n * @param {number|string} [positionInfo.left]\n * @param {number|string} [positionInfo.top]\n * @param {number|string} [positionInfo.right]\n * @param {number|string} [positionInfo.bottom]\n * @param {number|string} [positionInfo.width] Only for opt.boundingModel: 'raw'\n * @param {number|string} [positionInfo.height] Only for opt.boundingModel: 'raw'\n * @param {Object} containerRect\n * @param {string|number} margin\n * @param {Object} [opt]\n * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n * @param {Array.<number>} [opt.boundingMode='all']\n *        Specify how to calculate boundingRect when locating.\n *        'all': Position the boundingRect that is transformed and uioned\n *               both itself and its descendants.\n *               This mode simplies confine the elements in the bounding\n *               of their container (e.g., using 'right: 0').\n *        'raw': Position the boundingRect that is not transformed and only itself.\n *               This mode is useful when you want a element can overflow its\n *               container. (Consider a rotated circle needs to be located in a corner.)\n *               In this mode positionInfo.width/height can only be number.\n */\n\n\nfunction positionElement(el, positionInfo, containerRect, margin, opt) {\n  var h = !opt || !opt.hv || opt.hv[0];\n  var v = !opt || !opt.hv || opt.hv[1];\n  var boundingMode = opt && opt.boundingMode || 'all';\n\n  if (!h && !v) {\n    return;\n  }\n\n  var rect;\n\n  if (boundingMode === 'raw') {\n    rect = el.type === 'group' ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0) : el.getBoundingRect();\n  } else {\n    rect = el.getBoundingRect();\n\n    if (el.needLocalTransform()) {\n      var transform = el.getLocalTransform(); // Notice: raw rect may be inner object of el,\n      // which should not be modified.\n\n      rect = rect.clone();\n      rect.applyTransform(transform);\n    }\n  } // The real width and height can not be specified but calculated by the given el.\n\n\n  positionInfo = getLayoutRect(zrUtil.defaults({\n    width: rect.width,\n    height: rect.height\n  }, positionInfo), containerRect, margin); // Because 'tranlate' is the last step in transform\n  // (see zrender/core/Transformable#getLocalTransform),\n  // we can just only modify el.position to get final result.\n\n  var elPos = el.position;\n  var dx = h ? positionInfo.x - rect.x : 0;\n  var dy = v ? positionInfo.y - rect.y : 0;\n  el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n}\n/**\n * @param {Object} option Contains some of the properties in HV_NAMES.\n * @param {number} hvIdx 0: horizontal; 1: vertical.\n */\n\n\nfunction sizeCalculable(option, hvIdx) {\n  return option[HV_NAMES[hvIdx][0]] != null || option[HV_NAMES[hvIdx][1]] != null && option[HV_NAMES[hvIdx][2]] != null;\n}\n/**\n * Consider Case:\n * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n * through setOption or media query, using normal zrUtil.merge will cause\n * {right: 0} does not take effect.\n *\n * @example\n * ComponentModel.extend({\n *     init: function () {\n *         ...\n *         var inputPositionParams = layout.getLayoutParams(option);\n *         this.mergeOption(inputPositionParams);\n *     },\n *     mergeOption: function (newOption) {\n *         newOption && zrUtil.merge(thisOption, newOption, true);\n *         layout.mergeLayoutParam(thisOption, newOption);\n *     }\n * });\n *\n * @param {Object} targetOption\n * @param {Object} newOption\n * @param {Object|string} [opt]\n * @param {boolean|Array.<boolean>} [opt.ignoreSize=false] Used for the components\n *  that width (or height) should not be calculated by left and right (or top and bottom).\n */\n\n\nfunction mergeLayoutParam(targetOption, newOption, opt) {\n  !zrUtil.isObject(opt) && (opt = {});\n  var ignoreSize = opt.ignoreSize;\n  !zrUtil.isArray(ignoreSize) && (ignoreSize = [ignoreSize, ignoreSize]);\n  var hResult = merge(HV_NAMES[0], 0);\n  var vResult = merge(HV_NAMES[1], 1);\n  copy(HV_NAMES[0], targetOption, hResult);\n  copy(HV_NAMES[1], targetOption, vResult);\n\n  function merge(names, hvIdx) {\n    var newParams = {};\n    var newValueCount = 0;\n    var merged = {};\n    var mergedValueCount = 0;\n    var enoughParamNumber = 2;\n    each(names, function (name) {\n      merged[name] = targetOption[name];\n    });\n    each(names, function (name) {\n      // Consider case: newOption.width is null, which is\n      // set by user for removing width setting.\n      hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n      hasValue(newParams, name) && newValueCount++;\n      hasValue(merged, name) && mergedValueCount++;\n    });\n\n    if (ignoreSize[hvIdx]) {\n      // Only one of left/right is premitted to exist.\n      if (hasValue(newOption, names[1])) {\n        merged[names[2]] = null;\n      } else if (hasValue(newOption, names[2])) {\n        merged[names[1]] = null;\n      }\n\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // or targetOption: {right: ...} and newOption: {width: ...},\n    // There is no conflict when merged only has params count\n    // little than enoughParamNumber.\n\n\n    if (mergedValueCount === enoughParamNumber || !newValueCount) {\n      return merged;\n    } // Case: newOption: {width: ..., right: ...},\n    // Than we can make sure user only want those two, and ignore\n    // all origin params in targetOption.\n    else if (newValueCount >= enoughParamNumber) {\n        return newParams;\n      } else {\n        // Chose another param from targetOption by priority.\n        for (var i = 0; i < names.length; i++) {\n          var name = names[i];\n\n          if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n            newParams[name] = targetOption[name];\n            break;\n          }\n        }\n\n        return newParams;\n      }\n  }\n\n  function hasProp(obj, name) {\n    return obj.hasOwnProperty(name);\n  }\n\n  function hasValue(obj, name) {\n    return obj[name] != null && obj[name] !== 'auto';\n  }\n\n  function copy(names, target, source) {\n    each(names, function (name) {\n      target[name] = source[name];\n    });\n  }\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction getLayoutParams(source) {\n  return copyLayoutParams({}, source);\n}\n/**\n * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n * @param {Object} source\n * @return {Object} Result contains those props.\n */\n\n\nfunction copyLayoutParams(target, source) {\n  source && target && each(LOCATION_PARAMS, function (name) {\n    source.hasOwnProperty(name) && (target[name] = source[name]);\n  });\n  return target;\n}\n\nexports.LOCATION_PARAMS = LOCATION_PARAMS;\nexports.HV_NAMES = HV_NAMES;\nexports.box = box;\nexports.vbox = vbox;\nexports.hbox = hbox;\nexports.getAvailableSize = getAvailableSize;\nexports.getLayoutRect = getLayoutRect;\nexports.positionElement = positionElement;\nexports.sizeCalculable = sizeCalculable;\nexports.mergeLayoutParam = mergeLayoutParam;\nexports.getLayoutParams = getLayoutParams;\nexports.copyLayoutParams = copyLayoutParams;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar numberUtil = require(\"./number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Text from 'zrender/src/graphic/Text';\n\n/**\n * add commas after every three numbers\n * @param {string|number} x\n * @return {string}\n */\n\n\nfunction addCommas(x) {\n  if (isNaN(x)) {\n    return '-';\n  }\n\n  x = (x + '').split('.');\n  return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,') + (x.length > 1 ? '.' + x[1] : '');\n}\n/**\n * @param {string} str\n * @param {boolean} [upperCaseFirst=false]\n * @return {string} str\n */\n\n\nfunction toCamelCase(str, upperCaseFirst) {\n  str = (str || '').toLowerCase().replace(/-(.)/g, function (match, group1) {\n    return group1.toUpperCase();\n  });\n\n  if (upperCaseFirst && str) {\n    str = str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  return str;\n}\n\nvar normalizeCssArray = zrUtil.normalizeCssArray;\nvar replaceReg = /([&<>\"'])/g;\nvar replaceMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  '\\'': '&#39;'\n};\n\nfunction encodeHTML(source) {\n  return source == null ? '' : (source + '').replace(replaceReg, function (str, c) {\n    return replaceMap[c];\n  });\n}\n\nvar TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\nvar wrapVar = function wrapVar(varName, seriesIdx) {\n  return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n};\n/**\n * Template formatter\n * @param {string} tpl\n * @param {Array.<Object>|Object} paramsList\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTpl(tpl, paramsList, encode) {\n  if (!zrUtil.isArray(paramsList)) {\n    paramsList = [paramsList];\n  }\n\n  var seriesLen = paramsList.length;\n\n  if (!seriesLen) {\n    return '';\n  }\n\n  var $vars = paramsList[0].$vars || [];\n\n  for (var i = 0; i < $vars.length; i++) {\n    var alias = TPL_VAR_ALIAS[i];\n    tpl = tpl.replace(wrapVar(alias), wrapVar(alias, 0));\n  }\n\n  for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n    for (var k = 0; k < $vars.length; k++) {\n      var val = paramsList[seriesIdx][$vars[k]];\n      tpl = tpl.replace(wrapVar(TPL_VAR_ALIAS[k], seriesIdx), encode ? encodeHTML(val) : val);\n    }\n  }\n\n  return tpl;\n}\n/**\n * simple Template formatter\n *\n * @param {string} tpl\n * @param {Object} param\n * @param {boolean} [encode=false]\n * @return {string}\n */\n\n\nfunction formatTplSimple(tpl, param, encode) {\n  zrUtil.each(param, function (value, key) {\n    tpl = tpl.replace('{' + key + '}', encode ? encodeHTML(value) : value);\n  });\n  return tpl;\n}\n/**\n * @param {Object|string} [opt] If string, means color.\n * @param {string} [opt.color]\n * @param {string} [opt.extraCssText]\n * @param {string} [opt.type='item'] 'item' or 'subItem'\n * @param {string} [opt.renderMode='html'] render mode of tooltip, 'html' or 'richText'\n * @param {string} [opt.markerId='X'] id name for marker. If only one marker is in a rich text, this can be omitted.\n * @return {string}\n */\n\n\nfunction getTooltipMarker(opt, extraCssText) {\n  opt = zrUtil.isString(opt) ? {\n    color: opt,\n    extraCssText: extraCssText\n  } : opt || {};\n  var color = opt.color;\n  var type = opt.type;\n  var extraCssText = opt.extraCssText;\n  var renderMode = opt.renderMode || 'html';\n  var markerId = opt.markerId || 'X';\n\n  if (!color) {\n    return '';\n  }\n\n  if (renderMode === 'html') {\n    return type === 'subItem' ? '<span style=\"display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;' + 'border-radius:4px;width:4px;height:4px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>' : '<span style=\"display:inline-block;margin-right:5px;' + 'border-radius:10px;width:10px;height:10px;background-color:' + encodeHTML(color) + ';' + (extraCssText || '') + '\"></span>';\n  } else {\n    // Space for rich element marker\n    return {\n      renderMode: renderMode,\n      content: '{marker' + markerId + '|}  ',\n      style: {\n        color: color\n      }\n    };\n  }\n}\n\nfunction pad(str, len) {\n  str += '';\n  return '0000'.substr(0, len - str.length) + str;\n}\n/**\n * ISO Date format\n * @param {string} tpl\n * @param {number} value\n * @param {boolean} [isUTC=false] Default in local time.\n *           see `module:echarts/scale/Time`\n *           and `module:echarts/util/number#parseDate`.\n * @inner\n */\n\n\nfunction formatTime(tpl, value, isUTC) {\n  if (tpl === 'week' || tpl === 'month' || tpl === 'quarter' || tpl === 'half-year' || tpl === 'year') {\n    tpl = 'MM-dd\\nyyyy';\n  }\n\n  var date = numberUtil.parseDate(value);\n  var utc = isUTC ? 'UTC' : '';\n  var y = date['get' + utc + 'FullYear']();\n  var M = date['get' + utc + 'Month']() + 1;\n  var d = date['get' + utc + 'Date']();\n  var h = date['get' + utc + 'Hours']();\n  var m = date['get' + utc + 'Minutes']();\n  var s = date['get' + utc + 'Seconds']();\n  var S = date['get' + utc + 'Milliseconds']();\n  tpl = tpl.replace('MM', pad(M, 2)).replace('M', M).replace('yyyy', y).replace('yy', y % 100).replace('dd', pad(d, 2)).replace('d', d).replace('hh', pad(h, 2)).replace('h', h).replace('mm', pad(m, 2)).replace('m', m).replace('ss', pad(s, 2)).replace('s', s).replace('SSS', pad(S, 3));\n  return tpl;\n}\n/**\n * Capital first\n * @param {string} str\n * @return {string}\n */\n\n\nfunction capitalFirst(str) {\n  return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n}\n\nvar truncateText = textContain.truncateText;\n/**\n * @public\n * @param {Object} opt\n * @param {string} opt.text\n * @param {string} opt.font\n * @param {string} [opt.textAlign='left']\n * @param {string} [opt.textVerticalAlign='top']\n * @param {Array.<number>} [opt.textPadding]\n * @param {number} [opt.textLineHeight]\n * @param {Object} [opt.rich]\n * @param {Object} [opt.truncate]\n * @return {Object} {x, y, width, height, lineHeight}\n */\n\nfunction getTextBoundingRect(opt) {\n  return textContain.getBoundingRect(opt.text, opt.font, opt.textAlign, opt.textVerticalAlign, opt.textPadding, opt.textLineHeight, opt.rich, opt.truncate);\n}\n/**\n * @deprecated\n * the `textLineHeight` was added later.\n * For backward compatiblility, put it as the last parameter.\n * But deprecated this interface. Please use `getTextBoundingRect` instead.\n */\n\n\nfunction getTextRect(text, font, textAlign, textVerticalAlign, textPadding, rich, truncate, textLineHeight) {\n  return textContain.getBoundingRect(text, font, textAlign, textVerticalAlign, textPadding, textLineHeight, rich, truncate);\n}\n/**\n * open new tab\n * @param {string} link url\n * @param {string} target blank or self\n */\n\n\nfunction windowOpen(link, target) {\n  if (target === '_blank' || target === 'blank') {\n    var blank = window.open();\n    blank.opener = null;\n    blank.location = link;\n  } else {\n    window.open(link, target);\n  }\n}\n\nexports.addCommas = addCommas;\nexports.toCamelCase = toCamelCase;\nexports.normalizeCssArray = normalizeCssArray;\nexports.encodeHTML = encodeHTML;\nexports.formatTpl = formatTpl;\nexports.formatTplSimple = formatTplSimple;\nexports.getTooltipMarker = getTooltipMarker;\nexports.formatTime = formatTime;\nexports.capitalFirst = capitalFirst;\nexports.truncateText = truncateText;\nexports.getTextBoundingRect = getTextBoundingRect;\nexports.getTextRect = getTextRect;\nexports.windowOpen = windowOpen;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Visual mapping.\n */\n\n\nvar visualDefault = {\n  /**\n   * @public\n   */\n  get: function get(visualType, key, isCategory) {\n    var value = zrUtil.clone((defaultOption[visualType] || {})[key]);\n    return isCategory ? zrUtil.isArray(value) ? value[value.length - 1] : value : value;\n  }\n};\nvar defaultOption = {\n  color: {\n    active: ['#006edd', '#e0ffff'],\n    inactive: ['rgba(0,0,0,0)']\n  },\n  colorHue: {\n    active: [0, 360],\n    inactive: [0, 0]\n  },\n  colorSaturation: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  colorLightness: {\n    active: [0.9, 0.5],\n    inactive: [0, 0]\n  },\n  colorAlpha: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  opacity: {\n    active: [0.3, 1],\n    inactive: [0, 0]\n  },\n  symbol: {\n    active: ['circle', 'roundRect', 'diamond'],\n    inactive: ['none']\n  },\n  symbolSize: {\n    active: [10, 50],\n    inactive: [0, 0]\n  }\n};\nvar _default = visualDefault;\nmodule.exports = _default;","/**\n * Helper function for iterating over a collection\n *\n * @param collection\n * @param fn\n */\nfunction each(collection, fn) {\n  var i = 0,\n      length = collection.length,\n      cont;\n\n  for (i; i < length; i++) {\n    cont = fn(collection[i], i);\n\n    if (cont === false) {\n      break; //allow early exit\n    }\n  }\n}\n/**\n * Helper function for determining whether target object is an array\n *\n * @param target the object under test\n * @return {Boolean} true if array, false otherwise\n */\n\n\nfunction isArray(target) {\n  return Object.prototype.toString.apply(target) === '[object Array]';\n}\n/**\n * Helper function for determining whether target object is a function\n *\n * @param target the object under test\n * @return {Boolean} true if function, false otherwise\n */\n\n\nfunction isFunction(target) {\n  return typeof target === 'function';\n}\n\nmodule.exports = {\n  isFunction: isFunction,\n  isArray: isArray,\n  each: each\n};","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassExtend = _clazz.enableClassExtend;\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar lineStyleMixin = require(\"./mixin/lineStyle\");\n\nvar areaStyleMixin = require(\"./mixin/areaStyle\");\n\nvar textStyleMixin = require(\"./mixin/textStyle\");\n\nvar itemStyleMixin = require(\"./mixin/itemStyle\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/model/Model\n */\n\n\nvar mixin = zrUtil.mixin;\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Model\n * @constructor\n * @param {Object} [option]\n * @param {module:echarts/model/Model} [parentModel]\n * @param {module:echarts/model/Global} [ecModel]\n */\n\nfunction Model(option, parentModel, ecModel) {\n  /**\n   * @type {module:echarts/model/Model}\n   * @readOnly\n   */\n  this.parentModel = parentModel;\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @type {Object}\n   * @protected\n   */\n\n  this.option = option; // Simple optimization\n  // if (this.init) {\n  //     if (arguments.length <= 4) {\n  //         this.init(option, parentModel, ecModel, extraOpt);\n  //     }\n  //     else {\n  //         this.init.apply(this, arguments);\n  //     }\n  // }\n}\n\nModel.prototype = {\n  constructor: Model,\n\n  /**\n   * Model 的初始化函数\n   * @param {Object} option\n   */\n  init: null,\n\n  /**\n   * 从新的 Option merge\n   */\n  mergeOption: function mergeOption(option) {\n    zrUtil.merge(this.option, option, true);\n  },\n\n  /**\n   * @param {string|Array.<string>} path\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  get: function get(path, ignoreParent) {\n    if (path == null) {\n      return this.option;\n    }\n\n    return doGet(this.option, this.parsePath(path), !ignoreParent && getParent(this, path));\n  },\n\n  /**\n   * @param {string} key\n   * @param {boolean} [ignoreParent=false]\n   * @return {*}\n   */\n  getShallow: function getShallow(key, ignoreParent) {\n    var option = this.option;\n    var val = option == null ? option : option[key];\n    var parentModel = !ignoreParent && getParent(this, key);\n\n    if (val == null && parentModel) {\n      val = parentModel.getShallow(key);\n    }\n\n    return val;\n  },\n\n  /**\n   * @param {string|Array.<string>} [path]\n   * @param {module:echarts/model/Model} [parentModel]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path, parentModel) {\n    var obj = path == null ? this.option : doGet(this.option, path = this.parsePath(path));\n    var thisParentModel;\n    parentModel = parentModel || (thisParentModel = getParent(this, path)) && thisParentModel.getModel(path);\n    return new Model(obj, parentModel, this.ecModel);\n  },\n\n  /**\n   * If model has option\n   */\n  isEmpty: function isEmpty() {\n    return this.option == null;\n  },\n  restoreData: function restoreData() {},\n  // Pending\n  clone: function clone() {\n    var Ctor = this.constructor;\n    return new Ctor(zrUtil.clone(this.option));\n  },\n  setReadOnly: function setReadOnly(properties) {// clazzUtil.setReadOnly(this, properties);\n  },\n  // If path is null/undefined, return null/undefined.\n  parsePath: function parsePath(path) {\n    if (typeof path === 'string') {\n      path = path.split('.');\n    }\n\n    return path;\n  },\n\n  /**\n   * @param {Function} getParentMethod\n   *        param {Array.<string>|string} path\n   *        return {module:echarts/model/Model}\n   */\n  customizeGetParent: function customizeGetParent(getParentMethod) {\n    inner(this).getParent = getParentMethod;\n  },\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (!env.node) {\n      if (this.option.animation != null) {\n        return !!this.option.animation;\n      } else if (this.parentModel) {\n        return this.parentModel.isAnimationEnabled();\n      }\n    }\n  }\n};\n\nfunction doGet(obj, pathArr, parentModel) {\n  for (var i = 0; i < pathArr.length; i++) {\n    // Ignore empty\n    if (!pathArr[i]) {\n      continue;\n    } // obj could be number/string/... (like 0)\n\n\n    obj = obj && typeof obj === 'object' ? obj[pathArr[i]] : null;\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  if (obj == null && parentModel) {\n    obj = parentModel.get(pathArr);\n  }\n\n  return obj;\n} // `path` can be null/undefined\n\n\nfunction getParent(model, path) {\n  var getParentMethod = inner(model).getParent;\n  return getParentMethod ? getParentMethod.call(model, path) : model.parentModel;\n} // Enable Model.extend.\n\n\nenableClassExtend(Model);\nenableClassCheck(Model);\nmixin(Model, lineStyleMixin);\nmixin(Model, areaStyleMixin);\nmixin(Model, textStyleMixin);\nmixin(Model, itemStyleMixin);\nvar _default = Model;\nmodule.exports = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isFSA = isFSA;\nexports.isError = isError;\n\nvar _lodash = require(\"lodash\");\n\nfunction isFSA(action) {\n  return (0, _lodash.isPlainObject)(action) && (0, _lodash.isString)(action.type) && Object.keys(action).every(isValidKey);\n}\n\nfunction isError(action) {\n  return isFSA(action) && action.error === true;\n}\n\nfunction isValidKey(key) {\n  return ['type', 'payload', 'error', 'meta'].indexOf(key) > -1;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"./Model\");\n\nvar componentUtil = require(\"../util/component\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassManagement = _clazz.enableClassManagement;\nvar parseClassType = _clazz.parseClassType;\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar layout = require(\"../util/layout\");\n\nvar boxLayoutMixin = require(\"./mixin/boxLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\nvar inner = makeInner();\n/**\n * @alias module:echarts/model/Component\n * @constructor\n * @param {Object} option\n * @param {module:echarts/model/Model} parentModel\n * @param {module:echarts/model/Model} ecModel\n */\n\nvar ComponentModel = Model.extend({\n  type: 'component',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  id: '',\n\n  /**\n   * Because simplified concept is probably better, series.name (or component.name)\n   * has been having too many resposibilities:\n   * (1) Generating id (which requires name in option should not be modified).\n   * (2) As an index to mapping series when merging option or calling API (a name\n   * can refer to more then one components, which is convinient is some case).\n   * (3) Display.\n   * @readOnly\n   */\n  name: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  mainType: '',\n\n  /**\n   * @readOnly\n   * @type {string}\n   */\n  subType: '',\n\n  /**\n   * @readOnly\n   * @type {number}\n   */\n  componentIndex: 0,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * @type {module:echarts/model/Global}\n   * @readOnly\n   */\n  ecModel: null,\n\n  /**\n   * key: componentType\n   * value:  Component model list, can not be null.\n   * @type {Object.<string, Array.<module:echarts/model/Model>>}\n   * @readOnly\n   */\n  dependentModels: [],\n\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  uid: null,\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  $constructor: function $constructor(option, parentModel, ecModel, extraOpt) {\n    Model.call(this, option, parentModel, ecModel, extraOpt);\n    this.uid = componentUtil.getUID('ec_cpt_model');\n  },\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? layout.getLayoutParams(option) : {};\n    var themeModel = ecModel.getTheme();\n    zrUtil.merge(option, themeModel.get(this.mainType));\n    zrUtil.merge(option, this.getDefaultOption());\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function mergeOption(option, extraOpt) {\n    zrUtil.merge(this.option, option, true);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      layout.mergeLayoutParam(this.option, option, layoutMode);\n    }\n  },\n  // Hooker after init or mergeOption\n  optionUpdated: function optionUpdated(newCptOption, isInit) {},\n  getDefaultOption: function getDefaultOption() {\n    var fields = inner(this);\n\n    if (!fields.defaultOption) {\n      var optList = [];\n      var Class = this.constructor;\n\n      while (Class) {\n        var opt = Class.prototype.defaultOption;\n        opt && optList.push(opt);\n        Class = Class.superClass;\n      }\n\n      var defaultOption = {};\n\n      for (var i = optList.length - 1; i >= 0; i--) {\n        defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n      }\n\n      fields.defaultOption = defaultOption;\n    }\n\n    return fields.defaultOption;\n  },\n  getReferringComponents: function getReferringComponents(mainType) {\n    return this.ecModel.queryComponents({\n      mainType: mainType,\n      index: this.get(mainType + 'Index', true),\n      id: this.get(mainType + 'Id', true)\n    });\n  }\n}); // Reset ComponentModel.extend, add preConstruct.\n// clazzUtil.enableClassExtend(\n//     ComponentModel,\n//     function (option, parentModel, ecModel, extraOpt) {\n//         // Set dependentModels, componentIndex, name, id, mainType, subType.\n//         zrUtil.extend(this, extraOpt);\n//         this.uid = componentUtil.getUID('componentModel');\n//         // this.setReadOnly([\n//         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n//         //     'dependentModels', 'componentIndex'\n//         // ]);\n//     }\n// );\n// Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n\nenableClassManagement(ComponentModel, {\n  registerWhenExtend: true\n});\ncomponentUtil.enableSubTypeDefaulter(ComponentModel); // Add capability of ComponentModel.topologicalTravel.\n\ncomponentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\nfunction getDependencies(componentType) {\n  var deps = [];\n  zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n    deps = deps.concat(Clazz.prototype.dependencies || []);\n  }); // Ensure main type.\n\n  deps = zrUtil.map(deps, function (type) {\n    return parseClassType(type).main;\n  }); // Hack dataset for convenience.\n\n  if (componentType !== 'dataset' && zrUtil.indexOf(deps, 'dataset') <= 0) {\n    deps.unshift('dataset');\n  }\n\n  return deps;\n}\n\nzrUtil.mixin(ComponentModel, boxLayoutMixin);\nvar _default = ComponentModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _format = require(\"../util/format\");\n\nvar formatTime = _format.formatTime;\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\nvar getTooltipMarker = _format.getTooltipMarker;\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n\nvar colorPaletteMixin = require(\"./mixin/colorPalette\");\n\nvar dataFormatMixin = require(\"../model/mixin/dataFormat\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar _task = require(\"../stream/task\");\n\nvar createTask = _task.createTask;\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar prepareSource = _sourceHelper.prepareSource;\nvar _getSource = _sourceHelper.getSource;\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = modelUtil.makeInner();\nvar SeriesModel = ComponentModel.extend({\n  type: 'series.__base__',\n\n  /**\n   * @readOnly\n   */\n  seriesIndex: 0,\n  // coodinateSystem will be injected in the echarts/CoordinateSystem\n  coordinateSystem: null,\n\n  /**\n   * @type {Object}\n   * @protected\n   */\n  defaultOption: null,\n\n  /**\n   * legend visual provider to the legend component\n   * @type {Object}\n   */\n  // PENDING\n  legendVisualProvider: null,\n\n  /**\n   * Access path of color for visual\n   */\n  visualColorAccessPath: 'itemStyle.color',\n\n  /**\n   * Access path of borderColor for visual\n   */\n  visualBorderColorAccessPath: 'itemStyle.borderColor',\n\n  /**\n   * Support merge layout params.\n   * Only support 'box' now (left/right/top/bottom/width/height).\n   * @type {string|Object} Object can be {ignoreSize: true}\n   * @readOnly\n   */\n  layoutMode: null,\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    /**\n     * @type {number}\n     * @readOnly\n     */\n    this.seriesIndex = this.componentIndex;\n    this.dataTask = createTask({\n      count: dataTaskCount,\n      reset: dataTaskReset\n    });\n    this.dataTask.context = {\n      model: this\n    };\n    this.mergeDefaultAndTheme(option, ecModel);\n    prepareSource(this);\n    var data = this.getInitialData(option, ecModel);\n    wrapData(data, this);\n    this.dataTask.context.data = data;\n    /**\n     * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n     * @private\n     */\n\n    inner(this).dataBeforeProcessed = data; // If we reverse the order (make data firstly, and then make\n    // dataBeforeProcessed by cloneShallow), cloneShallow will\n    // cause data.graph.data !== data when using\n    // module:echarts/data/Graph or module:echarts/data/Tree.\n    // See module:echarts/data/helper/linkList\n    // Theoretically, it is unreasonable to call `seriesModel.getData()` in the model\n    // init or merge stage, because the data can be restored. So we do not `restoreData`\n    // and `setData` here, which forbids calling `seriesModel.getData()` in this stage.\n    // Call `seriesModel.getRawData()` instead.\n    // this.restoreData();\n\n    autoSeriesName(this);\n  },\n\n  /**\n   * Util for merge default and theme to option\n   * @param  {Object} option\n   * @param  {module:echarts/model/Global} ecModel\n   */\n  mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n    var layoutMode = this.layoutMode;\n    var inputPositionParams = layoutMode ? getLayoutParams(option) : {}; // Backward compat: using subType on theme.\n    // But if name duplicate between series subType\n    // (for example: parallel) add component mainType,\n    // add suffix 'Series'.\n\n    var themeSubType = this.subType;\n\n    if (ComponentModel.hasClass(themeSubType)) {\n      themeSubType += 'Series';\n    }\n\n    zrUtil.merge(option, ecModel.getTheme().get(this.subType));\n    zrUtil.merge(option, this.getDefaultOption()); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n    this.fillDataTextStyle(option.data);\n\n    if (layoutMode) {\n      mergeLayoutParam(option, inputPositionParams, layoutMode);\n    }\n  },\n  mergeOption: function mergeOption(newSeriesOption, ecModel) {\n    // this.settingTask.dirty();\n    newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n    this.fillDataTextStyle(newSeriesOption.data);\n    var layoutMode = this.layoutMode;\n\n    if (layoutMode) {\n      mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n    }\n\n    prepareSource(this);\n    var data = this.getInitialData(newSeriesOption, ecModel);\n    wrapData(data, this);\n    this.dataTask.dirty();\n    this.dataTask.context.data = data;\n    inner(this).dataBeforeProcessed = data;\n    autoSeriesName(this);\n  },\n  fillDataTextStyle: function fillDataTextStyle(data) {\n    // Default data label emphasis `show`\n    // FIXME Tree structure data ?\n    // FIXME Performance ?\n    if (data && !zrUtil.isTypedArray(data)) {\n      var props = ['show'];\n\n      for (var i = 0; i < data.length; i++) {\n        if (data[i] && data[i].label) {\n          modelUtil.defaultEmphasis(data[i], 'label', props);\n        }\n      }\n    }\n  },\n\n  /**\n   * Init a data structure from data related option in series\n   * Must be overwritten\n   */\n  getInitialData: function getInitialData() {},\n\n  /**\n   * Append data to list\n   * @param {Object} params\n   * @param {Array|TypedArray} params.data\n   */\n  appendData: function appendData(params) {\n    // FIXME ???\n    // (1) If data from dataset, forbidden append.\n    // (2) support append data of dataset.\n    var data = this.getRawData();\n    data.appendData(params.data);\n  },\n\n  /**\n   * Consider some method like `filter`, `map` need make new data,\n   * We should make sure that `seriesModel.getData()` get correct\n   * data in the stream procedure. So we fetch data from upstream\n   * each time `task.perform` called.\n   * @param {string} [dataType]\n   * @return {module:echarts/data/List}\n   */\n  getData: function getData(dataType) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var data = task.context.data;\n      return dataType == null ? data : data.getLinkedData(dataType);\n    } else {\n      // When series is not alive (that may happen when click toolbox\n      // restore or setOption with not merge mode), series data may\n      // be still need to judge animation or something when graphic\n      // elements want to know whether fade out.\n      return inner(this).data;\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/List} data\n   */\n  setData: function setData(data) {\n    var task = getCurrentTask(this);\n\n    if (task) {\n      var context = task.context; // Consider case: filter, data sample.\n\n      if (context.data !== data && task.modifyOutputEnd) {\n        task.setOutputEnd(data.count());\n      }\n\n      context.outputData = data; // Caution: setData should update context.data,\n      // Because getData may be called multiply in a\n      // single stage and expect to get the data just\n      // set. (For example, AxisProxy, x y both call\n      // getData and setDate sequentially).\n      // So the context.data should be fetched from\n      // upstream each time when a stage starts to be\n      // performed.\n\n      if (task !== this.dataTask) {\n        context.data = data;\n      }\n    }\n\n    inner(this).data = data;\n  },\n\n  /**\n   * @see {module:echarts/data/helper/sourceHelper#getSource}\n   * @return {module:echarts/data/Source} source\n   */\n  getSource: function getSource() {\n    return _getSource(this);\n  },\n\n  /**\n   * Get data before processed\n   * @return {module:echarts/data/List}\n   */\n  getRawData: function getRawData() {\n    return inner(this).dataBeforeProcessed;\n  },\n\n  /**\n   * Get base axis if has coordinate system and has axis.\n   * By default use coordSys.getBaseAxis();\n   * Can be overrided for some chart.\n   * @return {type} description\n   */\n  getBaseAxis: function getBaseAxis() {\n    var coordSys = this.coordinateSystem;\n    return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n  },\n  // FIXME\n\n  /**\n   * Default tooltip formatter\n   *\n   * @param {number} dataIndex\n   * @param {boolean} [multipleSeries=false]\n   * @param {number} [dataType]\n   * @param {string} [renderMode='html'] valid values: 'html' and 'richText'.\n   *                                     'html' is used for rendering tooltip in extra DOM form, and the result\n   *                                     string is used as DOM HTML content.\n   *                                     'richText' is used for rendering tooltip in rich text form, for those where\n   *                                     DOM operation is not supported.\n   * @return {Object} formatted tooltip with `html` and `markers`\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType, renderMode) {\n    var series = this;\n    renderMode = renderMode || 'html';\n    var newLine = renderMode === 'html' ? '<br/>' : '\\n';\n    var isRichText = renderMode === 'richText';\n    var markers = {};\n    var markerId = 0;\n\n    function formatArrayValue(value) {\n      // ??? TODO refactor these logic.\n      // check: category-no-encode-has-axis-data in dataset.html\n      var vertially = zrUtil.reduce(value, function (vertially, val, idx) {\n        var dimItem = data.getDimensionInfo(idx);\n        return vertially |= dimItem && dimItem.tooltip !== false && dimItem.displayName != null;\n      }, 0);\n      var result = [];\n      tooltipDims.length ? zrUtil.each(tooltipDims, function (dim) {\n        setEachItem(retrieveRawValue(data, dataIndex, dim), dim);\n      }) // By default, all dims is used on tooltip.\n      : zrUtil.each(value, setEachItem);\n\n      function setEachItem(val, dim) {\n        var dimInfo = data.getDimensionInfo(dim); // If `dimInfo.tooltip` is not set, show tooltip.\n\n        if (!dimInfo || dimInfo.otherDims.tooltip === false) {\n          return;\n        }\n\n        var dimType = dimInfo.type;\n        var markName = 'sub' + series.seriesIndex + 'at' + markerId;\n        var dimHead = getTooltipMarker({\n          color: color,\n          type: 'subItem',\n          renderMode: renderMode,\n          markerId: markName\n        });\n        var dimHeadStr = typeof dimHead === 'string' ? dimHead : dimHead.content;\n        var valStr = (vertially ? dimHeadStr + encodeHTML(dimInfo.displayName || '-') + ': ' : '') + // FIXME should not format time for raw data?\n        encodeHTML(dimType === 'ordinal' ? val + '' : dimType === 'time' ? multipleSeries ? '' : formatTime('yyyy/MM/dd hh:mm:ss', val) : addCommas(val));\n        valStr && result.push(valStr);\n\n        if (isRichText) {\n          markers[markName] = color;\n          ++markerId;\n        }\n      }\n\n      var newLine = vertially ? isRichText ? '\\n' : '<br/>' : '';\n      var content = newLine + result.join(newLine || ', ');\n      return {\n        renderMode: renderMode,\n        content: content,\n        style: markers\n      };\n    }\n\n    function formatSingleValue(val) {\n      // return encodeHTML(addCommas(val));\n      return {\n        renderMode: renderMode,\n        content: encodeHTML(addCommas(val)),\n        style: markers\n      };\n    }\n\n    var data = this.getData();\n    var tooltipDims = data.mapDimension('defaultedTooltip', true);\n    var tooltipDimLen = tooltipDims.length;\n    var value = this.getRawValue(dataIndex);\n    var isValueArr = zrUtil.isArray(value);\n    var color = data.getItemVisual(dataIndex, 'color');\n\n    if (zrUtil.isObject(color) && color.colorStops) {\n      color = (color.colorStops[0] || {}).color;\n    }\n\n    color = color || 'transparent'; // Complicated rule for pretty tooltip.\n\n    var formattedValue = tooltipDimLen > 1 || isValueArr && !tooltipDimLen ? formatArrayValue(value) : tooltipDimLen ? formatSingleValue(retrieveRawValue(data, dataIndex, tooltipDims[0])) : formatSingleValue(isValueArr ? value[0] : value);\n    var content = formattedValue.content;\n    var markName = series.seriesIndex + 'at' + markerId;\n    var colorEl = getTooltipMarker({\n      color: color,\n      type: 'item',\n      renderMode: renderMode,\n      markerId: markName\n    });\n    markers[markName] = color;\n    ++markerId;\n    var name = data.getName(dataIndex);\n    var seriesName = this.name;\n\n    if (!modelUtil.isNameSpecified(this)) {\n      seriesName = '';\n    }\n\n    seriesName = seriesName ? encodeHTML(seriesName) + (!multipleSeries ? newLine : ': ') : '';\n    var colorStr = typeof colorEl === 'string' ? colorEl : colorEl.content;\n    var html = !multipleSeries ? seriesName + colorStr + (name ? encodeHTML(name) + ': ' + content : content) : colorStr + seriesName + content;\n    return {\n      html: html,\n      markers: markers\n    };\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (env.node) {\n      return false;\n    }\n\n    var animationEnabled = this.getShallow('animation');\n\n    if (animationEnabled) {\n      if (this.getData().count() > this.getShallow('animationThreshold')) {\n        animationEnabled = false;\n      }\n    }\n\n    return animationEnabled;\n  },\n  restoreData: function restoreData() {\n    this.dataTask.dirty();\n  },\n  getColorFromPalette: function getColorFromPalette(name, scope, requestColorNum) {\n    var ecModel = this.ecModel; // PENDING\n\n    var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope, requestColorNum);\n\n    if (!color) {\n      color = ecModel.getColorFromPalette(name, scope, requestColorNum);\n    }\n\n    return color;\n  },\n\n  /**\n   * Use `data.mapDimension(coordDim, true)` instead.\n   * @deprecated\n   */\n  coordDimToDataDim: function coordDimToDataDim(coordDim) {\n    return this.getRawData().mapDimension(coordDim, true);\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressive: function getProgressive() {\n    return this.get('progressive');\n  },\n\n  /**\n   * Get progressive rendering count each step\n   * @return {number}\n   */\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    return this.get('progressiveThreshold');\n  },\n\n  /**\n   * Get data indices for show tooltip content. See tooltip.\n   * @abstract\n   * @param {Array.<string>|string} dim\n   * @param {Array.<number>} value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis\n   * @return {Object} {dataIndices, nestestValue}.\n   */\n  getAxisTooltipData: null,\n\n  /**\n   * See tooltip.\n   * @abstract\n   * @param {number} dataIndex\n   * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n   */\n  getTooltipPosition: null,\n\n  /**\n   * @see {module:echarts/stream/Scheduler}\n   */\n  pipeTask: null,\n\n  /**\n   * Convinient for override in extended class.\n   * @protected\n   * @type {Function}\n   */\n  preventIncremental: null,\n\n  /**\n   * @public\n   * @readOnly\n   * @type {Object}\n   */\n  pipelineContext: null\n});\nzrUtil.mixin(SeriesModel, dataFormatMixin);\nzrUtil.mixin(SeriesModel, colorPaletteMixin);\n/**\n * MUST be called after `prepareSource` called\n * Here we need to make auto series, especially for auto legend. But we\n * do not modify series.name in option to avoid side effects.\n */\n\nfunction autoSeriesName(seriesModel) {\n  // User specified name has higher priority, otherwise it may cause\n  // series can not be queried unexpectedly.\n  var name = seriesModel.name;\n\n  if (!modelUtil.isNameSpecified(seriesModel)) {\n    seriesModel.name = getSeriesAutoName(seriesModel) || name;\n  }\n}\n\nfunction getSeriesAutoName(seriesModel) {\n  var data = seriesModel.getRawData();\n  var dataDims = data.mapDimension('seriesName', true);\n  var nameArr = [];\n  zrUtil.each(dataDims, function (dataDim) {\n    var dimInfo = data.getDimensionInfo(dataDim);\n    dimInfo.displayName && nameArr.push(dimInfo.displayName);\n  });\n  return nameArr.join(' ');\n}\n\nfunction dataTaskCount(context) {\n  return context.model.getRawData().count();\n}\n\nfunction dataTaskReset(context) {\n  var seriesModel = context.model;\n  seriesModel.setData(seriesModel.getRawData().cloneShallow());\n  return dataTaskProgress;\n}\n\nfunction dataTaskProgress(param, context) {\n  // Avoid repead cloneShallow when data just created in reset.\n  if (context.outputData && param.end > context.outputData.count()) {\n    context.model.getRawData().cloneShallow(context.outputData);\n  }\n} // TODO refactor\n\n\nfunction wrapData(data, seriesModel) {\n  zrUtil.each(data.CHANGABLE_METHODS, function (methodName) {\n    data.wrapMethod(methodName, zrUtil.curry(onDataSelfChange, seriesModel));\n  });\n}\n\nfunction onDataSelfChange(seriesModel) {\n  var task = getCurrentTask(seriesModel);\n\n  if (task) {\n    // Consider case: filter, selectRange\n    task.setOutputEnd(this.count());\n  }\n}\n\nfunction getCurrentTask(seriesModel) {\n  var scheduler = (seriesModel.ecModel || {}).scheduler;\n  var pipeline = scheduler && scheduler.getPipeline(seriesModel.uid);\n\n  if (pipeline) {\n    // When pipline finished, the currrentTask keep the last\n    // task (renderTask).\n    var task = pipeline.currentTask;\n\n    if (task) {\n      var agentStubMap = task.agentStubMap;\n\n      if (agentStubMap) {\n        task = agentStubMap.get(seriesModel.uid);\n      }\n    }\n\n    return task;\n  }\n}\n\nvar _default = SeriesModel;\nmodule.exports = _default;","// @flow\n'use strict';\n\nvar key = '__global_unique_id__';\n\nmodule.exports = function () {\n  return global[key] = (global[key] || 0) + 1;\n};","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getLineStyle = makeStyleMapper([['lineWidth', 'width'], ['stroke', 'color'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar _default = {\n  getLineStyle: function getLineStyle(excludes) {\n    var style = _getLineStyle(this, excludes); // Always set lineDash whether dashed, otherwise we can not\n    // erase the previous style when assigning to el.style.\n\n\n    style.lineDash = this.getLineDash(style.lineWidth);\n    return style;\n  },\n  getLineDash: function getLineDash(lineWidth) {\n    if (lineWidth == null) {\n      lineWidth = 1;\n    }\n\n    var lineType = this.get('type');\n    var dotSize = Math.max(lineWidth, 2);\n    var dashSize = lineWidth * 4;\n    return lineType === 'solid' || lineType == null ? // Use `false` but not `null` for the solid line here, because `null` might be\n    // ignored when assigning to `el.style`. e.g., when setting `lineStyle.type` as\n    // `'dashed'` and `emphasis.lineStyle.type` as `'solid'` in graph series, the\n    // `lineDash` gotten form the latter one is not able to erase that from the former\n    // one if using `null` here according to the emhpsis strategy in `util/graphic.js`.\n    false : lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize];\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getAreaStyle = makeStyleMapper([['fill', 'color'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['opacity'], ['shadowColor']]);\n\nvar _default = {\n  getAreaStyle: function getAreaStyle(excludes, includes) {\n    return _getAreaStyle(this, excludes, includes);\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar graphicUtil = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PATH_COLOR = ['textStyle', 'color'];\nvar _default = {\n  /**\n   * Get color property or get color from option.textStyle.color\n   * @param {boolean} [isEmphasis]\n   * @return {string}\n   */\n  getTextColor: function getTextColor(isEmphasis) {\n    var ecModel = this.ecModel;\n    return this.getShallow('color') || (!isEmphasis && ecModel ? ecModel.get(PATH_COLOR) : null);\n  },\n\n  /**\n   * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n   * @return {string}\n   */\n  getFont: function getFont() {\n    return graphicUtil.getFont({\n      fontStyle: this.getShallow('fontStyle'),\n      fontWeight: this.getShallow('fontWeight'),\n      fontSize: this.getShallow('fontSize'),\n      fontFamily: this.getShallow('fontFamily')\n    }, this.ecModel);\n  },\n  getTextRect: function getTextRect(text) {\n    return textContain.getBoundingRect(text, this.getFont(), this.getShallow('align'), this.getShallow('verticalAlign') || this.getShallow('baseline'), this.getShallow('padding'), this.getShallow('lineHeight'), this.getShallow('rich'), this.getShallow('truncateText'));\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar makeStyleMapper = require(\"./makeStyleMapper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _getItemStyle = makeStyleMapper([['fill', 'color'], ['stroke', 'borderColor'], ['lineWidth', 'borderWidth'], ['opacity'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor'], ['textPosition'], ['textAlign']]);\n\nvar _default = {\n  getItemStyle: function getItemStyle(excludes, includes) {\n    var style = _getItemStyle(this, excludes, includes);\n\n    var lineDash = this.getBorderLineDash();\n    lineDash && (style.lineDash = lineDash);\n    return style;\n  },\n  getBorderLineDash: function getBorderLineDash() {\n    var lineType = this.get('borderType');\n    return lineType === 'solid' || lineType == null ? null : lineType === 'dashed' ? [5, 5] : [1, 1];\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _default = {\n  getBoxLayoutParams: function getBoxLayoutParams() {\n    return {\n      left: this.get('left'),\n      top: this.get('top'),\n      right: this.get('right'),\n      bottom: this.get('bottom'),\n      width: this.get('width'),\n      height: this.get('height')\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar platform = ''; // Navigator not exists in node\n\nif (typeof navigator !== 'undefined') {\n  platform = navigator.platform || '';\n}\n\nvar _default = {\n  // backgroundColor: 'rgba(0,0,0,0)',\n  // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n  // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n  // Light colors:\n  // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n  // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n  // Dark colors:\n  color: ['#c23531', '#2f4554', '#61a0a8', '#d48265', '#91c7ae', '#749f83', '#ca8622', '#bda29a', '#6e7074', '#546570', '#c4ccd3'],\n  gradientColor: ['#f6efa6', '#d88273', '#bf444c'],\n  // If xAxis and yAxis declared, grid is created by default.\n  // grid: {},\n  textStyle: {\n    // color: '#000',\n    // decoration: 'none',\n    // PENDING\n    fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n    // fontFamily: 'Arial, Verdana, sans-serif',\n    fontSize: 12,\n    fontStyle: 'normal',\n    fontWeight: 'normal'\n  },\n  // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n  // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n  // Default is source-over\n  blendMode: null,\n  animation: 'auto',\n  animationDuration: 1000,\n  animationDurationUpdate: 300,\n  animationEasing: 'exponentialOut',\n  animationEasingUpdate: 'cubicOut',\n  animationThreshold: 2000,\n  // Configuration for progressive/incremental rendering\n  progressiveThreshold: 3000,\n  progressive: 400,\n  // Threshold of if use single hover layer to optimize.\n  // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n  // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n  // which is unexpected.\n  // see example <echarts/test/heatmap-large.html>.\n  hoverLayerThreshold: 3000,\n  // See: module:echarts/scale/Time\n  useUTC: false\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar ComponentModel = require(\"./Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\nvar each = zrUtil.each;\nvar clone = zrUtil.clone;\nvar map = zrUtil.map;\nvar merge = zrUtil.merge;\nvar QUERY_REG = /^(min|max)?(.+)$/;\n/**\n * TERM EXPLANATIONS:\n *\n * [option]:\n *\n *     An object that contains definitions of components. For example:\n *     var option = {\n *         title: {...},\n *         legend: {...},\n *         visualMap: {...},\n *         series: [\n *             {data: [...]},\n *             {data: [...]},\n *             ...\n *         ]\n *     };\n *\n * [rawOption]:\n *\n *     An object input to echarts.setOption. 'rawOption' may be an\n *     'option', or may be an object contains multi-options. For example:\n *     var option = {\n *         baseOption: {\n *             title: {...},\n *             legend: {...},\n *             series: [\n *                 {data: [...]},\n *                 {data: [...]},\n *                 ...\n *             ]\n *         },\n *         timeline: {...},\n *         options: [\n *             {title: {...}, series: {data: [...]}},\n *             {title: {...}, series: {data: [...]}},\n *             ...\n *         ],\n *         media: [\n *             {\n *                 query: {maxWidth: 320},\n *                 option: {series: {x: 20}, visualMap: {show: false}}\n *             },\n *             {\n *                 query: {minWidth: 320, maxWidth: 720},\n *                 option: {series: {x: 500}, visualMap: {show: true}}\n *             },\n *             {\n *                 option: {series: {x: 1200}, visualMap: {show: true}}\n *             }\n *         ]\n *     };\n *\n * @alias module:echarts/model/OptionManager\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction OptionManager(api) {\n  /**\n   * @private\n   * @type {module:echarts/ExtensionAPI}\n   */\n  this._api = api;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._timelineOptions = [];\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n\n  this._mediaList = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._mediaDefault;\n  /**\n   * -1, means default.\n   * empty means no media.\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._currentMediaIndices = [];\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._optionBackup;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._newBaseOption;\n} // timeline.notMerge is not supported in ec3. Firstly there is rearly\n// case that notMerge is needed. Secondly supporting 'notMerge' requires\n// rawOption cloned and backuped when timeline changed, which does no\n// good to performance. What's more, that both timeline and setOption\n// method supply 'notMerge' brings complex and some problems.\n// Consider this case:\n// (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n// (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n\nOptionManager.prototype = {\n  constructor: OptionManager,\n\n  /**\n   * @public\n   * @param {Object} rawOption Raw option.\n   * @param {module:echarts/model/Global} ecModel\n   * @param {Array.<Function>} optionPreprocessorFuncs\n   * @return {Object} Init option\n   */\n  setOption: function setOption(rawOption, optionPreprocessorFuncs) {\n    if (rawOption) {\n      // That set dat primitive is dangerous if user reuse the data when setOption again.\n      zrUtil.each(modelUtil.normalizeToArray(rawOption.series), function (series) {\n        series && series.data && zrUtil.isTypedArray(series.data) && zrUtil.setAsPrimitive(series.data);\n      });\n    } // Caution: some series modify option data, if do not clone,\n    // it should ensure that the repeat modify correctly\n    // (create a new object when modify itself).\n\n\n    rawOption = clone(rawOption); // FIXME\n    // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n    var oldOptionBackup = this._optionBackup;\n    var newParsedOption = parseRawOption.call(this, rawOption, optionPreprocessorFuncs, !oldOptionBackup);\n    this._newBaseOption = newParsedOption.baseOption; // For setOption at second time (using merge mode);\n\n    if (oldOptionBackup) {\n      // Only baseOption can be merged.\n      mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption); // For simplicity, timeline options and media options do not support merge,\n      // that is, if you `setOption` twice and both has timeline options, the latter\n      // timeline opitons will not be merged to the formers, but just substitude them.\n\n      if (newParsedOption.timelineOptions.length) {\n        oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n      }\n\n      if (newParsedOption.mediaList.length) {\n        oldOptionBackup.mediaList = newParsedOption.mediaList;\n      }\n\n      if (newParsedOption.mediaDefault) {\n        oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n      }\n    } else {\n      this._optionBackup = newParsedOption;\n    }\n  },\n\n  /**\n   * @param {boolean} isRecreate\n   * @return {Object}\n   */\n  mountOption: function mountOption(isRecreate) {\n    var optionBackup = this._optionBackup; // TODO\n    // 如果没有reset功能则不clone。\n\n    this._timelineOptions = map(optionBackup.timelineOptions, clone);\n    this._mediaList = map(optionBackup.mediaList, clone);\n    this._mediaDefault = clone(optionBackup.mediaDefault);\n    this._currentMediaIndices = [];\n    return clone(isRecreate // this._optionBackup.baseOption, which is created at the first `setOption`\n    // called, and is merged into every new option by inner method `mergeOption`\n    // each time `setOption` called, can be only used in `isRecreate`, because\n    // its reliability is under suspicion. In other cases option merge is\n    // performed by `model.mergeOption`.\n    ? optionBackup.baseOption : this._newBaseOption);\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Object}\n   */\n  getTimelineOption: function getTimelineOption(ecModel) {\n    var option;\n    var timelineOptions = this._timelineOptions;\n\n    if (timelineOptions.length) {\n      // getTimelineOption can only be called after ecModel inited,\n      // so we can get currentIndex from timelineModel.\n      var timelineModel = ecModel.getComponent('timeline');\n\n      if (timelineModel) {\n        option = clone(timelineOptions[timelineModel.getCurrentIndex()], true);\n      }\n    }\n\n    return option;\n  },\n\n  /**\n   * @param {module:echarts/model/Global} ecModel\n   * @return {Array.<Object>}\n   */\n  getMediaOption: function getMediaOption(ecModel) {\n    var ecWidth = this._api.getWidth();\n\n    var ecHeight = this._api.getHeight();\n\n    var mediaList = this._mediaList;\n    var mediaDefault = this._mediaDefault;\n    var indices = [];\n    var result = []; // No media defined.\n\n    if (!mediaList.length && !mediaDefault) {\n      return result;\n    } // Multi media may be applied, the latter defined media has higher priority.\n\n\n    for (var i = 0, len = mediaList.length; i < len; i++) {\n      if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n        indices.push(i);\n      }\n    } // FIXME\n    // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n\n\n    if (!indices.length && mediaDefault) {\n      indices = [-1];\n    }\n\n    if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n      result = map(indices, function (index) {\n        return clone(index === -1 ? mediaDefault.option : mediaList[index].option);\n      });\n    } // Otherwise return nothing.\n\n\n    this._currentMediaIndices = indices;\n    return result;\n  }\n};\n\nfunction parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n  var timelineOptions = [];\n  var mediaList = [];\n  var mediaDefault;\n  var baseOption; // Compatible with ec2.\n\n  var timelineOpt = rawOption.timeline;\n\n  if (rawOption.baseOption) {\n    baseOption = rawOption.baseOption;\n  } // For timeline\n\n\n  if (timelineOpt || rawOption.options) {\n    baseOption = baseOption || {};\n    timelineOptions = (rawOption.options || []).slice();\n  } // For media query\n\n\n  if (rawOption.media) {\n    baseOption = baseOption || {};\n    var media = rawOption.media;\n    each(media, function (singleMedia) {\n      if (singleMedia && singleMedia.option) {\n        if (singleMedia.query) {\n          mediaList.push(singleMedia);\n        } else if (!mediaDefault) {\n          // Use the first media default.\n          mediaDefault = singleMedia;\n        }\n      }\n    });\n  } // For normal option\n\n\n  if (!baseOption) {\n    baseOption = rawOption;\n  } // Set timelineOpt to baseOption in ec3,\n  // which is convenient for merge option.\n\n\n  if (!baseOption.timeline) {\n    baseOption.timeline = timelineOpt;\n  } // Preprocess.\n\n\n  each([baseOption].concat(timelineOptions).concat(zrUtil.map(mediaList, function (media) {\n    return media.option;\n  })), function (option) {\n    each(optionPreprocessorFuncs, function (preProcess) {\n      preProcess(option, isNew);\n    });\n  });\n  return {\n    baseOption: baseOption,\n    timelineOptions: timelineOptions,\n    mediaDefault: mediaDefault,\n    mediaList: mediaList\n  };\n}\n/**\n * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n * Support: width, height, aspectRatio\n * Can use max or min as prefix.\n */\n\n\nfunction applyMediaQuery(query, ecWidth, ecHeight) {\n  var realMap = {\n    width: ecWidth,\n    height: ecHeight,\n    aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n\n  };\n  var applicatable = true;\n  zrUtil.each(query, function (value, attr) {\n    var matched = attr.match(QUERY_REG);\n\n    if (!matched || !matched[1] || !matched[2]) {\n      return;\n    }\n\n    var operator = matched[1];\n    var realAttr = matched[2].toLowerCase();\n\n    if (!compare(realMap[realAttr], value, operator)) {\n      applicatable = false;\n    }\n  });\n  return applicatable;\n}\n\nfunction compare(real, expect, operator) {\n  if (operator === 'min') {\n    return real >= expect;\n  } else if (operator === 'max') {\n    return real <= expect;\n  } else {\n    // Equals\n    return real === expect;\n  }\n}\n\nfunction indicesEquals(indices1, indices2) {\n  // indices is always order by asc and has only finite number.\n  return indices1.join(',') === indices2.join(',');\n}\n/**\n * Consider case:\n * `chart.setOption(opt1);`\n * Then user do some interaction like dataZoom, dataView changing.\n * `chart.setOption(opt2);`\n * Then user press 'reset button' in toolbox.\n *\n * After doing that all of the interaction effects should be reset, the\n * chart should be the same as the result of invoke\n * `chart.setOption(opt1); chart.setOption(opt2);`.\n *\n * Although it is not able ensure that\n * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n * `chart.setOption(merge(opt1, opt2));` exactly,\n * this might be the only simple way to implement that feature.\n *\n * MEMO: We've considered some other approaches:\n * 1. Each model handle its self restoration but not uniform treatment.\n *     (Too complex in logic and error-prone)\n * 2. Use a shadow ecModel. (Performace expensive)\n */\n\n\nfunction mergeOption(oldOption, newOption) {\n  newOption = newOption || {};\n  each(newOption, function (newCptOpt, mainType) {\n    if (newCptOpt == null) {\n      return;\n    }\n\n    var oldCptOpt = oldOption[mainType];\n\n    if (!ComponentModel.hasClass(mainType)) {\n      oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n    } else {\n      newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n      oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n      var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n      oldOption[mainType] = map(mapResult, function (item) {\n        return item.option && item.exist ? merge(item.exist, item.option, true) : item.exist || item.option;\n      });\n    }\n  });\n}\n\nvar _default = OptionManager;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isArray = _util.isArray;\nvar isObject = _util.isObject;\n\nvar compatStyle = require(\"./helper/compatStyle\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Compatitable with 2.0\n\nfunction get(opt, path) {\n  path = path.split(',');\n  var obj = opt;\n\n  for (var i = 0; i < path.length; i++) {\n    obj = obj && obj[path[i]];\n\n    if (obj == null) {\n      break;\n    }\n  }\n\n  return obj;\n}\n\nfunction set(opt, path, val, overwrite) {\n  path = path.split(',');\n  var obj = opt;\n  var key;\n\n  for (var i = 0; i < path.length - 1; i++) {\n    key = path[i];\n\n    if (obj[key] == null) {\n      obj[key] = {};\n    }\n\n    obj = obj[key];\n  }\n\n  if (overwrite || obj[path[i]] == null) {\n    obj[path[i]] = val;\n  }\n}\n\nfunction compatLayoutProperties(option) {\n  each(LAYOUT_PROPERTIES, function (prop) {\n    if (prop[0] in option && !(prop[1] in option)) {\n      option[prop[1]] = option[prop[0]];\n    }\n  });\n}\n\nvar LAYOUT_PROPERTIES = [['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']];\nvar COMPATITABLE_COMPONENTS = ['grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'];\n\nfunction _default(option, isTheme) {\n  compatStyle(option, isTheme); // Make sure series array for model initialization.\n\n  option.series = normalizeToArray(option.series);\n  each(option.series, function (seriesOpt) {\n    if (!isObject(seriesOpt)) {\n      return;\n    }\n\n    var seriesType = seriesOpt.type;\n\n    if (seriesType === 'line') {\n      if (seriesOpt.clipOverflow != null) {\n        seriesOpt.clip = seriesOpt.clipOverflow;\n      }\n    } else if (seriesType === 'pie' || seriesType === 'gauge') {\n      if (seriesOpt.clockWise != null) {\n        seriesOpt.clockwise = seriesOpt.clockWise;\n      }\n    } else if (seriesType === 'gauge') {\n      var pointerColor = get(seriesOpt, 'pointer.color');\n      pointerColor != null && set(seriesOpt, 'itemStyle.color', pointerColor);\n    }\n\n    compatLayoutProperties(seriesOpt);\n  }); // dataRange has changed to visualMap\n\n  if (option.dataRange) {\n    option.visualMap = option.dataRange;\n  }\n\n  each(COMPATITABLE_COMPONENTS, function (componentName) {\n    var options = option[componentName];\n\n    if (options) {\n      if (!isArray(options)) {\n        options = [options];\n      }\n\n      each(options, function (option) {\n        compatLayoutProperties(option);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar isObject = zrUtil.isObject;\nvar POSSIBLE_STYLES = ['areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle', 'chordStyle', 'label', 'labelLine'];\n\nfunction compatEC2ItemStyle(opt) {\n  var itemStyleOpt = opt && opt.itemStyle;\n\n  if (!itemStyleOpt) {\n    return;\n  }\n\n  for (var i = 0, len = POSSIBLE_STYLES.length; i < len; i++) {\n    var styleName = POSSIBLE_STYLES[i];\n    var normalItemStyleOpt = itemStyleOpt.normal;\n    var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n\n    if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].normal) {\n        opt[styleName].normal = normalItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n      }\n\n      normalItemStyleOpt[styleName] = null;\n    }\n\n    if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n      opt[styleName] = opt[styleName] || {};\n\n      if (!opt[styleName].emphasis) {\n        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n      } else {\n        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n      }\n\n      emphasisItemStyleOpt[styleName] = null;\n    }\n  }\n}\n\nfunction convertNormalEmphasis(opt, optType, useExtend) {\n  if (opt && opt[optType] && (opt[optType].normal || opt[optType].emphasis)) {\n    var normalOpt = opt[optType].normal;\n    var emphasisOpt = opt[optType].emphasis;\n\n    if (normalOpt) {\n      // Timeline controlStyle has other properties besides normal and emphasis\n      if (useExtend) {\n        opt[optType].normal = opt[optType].emphasis = null;\n        zrUtil.defaults(opt[optType], normalOpt);\n      } else {\n        opt[optType] = normalOpt;\n      }\n    }\n\n    if (emphasisOpt) {\n      opt.emphasis = opt.emphasis || {};\n      opt.emphasis[optType] = emphasisOpt;\n    }\n  }\n}\n\nfunction removeEC3NormalStatus(opt) {\n  convertNormalEmphasis(opt, 'itemStyle');\n  convertNormalEmphasis(opt, 'lineStyle');\n  convertNormalEmphasis(opt, 'areaStyle');\n  convertNormalEmphasis(opt, 'label');\n  convertNormalEmphasis(opt, 'labelLine'); // treemap\n\n  convertNormalEmphasis(opt, 'upperLabel'); // graph\n\n  convertNormalEmphasis(opt, 'edgeLabel');\n}\n\nfunction compatTextStyle(opt, propName) {\n  // Check whether is not object (string\\null\\undefined ...)\n  var labelOptSingle = isObject(opt) && opt[propName];\n  var textStyle = isObject(labelOptSingle) && labelOptSingle.textStyle;\n\n  if (textStyle) {\n    for (var i = 0, len = modelUtil.TEXT_STYLE_OPTIONS.length; i < len; i++) {\n      var propName = modelUtil.TEXT_STYLE_OPTIONS[i];\n\n      if (textStyle.hasOwnProperty(propName)) {\n        labelOptSingle[propName] = textStyle[propName];\n      }\n    }\n  }\n}\n\nfunction compatEC3CommonStyles(opt) {\n  if (opt) {\n    removeEC3NormalStatus(opt);\n    compatTextStyle(opt, 'label');\n    opt.emphasis && compatTextStyle(opt.emphasis, 'label');\n  }\n}\n\nfunction processSeries(seriesOpt) {\n  if (!isObject(seriesOpt)) {\n    return;\n  }\n\n  compatEC2ItemStyle(seriesOpt);\n  removeEC3NormalStatus(seriesOpt);\n  compatTextStyle(seriesOpt, 'label'); // treemap\n\n  compatTextStyle(seriesOpt, 'upperLabel'); // graph\n\n  compatTextStyle(seriesOpt, 'edgeLabel');\n\n  if (seriesOpt.emphasis) {\n    compatTextStyle(seriesOpt.emphasis, 'label'); // treemap\n\n    compatTextStyle(seriesOpt.emphasis, 'upperLabel'); // graph\n\n    compatTextStyle(seriesOpt.emphasis, 'edgeLabel');\n  }\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint) {\n    compatEC2ItemStyle(markPoint);\n    compatEC3CommonStyles(markPoint);\n  }\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine) {\n    compatEC2ItemStyle(markLine);\n    compatEC3CommonStyles(markLine);\n  }\n\n  var markArea = seriesOpt.markArea;\n\n  if (markArea) {\n    compatEC3CommonStyles(markArea);\n  }\n\n  var data = seriesOpt.data; // Break with ec3: if `setOption` again, there may be no `type` in option,\n  // then the backward compat based on option type will not be performed.\n\n  if (seriesOpt.type === 'graph') {\n    data = data || seriesOpt.nodes;\n    var edgeData = seriesOpt.links || seriesOpt.edges;\n\n    if (edgeData && !zrUtil.isTypedArray(edgeData)) {\n      for (var i = 0; i < edgeData.length; i++) {\n        compatEC3CommonStyles(edgeData[i]);\n      }\n    }\n\n    zrUtil.each(seriesOpt.categories, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  }\n\n  if (data && !zrUtil.isTypedArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      compatEC3CommonStyles(data[i]);\n    }\n  } // mark point data\n\n\n  var markPoint = seriesOpt.markPoint;\n\n  if (markPoint && markPoint.data) {\n    var mpData = markPoint.data;\n\n    for (var i = 0; i < mpData.length; i++) {\n      compatEC3CommonStyles(mpData[i]);\n    }\n  } // mark line data\n\n\n  var markLine = seriesOpt.markLine;\n\n  if (markLine && markLine.data) {\n    var mlData = markLine.data;\n\n    for (var i = 0; i < mlData.length; i++) {\n      if (zrUtil.isArray(mlData[i])) {\n        compatEC3CommonStyles(mlData[i][0]);\n        compatEC3CommonStyles(mlData[i][1]);\n      } else {\n        compatEC3CommonStyles(mlData[i]);\n      }\n    }\n  } // Series\n\n\n  if (seriesOpt.type === 'gauge') {\n    compatTextStyle(seriesOpt, 'axisLabel');\n    compatTextStyle(seriesOpt, 'title');\n    compatTextStyle(seriesOpt, 'detail');\n  } else if (seriesOpt.type === 'treemap') {\n    convertNormalEmphasis(seriesOpt.breadcrumb, 'itemStyle');\n    zrUtil.each(seriesOpt.levels, function (opt) {\n      removeEC3NormalStatus(opt);\n    });\n  } else if (seriesOpt.type === 'tree') {\n    removeEC3NormalStatus(seriesOpt.leaves);\n  } // sunburst starts from ec4, so it does not need to compat levels.\n\n}\n\nfunction toArr(o) {\n  return zrUtil.isArray(o) ? o : o ? [o] : [];\n}\n\nfunction toObj(o) {\n  return (zrUtil.isArray(o) ? o[0] : o) || {};\n}\n\nfunction _default(option, isTheme) {\n  each(toArr(option.series), function (seriesOpt) {\n    isObject(seriesOpt) && processSeries(seriesOpt);\n  });\n  var axes = ['xAxis', 'yAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'parallelAxis', 'radar'];\n  isTheme && axes.push('valueAxis', 'categoryAxis', 'logAxis', 'timeAxis');\n  each(axes, function (axisName) {\n    each(toArr(option[axisName]), function (axisOpt) {\n      if (axisOpt) {\n        compatTextStyle(axisOpt, 'axisLabel');\n        compatTextStyle(axisOpt.axisPointer, 'label');\n      }\n    });\n  });\n  each(toArr(option.parallel), function (parallelOpt) {\n    var parallelAxisDefault = parallelOpt && parallelOpt.parallelAxisDefault;\n    compatTextStyle(parallelAxisDefault, 'axisLabel');\n    compatTextStyle(parallelAxisDefault && parallelAxisDefault.axisPointer, 'label');\n  });\n  each(toArr(option.calendar), function (calendarOpt) {\n    convertNormalEmphasis(calendarOpt, 'itemStyle');\n    compatTextStyle(calendarOpt, 'dayLabel');\n    compatTextStyle(calendarOpt, 'monthLabel');\n    compatTextStyle(calendarOpt, 'yearLabel');\n  }); // radar.name.textStyle\n\n  each(toArr(option.radar), function (radarOpt) {\n    compatTextStyle(radarOpt, 'name');\n  });\n  each(toArr(option.geo), function (geoOpt) {\n    if (isObject(geoOpt)) {\n      compatEC3CommonStyles(geoOpt);\n      each(toArr(geoOpt.regions), function (regionObj) {\n        compatEC3CommonStyles(regionObj);\n      });\n    }\n  });\n  each(toArr(option.timeline), function (timelineOpt) {\n    compatEC3CommonStyles(timelineOpt);\n    convertNormalEmphasis(timelineOpt, 'label');\n    convertNormalEmphasis(timelineOpt, 'itemStyle');\n    convertNormalEmphasis(timelineOpt, 'controlStyle', true);\n    var data = timelineOpt.data;\n    zrUtil.isArray(data) && zrUtil.each(data, function (item) {\n      if (zrUtil.isObject(item)) {\n        convertNormalEmphasis(item, 'label');\n        convertNormalEmphasis(item, 'itemStyle');\n      }\n    });\n  });\n  each(toArr(option.toolbox), function (toolboxOpt) {\n    convertNormalEmphasis(toolboxOpt, 'iconStyle');\n    each(toolboxOpt.feature, function (featureOpt) {\n      convertNormalEmphasis(featureOpt, 'iconStyle');\n    });\n  });\n  compatTextStyle(toObj(option.axisPointer), 'label');\n  compatTextStyle(toObj(option.tooltip).axisPointer, 'label');\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) [Caution]: the logic is correct based on the premises:\n//     data processing stage is blocked in stream.\n//     See <module:echarts/stream/Scheduler#performDataProcessorTasks>\n// (2) Only register once when import repeatly.\n//     Should be executed after series filtered and before stack calculation.\n\nfunction _default(ecModel) {\n  var stackInfoMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var stack = seriesModel.get('stack'); // Compatibal: when `stack` is set as '', do not stack.\n\n    if (stack) {\n      var stackInfoList = stackInfoMap.get(stack) || stackInfoMap.set(stack, []);\n      var data = seriesModel.getData();\n      var stackInfo = {\n        // Used for calculate axis extent automatically.\n        stackResultDimension: data.getCalculationInfo('stackResultDimension'),\n        stackedOverDimension: data.getCalculationInfo('stackedOverDimension'),\n        stackedDimension: data.getCalculationInfo('stackedDimension'),\n        stackedByDimension: data.getCalculationInfo('stackedByDimension'),\n        isStackedByIndex: data.getCalculationInfo('isStackedByIndex'),\n        data: data,\n        seriesModel: seriesModel\n      }; // If stacked on axis that do not support data stack.\n\n      if (!stackInfo.stackedDimension || !(stackInfo.isStackedByIndex || stackInfo.stackedByDimension)) {\n        return;\n      }\n\n      stackInfoList.length && data.setCalculationInfo('stackedOnSeries', stackInfoList[stackInfoList.length - 1].seriesModel);\n      stackInfoList.push(stackInfo);\n    }\n  });\n  stackInfoMap.each(calculateStack);\n}\n\nfunction calculateStack(stackInfoList) {\n  each(stackInfoList, function (targetStackInfo, idxInStack) {\n    var resultVal = [];\n    var resultNaN = [NaN, NaN];\n    var dims = [targetStackInfo.stackResultDimension, targetStackInfo.stackedOverDimension];\n    var targetData = targetStackInfo.data;\n    var isStackedByIndex = targetStackInfo.isStackedByIndex; // Should not write on raw data, because stack series model list changes\n    // depending on legend selection.\n\n    var newData = targetData.map(dims, function (v0, v1, dataIndex) {\n      var sum = targetData.get(targetStackInfo.stackedDimension, dataIndex); // Consider `connectNulls` of line area, if value is NaN, stackedOver\n      // should also be NaN, to draw a appropriate belt area.\n\n      if (isNaN(sum)) {\n        return resultNaN;\n      }\n\n      var byValue;\n      var stackedDataRawIndex;\n\n      if (isStackedByIndex) {\n        stackedDataRawIndex = targetData.getRawIndex(dataIndex);\n      } else {\n        byValue = targetData.get(targetStackInfo.stackedByDimension, dataIndex);\n      } // If stackOver is NaN, chart view will render point on value start.\n\n\n      var stackedOver = NaN;\n\n      for (var j = idxInStack - 1; j >= 0; j--) {\n        var stackInfo = stackInfoList[j]; // Has been optimized by inverted indices on `stackedByDimension`.\n\n        if (!isStackedByIndex) {\n          stackedDataRawIndex = stackInfo.data.rawIndexOf(stackInfo.stackedByDimension, byValue);\n        }\n\n        if (stackedDataRawIndex >= 0) {\n          var val = stackInfo.data.getByRawIndex(stackInfo.stackResultDimension, stackedDataRawIndex); // Considering positive stack, negative stack and empty data\n\n          if (sum >= 0 && val > 0 || // Positive stack\n          sum <= 0 && val < 0 // Negative stack\n          ) {\n              sum += val;\n              stackedOver = val;\n              break;\n            }\n        }\n      }\n\n      resultVal[0] = sum;\n      resultVal[1] = stackedOver;\n      return resultVal;\n    });\n    targetData.hostModel.setData(newData); // Update for consequent calculation\n\n    targetStackInfo.data = newData;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Gradient = require(\"zrender/lib/graphic/Gradient\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isFunction = _util.isFunction;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = {\n  createOnAllSeries: true,\n  performRawSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.color').split('.'); // Set in itemStyle\n\n    var color = seriesModel.get(colorAccessPath);\n    var colorCallback = isFunction(color) && !(color instanceof Gradient) ? color : null; // Default color\n\n    if (!color || colorCallback) {\n      color = seriesModel.getColorFromPalette( // TODO series count changed.\n      seriesModel.name, null, ecModel.getSeriesCount());\n    }\n\n    data.setVisual('color', color);\n    var borderColorAccessPath = (seriesModel.visualBorderColorAccessPath || 'itemStyle.borderColor').split('.');\n    var borderColor = seriesModel.get(borderColorAccessPath);\n    data.setVisual('borderColor', borderColor); // Only visible series has each data be visual encoded\n\n    if (!ecModel.isSeriesFiltered(seriesModel)) {\n      if (colorCallback) {\n        data.each(function (idx) {\n          data.setItemVisual(idx, 'color', colorCallback(seriesModel.getDataParams(idx)));\n        });\n      } // itemStyle in each data item\n\n\n      var dataEach = function dataEach(data, idx) {\n        var itemModel = data.getItemModel(idx);\n        var color = itemModel.get(colorAccessPath, true);\n        var borderColor = itemModel.get(borderColorAccessPath, true);\n\n        if (color != null) {\n          data.setItemVisual(idx, 'color', color);\n        }\n\n        if (borderColor != null) {\n          data.setItemVisual(idx, 'borderColor', borderColor);\n        }\n      };\n\n      return {\n        dataEach: data.hasItemOption ? dataEach : null\n      };\n    }\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../lang\");\n\nvar _dataProvider = require(\"../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(dom, ecModel) {\n  var ariaModel = ecModel.getModel('aria');\n\n  if (!ariaModel.get('show')) {\n    return;\n  } else if (ariaModel.get('description')) {\n    dom.setAttribute('aria-label', ariaModel.get('description'));\n    return;\n  }\n\n  var seriesCnt = 0;\n  ecModel.eachSeries(function (seriesModel, idx) {\n    ++seriesCnt;\n  }, this);\n  var maxDataCnt = ariaModel.get('data.maxCount') || 10;\n  var maxSeriesCnt = ariaModel.get('series.maxCount') || 10;\n  var displaySeriesCnt = Math.min(seriesCnt, maxSeriesCnt);\n  var ariaLabel;\n\n  if (seriesCnt < 1) {\n    // No series, no aria label\n    return;\n  } else {\n    var title = getTitle();\n\n    if (title) {\n      ariaLabel = replace(getConfig('general.withTitle'), {\n        title: title\n      });\n    } else {\n      ariaLabel = getConfig('general.withoutTitle');\n    }\n\n    var seriesLabels = [];\n    var prefix = seriesCnt > 1 ? 'series.multiple.prefix' : 'series.single.prefix';\n    ariaLabel += replace(getConfig(prefix), {\n      seriesCount: seriesCnt\n    });\n    ecModel.eachSeries(function (seriesModel, idx) {\n      if (idx < displaySeriesCnt) {\n        var seriesLabel;\n        var seriesName = seriesModel.get('name');\n        var seriesTpl = 'series.' + (seriesCnt > 1 ? 'multiple' : 'single') + '.';\n        seriesLabel = getConfig(seriesName ? seriesTpl + 'withName' : seriesTpl + 'withoutName');\n        seriesLabel = replace(seriesLabel, {\n          seriesId: seriesModel.seriesIndex,\n          seriesName: seriesModel.get('name'),\n          seriesType: getSeriesTypeName(seriesModel.subType)\n        });\n        var data = seriesModel.getData();\n        window.data = data;\n\n        if (data.count() > maxDataCnt) {\n          // Show part of data\n          seriesLabel += replace(getConfig('data.partialData'), {\n            displayCnt: maxDataCnt\n          });\n        } else {\n          seriesLabel += getConfig('data.allData');\n        }\n\n        var dataLabels = [];\n\n        for (var i = 0; i < data.count(); i++) {\n          if (i < maxDataCnt) {\n            var name = data.getName(i);\n            var value = retrieveRawValue(data, i);\n            dataLabels.push(replace(name ? getConfig('data.withName') : getConfig('data.withoutName'), {\n              name: name,\n              value: value\n            }));\n          }\n        }\n\n        seriesLabel += dataLabels.join(getConfig('data.separator.middle')) + getConfig('data.separator.end');\n        seriesLabels.push(seriesLabel);\n      }\n    });\n    ariaLabel += seriesLabels.join(getConfig('series.multiple.separator.middle')) + getConfig('series.multiple.separator.end');\n    dom.setAttribute('aria-label', ariaLabel);\n  }\n\n  function replace(str, keyValues) {\n    if (typeof str !== 'string') {\n      return str;\n    }\n\n    var result = str;\n    zrUtil.each(keyValues, function (value, key) {\n      result = result.replace(new RegExp('\\\\{\\\\s*' + key + '\\\\s*\\\\}', 'g'), value);\n    });\n    return result;\n  }\n\n  function getConfig(path) {\n    var userConfig = ariaModel.get(path);\n\n    if (userConfig == null) {\n      var pathArr = path.split('.');\n      var result = lang.aria;\n\n      for (var i = 0; i < pathArr.length; ++i) {\n        result = result[pathArr[i]];\n      }\n\n      return result;\n    } else {\n      return userConfig;\n    }\n  }\n\n  function getTitle() {\n    var title = ecModel.getModel('title').option;\n\n    if (title && title.length) {\n      title = title[0];\n    }\n\n    return title && title.text;\n  }\n\n  function getSeriesTypeName(type) {\n    return lang.series.typeNames[type] || '自定义图';\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI = Math.PI;\n/**\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} [opts]\n * @param {string} [opts.text]\n * @param {string} [opts.color]\n * @param {string} [opts.textColor]\n * @return {module:zrender/Element}\n */\n\nfunction _default(api, opts) {\n  opts = opts || {};\n  zrUtil.defaults(opts, {\n    text: 'loading',\n    textColor: '#000',\n    fontSize: '12px',\n    maskColor: 'rgba(255, 255, 255, 0.8)',\n    showSpinner: true,\n    color: '#c23531',\n    spinnerRadius: 10,\n    lineWidth: 5,\n    zlevel: 0\n  });\n  var group = new graphic.Group();\n  var mask = new graphic.Rect({\n    style: {\n      fill: opts.maskColor\n    },\n    zlevel: opts.zlevel,\n    z: 10000\n  });\n  group.add(mask);\n  var font = opts.fontSize + ' sans-serif';\n  var labelRect = new graphic.Rect({\n    style: {\n      fill: 'none',\n      text: opts.text,\n      font: font,\n      textPosition: 'right',\n      textDistance: 10,\n      textFill: opts.textColor\n    },\n    zlevel: opts.zlevel,\n    z: 10001\n  });\n  group.add(labelRect);\n\n  if (opts.showSpinner) {\n    var arc = new graphic.Arc({\n      shape: {\n        startAngle: -PI / 2,\n        endAngle: -PI / 2 + 0.1,\n        r: opts.spinnerRadius\n      },\n      style: {\n        stroke: opts.color,\n        lineCap: 'round',\n        lineWidth: opts.lineWidth\n      },\n      zlevel: opts.zlevel,\n      z: 10001\n    });\n    arc.animateShape(true).when(1000, {\n      endAngle: PI * 3 / 2\n    }).start('circularInOut');\n    arc.animateShape(true).when(1000, {\n      startAngle: PI * 3 / 2\n    }).delay(300).start('circularInOut');\n    group.add(arc);\n  } // Inject resize\n\n\n  group.resize = function () {\n    var textWidth = textContain.getWidth(opts.text, font);\n    var r = opts.showSpinner ? opts.spinnerRadius : 0; // cx = (containerWidth - arcDiameter - textDistance - textWidth) / 2\n    // textDistance needs to be calculated when both animation and text exist\n\n    var cx = (api.getWidth() - r * 2 - (opts.showSpinner && textWidth ? 10 : 0) - textWidth) / 2 // only show the text\n    - (opts.showSpinner ? 0 : textWidth / 2);\n    var cy = api.getHeight() / 2;\n    opts.showSpinner && arc.setShape({\n      cx: cx,\n      cy: cy\n    });\n    labelRect.setShape({\n      x: cx - r,\n      y: cy - r,\n      width: r * 2,\n      height: r * 2\n    });\n    mask.setShape({\n      x: 0,\n      y: 0,\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  };\n\n  group.resize();\n  return group;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\nvar isFunction = _util.isFunction;\nvar createHashMap = _util.createHashMap;\nvar noop = _util.noop;\n\nvar _task = require(\"./task\");\n\nvar createTask = _task.createTask;\n\nvar _component = require(\"../util/component\");\n\nvar getUID = _component.getUID;\n\nvar GlobalModel = require(\"../model/Global\");\n\nvar ExtensionAPI = require(\"../ExtensionAPI\");\n\nvar _model = require(\"../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/stream/Scheduler\n */\n\n/**\n * @constructor\n */\n\nfunction Scheduler(ecInstance, api, dataProcessorHandlers, visualHandlers) {\n  this.ecInstance = ecInstance;\n  this.api = api;\n  this.unfinished; // Fix current processors in case that in some rear cases that\n  // processors might be registered after echarts instance created.\n  // Register processors incrementally for a echarts instance is\n  // not supported by this stream architecture.\n\n  var dataProcessorHandlers = this._dataProcessorHandlers = dataProcessorHandlers.slice();\n  var visualHandlers = this._visualHandlers = visualHandlers.slice();\n  this._allHandlers = dataProcessorHandlers.concat(visualHandlers);\n  /**\n   * @private\n   * @type {\n   *     [handlerUID: string]: {\n   *         seriesTaskMap?: {\n   *             [seriesUID: string]: Task\n   *         },\n   *         overallTask?: Task\n   *     }\n   * }\n   */\n\n  this._stageTaskMap = createHashMap();\n}\n\nvar proto = Scheduler.prototype;\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} payload\n */\n\nproto.restoreData = function (ecModel, payload) {\n  // TODO: Only restroe needed series and components, but not all components.\n  // Currently `restoreData` of all of the series and component will be called.\n  // But some independent components like `title`, `legend`, `graphic`, `toolbox`,\n  // `tooltip`, `axisPointer`, etc, do not need series refresh when `setOption`,\n  // and some components like coordinate system, axes, dataZoom, visualMap only\n  // need their target series refresh.\n  // (1) If we are implementing this feature some day, we should consider these cases:\n  // if a data processor depends on a component (e.g., dataZoomProcessor depends\n  // on the settings of `dataZoom`), it should be re-performed if the component\n  // is modified by `setOption`.\n  // (2) If a processor depends on sevral series, speicified by its `getTargetSeries`,\n  // it should be re-performed when the result array of `getTargetSeries` changed.\n  // We use `dependencies` to cover these issues.\n  // (3) How to update target series when coordinate system related components modified.\n  // TODO: simply the dirty mechanism? Check whether only the case here can set tasks dirty,\n  // and this case all of the tasks will be set as dirty.\n  ecModel.restoreData(payload); // Theoretically an overall task not only depends on each of its target series, but also\n  // depends on all of the series.\n  // The overall task is not in pipeline, and `ecModel.restoreData` only set pipeline tasks\n  // dirty. If `getTargetSeries` of an overall task returns nothing, we should also ensure\n  // that the overall task is set as dirty and to be performed, otherwise it probably cause\n  // state chaos. So we have to set dirty of all of the overall tasks manually, otherwise it\n  // probably cause state chaos (consider `dataZoomProcessor`).\n\n  this._stageTaskMap.each(function (taskRecord) {\n    var overallTask = taskRecord.overallTask;\n    overallTask && overallTask.dirty();\n  });\n}; // If seriesModel provided, incremental threshold is check by series data.\n\n\nproto.getPerformArgs = function (task, isBlock) {\n  // For overall task\n  if (!task.__pipeline) {\n    return;\n  }\n\n  var pipeline = this._pipelineMap.get(task.__pipeline.id);\n\n  var pCtx = pipeline.context;\n  var incremental = !isBlock && pipeline.progressiveEnabled && (!pCtx || pCtx.progressiveRender) && task.__idxInPipeline > pipeline.blockIndex;\n  var step = incremental ? pipeline.step : null;\n  var modDataCount = pCtx && pCtx.modDataCount;\n  var modBy = modDataCount != null ? Math.ceil(modDataCount / step) : null;\n  return {\n    step: step,\n    modBy: modBy,\n    modDataCount: modDataCount\n  };\n};\n\nproto.getPipeline = function (pipelineId) {\n  return this._pipelineMap.get(pipelineId);\n};\n/**\n * Current, progressive rendering starts from visual and layout.\n * Always detect render mode in the same stage, avoiding that incorrect\n * detection caused by data filtering.\n * Caution:\n * `updateStreamModes` use `seriesModel.getData()`.\n */\n\n\nproto.updateStreamModes = function (seriesModel, view) {\n  var pipeline = this._pipelineMap.get(seriesModel.uid);\n\n  var data = seriesModel.getData();\n  var dataLen = data.count(); // `progressiveRender` means that can render progressively in each\n  // animation frame. Note that some types of series do not provide\n  // `view.incrementalPrepareRender` but support `chart.appendData`. We\n  // use the term `incremental` but not `progressive` to describe the\n  // case that `chart.appendData`.\n\n  var progressiveRender = pipeline.progressiveEnabled && view.incrementalPrepareRender && dataLen >= pipeline.threshold;\n  var large = seriesModel.get('large') && dataLen >= seriesModel.get('largeThreshold'); // TODO: modDataCount should not updated if `appendData`, otherwise cause whole repaint.\n  // see `test/candlestick-large3.html`\n\n  var modDataCount = seriesModel.get('progressiveChunkMode') === 'mod' ? dataLen : null;\n  seriesModel.pipelineContext = pipeline.context = {\n    progressiveRender: progressiveRender,\n    modDataCount: modDataCount,\n    large: large\n  };\n};\n\nproto.restorePipelines = function (ecModel) {\n  var scheduler = this;\n  var pipelineMap = scheduler._pipelineMap = createHashMap();\n  ecModel.eachSeries(function (seriesModel) {\n    var progressive = seriesModel.getProgressive();\n    var pipelineId = seriesModel.uid;\n    pipelineMap.set(pipelineId, {\n      id: pipelineId,\n      head: null,\n      tail: null,\n      threshold: seriesModel.getProgressiveThreshold(),\n      progressiveEnabled: progressive && !(seriesModel.preventIncremental && seriesModel.preventIncremental()),\n      blockIndex: -1,\n      step: Math.round(progressive || 700),\n      count: 0\n    });\n    pipe(scheduler, seriesModel, seriesModel.dataTask);\n  });\n};\n\nproto.prepareStageTasks = function () {\n  var stageTaskMap = this._stageTaskMap;\n  var ecModel = this.ecInstance.getModel();\n  var api = this.api;\n  each(this._allHandlers, function (handler) {\n    var record = stageTaskMap.get(handler.uid) || stageTaskMap.set(handler.uid, []);\n    handler.reset && createSeriesStageTask(this, handler, record, ecModel, api);\n    handler.overallReset && createOverallStageTask(this, handler, record, ecModel, api);\n  }, this);\n};\n\nproto.prepareView = function (view, model, ecModel, api) {\n  var renderTask = view.renderTask;\n  var context = renderTask.context;\n  context.model = model;\n  context.ecModel = ecModel;\n  context.api = api;\n  renderTask.__block = !view.incrementalPrepareRender;\n  pipe(this, model, renderTask);\n};\n\nproto.performDataProcessorTasks = function (ecModel, payload) {\n  // If we do not use `block` here, it should be considered when to update modes.\n  performStageTasks(this, this._dataProcessorHandlers, ecModel, payload, {\n    block: true\n  });\n}; // opt\n// opt.visualType: 'visual' or 'layout'\n// opt.setDirty\n\n\nproto.performVisualTasks = function (ecModel, payload, opt) {\n  performStageTasks(this, this._visualHandlers, ecModel, payload, opt);\n};\n\nfunction performStageTasks(scheduler, stageHandlers, ecModel, payload, opt) {\n  opt = opt || {};\n  var unfinished;\n  each(stageHandlers, function (stageHandler, idx) {\n    if (opt.visualType && opt.visualType !== stageHandler.visualType) {\n      return;\n    }\n\n    var stageHandlerRecord = scheduler._stageTaskMap.get(stageHandler.uid);\n\n    var seriesTaskMap = stageHandlerRecord.seriesTaskMap;\n    var overallTask = stageHandlerRecord.overallTask;\n\n    if (overallTask) {\n      var overallNeedDirty;\n      var agentStubMap = overallTask.agentStubMap;\n      agentStubMap.each(function (stub) {\n        if (needSetDirty(opt, stub)) {\n          stub.dirty();\n          overallNeedDirty = true;\n        }\n      });\n      overallNeedDirty && overallTask.dirty();\n      updatePayload(overallTask, payload);\n      var performArgs = scheduler.getPerformArgs(overallTask, opt.block); // Execute stubs firstly, which may set the overall task dirty,\n      // then execute the overall task. And stub will call seriesModel.setData,\n      // which ensures that in the overallTask seriesModel.getData() will not\n      // return incorrect data.\n\n      agentStubMap.each(function (stub) {\n        stub.perform(performArgs);\n      });\n      unfinished |= overallTask.perform(performArgs);\n    } else if (seriesTaskMap) {\n      seriesTaskMap.each(function (task, pipelineId) {\n        if (needSetDirty(opt, task)) {\n          task.dirty();\n        }\n\n        var performArgs = scheduler.getPerformArgs(task, opt.block); // FIXME\n        // if intending to decalare `performRawSeries` in handlers, only\n        // stream-independent (specifically, data item independent) operations can be\n        // performed. Because is a series is filtered, most of the tasks will not\n        // be performed. A stream-dependent operation probably cause wrong biz logic.\n        // Perhaps we should not provide a separate callback for this case instead\n        // of providing the config `performRawSeries`. The stream-dependent operaions\n        // and stream-independent operations should better not be mixed.\n\n        performArgs.skip = !stageHandler.performRawSeries && ecModel.isSeriesFiltered(task.context.model);\n        updatePayload(task, payload);\n        unfinished |= task.perform(performArgs);\n      });\n    }\n  });\n\n  function needSetDirty(opt, task) {\n    return opt.setDirty && (!opt.dirtyMap || opt.dirtyMap.get(task.__pipeline.id));\n  }\n\n  scheduler.unfinished |= unfinished;\n}\n\nproto.performSeriesTasks = function (ecModel) {\n  var unfinished;\n  ecModel.eachSeries(function (seriesModel) {\n    // Progress to the end for dataInit and dataRestore.\n    unfinished |= seriesModel.dataTask.perform();\n  });\n  this.unfinished |= unfinished;\n};\n\nproto.plan = function () {\n  // Travel pipelines, check block.\n  this._pipelineMap.each(function (pipeline) {\n    var task = pipeline.tail;\n\n    do {\n      if (task.__block) {\n        pipeline.blockIndex = task.__idxInPipeline;\n        break;\n      }\n\n      task = task.getUpstream();\n    } while (task);\n  });\n};\n\nvar updatePayload = proto.updatePayload = function (task, payload) {\n  payload !== 'remain' && (task.context.payload = payload);\n};\n\nfunction createSeriesStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var seriesTaskMap = stageHandlerRecord.seriesTaskMap || (stageHandlerRecord.seriesTaskMap = createHashMap());\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries; // If a stageHandler should cover all series, `createOnAllSeries` should be declared mandatorily,\n  // to avoid some typo or abuse. Otherwise if an extension do not specify a `seriesType`,\n  // it works but it may cause other irrelevant charts blocked.\n\n  if (stageHandler.createOnAllSeries) {\n    ecModel.eachRawSeries(create);\n  } else if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, create);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(create);\n  }\n\n  function create(seriesModel) {\n    var pipelineId = seriesModel.uid; // Init tasks for each seriesModel only once.\n    // Reuse original task instance.\n\n    var task = seriesTaskMap.get(pipelineId) || seriesTaskMap.set(pipelineId, createTask({\n      plan: seriesTaskPlan,\n      reset: seriesTaskReset,\n      count: seriesTaskCount\n    }));\n    task.context = {\n      model: seriesModel,\n      ecModel: ecModel,\n      api: api,\n      useClearVisual: stageHandler.isVisual && !stageHandler.isLayout,\n      plan: stageHandler.plan,\n      reset: stageHandler.reset,\n      scheduler: scheduler\n    };\n    pipe(scheduler, seriesModel, task);\n  } // Clear unused series tasks.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  seriesTaskMap.each(function (task, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      task.dispose();\n      seriesTaskMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction createOverallStageTask(scheduler, stageHandler, stageHandlerRecord, ecModel, api) {\n  var overallTask = stageHandlerRecord.overallTask = stageHandlerRecord.overallTask // For overall task, the function only be called on reset stage.\n  || createTask({\n    reset: overallTaskReset\n  });\n  overallTask.context = {\n    ecModel: ecModel,\n    api: api,\n    overallReset: stageHandler.overallReset,\n    scheduler: scheduler\n  }; // Reuse orignal stubs.\n\n  var agentStubMap = overallTask.agentStubMap = overallTask.agentStubMap || createHashMap();\n  var seriesType = stageHandler.seriesType;\n  var getTargetSeries = stageHandler.getTargetSeries;\n  var overallProgress = true;\n  var modifyOutputEnd = stageHandler.modifyOutputEnd; // An overall task with seriesType detected or has `getTargetSeries`, we add\n  // stub in each pipelines, it will set the overall task dirty when the pipeline\n  // progress. Moreover, to avoid call the overall task each frame (too frequent),\n  // we set the pipeline block.\n\n  if (seriesType) {\n    ecModel.eachRawSeriesByType(seriesType, createStub);\n  } else if (getTargetSeries) {\n    getTargetSeries(ecModel, api).each(createStub);\n  } // Otherwise, (usually it is legancy case), the overall task will only be\n  // executed when upstream dirty. Otherwise the progressive rendering of all\n  // pipelines will be disabled unexpectedly. But it still needs stubs to receive\n  // dirty info from upsteam.\n  else {\n      overallProgress = false;\n      each(ecModel.getSeries(), createStub);\n    }\n\n  function createStub(seriesModel) {\n    var pipelineId = seriesModel.uid;\n    var stub = agentStubMap.get(pipelineId);\n\n    if (!stub) {\n      stub = agentStubMap.set(pipelineId, createTask({\n        reset: stubReset,\n        onDirty: stubOnDirty\n      })); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n    }\n\n    stub.context = {\n      model: seriesModel,\n      overallProgress: overallProgress,\n      modifyOutputEnd: modifyOutputEnd\n    };\n    stub.agent = overallTask;\n    stub.__block = overallProgress;\n    pipe(scheduler, seriesModel, stub);\n  } // Clear unused stubs.\n\n\n  var pipelineMap = scheduler._pipelineMap;\n  agentStubMap.each(function (stub, pipelineId) {\n    if (!pipelineMap.get(pipelineId)) {\n      stub.dispose(); // When the result of `getTargetSeries` changed, the overallTask\n      // should be set as dirty and re-performed.\n\n      overallTask.dirty();\n      agentStubMap.removeKey(pipelineId);\n    }\n  });\n}\n\nfunction overallTaskReset(context) {\n  context.overallReset(context.ecModel, context.api, context.payload);\n}\n\nfunction stubReset(context, upstreamContext) {\n  return context.overallProgress && stubProgress;\n}\n\nfunction stubProgress() {\n  this.agent.dirty();\n  this.getDownstream().dirty();\n}\n\nfunction stubOnDirty() {\n  this.agent && this.agent.dirty();\n}\n\nfunction seriesTaskPlan(context) {\n  return context.plan && context.plan(context.model, context.ecModel, context.api, context.payload);\n}\n\nfunction seriesTaskReset(context) {\n  if (context.useClearVisual) {\n    context.data.clearAllVisual();\n  }\n\n  var resetDefines = context.resetDefines = normalizeToArray(context.reset(context.model, context.ecModel, context.api, context.payload));\n  return resetDefines.length > 1 ? map(resetDefines, function (v, idx) {\n    return makeSeriesTaskProgress(idx);\n  }) : singleSeriesTaskProgress;\n}\n\nvar singleSeriesTaskProgress = makeSeriesTaskProgress(0);\n\nfunction makeSeriesTaskProgress(resetDefineIdx) {\n  return function (params, context) {\n    var data = context.data;\n    var resetDefine = context.resetDefines[resetDefineIdx];\n\n    if (resetDefine && resetDefine.dataEach) {\n      for (var i = params.start; i < params.end; i++) {\n        resetDefine.dataEach(data, i);\n      }\n    } else if (resetDefine && resetDefine.progress) {\n      resetDefine.progress(params, data);\n    }\n  };\n}\n\nfunction seriesTaskCount(context) {\n  return context.data.count();\n}\n\nfunction pipe(scheduler, seriesModel, task) {\n  var pipelineId = seriesModel.uid;\n\n  var pipeline = scheduler._pipelineMap.get(pipelineId);\n\n  !pipeline.head && (pipeline.head = task);\n  pipeline.tail && pipeline.tail.pipe(task);\n  pipeline.tail = task;\n  task.__idxInPipeline = pipeline.count++;\n  task.__pipeline = pipeline;\n}\n\nScheduler.wrapStageHandler = function (stageHandler, visualType) {\n  if (isFunction(stageHandler)) {\n    stageHandler = {\n      overallReset: stageHandler,\n      seriesType: detectSeriseType(stageHandler)\n    };\n  }\n\n  stageHandler.uid = getUID('stageHandler');\n  visualType && (stageHandler.visualType = visualType);\n  return stageHandler;\n};\n/**\n * Only some legacy stage handlers (usually in echarts extensions) are pure function.\n * To ensure that they can work normally, they should work in block mode, that is,\n * they should not be started util the previous tasks finished. So they cause the\n * progressive rendering disabled. We try to detect the series type, to narrow down\n * the block range to only the series type they concern, but not all series.\n */\n\n\nfunction detectSeriseType(legacyFunc) {\n  seriesType = null;\n\n  try {\n    // Assume there is no async when calling `eachSeriesByType`.\n    legacyFunc(ecModelMock, apiMock);\n  } catch (e) {}\n\n  return seriesType;\n}\n\nvar ecModelMock = {};\nvar apiMock = {};\nvar seriesType;\nmockMethods(ecModelMock, GlobalModel);\nmockMethods(apiMock, ExtensionAPI);\n\necModelMock.eachSeriesByType = ecModelMock.eachRawSeriesByType = function (type) {\n  seriesType = type;\n};\n\necModelMock.eachComponent = function (cond) {\n  if (cond.mainType === 'series' && cond.subType) {\n    seriesType = cond.subType;\n  }\n};\n\nfunction mockMethods(target, Clz) {\n  /* eslint-disable */\n  for (var name in Clz.prototype) {\n    // Do not use hasOwnProperty\n    target[name] = noop;\n  }\n  /* eslint-enable */\n\n}\n\nvar _default = Scheduler;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar colorAll = ['#37A2DA', '#32C5E9', '#67E0E3', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#E062AE', '#E690D1', '#e7bcf3', '#9d96f5', '#8378EA', '#96BFFF'];\nvar _default = {\n  color: colorAll,\n  colorLayer: [['#37A2DA', '#ffd85c', '#fd7b5f'], ['#37A2DA', '#67E0E3', '#FFDB5C', '#ff9f7f', '#E062AE', '#9d96f5'], ['#37A2DA', '#32C5E9', '#9FE6B8', '#FFDB5C', '#ff9f7f', '#fb7293', '#e7bcf3', '#8378EA', '#96BFFF'], colorAll]\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar contrastColor = '#eee';\n\nvar axisCommon = function axisCommon() {\n  return {\n    axisLine: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisTick: {\n      lineStyle: {\n        color: contrastColor\n      }\n    },\n    axisLabel: {\n      textStyle: {\n        color: contrastColor\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        type: 'dashed',\n        color: '#aaa'\n      }\n    },\n    splitArea: {\n      areaStyle: {\n        color: contrastColor\n      }\n    }\n  };\n};\n\nvar colorPalette = ['#dd6b66', '#759aa0', '#e69d87', '#8dc1a9', '#ea7e53', '#eedd78', '#73a373', '#73b9bc', '#7289ab', '#91ca8c', '#f49f42'];\nvar theme = {\n  color: colorPalette,\n  backgroundColor: '#333',\n  tooltip: {\n    axisPointer: {\n      lineStyle: {\n        color: contrastColor\n      },\n      crossStyle: {\n        color: contrastColor\n      },\n      label: {\n        color: '#000'\n      }\n    }\n  },\n  legend: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  textStyle: {\n    color: contrastColor\n  },\n  title: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  toolbox: {\n    iconStyle: {\n      normal: {\n        borderColor: contrastColor\n      }\n    }\n  },\n  dataZoom: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  visualMap: {\n    textStyle: {\n      color: contrastColor\n    }\n  },\n  timeline: {\n    lineStyle: {\n      color: contrastColor\n    },\n    itemStyle: {\n      normal: {\n        color: colorPalette[1]\n      }\n    },\n    label: {\n      normal: {\n        textStyle: {\n          color: contrastColor\n        }\n      }\n    },\n    controlStyle: {\n      normal: {\n        color: contrastColor,\n        borderColor: contrastColor\n      }\n    }\n  },\n  timeAxis: axisCommon(),\n  logAxis: axisCommon(),\n  valueAxis: axisCommon(),\n  categoryAxis: axisCommon(),\n  line: {\n    symbol: 'circle'\n  },\n  graph: {\n    color: colorPalette\n  },\n  gauge: {\n    title: {\n      textStyle: {\n        color: contrastColor\n      }\n    }\n  },\n  candlestick: {\n    itemStyle: {\n      normal: {\n        color: '#FD1050',\n        color0: '#0CF49B',\n        borderColor: '#FD1050',\n        borderColor0: '#0CF49B'\n      }\n    }\n  }\n};\ntheme.categoryAxis.splitLine.show = false;\nvar _default = theme;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\n\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\n\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar retrieve = _util.retrieve;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Helper for model references.\n * There are many manners to refer axis/coordSys.\n */\n// TODO\n// merge relevant logic to this file?\n// check: \"modelHelper\" of tooltip and \"BrushTargetManager\".\n\n/**\n * @class\n * For example:\n * {\n *     coordSysName: 'cartesian2d',\n *     coordSysDims: ['x', 'y', ...],\n *     axisMap: HashMap({\n *         x: xAxisModel,\n *         y: yAxisModel\n *     }),\n *     categoryAxisMap: HashMap({\n *         x: xAxisModel,\n *         y: undefined\n *     }),\n *     // The index of the first category axis in `coordSysDims`.\n *     // `null/undefined` means no category axis exists.\n *     firstCategoryDimIndex: 1,\n *     // To replace user specified encode.\n * }\n */\n\nfunction CoordSysInfo(coordSysName) {\n  /**\n   * @type {string}\n   */\n  this.coordSysName = coordSysName;\n  /**\n   * @type {Array.<string>}\n   */\n\n  this.coordSysDims = [];\n  /**\n   * @type {module:zrender/core/util#HashMap}\n   */\n\n  this.axisMap = createHashMap();\n  /**\n   * @type {module:zrender/core/util#HashMap}\n   */\n\n  this.categoryAxisMap = createHashMap();\n  /**\n   * @type {number}\n   */\n\n  this.firstCategoryDimIndex = null;\n}\n/**\n * @return {module:model/referHelper#CoordSysInfo}\n */\n\n\nfunction getCoordSysInfoBySeries(seriesModel) {\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var result = new CoordSysInfo(coordSysName);\n  var fetch = fetchers[coordSysName];\n\n  if (fetch) {\n    fetch(seriesModel, result, result.axisMap, result.categoryAxisMap);\n    return result;\n  }\n}\n\nvar fetchers = {\n  cartesian2d: function cartesian2d(seriesModel, result, axisMap, categoryAxisMap) {\n    var xAxisModel = seriesModel.getReferringComponents('xAxis')[0];\n    var yAxisModel = seriesModel.getReferringComponents('yAxis')[0];\n    result.coordSysDims = ['x', 'y'];\n    axisMap.set('x', xAxisModel);\n    axisMap.set('y', yAxisModel);\n\n    if (isCategory(xAxisModel)) {\n      categoryAxisMap.set('x', xAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(yAxisModel)) {\n      categoryAxisMap.set('y', yAxisModel);\n      result.firstCategoryDimIndex == null & (result.firstCategoryDimIndex = 1);\n    }\n  },\n  singleAxis: function singleAxis(seriesModel, result, axisMap, categoryAxisMap) {\n    var singleAxisModel = seriesModel.getReferringComponents('singleAxis')[0];\n    result.coordSysDims = ['single'];\n    axisMap.set('single', singleAxisModel);\n\n    if (isCategory(singleAxisModel)) {\n      categoryAxisMap.set('single', singleAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n  },\n  polar: function polar(seriesModel, result, axisMap, categoryAxisMap) {\n    var polarModel = seriesModel.getReferringComponents('polar')[0];\n    var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n    var angleAxisModel = polarModel.findAxisModel('angleAxis');\n    result.coordSysDims = ['radius', 'angle'];\n    axisMap.set('radius', radiusAxisModel);\n    axisMap.set('angle', angleAxisModel);\n\n    if (isCategory(radiusAxisModel)) {\n      categoryAxisMap.set('radius', radiusAxisModel);\n      result.firstCategoryDimIndex = 0;\n    }\n\n    if (isCategory(angleAxisModel)) {\n      categoryAxisMap.set('angle', angleAxisModel);\n      result.firstCategoryDimIndex == null && (result.firstCategoryDimIndex = 1);\n    }\n  },\n  geo: function geo(seriesModel, result, axisMap, categoryAxisMap) {\n    result.coordSysDims = ['lng', 'lat'];\n  },\n  parallel: function parallel(seriesModel, result, axisMap, categoryAxisMap) {\n    var ecModel = seriesModel.ecModel;\n    var parallelModel = ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n    var coordSysDims = result.coordSysDims = parallelModel.dimensions.slice();\n    each(parallelModel.parallelAxisIndex, function (axisIndex, index) {\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n      var axisDim = coordSysDims[index];\n      axisMap.set(axisDim, axisModel);\n\n      if (isCategory(axisModel) && result.firstCategoryDimIndex == null) {\n        categoryAxisMap.set(axisDim, axisModel);\n        result.firstCategoryDimIndex = index;\n      }\n    });\n  }\n};\n\nfunction isCategory(axisModel) {\n  return axisModel.get('type') === 'category';\n}\n\nexports.getCoordSysInfoBySeries = getCoordSysInfoBySeries;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Scale = require(\"./Scale\");\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n// FIXME only one data\n\n\nvar scaleProto = Scale.prototype;\nvar OrdinalScale = Scale.extend({\n  type: 'ordinal',\n\n  /**\n   * @param {module:echarts/data/OrdianlMeta|Array.<string>} ordinalMeta\n   */\n  init: function init(ordinalMeta, extent) {\n    // Caution: Should not use instanceof, consider ec-extensions using\n    // import approach to get OrdinalMeta class.\n    if (!ordinalMeta || zrUtil.isArray(ordinalMeta)) {\n      ordinalMeta = new OrdinalMeta({\n        categories: ordinalMeta\n      });\n    }\n\n    this._ordinalMeta = ordinalMeta;\n    this._extent = extent || [0, ordinalMeta.categories.length - 1];\n  },\n  parse: function parse(val) {\n    return typeof val === 'string' ? this._ordinalMeta.getOrdinal(val) // val might be float.\n    : Math.round(val);\n  },\n  contain: function contain(rank) {\n    rank = this.parse(rank);\n    return scaleProto.contain.call(this, rank) && this._ordinalMeta.categories[rank] != null;\n  },\n\n  /**\n   * Normalize given rank or name to linear [0, 1]\n   * @param {number|string} [val]\n   * @return {number}\n   */\n  normalize: function normalize(val) {\n    return scaleProto.normalize.call(this, this.parse(val));\n  },\n  scale: function scale(val) {\n    return Math.round(scaleProto.scale.call(this, val));\n  },\n\n  /**\n   * @return {Array}\n   */\n  getTicks: function getTicks() {\n    var ticks = [];\n    var extent = this._extent;\n    var rank = extent[0];\n\n    while (rank <= extent[1]) {\n      ticks.push(rank);\n      rank++;\n    }\n\n    return ticks;\n  },\n\n  /**\n   * Get item on rank n\n   * @param {number} n\n   * @return {string}\n   */\n  getLabel: function getLabel(n) {\n    if (!this.isBlank()) {\n      // Note that if no data, ordinalMeta.categories is an empty array.\n      return this._ordinalMeta.categories[n];\n    }\n  },\n\n  /**\n   * @return {number}\n   */\n  count: function count() {\n    return this._extent[1] - this._extent[0] + 1;\n  },\n\n  /**\n   * @override\n   */\n  unionExtentFromData: function unionExtentFromData(data, dim) {\n    this.unionExtent(data.getApproximateExtent(dim));\n  },\n  getOrdinalMeta: function getOrdinalMeta() {\n    return this._ordinalMeta;\n  },\n  niceTicks: zrUtil.noop,\n  niceExtent: zrUtil.noop\n});\n/**\n * @return {module:echarts/scale/Time}\n */\n\nOrdinalScale.create = function () {\n  return new OrdinalScale();\n};\n\nvar _default = OrdinalScale;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar formatUtil = require(\"../util/format\");\n\nvar scaleHelper = require(\"./helper\");\n\nvar IntervalScale = require(\"./Interval\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The \"scaleLevels\" was originally copied from \"d3.js\" with some\n* modifications made for this project.\n* (See more details in the comment on the definition of \"scaleLevels\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n// [About UTC and local time zone]:\n// In most cases, `number.parseDate` will treat input data string as local time\n// (except time zone is specified in time string). And `format.formateTime` returns\n// local time by default. option.useUTC is false by default. This design have\n// concidered these common case:\n// (1) Time that is persistent in server is in UTC, but it is needed to be diplayed\n// in local time by default.\n// (2) By default, the input data string (e.g., '2011-01-02') should be displayed\n// as its original time, without any time difference.\n\n\nvar intervalScaleProto = IntervalScale.prototype;\nvar mathCeil = Math.ceil;\nvar mathFloor = Math.floor;\nvar ONE_SECOND = 1000;\nvar ONE_MINUTE = ONE_SECOND * 60;\nvar ONE_HOUR = ONE_MINUTE * 60;\nvar ONE_DAY = ONE_HOUR * 24; // FIXME 公用？\n\nvar bisect = function bisect(a, x, lo, hi) {\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n\n    if (a[mid][1] < x) {\n      lo = mid + 1;\n    } else {\n      hi = mid;\n    }\n  }\n\n  return lo;\n};\n/**\n * @alias module:echarts/coord/scale/Time\n * @constructor\n */\n\n\nvar TimeScale = IntervalScale.extend({\n  type: 'time',\n\n  /**\n   * @override\n   */\n  getLabel: function getLabel(val) {\n    var stepLvl = this._stepLvl;\n    var date = new Date(val);\n    return formatUtil.formatTime(stepLvl[0], date, this.getSetting('useUTC'));\n  },\n\n  /**\n   * @override\n   */\n  niceExtent: function niceExtent(opt) {\n    var extent = this._extent; // If extent start and end are same, expand them\n\n    if (extent[0] === extent[1]) {\n      // Expand extent\n      extent[0] -= ONE_DAY;\n      extent[1] += ONE_DAY;\n    } // If there are no data and extent are [Infinity, -Infinity]\n\n\n    if (extent[1] === -Infinity && extent[0] === Infinity) {\n      var d = new Date();\n      extent[1] = +new Date(d.getFullYear(), d.getMonth(), d.getDate());\n      extent[0] = extent[1] - ONE_DAY;\n    }\n\n    this.niceTicks(opt.splitNumber, opt.minInterval, opt.maxInterval); // var extent = this._extent;\n\n    var interval = this._interval;\n\n    if (!opt.fixMin) {\n      extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n    }\n\n    if (!opt.fixMax) {\n      extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n    }\n  },\n\n  /**\n   * @override\n   */\n  niceTicks: function niceTicks(approxTickNum, minInterval, maxInterval) {\n    approxTickNum = approxTickNum || 10;\n    var extent = this._extent;\n    var span = extent[1] - extent[0];\n    var approxInterval = span / approxTickNum;\n\n    if (minInterval != null && approxInterval < minInterval) {\n      approxInterval = minInterval;\n    }\n\n    if (maxInterval != null && approxInterval > maxInterval) {\n      approxInterval = maxInterval;\n    }\n\n    var scaleLevelsLen = scaleLevels.length;\n    var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n    var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n    var interval = level[1]; // Same with interval scale if span is much larger than 1 year\n\n    if (level[0] === 'year') {\n      var yearSpan = span / interval; // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n      // var niceYearSpan = numberUtil.nice(yearSpan, false);\n\n      var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n      interval *= yearStep;\n    }\n\n    var timezoneOffset = this.getSetting('useUTC') ? 0 : new Date(+extent[0] || +extent[1]).getTimezoneOffset() * 60 * 1000;\n    var niceExtent = [Math.round(mathCeil((extent[0] - timezoneOffset) / interval) * interval + timezoneOffset), Math.round(mathFloor((extent[1] - timezoneOffset) / interval) * interval + timezoneOffset)];\n    scaleHelper.fixExtent(niceExtent, extent);\n    this._stepLvl = level; // Interval will be used in getTicks\n\n    this._interval = interval;\n    this._niceExtent = niceExtent;\n  },\n  parse: function parse(val) {\n    // val might be float.\n    return +numberUtil.parseDate(val);\n  }\n});\nzrUtil.each(['contain', 'normalize'], function (methodName) {\n  TimeScale.prototype[methodName] = function (val) {\n    return intervalScaleProto[methodName].call(this, this.parse(val));\n  };\n});\n/**\n * This implementation was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/b516d77fb8566b576088e73410437494717ada26/src/time/scale.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nvar scaleLevels = [// Format              interval\n['hh:mm:ss', ONE_SECOND], // 1s\n['hh:mm:ss', ONE_SECOND * 5], // 5s\n['hh:mm:ss', ONE_SECOND * 10], // 10s\n['hh:mm:ss', ONE_SECOND * 15], // 15s\n['hh:mm:ss', ONE_SECOND * 30], // 30s\n['hh:mm\\nMM-dd', ONE_MINUTE], // 1m\n['hh:mm\\nMM-dd', ONE_MINUTE * 5], // 5m\n['hh:mm\\nMM-dd', ONE_MINUTE * 10], // 10m\n['hh:mm\\nMM-dd', ONE_MINUTE * 15], // 15m\n['hh:mm\\nMM-dd', ONE_MINUTE * 30], // 30m\n['hh:mm\\nMM-dd', ONE_HOUR], // 1h\n['hh:mm\\nMM-dd', ONE_HOUR * 2], // 2h\n['hh:mm\\nMM-dd', ONE_HOUR * 6], // 6h\n['hh:mm\\nMM-dd', ONE_HOUR * 12], // 12h\n['MM-dd\\nyyyy', ONE_DAY], // 1d\n['MM-dd\\nyyyy', ONE_DAY * 2], // 2d\n['MM-dd\\nyyyy', ONE_DAY * 3], // 3d\n['MM-dd\\nyyyy', ONE_DAY * 4], // 4d\n['MM-dd\\nyyyy', ONE_DAY * 5], // 5d\n['MM-dd\\nyyyy', ONE_DAY * 6], // 6d\n['week', ONE_DAY * 7], // 7d\n['MM-dd\\nyyyy', ONE_DAY * 10], // 10d\n['week', ONE_DAY * 14], // 2w\n['week', ONE_DAY * 21], // 3w\n['month', ONE_DAY * 31], // 1M\n['week', ONE_DAY * 42], // 6w\n['month', ONE_DAY * 62], // 2M\n['week', ONE_DAY * 70], // 10w\n['quarter', ONE_DAY * 95], // 3M\n['month', ONE_DAY * 31 * 4], // 4M\n['month', ONE_DAY * 31 * 5], // 5M\n['half-year', ONE_DAY * 380 / 2], // 6M\n['month', ONE_DAY * 31 * 8], // 8M\n['month', ONE_DAY * 31 * 10], // 10M\n['year', ONE_DAY * 380] // 1Y\n];\n/**\n * @param {module:echarts/model/Model}\n * @return {module:echarts/scale/Time}\n */\n\nTimeScale.create = function (model) {\n  return new TimeScale({\n    useUTC: model.ecModel.get('useUTC')\n  });\n};\n\nvar _default = TimeScale;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function average(frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function sum(frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function max(frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function min(frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function nearest(frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function indexSampler(frame, value) {\n  return Math.round(frame.length / 2);\n};\n\nfunction _default(seriesType) {\n  return {\n    seriesType: seriesType,\n    modifyOutputEnd: true,\n    reset: function reset(seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem; // Only cartesian2d support down sampling\n\n      if (coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent(); // Coordinste system has been resized\n\n        var size = extent[1] - extent[0];\n        var rate = Math.round(data.count() / size);\n\n        if (rate > 1) {\n          var sampler;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _graphic = require(\"../graphic\");\n\nvar extendShape = _graphic.extendShape;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Sausage: similar to sector, but have half circle on both sides\n * @public\n */\n\nvar _default = extendShape({\n  type: 'sausage',\n  shape: {\n    cx: 0,\n    cy: 0,\n    r0: 0,\n    r: 0,\n    startAngle: 0,\n    endAngle: Math.PI * 2,\n    clockwise: true\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {number} [time=500] Time in ms\n * @param {string} [easing='linear']\n * @param {number} [delay=0]\n * @param {Function} [callback]\n *\n * @example\n *  // Animate position\n *  animation\n *      .createWrap()\n *      .add(el1, {position: [10, 10]})\n *      .add(el2, {shape: {width: 500}, style: {fill: 'red'}}, 400)\n *      .done(function () { // done })\n *      .start('cubicOut');\n */\n\n\nfunction createWrap() {\n  var storage = [];\n  var elExistsMap = {};\n  var doneCallback;\n  return {\n    /**\n     * Caution: a el can only be added once, otherwise 'done'\n     * might not be called. This method checks this (by el.id),\n     * suppresses adding and returns false when existing el found.\n     *\n     * @param {modele:zrender/Element} el\n     * @param {Object} target\n     * @param {number} [time=500]\n     * @param {number} [delay=0]\n     * @param {string} [easing='linear']\n     * @return {boolean} Whether adding succeeded.\n     *\n     * @example\n     *     add(el, target, time, delay, easing);\n     *     add(el, target, time, easing);\n     *     add(el, target, time);\n     *     add(el, target);\n     */\n    add: function add(el, target, time, delay, easing) {\n      if (zrUtil.isString(delay)) {\n        easing = delay;\n        delay = 0;\n      }\n\n      if (elExistsMap[el.id]) {\n        return false;\n      }\n\n      elExistsMap[el.id] = 1;\n      storage.push({\n        el: el,\n        target: target,\n        time: time,\n        delay: delay,\n        easing: easing\n      });\n      return true;\n    },\n\n    /**\n     * Only execute when animation finished. Will not execute when any\n     * of 'stop' or 'stopAnimation' called.\n     *\n     * @param {Function} callback\n     */\n    done: function done(callback) {\n      doneCallback = callback;\n      return this;\n    },\n\n    /**\n     * Will stop exist animation firstly.\n     */\n    start: function start() {\n      var count = storage.length;\n\n      for (var i = 0, len = storage.length; i < len; i++) {\n        var item = storage[i];\n        item.el.animateTo(item.target, item.time, item.delay, item.easing, done);\n      }\n\n      return this;\n\n      function done() {\n        count--;\n\n        if (!count) {\n          storage.length = 0;\n          elExistsMap = {};\n          doneCallback && doneCallback();\n        }\n      }\n    }\n  };\n}\n\nexports.createWrap = createWrap;"],"sourceRoot":""}