{"version":3,"sources":["../node_modules/_echarts@4.8.0@echarts/lib/coord/single/prepareCustom.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/prepareCustom.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/calendar/prepareCustom.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/Polar.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/RadiusAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/AngleAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/PolarModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/AxisModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/GeoModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/calendar/Calendar.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/calendar/CalendarModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/ToolboxModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/ToolboxView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/feature/SaveAsImage.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/feature/MagicType.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/feature/DataView.js","../node_modules/_echarts@4.8.0@echarts/lib/data/List.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/feature/DataZoom.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/feature/Restore.js","../node_modules/_echarts@4.8.0@echarts/lib/component/tooltip.js","../node_modules/_echarts@4.8.0@echarts/lib/component/tooltip/TooltipModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/tooltip/TooltipView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/tooltip/TooltipContent.js","../node_modules/_echarts@4.8.0@echarts/lib/component/tooltip/TooltipRichContent.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/feature/Brush.js","../node_modules/_echarts@4.8.0@echarts/lib/component/title.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/ContinuousModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/ContinuousView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/PiecewiseModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/PiecewiseView.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/axisHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/dataStackHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/sourceHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/Axis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/toolbox/featureManager.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/dataProvider.js","../node_modules/_echarts@4.8.0@echarts/lib/data/DataDiffer.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/createDimensions.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/axisModelCommonMixin.js","../node_modules/_echarts@4.8.0@echarts/lib/data/Source.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/sourceType.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/dimensionHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/axisModelCreator.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/geoSourceManager.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/mapDataStorage.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/Grid.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/geoCreator.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/View.js","../node_modules/_echarts@4.8.0@echarts/lib/data/Tree.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/polar/polarCreator.js","../node_modules/_echarts@4.8.0@echarts/lib/config.js","../node_modules/_echarts@4.8.0@echarts/lib/data/DataDimensionInfo.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/completeDimensions.js","../node_modules/_echarts@4.8.0@echarts/lib/data/OrdinalMeta.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/parseGeoJson.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/Region.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/AxisModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/axisDefault.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/cartesianAxisHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/data/helper/linkList.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/parallel/parallelCreator.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/single/singleAxisHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMapContinuous.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/preprocessor.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/typeDefaulter.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/visualEncoding.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/VisualMapModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/VisualMapView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/helper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMap/visualMapAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/visualMapPiecewise.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/axisTickLabelBuilder.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/Cartesian2D.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/Cartesian.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/Axis2D.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/GridModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/radar/Radar.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/radar/IndicatorAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/radar/RadarModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/geoJSONLoader.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/fix/nanhai.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/fix/textCoord.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/fix/geoCoord.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/fix/diaoyuIsland.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/geoSVGLoader.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/Geo.js","../node_modules/_echarts@4.8.0@echarts/lib/data/Graph.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/parallel/parallelPreprocessor.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/parallel/Parallel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/parallel/ParallelAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/parallel/ParallelModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/parallel/AxisModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/single/singleCreator.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/single/Single.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/single/SingleAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/single/AxisModel.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/cartesian/prepareCustom.js","../node_modules/_echarts@4.8.0@echarts/lib/coord/geo/prepareCustom.js"],"names":["zrUtil","__webpack_require__","dataToCoordSize","dataSize","dataItem","axis","this","getAxis","val","Array","halfSize","type","getBandWidth","Math","abs","dataToCoord","module","exports","coordSys","rect","getRect","x","y","width","height","api","coord","dataToPoint","size","bind","map","dim","dimIdx","method","result","PI","radiusAxis","getRadiusAxis","angleAxis","getAngleAxis","radius","getExtent","reverse","cx","cy","r","r0","data","dataToRadius","angle","dataToAngle","coordToPoint","push","rangeInfo","getRangeInfo","cellWidth","getCellWidth","cellHeight","getCellHeight","start","end","weeks","dayCount","allDay","clamp","RadiusAxis","AngleAxis","Polar","name","_radiusAxis","_angleAxis","polar","prototype","axisPointerEnabled","constructor","dimensions","model","containPoint","point","pointToCoord","contain","containData","getAxes","getAxesByScale","scaleType","axes","scale","getOtherAxis","getBaseAxis","getTooltipAxes","baseAxis","baseAxes","otherAxes","pointToData","radiusToData","angleToData","dx","dy","extent","minAngle","min","maxAngle","max","inverse","sqrt","radian","atan2","dir","cos","sin","getArea","radiusExtent","slice","angleExtent","RADIAN","startAngle","endAngle","clockwise","d2","_default","Axis","call","coordToData","inherits","textContain","inner","makeInner","calculateCategoryInterval","labelModel","getLabelModel","ordinalScale","ordinalExtent","tickCount","count","tickValue","unitSpan","unitH","getBoundingRect","getFont","dh","isNaN","Infinity","interval","floor","cache","lastAutoInterval","lastTickCount","echarts","extendComponentModel","dependencies","coordinateSystem","findAxisModel","axisType","foundAxisModel","ecModel","eachComponent","axisModel","getCoordSysModel","defaultOption","zlevel","z","center","ComponentModel","axisModelCreator","axisModelCommonMixin","PolarAxisModel","extend","queryComponents","mainType","index","option","polarIndex","id","polarId","merge","polarAxisDefaultExtendedOption","splitNumber","getAxisType","axisDim","axisLabel","rotate","modelUtil","Model","selectableMixin","geoCreator","GeoModel","layoutMode","init","apply","arguments","defaultEmphasis","optionUpdated","self","regions","getFilledRegions","nameMap","_optionModelMap","reduce","optionModelMap","regionOpt","set","createHashMap","updateSelectedMap","show","left","top","aspectScale","silent","boundingCoords","zoom","scaleLimit","label","color","itemStyle","borderWidth","borderColor","emphasis","getRegionModel","get","getFormattedLabel","status","formatter","params","replace","setZoom","setCenter","mixin","layout","numberUtil","CoordinateSystem","Calendar","calendarModel","_model","doConvert","methodName","finder","value","seriesModel","getDimensionsInfo","_rangeInfo","getModel","_rect","_sw","_sh","getOrient","_orient","getFirstDayOfWeek","_firstDayOfWeek","getDateInfo","date","parseDate","getFullYear","m","getMonth","d","getDate","day","getDay","time","getTime","formatedDate","getNextNDay","n","Date","setDate","update","_lineWidth","getItemStyle","lineWidth","_getRangeInfo","_initRangeOption","whNames","cellSize","layoutParams","getBoxLayoutParams","cellNumbers","each","idx","cellSizeSpecified","whGlobal","getWidth","getHeight","calendarRect","getLayoutRect","isArray","dayInfo","range","NaN","week","nthWeek","pointToDate","dataToRect","contentShape","tl","tr","br","bl","nthX","nthY","_getDateByWeeksAndDay","convertToPixel","curry","convertFromPixel","rg","length","test","firstDay","setMonth","tmp","reversed","startDateNum","endDateNum","dateNum","sign","fweek","lweek","nthDay","create","calendarList","calendar","eachSeries","calendarSeries","register","_layout","getLayoutParams","sizeCalculable","mergeLayoutParam","CalendarModel","orient","splitLine","lineStyle","dayLabel","position","margin","monthLabel","align","yearLabel","fontFamily","fontWeight","fontSize","parentModel","extraOpt","inputPositionParams","superApply","mergeAndNormalizeLayoutParams","mergeOption","target","raw","ignoreSize","hvIdx","featureManager","ToolboxModel","feature","featureOpt","featureName","Feature","backgroundColor","borderRadius","padding","itemSize","itemGap","showTitle","iconStyle","tooltip","graphic","DataDiffer","listComponentHelper","extendComponentView","render","toolboxModel","payload","group","removeAll","featureOpts","features","_features","featureNames","opt","_featureNames","add","processFeature","remove","execute","makeBackground","eachChild","icon","titleText","__title","hoverStyle","makeFont","offsetX","needPutOnTop","textPosition","topOffset","textAlign","newIndex","oldIndex","oldName","featureModel","newTitle","title","indexOf","isUserFeatureName","onclick","unusable","iconStyleModel","iconStyleEmphasisModel","icons","getIcons","titles","iconPaths","iconStr","iconName","path","createIcon","setStyle","text","textBorderRadius","textPadding","textFill","tooltipModel","attr","content","formatterParams","componentType","$vars","setHoverStyle","on","defaultTextPosition","fill","stroke","textBackgroundColor","trigger","createIconPaths","setIconStatus","iconStatus","dispose","updateView","env","lang","saveAsImageLang","toolbox","saveAsImage","SaveAsImage","connectedBackgroundColor","excludeComponents","pixelRatio","canvasSupported","getZr","painter","getType","url","getConnectedDataURL","MouseEvent","browser","ie","edge","window","navigator","msSaveOrOpenBlob","bstr","atob","split","u8arr","Uint8Array","charCodeAt","blob","Blob","html","open","document","write","$a","createElement","download","href","evt","view","bubbles","cancelable","dispatchEvent","magicTypeLang","magicType","MagicType","line","bar","stack","clone","seriesIndex","proto","availableIcons","seriesOptGenreator","seriesType","seriesId","markPoint","markLine","isStack","radioTypes","newOption","series","radio","item","query","subType","newSeriesOpt","defaults","categoryAxis","axisIndex","componentIndex","i","boundaryGap","tiled","dispatchAction","currentType","registerAction","event","eventTool","dataViewLang","dataView","BLOCK_SPLITER","join","ITEM_SPLITER","assembleSeriesWithCategoryAxis","tables","key","valueAxisDim","valueAxis","headers","concat","columns","getCategories","getRawData","mapArray","lines","items","j","trim","str","itemSplitRegex","RegExp","parseContents","blockMetaList","blocks","block","isTSVFormat","tsv","tsvLines","shift","categories","header","parseTSVContents","blockMeta","axisKey","seriesName","hasName","parseListContents","DataView","_dom","tryMergeDataOption","newData","originalData","newVal","original","isObject","readOnly","optionToContent","contentToOption","textColor","textareaColor","textareaBorderColor","buttonColor","buttonTextColor","container","getDom","removeChild","root","style","cssText","innerHTML","viewMain","textarea","seriesGroupByCategoryAxis","otherSeries","meta","eachRawSeries","other","groupSeries","filter","vals","argLen","dataIndex","getName","getContentFromModel","htmlOrDom","getOption","isDom","appendChild","buttonContainer","buttonStyle","closeButton","refreshButton","close","addEventListener","e","Error","clientHeight","newSeriesOptList","seriesOpt","getSeriesByName","__DEV__","Source","_dataProvider","defaultDimValueGetters","DefaultDataProvider","summarizeDimensions","DataDimensionInfo","INDEX_NOT_FOUND","ID_PREFIX","dataCtors","float","Float64Array","int","Int32Array","ordinal","number","CtorUint32Array","Uint32Array","CtorInt32Array","CtorUint16Array","Uint16Array","getIndicesCtor","list","_rawCount","cloneChunk","originalChunk","Ctor","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","source","__wrappedMethods","propName","hasOwnProperty","_calculationInfo","List","hostModel","dimensionInfos","dimensionNames","invertedIndicesMap","dimensionInfo","isString","dimensionName","coordDim","coordDimIndex","otherDims","createInvertedIndices","_dimensionInfos","dataType","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawData","_rawExtent","_extent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","userOutput","listProto","prepareChunks","storage","dimInfo","chunkSize","chunkCount","DataCtor","lastChunkIndex","resizeChunkArray","newStore","k","prepareInvertedIndex","invertedIndices","ordinalMeta","getRawValueFromStore","dimIndex","rawIndex","chunkIndex","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","getDimensionInfo","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","hasItemOption","getDimension","getDimensionsOnCoord","dataDimsOnCoord","mapDimension","dimensionsSummary","encodeFirstDimNotExtra","dims","encode","initData","nameList","dimValueGetter","isInstance","isArrayLike","_nameRepeatCount","defaultDimValueGetter","getSource","sourceFormat","_dimValueGetter","_dimValueGetterArrayRows","arrayRows","_initDataFromProvider","pure","getProvider","appendData","rawData","persistent","appendValues","values","names","dimLen","rawExtent","originalChunkCount","emptyDataItem","sourceIdx","dimRawExtent","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","itemName","_nameDimIdx","itemId","getItem","dimStorage","nameDim","nameDimChunk","clean","getIndices","indices","thisCount","newIndices","buffer","getRawIndex","getByRawIndex","rawIdx","dimStore","_getFast","getValues","len","hasValue","getDataExtent","dimData","initialExtent","dimExtent","currEnd","getApproximateExtent","setApproximateExtent","getCalculationInfo","setCalculationInfo","getSum","sum","getMedian","dimDataArray","sortedDimDataArray","sort","a","b","rawIndexOf","indexOfName","indexOfRawIndex","rawDataIndex","right","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","nearestIndicesLen","diff","dist","getRawDataItem","cb","context","contextCompat","dimSize","filterSelf","offset","dim0","keep","selectRange","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkOffset","getItemModel","otherList","thisList","getVisual","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","getItemVisual","ignoreParent","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","child","setItemGraphicEl","el","traverse","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","BrushController","BrushTargetManager","history","sliderMove","dataZoomLang","dataZoom","DATA_ZOOM_ID_BASE","DataZoom","_brushController","_onBrush","mount","_isZoomActive","filterMode","back","zoomActive","dataZoomSelectActive","brushTargetManager","retrieveAxisSetting","include","setPanels","makePanelOpts","targetInfo","xAxisDeclared","yAxisDeclared","enableBrush","brushType","brushStyle","updateZoomBtnStatus","updateBackBtnStatus","handlers","unmount","nextActive","_dispatchZoomAction","pop","setting","areas","isEnd","snapshot","updateCovers","matchOutputRanges","area","coordRange","setBatch","lineX","lineY","dimName","minMax","dataZoomModel","found","dzModel","getAxisModel","findDataZoom","minMaxSpan","findRepresentativeAxisProxy","getMinMaxSpan","minValueSpan","maxValueSpan","dataZoomId","startValue","endValue","batch","batchItem","from","uid","registerPreprocessor","dataZoomOpts","toolboxOpt","dataZoomOpt","addForAxis","axisName","axisIndicesName","givenAxisIndices","opts","forEachComponent","axisOpt","newOpt","$fromToolbox","restoreLang","restore","Restore","clear","resetOption","showContent","triggerOn","alwaysShowContent","displayMode","renderMode","confine","showDelay","hideDelay","transitionDuration","enterable","extraCssText","axisPointer","animation","animationDurationUpdate","animationEasingUpdate","crossStyle","textStyle","TooltipContent","TooltipRichContent","formatUtil","findPointFromSeries","layoutUtil","globalListener","axisHelper","axisPointerViewHelper","getTooltipRenderMode","parsePercent","proxyRect","Rect","shape","node","tooltipContent","getComponent","_renderMode","appendToBody","_newLine","_tooltipContent","_tooltipModel","_ecModel","_api","_lastDataByCoordSys","_alwaysShowContent","setEnterable","_initGlobalListener","_keepShow","currTrigger","_tryShow","_hide","_lastX","_lastY","clearTimeout","_refreshUpdateTimeout","setTimeout","isDisposed","manuallyShowTip","makeDispatchAction","_ticket","dataByCoordSys","offsetY","tooltipOption","_manuallyAxisShowTip","pointInfo","findHover","manuallyHideTip","hideLater","coordSysAxesInfo","getSeriesByIndex","buildTooltipModel","getData","_showAxisTooltip","_showSeriesItemTooltip","_showComponentItemTooltip","_showOrMove","delay","_showTimout","globalTooltipModel","singleDefaultHTML","singleParamsList","singleTooltipModel","newLine","markers","itemCoordSys","dataByAxis","axisValue","seriesDefaultHTML","valueLabel","getValueLabel","seriesDataIndices","valueLabelOpt","idxItem","dataIndexInside","dataParams","getDataParams","axisId","getAxisRawValue","axisValueLabel","seriesTooltip","formatTooltip","newMarkers","firstLine","encodeHTML","positionExpr","_updateContentNotChangedOnAxis","_updatePosition","_showTooltipContent","random","undefined","dataModel","tooltipTrigger","defaultHtml","asyncTicket","tooltipOpt","subTooltipModel","formatTpl","callback","cbTicket","setContent","viewWidth","viewHeight","contentSize","getSize","vAlign","applyTransform","transform","viewSize","layoutRect","pos","domWidth","domHeight","rectWidth","rectHeight","calcTooltipPosition","gapH","gapV","getOuterSize","refixTooltipPosition","isCenterAlign","confineTooltipPosition","moveTo","lastCoordSys","contentNotChanged","lastItemCoordSys","indexCoordSys","lastDataByAxis","thisDataByAxis","lastItem","indexAxis","thisItem","lastIndices","lastIdxItem","newIdxItem","unregister","modelCascade","resultModel","zrColor","eventUtil","domUtil","toCamelCase","vendors","assembleCssText","textStyleModel","duration","transitionText","vendorPrefix","assembleTransition","toHex","borderName","camelCase","getTextColor","round","assembleFont","normalizeCssArray","makeStyleCoord","out","zr","zrX","zrY","zrPainter","zrViewportRoot","getViewportRoot","transformLocalCoord","body","viewportRootOffset","getViewportRootOffset","offsetLeft","offsetTop","wxa","domBelongToZr","_zr","_appendToBody","_styleCoord","_container","_show","_hideTimeout","onmouseenter","_enterable","_inContent","onmousemove","handler","normalizeEvent","dispatch","onmouseleave","_hideDelay","stl","currentStyle","defaultView","getComputedStyle","domStyle","styleCoord","display","pointerEvents","clientWidth","hide","isShow","parentNode","parseInt","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth","Text","markerRich","startId","endId","substr","textWidth","textHeight","textOffset","rich","textLineHeight","bounding","brushLang","brush","Brush","_brushType","_brushMode","polygon","brushMode","isBrushed","brushModel","brushOption","intervals","command","windowOpen","subtext","subtarget","subtextStyle","titleModel","subtextStyleModel","textVerticalAlign","retrieve2","textEl","setTextStyle","disableBox","z2","textRect","subText","subTextEl","link","sublink","triggerEvent","eventData","groupRect","layoutOption","alignStyle","subPixelOptimize","VisualMapModel","DEFAULT_BAR_BOUND","ContinuousModel","calculable","realtime","itemHeight","itemWidth","hoverLink","hoverLinkDataSize","hoverLinkOnHandle","isInit","resetExtent","resetVisual","mappingOption","mappingMethod","dataExtent","_resetRange","resetItemSize","auto","completeVisualOption","stateList","state","symbolSize","controller","setSelected","selected","getSelected","dataInterval","asc","getValueState","findTargetDataIndices","eachTargetSeries","dataIndices","getDataDimension","getVisualMeta","getColorVisual","oVals","getColorStopValues","iVals","stops","setStop","valueState","iIdx","oIdx","iLen","oLen","first","stopsLen","outerColors","visualMapModel","step","stopValues","LinearGradient","VisualMapView","helper","linearMap","mathMin","mathMax","HOVER_LINK_SIZE","HOVER_LINK_OUT","ContinuousView","_shapes","_dataInterval","_handleEnds","_useHandle","_hoverLinkDataIndices","_dragging","_hovering","doRender","_buildView","thisGroup","_resetInterval","_renderBar","dataRangeText","_renderEndsText","_updateView","renderBackground","_enableHoverLinkToSeries","_enableHoverLinkFromSeries","positionGroup","endsIndex","textGap","barGroup","_applyTransform","textFont","targetGroup","shapes","useHandle","itemAlign","getItemAlign","_createBarGroup","outOfRange","createPolygon","inRange","getCursor","_dragHandle","getTextRect","textSize","handleThumbs","handleLabels","handleLabelPoints","_createHandle","_createIndicator","handleIndex","onDrift","onDragEnd","handleThumb","createHandlePoints","handleLabel","draggable","drift","stop","ondragend","handleLabelPoint","indicator","invisible","indicatorLabel","indicatorLabelPoint","vertex","_updateInterval","visualMapId","_clearHoverLinkToSeries","useHoverLinkOnHandle","_doHoverLinkToSeries","sizeExtent","delta","handleEnds","forSketch","outOfRangeHandleEnds","inRangeHandleEnds","visualInRange","_createBarVisual","visualOutOfRange","barColor","opacity","setShape","barPoints","_updateHandle","forceState","convertOpacityToAlpha","colorStops","_makeColorGradient","symbolSizes","getControllerVisual","_createBarPoints","handlesColor","currValue","Group","rotation","textPoint","getTransform","formatValueText","_showIndicator","cursorValue","textValue","rangeSymbol","halfHoverLinkSize","isRange","extentMax","createIndicatorPoints","_hoverLinkFromSeriesMouseOver","_hideIndicator","_clearHoverLinkFromSeries","cursorPos","hoverOnBar","getHalfHoverLinkSize","hoverRange","valueRange","oldBatch","newBatch","resultBatches","compressBatches","_dispatchHighDown","makeHighDownBatch","isTargetSeries","off","element","global","points","cursor","Polygon","VisualMapping","visualDefault","reformIntervals","PiecewiseModel","minOpen","maxOpen","itemSymbol","pieceList","selectedMode","showLabel","_pieceList","mode","_mode","_determineMode","resetMethods","_resetSelected","piece","visualTypesInPieces","visualTypes","listVisualTypes","isCategory","has","obj","visualType","pieces","v","exists","thisOption","getSelectedMapKey","hasSel","getPieceList","findPieceIndex","pieceIndex","getRepresentValue","representValue","pieceInterval","unshift","curr","precision","splitStep","toFixed","cate","normalizeReverse","pieceListItem","closeList","infinityList","useMinMax","lg","retrieveVisuals","edgeSymbols","createSymbol","_getItemAlign","viewData","_getViewData","endsText","retrieve","viewPieceList","itemGroup","_onItemClick","_enableHoverLink","indexInModelPieceList","_createItemSymbol","visualState","box","onHoverLink","modelOption","shapeParam","newKey","o","OrdinalScale","IntervalScale","Scale","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","BoundingRect","getScaleExtent","axisDataLen","span","getMin","getMax","originalExtent","fixMin","fixMax","isFinite","setBlank","eqNaN","getOrdinalMeta","getNeedCrossZero","isBaseAxisAndHasBarSeries","barSeriesModels","barWidthAndOffset","adjustedScale","axisExtent","axisLength","barsOnCurrentAxis","minOverflow","maxOverflow","totalOverFlow","oldRange","overflowBuffer","adjustScaleForOverflow","makeLabelFormatter","tpl","labelFormatter","categoryTickStart","getLabel","tick","rotateTextRect","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","afterHeight","getOptionCategoryInterval","niceScaleExtent","extentInfo","base","setExtent","niceExtent","minInterval","maxInterval","setInterval","createScaleByModel","getClass","ifAxisCrossZero","estimateLabelUnionRect","isBlank","realNumberScaleTicks","categoryScaleExtent","getTicks","axisLabelModel","ceil","singleRect","union","shouldShowAllLabels","_util","isDimensionStacked","stackedDim","enableDataStack","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","isExtraCoord","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","getStackedDimension","targetDim","getDataItemValue","isTypedArray","assert","_sourceType","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","BE_ORDINAL","Must","Might","Not","normalizeDimensionsDefine","dimensionsDefine","displayName","exist","arrayRowsTravelFirst","seriesLayoutBy","maxLoop","value0","getDatasetModel","datasetIndex","doGuessOrdinal","startIndex","dimType","dimDefItem","sample","detectValue","row","beStr","detectSourceFormat","datasetModel","resetSourceDefaulter","datasetMap","prepareSource","seriesOption","fromDataset","sourceHeader","datasetOption","completeResult","dimensionsDetectCount","firstIndex","objectRowsCollectDimensions","colArr","completeBySourceData","encodeDefine","makeSeriesEncodeForAxisCoordSys","coordDimensions","baseCategoryDimIndex","categoryWayValueDimStart","encodeItemName","encodeSeriesName","coordDimInfo","coordDimIdx","getDataDimCountOnCoordDim","datasetRecord","categoryWayDim","valueWayDim","pushDim","dimIdxArr","idxFrom","idxCount","dimsDef","coordDimName","makeSeriesEncodeForNameBased","dimCount","potentialNameDimIndex","idxResult","idxRes0","idxRes1","guessRecords","guessResult","isPureNumber","fulfilled","nameDimIndex","guessOrdinal","_number","_getPixelPrecision","getPixelPrecision","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","_calculateCategoryInterval","NORMALIZED_EXTENT","onBand","fixExtentWithBands","nTick","normalize","t","getTicksCoords","tickModel","getTickModel","ticks","ticksCoords","alignWithLabel","ticksLen","last","diffSize","crossLen","ticksItem","littleThan","fixOnBandTicksCoords","getMinorTicksCoords","minorTicks","getMinorTicks","minorTicksGroup","minorTick","getViewLabels","labels","isHorizontal","getRotate","ctor","isDataItemOption","seriesDataToSource","_source","_data","_offset","_dimSize","methods","providerMethods","providerProto","arrayRows_column","appendDataSimply","arrayRows_row","objectRows","countSimply","getItemSimply","keyedColumns","col","newCol","oldCol","typedArray","rawValueGetters","getRawValueSimply","getDimValueSimply","converDataValue","parseAndCollect","retrieveRawValue","retrieveRawAttr","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","func","_add","_update","_remove","newDataIndexMap","oldDataKeyArr","newDataKeyArr","completeDimensions","encodeDef","dimensionsCount","encodeDefaulter","generateCoord","generateCoordCount","origin","rangeStart","parse","rangeEnd","noop","setRange","resetRange","enableClassCheck","SERIES_LAYOUT_BY_COLUMN","fields","OTHER_DIMENSIONS","getOrCreateEncodeArr","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","dimItem","defaultTooltip","otherDim","encodeArr","dimArr","encodeLabel","encodeTooltip","getDimensionTypeByAxis","axisDefault","OrdinalMeta","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","mergeDefaultAndTheme","themeModel","getTheme","getDefaultOption","__ordinalMeta","createByAxisModel","mergeAll","registerSubTypeDefaulter","mapDataStorage","geoJSONLoader","geoSVGLoader","loaders","geoJSON","svg","load","mapName","nameProperty","boundingRect","regionsMap","nameCoordMap","mapRecords","retrieveMap","record","singleSource","region","regionName","makeGraphic","makeInvoker","removeGraphic","hostKey","results","parseXML","registerMap","rawGeoJson","rawSpecialAreas","records","specialAreas","geoJson","parsers","JSON","Function","svgXML","_axisHelper","Cartesian2D","Axis2D","isAxisUsedInTheGrid","gridModel","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","getAxesOnZeroOf","otherAxisOnZeroOf","onZero","onZeroAxisIndex","canOnZeroToAxis","getOnZeroRecordKey","_updateScale","xAxis","yAxis","resize","ignoreContainLabel","gridRect","axesList","adjustAxes","coordBase","axisExtentSum","toGlobalCoord","toLocalCoord","updateAxisTransform","labelUnionRect","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","_findConvertTarget","cartesian","xAxisModel","getReferringComponents","yAxisModel","coordsList","axisPositionUsed","bottom","axesCount","createAxisCreator","axisPosition","grid","addAxis","unionExtent","unionExtentFromData","isCartesian2D","axesModels","findAxesModels","otherAxis","axesTypes","grids","Geo","geoSourceManager","resizeGeo","geoModel","leftTop","rightBottom","setBoundingRect","boxLayoutOption","aspect","useCenterAndSize","viewRect","setViewRect","setGeoCoords","geo","geoCoord","addGeoCoord","geoList","invertLongitute","zoomLimit","geoIndex","mapModelGroupBySeries","eachSeriesByType","getHostGeoModel","mapType","getMapType","mapSeries","nameMapList","singleMapSeries","originRegionArr","regionsArr","dataNameMap","registerCoordinateSystem","vector","matrix","Transformable","v2ApplyTransform","TransformDummy","View","_roamTransformable","_rawTransformable","_center","_zoom","transformTo","_viewRect","rawTransform","calculateTransform","decomposeTransform","_updateTransform","centerCoord","_updateCenterAndZoom","getDefaultCenter","rawRect","getCenter","getZoom","getRoamTransform","getLocalTransform","rawTransformMatrix","roamTransform","defaultCenter","roamTransformable","rawTransformable","parent","updateTransform","copy","_rawTransform","invTransform","invert","getTransformInfo","rawScale","rawPosition","getViewRect","getViewRectAfterRoam","noRoam","linkList","createDimensions","TreeNode","hostTree","depth","children","viewChildren","Tree","levelOptions","_nodes","levelModels","levelDefine","isRemoved","eachNode","options","order","suppressVisitSub","updateDepthAndHeight","getNodeById","contains","getAncestors","includeSelf","ancestors","getValue","itemModel","levelModel","getLevelModel","isAncestorOf","isDescendantOf","getNodeByDataIndex","getNodeByName","nodes","clearLayouts","createTree","dataRoot","treeOptions","beforeLink","tree","levels","listData","dimMax","buildHierarchy","dataNode","addChild","dimensionsInfo","mainData","struct","structAttr","updatePolarScale","setAxis","polarCreator","polarList","polarModel","radiusAxisModel","angleAxisModel","resizePolar","dev","normalizeToArray","_sourceHelper","genName","fromZero","sysDims","dataDimNameMap","coordDimNameMap","optDimCount","sysDimItem","sysDimItemDimsDef","getDimCount","userDimName","resultItem","dataDims","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimIndex","sysDimItemOtherDims","sysDimItemDimsDefItem","extra","_needCollect","needCollect","_deduplication","deduplication","_map","dedplication","getOrCreateMap","getOrdinal","category","Region","decodePolygon","coordinate","encodeOffsets","encodeScale","prevX","prevY","json","UTF8Encoding","UTF8Scale","f","geometry","coordinates","c","c2","decode","featureObj","properties","geometries","exterior","interiors","cp","bbox","vec2","polygonContain","MAX_NUMBER","Number","MAX_VALUE","fromPoints","loopGeo","p","h","newRegion","AxisModel","restoreData","gridIndex","gridId","extraOption","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","axisLine","symbol","axisTick","inside","showMinLabel","showMaxLabel","splitArea","areaStyle","minorSplitLine","timeAxis","logAxis","logBase","rawAxisPosition","rectBound","axisOffset","posBound","onZeroCoord","labelDirection","tickDirection","nameDirection","labelOffset","labelInside","labelRotate","DATAS","MAIN_DATA","transferInjection","datas","linkAll","linkSingle","changeInjection","cloneShallowInjection","getLinkedData","datasAttr","main","Parallel","coordSysList","parallelModel","single","positionMap","horizontal","vertical","labelRotation","preprocessor","visualMap","splitList","visualSolution","VISUAL_PRIORITY","PRIORITY","VISUAL","COMPONENT","mappings","targetVisuals","prepareVisualTypes","resultVisual","mapping","applyVisual","registerVisual","createOnAllSeries","reset","resetDefines","pipelineContext","large","incrementalApplyVisual","visualMetaList","visualMeta","concreteDim","mapVisual","eachVisual","replacableOptionKeys","dataBound","contentColor","inactiveColor","_dataExtent","controllerVisuals","replaceVisualOption","supplementVisualOption","createVisualMappings","getTargetSeriesIndices","optionSeriesIndex","seriesIndices","is","isMinMax","isFunction","optDim","listDimensions","dimNames","completeSingle","defa","stateExist","stateAbsent","optExist","optAbsent","visualData","isValidType","symbolExists","symbolSizeExists","visuals","parseFloat","autoPositionValues","targetValue","visualCluster","visualObj","defaultColor","getter","setter","visualMapping","__alphaForOpacity","dependsOn","positionElement","ecSize","realIndex","paramsSet","reals","fakeValue","layoutInput","rParam","highlightKey","makeCategoryLabelsActually","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","listCacheGet","makeLabelsByCustomizedCategoryInterval","autoInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","labelCategoryInterval","prop","categoryInterval","onlyTick","startTick","showAllLabel","includeMinLabel","includeMaxLabel","addItem","tVal","formattedLabel","rawLabel","makeCategoryLabels","makeRealNumberLabels","tickCategoryInterval","ticksCache","optionTickInterval","labelsResult","labelItem","makeCategoryTicks","axisRotate","font","fetchAutoCategoryIntervalCalculationParams","unitW","maxW","maxH","dw","axisExtend0","axisExtend1","Cartesian","axisX","axisY","reserved","clampData","xScale","yScale","xAxisExtent","yAxisExtent","xExtent","getGlobalExtent","yExtent","dimAxisMapper","_axes","_dimList","toLowerCase","_dataCoordConvert","input","dimList","output","coordExtent","ret","containLabel","IndicatorAxis","LogScale","Radar","radarModel","_indicatorAxes","getIndicatorModels","indicatorModel","indicatorAxis","getIndicatorAxes","indicatorIndex","pt","closestAxis","minRadianDiff","closestAxisIdx","indicatorAxes","radarSeries","increaseInterval","exp10","pow","log","LN10","fixedMin","fixedMax","getInterval","radarList","radar","valueAxisDefault","defaultsShow","showName","nameFormatter","indicatorModels","indicatorOpt","iNameTextStyle","indName","parseGeoJson","fixNanhai","fixTextCoord","fixGeoCoord","fixDiaoyuIsland","mapRecord","parsed","message","specialArea","regionRect","coordsOffsetMap","南海诸岛","广东","香港","澳门","天津","coordFix","geoCoordMap","Russia","United States","United States of America","_parseSVG","parseSVG","makeViewBoxTransform","originRoot","buildGraphic","field","rootMap","originRootHostKey","removeKey","ignoreViewBox","ignoreRootClip","svgWidth","svgHeight","viewBoxRect","viewBoxTransform","elRoot","setClipPath","_nameCoordMap","_regionsMap","_invertLongitute","containCoord","getRegion","getRegionByCoord","getGeoCoord","generateNodeKey","Graph","directed","_directed","edges","_nodesMap","_edgesMap","edgeData","graphProto","Node","inEdges","outEdges","hostGraph","Edge","n1","n2","node1","node2","isDirected","addNode","nodesMap","getNodeByIndex","addEdge","edgesMap","getEdgeByIndex","getEdge","eachEdge","breadthFirstTraverse","startNode","direction","edgeType","__visited","queue","currentNode","otherNode","graph","degree","inDegree","outDegree","createGraphDataProxyMixin","hostName","dataName","getGraphicEl","parallel","hasParallelSeries","createParallelIfNeeded","parallelAxis","axisOption","parallelIndex","parallelOption","parallelAxisDefault","mergeAxisOptionFromParallel","ParallelAxis","mathFloor","mathCeil","_axesLayout","_init","restrict","parallelAxisIndex","_updateAxesFromSeries","layoutInfo","_makeLayoutInfo","axisBase","layoutBase","pixelDimIndex","pAxis","pLayout","layoutLength","_layoutAxes","winSize","xy","wh","layoutExtent","axisCount","axisExpandWidth","axisExpandCount","axisExpandable","axisExpandWindow","axisCollapseWidth","winInnerIndices","axisExpandWindow0Pos","posInfo","nameTruncateMaxWidth","axisNameAvailableWidth","axisLabelShow","positionTable","rotationTable","translate","axisCoordToPoint","eachActiveState","dataDimensions","axisModels","hasActiveSet","hasAxisBrushed","activeState","lenj","getActiveState","axisLayout","getAxisLayout","getSlidedAxisExpandWindow","behavior","pointCoord","triggerArea","useJump","Component","axisExpandCenter","axisExpandRate","axisExpandDebounce","axisExpandSlideTriggerArea","axisExpandTriggerOn","_initDimensions","setAxisExpand","dependentModels","makeStyleMapper","activeIntervals","getAreaSelectStyle","setActiveIntervals","areaSelectStyle","Single","singles","singleAxisModel","SingleAxis","_axis","_adjustAxis","_updateAxisTransform","extentSum","p1","p2"],"mappings":"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","file":"static/js/main~8fde6cde.922e0fe1.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  var axis = this.getAxis();\n  var val = dataItem instanceof Array ? dataItem[0] : dataItem;\n  var halfSize = (dataSize instanceof Array ? dataSize[0] : dataSize) / 2;\n  return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  return {\n    coordSys: {\n      type: 'singleAxis',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(val) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(val);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  return zrUtil.map(['Radius', 'Angle'], function (dim, dimIdx) {\n    var axis = this['get' + dim + 'Axis']();\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var method = 'dataTo' + dim;\n    var result = axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis[method](val - halfSize) - axis[method](val + halfSize));\n\n    if (dim === 'Angle') {\n      result = result * Math.PI / 180;\n    }\n\n    return result;\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var radiusAxis = coordSys.getRadiusAxis();\n  var angleAxis = coordSys.getAngleAxis();\n  var radius = radiusAxis.getExtent();\n  radius[0] > radius[1] && radius.reverse();\n  return {\n    coordSys: {\n      type: 'polar',\n      cx: coordSys.cx,\n      cy: coordSys.cy,\n      r: radius[1],\n      r0: radius[0]\n    },\n    api: {\n      coord: zrUtil.bind(function (data) {\n        var radius = radiusAxis.dataToRadius(data[0]);\n        var angle = angleAxis.dataToAngle(data[1]);\n        var coord = coordSys.coordToPoint([radius, angle]);\n        coord.push(radius, angle * Math.PI / 180);\n        return coord;\n      }),\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(coordSys) {\n  var rect = coordSys.getRect();\n  var rangeInfo = coordSys.getRangeInfo();\n  return {\n    coordSys: {\n      type: 'calendar',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      cellWidth: coordSys.getCellWidth(),\n      cellHeight: coordSys.getCellHeight(),\n      rangeInfo: {\n        start: rangeInfo.start,\n        end: rangeInfo.end,\n        weeks: rangeInfo.weeks,\n        dayCount: rangeInfo.allDay\n      }\n    },\n    api: {\n      coord: function coord(data, clamp) {\n        return coordSys.dataToPoint(data, clamp);\n      }\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar RadiusAxis = require(\"./RadiusAxis\");\n\nvar AngleAxis = require(\"./AngleAxis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/polar/Polar\n */\n\n/**\n * @alias {module:echarts/coord/polar/Polar}\n * @constructor\n * @param {string} name\n */\n\n\nvar Polar = function Polar(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * x of polar center\n   * @type {number}\n   */\n\n  this.cx = 0;\n  /**\n   * y of polar center\n   * @type {number}\n   */\n\n  this.cy = 0;\n  /**\n   * @type {module:echarts/coord/polar/RadiusAxis}\n   * @private\n   */\n\n  this._radiusAxis = new RadiusAxis();\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis}\n   * @private\n   */\n\n  this._angleAxis = new AngleAxis();\n  this._radiusAxis.polar = this._angleAxis.polar = this;\n};\n\nPolar.prototype = {\n  type: 'polar',\n  axisPointerEnabled: true,\n  constructor: Polar,\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['radius', 'angle'],\n\n  /**\n   * @type {module:echarts/coord/PolarModel}\n   */\n  model: null,\n\n  /**\n   * If contain coord\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var coord = this.pointToCoord(point);\n    return this._radiusAxis.contain(coord[0]) && this._angleAxis.contain(coord[1]);\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this._radiusAxis.containData(data[0]) && this._angleAxis.containData(data[1]);\n  },\n\n  /**\n   * @param {string} dim\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxis: function getAxis(dim) {\n    return this['_' + dim + 'Axis'];\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function getAxes() {\n    return [this._radiusAxis, this._angleAxis];\n  },\n\n  /**\n   * Get axes by type of scale\n   * @param {string} scaleType\n   * @return {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    var axes = [];\n    var angleAxis = this._angleAxis;\n    var radiusAxis = this._radiusAxis;\n    angleAxis.scale.type === scaleType && axes.push(angleAxis);\n    radiusAxis.scale.type === scaleType && axes.push(radiusAxis);\n    return axes;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/AngleAxis}\n   */\n  getAngleAxis: function getAngleAxis() {\n    return this._angleAxis;\n  },\n\n  /**\n   * @return {module:echarts/coord/polar/RadiusAxis}\n   */\n  getRadiusAxis: function getRadiusAxis() {\n    return this._radiusAxis;\n  },\n\n  /**\n   * @param {module:echarts/coord/polar/Axis}\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    var angleAxis = this._angleAxis;\n    return axis === angleAxis ? this._radiusAxis : angleAxis;\n  },\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/polar/Axis}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAngleAxis();\n  },\n\n  /**\n   * @param {string} [dim] 'radius' or 'angle' or 'auto' or null/undefined\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function getTooltipAxes(dim) {\n    var baseAxis = dim != null && dim !== 'auto' ? this.getAxis(dim) : this.getBaseAxis();\n    return {\n      baseAxes: [baseAxis],\n      otherAxes: [this.getOtherAxis(baseAxis)]\n    };\n  },\n\n  /**\n   * Convert a single data item to (x, y) point.\n   * Parameter data is an array which the first element is radius and the second is angle\n   * @param {Array.<number>} data\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, clamp) {\n    return this.coordToPoint([this._radiusAxis.dataToRadius(data[0], clamp), this._angleAxis.dataToAngle(data[1], clamp)]);\n  },\n\n  /**\n   * Convert a (x, y) point to data\n   * @param {Array.<number>} point\n   * @param {boolean} [clamp=false]\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, clamp) {\n    var coord = this.pointToCoord(point);\n    return [this._radiusAxis.radiusToData(coord[0], clamp), this._angleAxis.angleToData(coord[1], clamp)];\n  },\n\n  /**\n   * Convert a (x, y) point to (radius, angle) coord\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToCoord: function pointToCoord(point) {\n    var dx = point[0] - this.cx;\n    var dy = point[1] - this.cy;\n    var angleAxis = this.getAngleAxis();\n    var extent = angleAxis.getExtent();\n    var minAngle = Math.min(extent[0], extent[1]);\n    var maxAngle = Math.max(extent[0], extent[1]); // Fix fixed extent in polarCreator\n    // FIXME\n\n    angleAxis.inverse ? minAngle = maxAngle - 360 : maxAngle = minAngle + 360;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx) / Math.PI * 180; // move to angleExtent\n\n    var dir = radian < minAngle ? 1 : -1;\n\n    while (radian < minAngle || radian > maxAngle) {\n      radian += dir * 360;\n    }\n\n    return [radius, radian];\n  },\n\n  /**\n   * Convert a (radius, angle) coord to (x, y) point\n   * @param {Array.<number>} coord\n   * @return {Array.<number>}\n   */\n  coordToPoint: function coordToPoint(coord) {\n    var radius = coord[0];\n    var radian = coord[1] / 180 * Math.PI;\n    var x = Math.cos(radian) * radius + this.cx; // Inverse the y\n\n    var y = -Math.sin(radian) * radius + this.cy;\n    return [x, y];\n  },\n\n  /**\n   * Get ring area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {Ring}\n   */\n  getArea: function getArea() {\n    var angleAxis = this.getAngleAxis();\n    var radiusAxis = this.getRadiusAxis();\n    var radiusExtent = radiusAxis.getExtent().slice();\n    radiusExtent[0] > radiusExtent[1] && radiusExtent.reverse();\n    var angleExtent = angleAxis.getExtent();\n    var RADIAN = Math.PI / 180;\n    return {\n      cx: this.cx,\n      cy: this.cy,\n      r0: radiusExtent[0],\n      r: radiusExtent[1],\n      startAngle: -angleExtent[0] * RADIAN,\n      endAngle: -angleExtent[1] * RADIAN,\n      clockwise: angleAxis.inverse,\n      contain: function contain(x, y) {\n        // It's a ring shape.\n        // Start angle and end angle don't matter\n        var dx = x - this.cx;\n        var dy = y - this.cy;\n        var d2 = dx * dx + dy * dy;\n        var r = this.r;\n        var r0 = this.r0;\n        return d2 <= r * r && d2 >= r0 * r0;\n      }\n    };\n  }\n};\nvar _default = Polar;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction RadiusAxis(scale, radiusExtent) {\n  Axis.call(this, 'radius', scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nRadiusAxis.prototype = {\n  constructor: RadiusAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToRadius: Axis.prototype.dataToCoord,\n  radiusToData: Axis.prototype.coordToData\n};\nzrUtil.inherits(RadiusAxis, Axis);\nvar _default = RadiusAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar Axis = require(\"../Axis\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\n\nfunction AngleAxis(scale, angleExtent) {\n  angleExtent = angleExtent || [0, 360];\n  Axis.call(this, 'angle', scale, angleExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'category';\n}\n\nAngleAxis.prototype = {\n  constructor: AngleAxis,\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.polar.pointToData(point, clamp)[this.dim === 'radius' ? 0 : 1];\n  },\n  dataToAngle: Axis.prototype.dataToCoord,\n  angleToData: Axis.prototype.coordToData,\n\n  /**\n   * Only be called in category axis.\n   * Angle axis uses text height to decide interval\n   *\n   * @override\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function calculateCategoryInterval() {\n    var axis = this;\n    var labelModel = axis.getLabelModel();\n    var ordinalScale = axis.scale;\n    var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n    // avoid generating a long array by `getTicks`\n    // in large category data case.\n\n    var tickCount = ordinalScale.count();\n\n    if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n      return 0;\n    }\n\n    var tickValue = ordinalExtent[0];\n    var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n    var unitH = Math.abs(unitSpan); // Not precise, just use height as text width\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(tickValue, labelModel.getFont(), 'center', 'top');\n    var maxH = Math.max(rect.height, 7);\n    var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n    isNaN(dh) && (dh = Infinity);\n    var interval = Math.max(0, Math.floor(dh));\n    var cache = inner(axis.model);\n    var lastAutoInterval = cache.lastAutoInterval;\n    var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n    // otherwise the calculated interval might jitter when the zoom\n    // window size is close to the interval-changing size.\n\n    if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n    // point is not the same when zooming in or zooming out.\n    && lastAutoInterval > interval) {\n      interval = lastAutoInterval;\n    } // Only update cache if cache not used, otherwise the\n    // changing of interval is too insensitive.\n    else {\n        cache.lastTickCount = tickCount;\n        cache.lastAutoInterval = interval;\n      }\n\n    return interval;\n  }\n};\nzrUtil.inherits(AngleAxis, Axis);\nvar _default = AngleAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nrequire(\"./AxisModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentModel({\n  type: 'polar',\n  dependencies: ['polarAxis', 'angleAxis'],\n\n  /**\n   * @type {module:echarts/coord/polar/Polar}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @param {string} axisType\n   * @return {module:echarts/coord/polar/AxisModel}\n   */\n  findAxisModel: function findAxisModel(axisType) {\n    var foundAxisModel;\n    var ecModel = this.ecModel;\n    ecModel.eachComponent(axisType, function (axisModel) {\n      if (axisModel.getCoordSysModel() === this) {\n        foundAxisModel = axisModel;\n      }\n    }, this);\n    return foundAxisModel;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '80%'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PolarAxisModel = ComponentModel.extend({\n  type: 'polarAxis',\n\n  /**\n   * @type {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'polar',\n      index: this.option.polarIndex,\n      id: this.option.polarId\n    })[0];\n  }\n});\nzrUtil.merge(PolarAxisModel.prototype, axisModelCommonMixin);\nvar polarAxisDefaultExtendedOption = {\n  angle: {\n    // polarIndex: 0,\n    // polarId: '',\n    startAngle: 90,\n    clockwise: true,\n    splitNumber: 12,\n    axisLabel: {\n      rotate: false\n    }\n  },\n  radius: {\n    // polarIndex: 0,\n    // polarId: '',\n    splitNumber: 5\n  }\n};\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('angle', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.angle);\naxisModelCreator('radius', PolarAxisModel, getAxisType, polarAxisDefaultExtendedOption.radius);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar Model = require(\"../../model/Model\");\n\nvar selectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar geoCreator = require(\"./geoCreator\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar GeoModel = ComponentModel.extend({\n  type: 'geo',\n\n  /**\n   * @type {module:echarts/coord/geo/Geo}\n   */\n  coordinateSystem: null,\n  layoutMode: 'box',\n  init: function init(option) {\n    ComponentModel.prototype.init.apply(this, arguments); // Default label emphasis `show`\n\n    modelUtil.defaultEmphasis(option, 'label', ['show']);\n  },\n  optionUpdated: function optionUpdated() {\n    var option = this.option;\n    var self = this;\n    option.regions = geoCreator.getFilledRegions(option.regions, option.map, option.nameMap);\n    this._optionModelMap = zrUtil.reduce(option.regions || [], function (optionModelMap, regionOpt) {\n      if (regionOpt.name) {\n        optionModelMap.set(regionOpt.name, new Model(regionOpt, self));\n      }\n\n      return optionModelMap;\n    }, zrUtil.createHashMap());\n    this.updateSelectedMap(option.regions);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    show: true,\n    left: 'center',\n    top: 'center',\n    // width:,\n    // height:,\n    // right\n    // bottom\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    // If svg used, aspectScale is 1 by default.\n    // aspectScale: 0.75,\n    aspectScale: null,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    silent: false,\n    // Map type\n    map: '',\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ]\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    // selectedMode: false\n    label: {\n      show: false,\n      color: '#000'\n    },\n    itemStyle: {\n      // color: 各异,\n      borderWidth: 0.5,\n      borderColor: '#444',\n      color: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        color: 'rgba(255,215,0,0.8)'\n      }\n    },\n    regions: []\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function getRegionModel(name) {\n    return this._optionModelMap.get(name) || new Model(null, this, this.ecModel);\n  },\n\n  /**\n   * Format label\n   * @param {string} name Region name\n   * @param {string} [status='normal'] 'normal' or 'emphasis'\n   * @return {string}\n   */\n  getFormattedLabel: function getFormattedLabel(name, status) {\n    var regionModel = this.getRegionModel(name);\n    var formatter = regionModel.get('label' + (status === 'normal' ? '.' : status + '.') + 'formatter');\n    var params = {\n      name: name\n    };\n\n    if (typeof formatter === 'function') {\n      params.status = status;\n      return formatter(params);\n    } else if (typeof formatter === 'string') {\n      return formatter.replace('{a}', name != null ? name : '');\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  }\n});\nzrUtil.mixin(GeoModel, selectableMixin);\nvar _default = GeoModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (24*60*60*1000)\n\n\nvar PROXIMATE_ONE_DAY = 86400000;\n/**\n * Calendar\n *\n * @constructor\n *\n * @param {Object} calendarModel calendarModel\n * @param {Object} ecModel       ecModel\n * @param {Object} api           api\n */\n\nfunction Calendar(calendarModel, ecModel, api) {\n  this._model = calendarModel;\n}\n\nCalendar.prototype = {\n  constructor: Calendar,\n  type: 'calendar',\n  dimensions: ['time', 'value'],\n  // Required in createListFromData\n  getDimensionsInfo: function getDimensionsInfo() {\n    return [{\n      name: 'time',\n      type: 'time'\n    }, 'value'];\n  },\n  getRangeInfo: function getRangeInfo() {\n    return this._rangeInfo;\n  },\n  getModel: function getModel() {\n    return this._model;\n  },\n  getRect: function getRect() {\n    return this._rect;\n  },\n  getCellWidth: function getCellWidth() {\n    return this._sw;\n  },\n  getCellHeight: function getCellHeight() {\n    return this._sh;\n  },\n  getOrient: function getOrient() {\n    return this._orient;\n  },\n\n  /**\n   * getFirstDayOfWeek\n   *\n   * @example\n   *     0 : start at Sunday\n   *     1 : start at Monday\n   *\n   * @return {number}\n   */\n  getFirstDayOfWeek: function getFirstDayOfWeek() {\n    return this._firstDayOfWeek;\n  },\n\n  /**\n   * get date info\n   *\n   * @param  {string|number} date date\n   * @return {Object}\n   * {\n   *      y: string, local full year, eg., '1940',\n   *      m: string, local month, from '01' ot '12',\n   *      d: string, local date, from '01' to '31' (if exists),\n   *      day: It is not date.getDay(). It is the location of the cell in a week, from 0 to 6,\n   *      time: timestamp,\n   *      formatedDate: string, yyyy-MM-dd,\n   *      date: original date object.\n   * }\n   */\n  getDateInfo: function getDateInfo(date) {\n    date = numberUtil.parseDate(date);\n    var y = date.getFullYear();\n    var m = date.getMonth() + 1;\n    m = m < 10 ? '0' + m : m;\n    var d = date.getDate();\n    d = d < 10 ? '0' + d : d;\n    var day = date.getDay();\n    day = Math.abs((day + 7 - this.getFirstDayOfWeek()) % 7);\n    return {\n      y: y,\n      m: m,\n      d: d,\n      day: day,\n      time: date.getTime(),\n      formatedDate: y + '-' + m + '-' + d,\n      date: date\n    };\n  },\n  getNextNDay: function getNextNDay(date, n) {\n    n = n || 0;\n\n    if (n === 0) {\n      return this.getDateInfo(date);\n    }\n\n    date = new Date(this.getDateInfo(date).time);\n    date.setDate(date.getDate() + n);\n    return this.getDateInfo(date);\n  },\n  update: function update(ecModel, api) {\n    this._firstDayOfWeek = +this._model.getModel('dayLabel').get('firstDay');\n    this._orient = this._model.get('orient');\n    this._lineWidth = this._model.getModel('itemStyle').getItemStyle().lineWidth || 0;\n    this._rangeInfo = this._getRangeInfo(this._initRangeOption());\n    var weeks = this._rangeInfo.weeks || 1;\n    var whNames = ['width', 'height'];\n\n    var cellSize = this._model.get('cellSize').slice();\n\n    var layoutParams = this._model.getBoxLayoutParams();\n\n    var cellNumbers = this._orient === 'horizontal' ? [weeks, 7] : [7, weeks];\n    zrUtil.each([0, 1], function (idx) {\n      if (cellSizeSpecified(cellSize, idx)) {\n        layoutParams[whNames[idx]] = cellSize[idx] * cellNumbers[idx];\n      }\n    });\n    var whGlobal = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var calendarRect = this._rect = layout.getLayoutRect(layoutParams, whGlobal);\n    zrUtil.each([0, 1], function (idx) {\n      if (!cellSizeSpecified(cellSize, idx)) {\n        cellSize[idx] = calendarRect[whNames[idx]] / cellNumbers[idx];\n      }\n    });\n\n    function cellSizeSpecified(cellSize, idx) {\n      return cellSize[idx] != null && cellSize[idx] !== 'auto';\n    }\n\n    this._sw = cellSize[0];\n    this._sh = cellSize[1];\n  },\n\n  /**\n   * Convert a time data(time, value) item to (x, y) point.\n   *\n   * @override\n   * @param  {Array|number} data data\n   * @param  {boolean} [clamp=true] out of range\n   * @return {Array} point\n   */\n  dataToPoint: function dataToPoint(data, clamp) {\n    zrUtil.isArray(data) && (data = data[0]);\n    clamp == null && (clamp = true);\n    var dayInfo = this.getDateInfo(data);\n    var range = this._rangeInfo;\n    var date = dayInfo.formatedDate; // if not in range return [NaN, NaN]\n\n    if (clamp && !(dayInfo.time >= range.start.time && dayInfo.time < range.end.time + PROXIMATE_ONE_DAY)) {\n      return [NaN, NaN];\n    }\n\n    var week = dayInfo.day;\n\n    var nthWeek = this._getRangeInfo([range.start.time, date]).nthWeek;\n\n    if (this._orient === 'vertical') {\n      return [this._rect.x + week * this._sw + this._sw / 2, this._rect.y + nthWeek * this._sh + this._sh / 2];\n    }\n\n    return [this._rect.x + nthWeek * this._sw + this._sw / 2, this._rect.y + week * this._sh + this._sh / 2];\n  },\n\n  /**\n   * Convert a (x, y) point to time data\n   *\n   * @override\n   * @param  {string} point point\n   * @return {string}       data\n   */\n  pointToData: function pointToData(point) {\n    var date = this.pointToDate(point);\n    return date && date.time;\n  },\n\n  /**\n   * Convert a time date item to (x, y) four point.\n   *\n   * @param  {Array} data  date[0] is date\n   * @param  {boolean} [clamp=true]  out of range\n   * @return {Object}       point\n   */\n  dataToRect: function dataToRect(data, clamp) {\n    var point = this.dataToPoint(data, clamp);\n    return {\n      contentShape: {\n        x: point[0] - (this._sw - this._lineWidth) / 2,\n        y: point[1] - (this._sh - this._lineWidth) / 2,\n        width: this._sw - this._lineWidth,\n        height: this._sh - this._lineWidth\n      },\n      center: point,\n      tl: [point[0] - this._sw / 2, point[1] - this._sh / 2],\n      tr: [point[0] + this._sw / 2, point[1] - this._sh / 2],\n      br: [point[0] + this._sw / 2, point[1] + this._sh / 2],\n      bl: [point[0] - this._sw / 2, point[1] + this._sh / 2]\n    };\n  },\n\n  /**\n   * Convert a (x, y) point to time date\n   *\n   * @param  {Array} point point\n   * @return {Object}       date\n   */\n  pointToDate: function pointToDate(point) {\n    var nthX = Math.floor((point[0] - this._rect.x) / this._sw) + 1;\n    var nthY = Math.floor((point[1] - this._rect.y) / this._sh) + 1;\n    var range = this._rangeInfo.range;\n\n    if (this._orient === 'vertical') {\n      return this._getDateByWeeksAndDay(nthY, nthX - 1, range);\n    }\n\n    return this._getDateByWeeksAndDay(nthX, nthY - 1, range);\n  },\n\n  /**\n   * @inheritDoc\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @inheritDoc\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * initRange\n   *\n   * @private\n   * @return {Array} [start, end]\n   */\n  _initRangeOption: function _initRangeOption() {\n    var range = this._model.get('range');\n\n    var rg = range;\n\n    if (zrUtil.isArray(rg) && rg.length === 1) {\n      rg = rg[0];\n    }\n\n    if (/^\\d{4}$/.test(rg)) {\n      range = [rg + '-01-01', rg + '-12-31'];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}$/.test(rg)) {\n      var start = this.getDateInfo(rg);\n      var firstDay = start.date;\n      firstDay.setMonth(firstDay.getMonth() + 1);\n      var end = this.getNextNDay(firstDay, -1);\n      range = [start.formatedDate, end.formatedDate];\n    }\n\n    if (/^\\d{4}[\\/|-]\\d{1,2}[\\/|-]\\d{1,2}$/.test(rg)) {\n      range = [rg, rg];\n    }\n\n    var tmp = this._getRangeInfo(range);\n\n    if (tmp.start.time > tmp.end.time) {\n      range.reverse();\n    }\n\n    return range;\n  },\n\n  /**\n   * range info\n   *\n   * @private\n   * @param  {Array} range range ['2017-01-01', '2017-07-08']\n   *  If range[0] > range[1], they will not be reversed.\n   * @return {Object}       obj\n   */\n  _getRangeInfo: function _getRangeInfo(range) {\n    range = [this.getDateInfo(range[0]), this.getDateInfo(range[1])];\n    var reversed;\n\n    if (range[0].time > range[1].time) {\n      reversed = true;\n      range.reverse();\n    }\n\n    var allDay = Math.floor(range[1].time / PROXIMATE_ONE_DAY) - Math.floor(range[0].time / PROXIMATE_ONE_DAY) + 1; // Consider case1 (#11677 #10430):\n    // Set the system timezone as \"UK\", set the range to `['2016-07-01', '2016-12-31']`\n    // Consider case2:\n    // Firstly set system timezone as \"Time Zone: America/Toronto\",\n    // ```\n    // var first = new Date(1478412000000 - 3600 * 1000 * 2.5);\n    // var second = new Date(1478412000000);\n    // var allDays = Math.floor(second / ONE_DAY) - Math.floor(first / ONE_DAY) + 1;\n    // ```\n    // will get wrong result because of DST. So we should fix it.\n\n    var date = new Date(range[0].time);\n    var startDateNum = date.getDate();\n    var endDateNum = range[1].date.getDate();\n    date.setDate(startDateNum + allDay - 1); // The bias can not over a month, so just compare date.\n\n    var dateNum = date.getDate();\n\n    if (dateNum !== endDateNum) {\n      var sign = date.getTime() - range[1].time > 0 ? 1 : -1;\n\n      while ((dateNum = date.getDate()) !== endDateNum && (date.getTime() - range[1].time) * sign > 0) {\n        allDay -= sign;\n        date.setDate(dateNum - sign);\n      }\n    }\n\n    var weeks = Math.floor((allDay + range[0].day + 6) / 7);\n    var nthWeek = reversed ? -weeks + 1 : weeks - 1;\n    reversed && range.reverse();\n    return {\n      range: [range[0].formatedDate, range[1].formatedDate],\n      start: range[0],\n      end: range[1],\n      allDay: allDay,\n      weeks: weeks,\n      // From 0.\n      nthWeek: nthWeek,\n      fweek: range[0].day,\n      lweek: range[1].day\n    };\n  },\n\n  /**\n   * get date by nthWeeks and week day in range\n   *\n   * @private\n   * @param  {number} nthWeek the week\n   * @param  {number} day   the week day\n   * @param  {Array} range [d1, d2]\n   * @return {Object}\n   */\n  _getDateByWeeksAndDay: function _getDateByWeeksAndDay(nthWeek, day, range) {\n    var rangeInfo = this._getRangeInfo(range);\n\n    if (nthWeek > rangeInfo.weeks || nthWeek === 0 && day < rangeInfo.fweek || nthWeek === rangeInfo.weeks && day > rangeInfo.lweek) {\n      return false;\n    }\n\n    var nthDay = (nthWeek - 1) * 7 - rangeInfo.fweek + day;\n    var date = new Date(rangeInfo.start.time);\n    date.setDate(rangeInfo.start.d + nthDay);\n    return this.getDateInfo(date);\n  }\n};\nCalendar.dimensions = Calendar.prototype.dimensions;\nCalendar.getDimensionsInfo = Calendar.prototype.getDimensionsInfo;\n\nCalendar.create = function (ecModel, api) {\n  var calendarList = [];\n  ecModel.eachComponent('calendar', function (calendarModel) {\n    var calendar = new Calendar(calendarModel, ecModel, api);\n    calendarList.push(calendar);\n    calendarModel.coordinateSystem = calendar;\n  });\n  ecModel.eachSeries(function (calendarSeries) {\n    if (calendarSeries.get('coordinateSystem') === 'calendar') {\n      // Inject coordinate system\n      calendarSeries.coordinateSystem = calendarList[calendarSeries.get('calendarIndex') || 0];\n    }\n  });\n  return calendarList;\n};\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var calendarModel = finder.calendarModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = calendarModel ? calendarModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nCoordinateSystem.register('calendar', Calendar);\nvar _default = Calendar;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar sizeCalculable = _layout.sizeCalculable;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar CalendarModel = ComponentModel.extend({\n  type: 'calendar',\n\n  /**\n   * @type {module:echarts/coord/calendar/Calendar}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    left: 80,\n    top: 60,\n    cellSize: 20,\n    // horizontal vertical\n    orient: 'horizontal',\n    // month separate line style\n    splitLine: {\n      show: true,\n      lineStyle: {\n        color: '#000',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    // rect style  temporarily unused emphasis\n    itemStyle: {\n      color: '#fff',\n      borderWidth: 1,\n      borderColor: '#ccc'\n    },\n    // week text style\n    dayLabel: {\n      show: true,\n      // a week first day\n      firstDay: 0,\n      // start end\n      position: 'start',\n      margin: '50%',\n      // 50% of cellSize\n      nameMap: 'en',\n      color: '#000'\n    },\n    // month text style\n    monthLabel: {\n      show: true,\n      // start end\n      position: 'start',\n      margin: 5,\n      // center or left\n      align: 'center',\n      // cn en []\n      nameMap: 'en',\n      formatter: null,\n      color: '#000'\n    },\n    // year text style\n    yearLabel: {\n      show: true,\n      // top bottom left right\n      position: null,\n      margin: 30,\n      formatter: null,\n      color: '#ccc',\n      fontFamily: 'sans-serif',\n      fontWeight: 'bolder',\n      fontSize: 20\n    }\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    CalendarModel.superApply(this, 'init', arguments);\n    mergeAndNormalizeLayoutParams(option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option, extraOpt) {\n    CalendarModel.superApply(this, 'mergeOption', arguments);\n    mergeAndNormalizeLayoutParams(this.option, option);\n  }\n});\n\nfunction mergeAndNormalizeLayoutParams(target, raw) {\n  // Normalize cellSize\n  var cellSize = target.cellSize;\n\n  if (!zrUtil.isArray(cellSize)) {\n    cellSize = target.cellSize = [cellSize, cellSize];\n  } else if (cellSize.length === 1) {\n    cellSize[1] = cellSize[0];\n  }\n\n  var ignoreSize = zrUtil.map([0, 1], function (hvIdx) {\n    // If user have set `width` or both `left` and `right`, cellSize\n    // will be automatically set to 'auto', otherwise the default\n    // setting of cellSize will make `width` setting not work.\n    if (sizeCalculable(raw, hvIdx)) {\n      cellSize[hvIdx] = 'auto';\n    }\n\n    return cellSize[hvIdx] != null && cellSize[hvIdx] !== 'auto';\n  });\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = CalendarModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./toolbox/ToolboxModel\");\n\nrequire(\"./toolbox/ToolboxView\");\n\nrequire(\"./toolbox/feature/SaveAsImage\");\n\nrequire(\"./toolbox/feature/MagicType\");\n\nrequire(\"./toolbox/feature/DataView\");\n\nrequire(\"./toolbox/feature/DataZoom\");\n\nrequire(\"./toolbox/feature/Restore\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"./featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ToolboxModel = echarts.extendComponentModel({\n  type: 'toolbox',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  optionUpdated: function optionUpdated() {\n    ToolboxModel.superApply(this, 'optionUpdated', arguments);\n    zrUtil.each(this.option.feature, function (featureOpt, featureName) {\n      var Feature = featureManager.get(featureName);\n      Feature && zrUtil.merge(featureOpt, Feature.defaultOption);\n    });\n  },\n  defaultOption: {\n    show: true,\n    z: 6,\n    zlevel: 0,\n    orient: 'horizontal',\n    left: 'right',\n    top: 'top',\n    // right\n    // bottom\n    backgroundColor: 'transparent',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemSize: 15,\n    itemGap: 8,\n    showTitle: true,\n    iconStyle: {\n      borderColor: '#666',\n      color: 'none'\n    },\n    emphasis: {\n      iconStyle: {\n        borderColor: '#3E98C5'\n      }\n    },\n    // textStyle: {},\n    // feature\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = ToolboxModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar featureManager = require(\"./featureManager\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar listComponentHelper = require(\"../helper/listComponent\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'toolbox',\n  render: function render(toolboxModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n\n    if (!toolboxModel.get('show')) {\n      return;\n    }\n\n    var itemSize = +toolboxModel.get('itemSize');\n    var featureOpts = toolboxModel.get('feature') || {};\n    var features = this._features || (this._features = {});\n    var featureNames = [];\n    zrUtil.each(featureOpts, function (opt, name) {\n      featureNames.push(name);\n    });\n    new DataDiffer(this._featureNames || [], featureNames).add(processFeature).update(processFeature).remove(zrUtil.curry(processFeature, null)).execute(); // Keep for diff.\n\n    this._featureNames = featureNames;\n\n    function processFeature(newIndex, oldIndex) {\n      var featureName = featureNames[newIndex];\n      var oldName = featureNames[oldIndex];\n      var featureOpt = featureOpts[featureName];\n      var featureModel = new Model(featureOpt, toolboxModel, toolboxModel.ecModel);\n      var feature; // FIX#11236, merge feature title from MagicType newOption. TODO: consider seriesIndex ?\n\n      if (payload && payload.newTitle != null && payload.featureName === featureName) {\n        featureOpt.title = payload.newTitle;\n      }\n\n      if (featureName && !oldName) {\n        // Create\n        if (isUserFeatureName(featureName)) {\n          feature = {\n            model: featureModel,\n            onclick: featureModel.option.onclick,\n            featureName: featureName\n          };\n        } else {\n          var Feature = featureManager.get(featureName);\n\n          if (!Feature) {\n            return;\n          }\n\n          feature = new Feature(featureModel, ecModel, api);\n        }\n\n        features[featureName] = feature;\n      } else {\n        feature = features[oldName]; // If feature does not exsit.\n\n        if (!feature) {\n          return;\n        }\n\n        feature.model = featureModel;\n        feature.ecModel = ecModel;\n        feature.api = api;\n      }\n\n      if (!featureName && oldName) {\n        feature.dispose && feature.dispose(ecModel, api);\n        return;\n      }\n\n      if (!featureModel.get('show') || feature.unusable) {\n        feature.remove && feature.remove(ecModel, api);\n        return;\n      }\n\n      createIconPaths(featureModel, feature, featureName);\n\n      featureModel.setIconStatus = function (iconName, status) {\n        var option = this.option;\n        var iconPaths = this.iconPaths;\n        option.iconStatus = option.iconStatus || {};\n        option.iconStatus[iconName] = status; // FIXME\n\n        iconPaths[iconName] && iconPaths[iconName].trigger(status);\n      };\n\n      if (feature.render) {\n        feature.render(featureModel, ecModel, api, payload);\n      }\n    }\n\n    function createIconPaths(featureModel, feature, featureName) {\n      var iconStyleModel = featureModel.getModel('iconStyle');\n      var iconStyleEmphasisModel = featureModel.getModel('emphasis.iconStyle'); // If one feature has mutiple icon. they are orginaized as\n      // {\n      //     icon: {\n      //         foo: '',\n      //         bar: ''\n      //     },\n      //     title: {\n      //         foo: '',\n      //         bar: ''\n      //     }\n      // }\n\n      var icons = feature.getIcons ? feature.getIcons() : featureModel.get('icon');\n      var titles = featureModel.get('title') || {};\n\n      if (typeof icons === 'string') {\n        var icon = icons;\n        var title = titles;\n        icons = {};\n        titles = {};\n        icons[featureName] = icon;\n        titles[featureName] = title;\n      }\n\n      var iconPaths = featureModel.iconPaths = {};\n      zrUtil.each(icons, function (iconStr, iconName) {\n        var path = graphic.createIcon(iconStr, {}, {\n          x: -itemSize / 2,\n          y: -itemSize / 2,\n          width: itemSize,\n          height: itemSize\n        });\n        path.setStyle(iconStyleModel.getItemStyle());\n        path.hoverStyle = iconStyleEmphasisModel.getItemStyle(); // Text position calculation\n\n        path.setStyle({\n          text: titles[iconName],\n          textAlign: iconStyleEmphasisModel.get('textAlign'),\n          textBorderRadius: iconStyleEmphasisModel.get('textBorderRadius'),\n          textPadding: iconStyleEmphasisModel.get('textPadding'),\n          textFill: null\n        });\n        var tooltipModel = toolboxModel.getModel('tooltip');\n\n        if (tooltipModel && tooltipModel.get('show')) {\n          path.attr('tooltip', zrUtil.extend({\n            content: titles[iconName],\n            formatter: tooltipModel.get('formatter', true) || function () {\n              return titles[iconName];\n            },\n            formatterParams: {\n              componentType: 'toolbox',\n              name: iconName,\n              title: titles[iconName],\n              $vars: ['name', 'title']\n            },\n            position: tooltipModel.get('position', true) || 'bottom'\n          }, tooltipModel.option));\n        }\n\n        graphic.setHoverStyle(path);\n\n        if (toolboxModel.get('showTitle')) {\n          path.__title = titles[iconName];\n          path.on('mouseover', function () {\n            // Should not reuse above hoverStyle, which might be modified.\n            var hoverStyle = iconStyleEmphasisModel.getItemStyle();\n            var defaultTextPosition = toolboxModel.get('orient') === 'vertical' ? toolboxModel.get('right') == null ? 'right' : 'left' : toolboxModel.get('bottom') == null ? 'bottom' : 'top';\n            path.setStyle({\n              textFill: iconStyleEmphasisModel.get('textFill') || hoverStyle.fill || hoverStyle.stroke || '#000',\n              textBackgroundColor: iconStyleEmphasisModel.get('textBackgroundColor'),\n              textPosition: iconStyleEmphasisModel.get('textPosition') || defaultTextPosition\n            });\n          }).on('mouseout', function () {\n            path.setStyle({\n              textFill: null,\n              textBackgroundColor: null\n            });\n          });\n        }\n\n        path.trigger(featureModel.get('iconStatus.' + iconName) || 'normal');\n        group.add(path);\n        path.on('click', zrUtil.bind(feature.onclick, feature, ecModel, api, iconName));\n        iconPaths[iconName] = path;\n      });\n    }\n\n    listComponentHelper.layout(group, toolboxModel, api); // Render background after group is layout\n    // FIXME\n\n    group.add(listComponentHelper.makeBackground(group.getBoundingRect(), toolboxModel)); // Adjust icon title positions to avoid them out of screen\n\n    group.eachChild(function (icon) {\n      var titleText = icon.__title;\n      var hoverStyle = icon.hoverStyle; // May be background element\n\n      if (hoverStyle && titleText) {\n        var rect = textContain.getBoundingRect(titleText, textContain.makeFont(hoverStyle));\n        var offsetX = icon.position[0] + group.position[0];\n        var offsetY = icon.position[1] + group.position[1] + itemSize;\n        var needPutOnTop = false;\n\n        if (offsetY + rect.height > api.getHeight()) {\n          hoverStyle.textPosition = 'top';\n          needPutOnTop = true;\n        }\n\n        var topOffset = needPutOnTop ? -5 - rect.height : itemSize + 8;\n\n        if (offsetX + rect.width / 2 > api.getWidth()) {\n          hoverStyle.textPosition = ['100%', topOffset];\n          hoverStyle.textAlign = 'right';\n        } else if (offsetX - rect.width / 2 < 0) {\n          hoverStyle.textPosition = [0, topOffset];\n          hoverStyle.textAlign = 'left';\n        }\n      }\n    });\n  },\n  updateView: function updateView(toolboxModel, ecModel, api, payload) {\n    zrUtil.each(this._features, function (feature) {\n      feature.updateView && feature.updateView(feature.model, ecModel, api, payload);\n    });\n  },\n  // updateLayout: function (toolboxModel, ecModel, api, payload) {\n  //     zrUtil.each(this._features, function (feature) {\n  //         feature.updateLayout && feature.updateLayout(feature.model, ecModel, api, payload);\n  //     });\n  // },\n  remove: function remove(ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.remove && feature.remove(ecModel, api);\n    });\n    this.group.removeAll();\n  },\n  dispose: function dispose(ecModel, api) {\n    zrUtil.each(this._features, function (feature) {\n      feature.dispose && feature.dispose(ecModel, api);\n    });\n  }\n});\n\nfunction isUserFeatureName(featureName) {\n  return featureName.indexOf('my') === 0;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar env = require(\"zrender/lib/core/env\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8Array */\n\n\nvar saveAsImageLang = lang.toolbox.saveAsImage;\n\nfunction SaveAsImage(model) {\n  this.model = model;\n}\n\nSaveAsImage.defaultOption = {\n  show: true,\n  icon: 'M4.7,22.9L29.3,45.5L54.7,23.4M4.6,43.6L4.6,58L53.8,58L53.8,43.6M29.2,45.1L29.2,0',\n  title: saveAsImageLang.title,\n  type: 'png',\n  // Default use option.backgroundColor\n  // backgroundColor: '#fff',\n  connectedBackgroundColor: '#fff',\n  name: '',\n  excludeComponents: ['toolbox'],\n  pixelRatio: 1,\n  lang: saveAsImageLang.lang.slice()\n};\nSaveAsImage.prototype.unusable = !env.canvasSupported;\nvar proto = SaveAsImage.prototype;\n\nproto.onclick = function (ecModel, api) {\n  var model = this.model;\n  var title = model.get('name') || ecModel.get('title.0.text') || 'echarts';\n  var isSvg = api.getZr().painter.getType() === 'svg';\n  var type = isSvg ? 'svg' : model.get('type', true) || 'png';\n  var url = api.getConnectedDataURL({\n    type: type,\n    backgroundColor: model.get('backgroundColor', true) || ecModel.get('backgroundColor') || '#fff',\n    connectedBackgroundColor: model.get('connectedBackgroundColor'),\n    excludeComponents: model.get('excludeComponents'),\n    pixelRatio: model.get('pixelRatio')\n  }); // Chrome and Firefox\n\n  if (typeof MouseEvent === 'function' && !env.browser.ie && !env.browser.edge) {\n    var $a = document.createElement('a');\n    $a.download = title + '.' + type;\n    $a.target = '_blank';\n    $a.href = url;\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: true,\n      cancelable: false\n    });\n    $a.dispatchEvent(evt);\n  } // IE\n  else {\n      if (window.navigator.msSaveOrOpenBlob) {\n        var bstr = atob(url.split(',')[1]);\n        var n = bstr.length;\n        var u8arr = new Uint8Array(n);\n\n        while (n--) {\n          u8arr[n] = bstr.charCodeAt(n);\n        }\n\n        var blob = new Blob([u8arr]);\n        window.navigator.msSaveOrOpenBlob(blob, title + '.' + type);\n      } else {\n        var lang = model.get('lang');\n        var html = '' + '<body style=\"margin:0;\">' + '<img src=\"' + url + '\" style=\"max-width:100%;\" title=\"' + (lang && lang[0] || '') + '\" />' + '</body>';\n        var tab = window.open();\n        tab.document.write(html);\n      }\n    }\n};\n\nfeatureManager.register('saveAsImage', SaveAsImage);\nvar _default = SaveAsImage;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar magicTypeLang = lang.toolbox.magicType;\nvar INNER_STACK_KEYWORD = '__ec_magicType_stack__';\n\nfunction MagicType(model) {\n  this.model = model;\n}\n\nMagicType.defaultOption = {\n  show: true,\n  type: [],\n  // Icon group\n  icon: {\n    /* eslint-disable */\n    line: 'M4.1,28.9h7.1l9.3-22l7.4,38l9.7-19.7l3,12.8h14.9M4.1,58h51.4',\n    bar: 'M6.7,22.9h10V48h-10V22.9zM24.9,13h10v35h-10V13zM43.2,2h10v46h-10V2zM3.1,58h53.7',\n    stack: 'M8.2,38.4l-8.4,4.1l30.6,15.3L60,42.5l-8.1-4.1l-21.5,11L8.2,38.4z M51.9,30l-8.1,4.2l-13.4,6.9l-13.9-6.9L8.2,30l-8.4,4.2l8.4,4.2l22.2,11l21.5-11l8.1-4.2L51.9,30z M51.9,21.7l-8.1,4.2L35.7,30l-5.3,2.8L24.9,30l-8.4-4.1l-8.3-4.2l-8.4,4.2L8.2,30l8.3,4.2l13.9,6.9l13.4-6.9l8.1-4.2l8.1-4.1L51.9,21.7zM30.4,2.2L-0.2,17.5l8.4,4.1l8.3,4.2l8.4,4.2l5.5,2.7l5.3-2.7l8.1-4.2l8.1-4.2l8.1-4.1L30.4,2.2z' // jshint ignore:line\n\n    /* eslint-enable */\n\n  },\n  // `line`, `bar`, `stack`, `tiled`\n  title: zrUtil.clone(magicTypeLang.title),\n  option: {},\n  seriesIndex: {}\n};\nvar proto = MagicType.prototype;\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon');\n  var icons = {};\n  zrUtil.each(model.get('type'), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nvar seriesOptGenreator = {\n  'line': function line(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'bar') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'line',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.line') || {}, true);\n    }\n  },\n  'bar': function bar(seriesType, seriesId, seriesModel, model) {\n    if (seriesType === 'line') {\n      return zrUtil.merge({\n        id: seriesId,\n        type: 'bar',\n        // Preserve data related option\n        data: seriesModel.get('data'),\n        stack: seriesModel.get('stack'),\n        markPoint: seriesModel.get('markPoint'),\n        markLine: seriesModel.get('markLine')\n      }, model.get('option.bar') || {}, true);\n    }\n  },\n  'stack': function stack(seriesType, seriesId, seriesModel, model) {\n    var isStack = seriesModel.get('stack') === INNER_STACK_KEYWORD;\n\n    if (seriesType === 'line' || seriesType === 'bar') {\n      model.setIconStatus('stack', isStack ? 'normal' : 'emphasis');\n      return zrUtil.merge({\n        id: seriesId,\n        stack: isStack ? '' : INNER_STACK_KEYWORD\n      }, model.get('option.stack') || {}, true);\n    }\n  }\n};\nvar radioTypes = [['line', 'bar'], ['stack']];\n\nproto.onclick = function (ecModel, api, type) {\n  var model = this.model;\n  var seriesIndex = model.get('seriesIndex.' + type); // Not supported magicType\n\n  if (!seriesOptGenreator[type]) {\n    return;\n  }\n\n  var newOption = {\n    series: []\n  };\n\n  var generateNewSeriesTypes = function generateNewSeriesTypes(seriesModel) {\n    var seriesType = seriesModel.subType;\n    var seriesId = seriesModel.id;\n    var newSeriesOpt = seriesOptGenreator[type](seriesType, seriesId, seriesModel, model);\n\n    if (newSeriesOpt) {\n      // PENDING If merge original option?\n      zrUtil.defaults(newSeriesOpt, seriesModel.option);\n      newOption.series.push(newSeriesOpt);\n    } // Modify boundaryGap\n\n\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && coordSys.type === 'cartesian2d' && (type === 'line' || type === 'bar')) {\n      var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n      if (categoryAxis) {\n        var axisDim = categoryAxis.dim;\n        var axisType = axisDim + 'Axis';\n        var axisModel = ecModel.queryComponents({\n          mainType: axisType,\n          index: seriesModel.get(name + 'Index'),\n          id: seriesModel.get(name + 'Id')\n        })[0];\n        var axisIndex = axisModel.componentIndex;\n        newOption[axisType] = newOption[axisType] || [];\n\n        for (var i = 0; i <= axisIndex; i++) {\n          newOption[axisType][axisIndex] = newOption[axisType][axisIndex] || {};\n        }\n\n        newOption[axisType][axisIndex].boundaryGap = type === 'bar';\n      }\n    }\n  };\n\n  zrUtil.each(radioTypes, function (radio) {\n    if (zrUtil.indexOf(radio, type) >= 0) {\n      zrUtil.each(radio, function (item) {\n        model.setIconStatus(item, 'normal');\n      });\n    }\n  });\n  model.setIconStatus(type, 'emphasis');\n  ecModel.eachComponent({\n    mainType: 'series',\n    query: seriesIndex == null ? null : {\n      seriesIndex: seriesIndex\n    }\n  }, generateNewSeriesTypes);\n  var newTitle; // Change title of stack\n\n  if (type === 'stack') {\n    var isStack = newOption.series && newOption.series[0] && newOption.series[0].stack === INNER_STACK_KEYWORD;\n    newTitle = isStack ? zrUtil.merge({\n      stack: magicTypeLang.title.tiled\n    }, magicTypeLang.title) : zrUtil.clone(magicTypeLang.title);\n  }\n\n  api.dispatchAction({\n    type: 'changeMagicType',\n    currentType: type,\n    newOption: newOption,\n    newTitle: newTitle,\n    featureName: 'magicType'\n  });\n};\n\necharts.registerAction({\n  type: 'changeMagicType',\n  event: 'magicTypeChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.mergeOption(payload.newOption);\n});\nfeatureManager.register('magicType', MagicType);\nvar _default = MagicType;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar dataViewLang = lang.toolbox.dataView;\nvar BLOCK_SPLITER = new Array(60).join('-');\nvar ITEM_SPLITER = '\\t';\n/**\n * Group series into two types\n *  1. on category axis, like line, bar\n *  2. others, like scatter, pie\n * @param {module:echarts/model/Global} ecModel\n * @return {Object}\n * @inner\n */\n\nfunction groupSeries(ecModel) {\n  var seriesGroupByCategoryAxis = {};\n  var otherSeries = [];\n  var meta = [];\n  ecModel.eachRawSeries(function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys && (coordSys.type === 'cartesian2d' || coordSys.type === 'polar')) {\n      var baseAxis = coordSys.getBaseAxis();\n\n      if (baseAxis.type === 'category') {\n        var key = baseAxis.dim + '_' + baseAxis.index;\n\n        if (!seriesGroupByCategoryAxis[key]) {\n          seriesGroupByCategoryAxis[key] = {\n            categoryAxis: baseAxis,\n            valueAxis: coordSys.getOtherAxis(baseAxis),\n            series: []\n          };\n          meta.push({\n            axisDim: baseAxis.dim,\n            axisIndex: baseAxis.index\n          });\n        }\n\n        seriesGroupByCategoryAxis[key].series.push(seriesModel);\n      } else {\n        otherSeries.push(seriesModel);\n      }\n    } else {\n      otherSeries.push(seriesModel);\n    }\n  });\n  return {\n    seriesGroupByCategoryAxis: seriesGroupByCategoryAxis,\n    other: otherSeries,\n    meta: meta\n  };\n}\n/**\n * Assemble content of series on cateogory axis\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleSeriesWithCategoryAxis(series) {\n  var tables = [];\n  zrUtil.each(series, function (group, key) {\n    var categoryAxis = group.categoryAxis;\n    var valueAxis = group.valueAxis;\n    var valueAxisDim = valueAxis.dim;\n    var headers = [' '].concat(zrUtil.map(group.series, function (series) {\n      return series.name;\n    }));\n    var columns = [categoryAxis.model.getCategories()];\n    zrUtil.each(group.series, function (series) {\n      columns.push(series.getRawData().mapArray(valueAxisDim, function (val) {\n        return val;\n      }));\n    }); // Assemble table content\n\n    var lines = [headers.join(ITEM_SPLITER)];\n\n    for (var i = 0; i < columns[0].length; i++) {\n      var items = [];\n\n      for (var j = 0; j < columns.length; j++) {\n        items.push(columns[j][i]);\n      }\n\n      lines.push(items.join(ITEM_SPLITER));\n    }\n\n    tables.push(lines.join('\\n'));\n  });\n  return tables.join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * Assemble content of other series\n * @param {Array.<module:echarts/model/Series>} series\n * @return {string}\n * @inner\n */\n\n\nfunction assembleOtherSeries(series) {\n  return zrUtil.map(series, function (series) {\n    var data = series.getRawData();\n    var lines = [series.name];\n    var vals = [];\n    data.each(data.dimensions, function () {\n      var argLen = arguments.length;\n      var dataIndex = arguments[argLen - 1];\n      var name = data.getName(dataIndex);\n\n      for (var i = 0; i < argLen - 1; i++) {\n        vals[i] = arguments[i];\n      }\n\n      lines.push((name ? name + ITEM_SPLITER : '') + vals.join(ITEM_SPLITER));\n    });\n    return lines.join('\\n');\n  }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n');\n}\n/**\n * @param {module:echarts/model/Global}\n * @return {Object}\n * @inner\n */\n\n\nfunction getContentFromModel(ecModel) {\n  var result = groupSeries(ecModel);\n  return {\n    value: zrUtil.filter([assembleSeriesWithCategoryAxis(result.seriesGroupByCategoryAxis), assembleOtherSeries(result.other)], function (str) {\n      return str.replace(/[\\n\\t\\s]/g, '');\n    }).join('\\n\\n' + BLOCK_SPLITER + '\\n\\n'),\n    meta: result.meta\n  };\n}\n\nfunction trim(str) {\n  return str.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n}\n/**\n * If a block is tsv format\n */\n\n\nfunction isTSVFormat(block) {\n  // Simple method to find out if a block is tsv format\n  var firstLine = block.slice(0, block.indexOf('\\n'));\n\n  if (firstLine.indexOf(ITEM_SPLITER) >= 0) {\n    return true;\n  }\n}\n\nvar itemSplitRegex = new RegExp('[' + ITEM_SPLITER + ']+', 'g');\n/**\n * @param {string} tsv\n * @return {Object}\n */\n\nfunction parseTSVContents(tsv) {\n  var tsvLines = tsv.split(/\\n+/g);\n  var headers = trim(tsvLines.shift()).split(itemSplitRegex);\n  var categories = [];\n  var series = zrUtil.map(headers, function (header) {\n    return {\n      name: header,\n      data: []\n    };\n  });\n\n  for (var i = 0; i < tsvLines.length; i++) {\n    var items = trim(tsvLines[i]).split(itemSplitRegex);\n    categories.push(items.shift());\n\n    for (var j = 0; j < items.length; j++) {\n      series[j] && (series[j].data[i] = items[j]);\n    }\n  }\n\n  return {\n    series: series,\n    categories: categories\n  };\n}\n/**\n * @param {string} str\n * @return {Array.<Object>}\n * @inner\n */\n\n\nfunction parseListContents(str) {\n  var lines = str.split(/\\n+/g);\n  var seriesName = trim(lines.shift());\n  var data = [];\n\n  for (var i = 0; i < lines.length; i++) {\n    var items = trim(lines[i]).split(itemSplitRegex);\n    var name = '';\n    var value;\n    var hasName = false;\n\n    if (isNaN(items[0])) {\n      // First item is name\n      hasName = true;\n      name = items[0];\n      items = items.slice(1);\n      data[i] = {\n        name: name,\n        value: []\n      };\n      value = data[i].value;\n    } else {\n      value = data[i] = [];\n    }\n\n    for (var j = 0; j < items.length; j++) {\n      value.push(+items[j]);\n    }\n\n    if (value.length === 1) {\n      hasName ? data[i].value = value[0] : data[i] = value[0];\n    }\n  }\n\n  return {\n    name: seriesName,\n    data: data\n  };\n}\n/**\n * @param {string} str\n * @param {Array.<Object>} blockMetaList\n * @return {Object}\n * @inner\n */\n\n\nfunction parseContents(str, blockMetaList) {\n  var blocks = str.split(new RegExp('\\n*' + BLOCK_SPLITER + '\\n*', 'g'));\n  var newOption = {\n    series: []\n  };\n  zrUtil.each(blocks, function (block, idx) {\n    if (isTSVFormat(block)) {\n      var result = parseTSVContents(block);\n      var blockMeta = blockMetaList[idx];\n      var axisKey = blockMeta.axisDim + 'Axis';\n\n      if (blockMeta) {\n        newOption[axisKey] = newOption[axisKey] || [];\n        newOption[axisKey][blockMeta.axisIndex] = {\n          data: result.categories\n        };\n        newOption.series = newOption.series.concat(result.series);\n      }\n    } else {\n      var result = parseListContents(block);\n      newOption.series.push(result);\n    }\n  });\n  return newOption;\n}\n/**\n * @alias {module:echarts/component/toolbox/feature/DataView}\n * @constructor\n * @param {module:echarts/model/Model} model\n */\n\n\nfunction DataView(model) {\n  this._dom = null;\n  this.model = model;\n}\n\nDataView.defaultOption = {\n  show: true,\n  readOnly: false,\n  optionToContent: null,\n  contentToOption: null,\n  icon: 'M17.5,17.3H33 M17.5,17.3H33 M45.4,29.5h-28 M11.5,2v56H51V14.8L38.4,2H11.5z M38.4,2.2v12.7H51 M45.4,41.7h-28',\n  title: zrUtil.clone(dataViewLang.title),\n  lang: zrUtil.clone(dataViewLang.lang),\n  backgroundColor: '#fff',\n  textColor: '#000',\n  textareaColor: '#fff',\n  textareaBorderColor: '#333',\n  buttonColor: '#c23531',\n  buttonTextColor: '#fff'\n};\n\nDataView.prototype.onclick = function (ecModel, api) {\n  var container = api.getDom();\n  var model = this.model;\n\n  if (this._dom) {\n    container.removeChild(this._dom);\n  }\n\n  var root = document.createElement('div');\n  root.style.cssText = 'position:absolute;left:5px;top:5px;bottom:5px;right:5px;';\n  root.style.backgroundColor = model.get('backgroundColor') || '#fff'; // Create elements\n\n  var header = document.createElement('h4');\n  var lang = model.get('lang') || [];\n  header.innerHTML = lang[0] || model.get('title');\n  header.style.cssText = 'margin: 10px 20px;';\n  header.style.color = model.get('textColor');\n  var viewMain = document.createElement('div');\n  var textarea = document.createElement('textarea');\n  viewMain.style.cssText = 'display:block;width:100%;overflow:auto;';\n  var optionToContent = model.get('optionToContent');\n  var contentToOption = model.get('contentToOption');\n  var result = getContentFromModel(ecModel);\n\n  if (typeof optionToContent === 'function') {\n    var htmlOrDom = optionToContent(api.getOption());\n\n    if (typeof htmlOrDom === 'string') {\n      viewMain.innerHTML = htmlOrDom;\n    } else if (zrUtil.isDom(htmlOrDom)) {\n      viewMain.appendChild(htmlOrDom);\n    }\n  } else {\n    // Use default textarea\n    viewMain.appendChild(textarea);\n    textarea.readOnly = model.get('readOnly');\n    textarea.style.cssText = 'width:100%;height:100%;font-family:monospace;font-size:14px;line-height:1.6rem;';\n    textarea.style.color = model.get('textColor');\n    textarea.style.borderColor = model.get('textareaBorderColor');\n    textarea.style.backgroundColor = model.get('textareaColor');\n    textarea.value = result.value;\n  }\n\n  var blockMetaList = result.meta;\n  var buttonContainer = document.createElement('div');\n  buttonContainer.style.cssText = 'position:absolute;bottom:0;left:0;right:0;';\n  var buttonStyle = 'float:right;margin-right:20px;border:none;' + 'cursor:pointer;padding:2px 5px;font-size:12px;border-radius:3px';\n  var closeButton = document.createElement('div');\n  var refreshButton = document.createElement('div');\n  buttonStyle += ';background-color:' + model.get('buttonColor');\n  buttonStyle += ';color:' + model.get('buttonTextColor');\n  var self = this;\n\n  function close() {\n    container.removeChild(root);\n    self._dom = null;\n  }\n\n  eventTool.addEventListener(closeButton, 'click', close);\n  eventTool.addEventListener(refreshButton, 'click', function () {\n    var newOption;\n\n    try {\n      if (typeof contentToOption === 'function') {\n        newOption = contentToOption(viewMain, api.getOption());\n      } else {\n        newOption = parseContents(textarea.value, blockMetaList);\n      }\n    } catch (e) {\n      close();\n      throw new Error('Data view format error ' + e);\n    }\n\n    if (newOption) {\n      api.dispatchAction({\n        type: 'changeDataView',\n        newOption: newOption\n      });\n    }\n\n    close();\n  });\n  closeButton.innerHTML = lang[1];\n  refreshButton.innerHTML = lang[2];\n  refreshButton.style.cssText = buttonStyle;\n  closeButton.style.cssText = buttonStyle;\n  !model.get('readOnly') && buttonContainer.appendChild(refreshButton);\n  buttonContainer.appendChild(closeButton);\n  root.appendChild(header);\n  root.appendChild(viewMain);\n  root.appendChild(buttonContainer);\n  viewMain.style.height = container.clientHeight - 80 + 'px';\n  container.appendChild(root);\n  this._dom = root;\n};\n\nDataView.prototype.remove = function (ecModel, api) {\n  this._dom && api.getDom().removeChild(this._dom);\n};\n\nDataView.prototype.dispose = function (ecModel, api) {\n  this.remove(ecModel, api);\n};\n/**\n * @inner\n */\n\n\nfunction tryMergeDataOption(newData, originalData) {\n  return zrUtil.map(newData, function (newVal, idx) {\n    var original = originalData && originalData[idx];\n\n    if (zrUtil.isObject(original) && !zrUtil.isArray(original)) {\n      if (zrUtil.isObject(newVal) && !zrUtil.isArray(newVal)) {\n        newVal = newVal.value;\n      } // Original data has option\n\n\n      return zrUtil.defaults({\n        value: newVal\n      }, original);\n    } else {\n      return newVal;\n    }\n  });\n}\n\nfeatureManager.register('dataView', DataView);\necharts.registerAction({\n  type: 'changeDataView',\n  event: 'dataViewChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var newSeriesOptList = [];\n  zrUtil.each(payload.newOption.series, function (seriesOpt) {\n    var seriesModel = ecModel.getSeriesByName(seriesOpt.name)[0];\n\n    if (!seriesModel) {\n      // New created series\n      // Geuss the series type\n      newSeriesOptList.push(zrUtil.extend({\n        // Default is scatter\n        type: 'scatter'\n      }, seriesOpt));\n    } else {\n      var originalData = seriesModel.get('data');\n      newSeriesOptList.push({\n        name: seriesOpt.name,\n        data: tryMergeDataOption(seriesOpt.data, originalData)\n      });\n    }\n  });\n  ecModel.mergeOption(zrUtil.defaults({\n    series: newSeriesOptList\n  }, payload.newOption));\n});\nvar _default = DataView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\nvar DataDimensionInfo = require(\"./DataDimensionInfo\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar INDEX_NOT_FOUND = -1; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorInt32Array = typeof Int32Array === UNDEFINED ? Array : Int32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object|module:data/DataDimensionInfo>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function List(dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = new DataDimensionInfo({\n        name: dimensionInfo\n      });\n    } else if (!(dimensionInfo instanceof DataDimensionInfo)) {\n      dimensionInfo = new DataDimensionInfo(dimensionInfo);\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n  /**\n   * User output info of this data.\n   * DO NOT use it in other places!\n   *\n   * When preparing user params for user callbacks, we have\n   * to clone these inner data structures to prevent users\n   * from modifying them to effect built-in logic. And for\n   * performance consideration we make this `userOutput` to\n   * avoid clone them too many times.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.userOutput = this._dimensionsSummary.userOutput;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * The meanings of the input parameter `dim`:\n *\n * + If dim is a number (e.g., `1`), it means the index of the dimension.\n *   For example, `getDimension(0)` will return 'x' or 'lng' or 'radius'.\n * + If dim is a number-like string (e.g., `\"1\"`):\n *     + If there is the same concrete dim name defined in `this.dimensions`, it means that concrete name.\n *     + If not, it will be converted to a number, which means the index of the dimension.\n *        (why? because of the backward compatbility. We have been tolerating number-like string in\n *        dimension setting, although now it seems that it is not a good idea.)\n *     For example, `visualMap[i].dimension: \"1\"` is the same meaning as `visualMap[i].dimension: 1`,\n *     if no dimension name is defined as `\"1\"`.\n * + If dim is a not-number-like string, it means the concrete dim name.\n *   For example, it can be be default name `\"x\"`, `\"y\"`, `\"z\"`, `\"lng\"`, `\"lat\"`, `\"angle\"`, `\"radius\"`,\n *   or customized in `dimensions` property of option like `\"age\"`.\n *\n * Get dimension name\n * @param {string|number} dim See above.\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (typeof dim === 'number' // If being a number-like string but not being defined a dimension name.\n  || !isNaN(dim) && !this._dimensionInfos.hasOwnProperty(dim)) {\n    dim = this.dimensions[dim];\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter;\n  this._dimValueGetterArrayRows = defaultDimValueGetters.arrayRows; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n */\n\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n * This method does not modify `rawData` (`dataProvider`), but only\n * add values to storage.\n *\n * The final count will be increased by `Math.max(values.length, names.length)`.\n *\n * @param {Array.<Array.<*>>} values That is the SourceType: 'arrayRows', like\n *        [\n *            [12, 33, 44],\n *            [NaN, 43, 1],\n *            ['-', 'asdf', 0]\n *        ]\n *        Each item is exaclty cooresponding to a dimension.\n * @param {Array.<string>} [names]\n */\n\n\nlistProto.appendValues = function (values, names) {\n  var chunkSize = this._chunkSize;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var rawExtent = this._rawExtent;\n  var start = this.count();\n  var end = start + Math.max(values.length, names ? names.length : 0);\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, this._dimensionInfos[dim], chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var emptyDataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    var sourceIdx = idx - start;\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n\n      var val = this._dimValueGetterArrayRows(values[sourceIdx] || emptyDataItem, dim, sourceIdx, k);\n\n      storage[dim][chunkIndex][chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    }\n\n    if (names) {\n      this._nameList[idx] = names[sourceIdx];\n    }\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, dimInfo, chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareChunks(storage, dimInfo, chunkSize, chunkCount, end) {\n  var DataCtor = dataCtors[dimInfo.type];\n  var lastChunkIndex = chunkCount - 1;\n  var dim = dimInfo.name;\n  var resizeChunkArray = storage[dim][lastChunkIndex];\n\n  if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n    var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n    // within the initial chunkSize.\n\n    for (var j = 0; j < resizeChunkArray.length; j++) {\n      newStore[j] = resizeChunkArray[j];\n    }\n\n    storage[dim][lastChunkIndex] = newStore;\n  } // Create new chunks.\n\n\n  for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n    storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n  }\n}\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorInt32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as INDEX_NOT_FOUND.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = INDEX_NOT_FOUND;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    // Ordinal type originally can be string or number.\n    // But when an ordinal type is used on coord, it can\n    // not be string but only number. So we can also use isNaN.\n    if (isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return INDEX_NOT_FOUND;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  }\n\n  if (!this._indices) {\n    return rawIndex;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} If and only if multiple indices has\n *        the same value, they are put to the result.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Infinity;\n  var minDiff = -1;\n  var nearestIndicesLen = 0; // Check the test case of `test/ut/spec/data/List.js`.\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i);\n    var dist = Math.abs(diff);\n\n    if (dist <= maxDistance) {\n      // When the `value` is at the middle of `this.get(dim, i)` and `this.get(dim, i+1)`,\n      // we'd better not push both of them to `nearestIndices`, otherwise it is easy to\n      // get more than one item in `nearestIndices` (more specifically, in `tooltip`).\n      // So we chose the one that `diff >= 0` in this csae.\n      // But if `this.get(dim, i)` and `this.get(dim, j)` get the same value, both of them\n      // should be push to `nearestIndices`.\n      if (dist < minDist || dist === minDist && diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndicesLen = 0;\n      }\n\n      if (diff === minDiff) {\n        nearestIndices[nearestIndicesLen++] = i;\n      }\n    }\n  }\n\n  nearestIndices.length = nearestIndicesLen;\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function setItemDataAndSeriesIndex(child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../../helper/BrushController\");\n\nvar BrushTargetManager = require(\"../../helper/BrushTargetManager\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar sliderMove = require(\"../../helper/sliderMove\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n\nrequire(\"../../dataZoomSelect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Use dataZoomSelect\n\n\nvar dataZoomLang = lang.toolbox.dataZoom;\nvar each = zrUtil.each; // Spectial component id start with \\0ec\\0, see echarts/model/Global.js~hasInnerId\n\nvar DATA_ZOOM_ID_BASE = '\\0_ec_\\0toolbox-dataZoom_';\n\nfunction DataZoom(model, ecModel, api) {\n  /**\n   * @private\n   * @type {module:echarts/component/helper/BrushController}\n   */\n  (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._isZoomActive;\n}\n\nDataZoom.defaultOption = {\n  show: true,\n  filterMode: 'filter',\n  // Icon group\n  icon: {\n    zoom: 'M0,13.5h26.9 M13.5,26.9V0 M32.1,13.5H58V58H13.5 V32.1',\n    back: 'M22,1.4L9.9,13.5l12.3,12.3 M10.3,13.5H54.9v44.6 H10.3v-26'\n  },\n  // `zoom`, `back`\n  title: zrUtil.clone(dataZoomLang.title)\n};\nvar proto = DataZoom.prototype;\n\nproto.render = function (featureModel, ecModel, api, payload) {\n  this.model = featureModel;\n  this.ecModel = ecModel;\n  this.api = api;\n  updateZoomBtnStatus(featureModel, ecModel, this, payload, api);\n  updateBackBtnStatus(featureModel, ecModel);\n};\n\nproto.onclick = function (ecModel, api, type) {\n  handlers[type].call(this);\n};\n\nproto.remove = function (ecModel, api) {\n  this._brushController.unmount();\n};\n\nproto.dispose = function (ecModel, api) {\n  this._brushController.dispose();\n};\n/**\n * @private\n */\n\n\nvar handlers = {\n  zoom: function zoom() {\n    var nextActive = !this._isZoomActive;\n    this.api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'dataZoomSelect',\n      dataZoomSelectActive: nextActive\n    });\n  },\n  back: function back() {\n    this._dispatchZoomAction(history.pop(this.ecModel));\n  }\n};\n/**\n * @private\n */\n\nproto._onBrush = function (areas, opt) {\n  if (!opt.isEnd || !areas.length) {\n    return;\n  }\n\n  var snapshot = {};\n  var ecModel = this.ecModel;\n\n  this._brushController.updateCovers([]); // remove cover\n\n\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(this.model.option), ecModel, {\n    include: ['grid']\n  });\n  brushTargetManager.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    if (coordSys.type !== 'cartesian2d') {\n      return;\n    }\n\n    var brushType = area.brushType;\n\n    if (brushType === 'rect') {\n      setBatch('x', coordSys, coordRange[0]);\n      setBatch('y', coordSys, coordRange[1]);\n    } else {\n      setBatch({\n        lineX: 'x',\n        lineY: 'y'\n      }[brushType], coordSys, coordRange);\n    }\n  });\n  history.push(ecModel, snapshot);\n\n  this._dispatchZoomAction(snapshot);\n\n  function setBatch(dimName, coordSys, minMax) {\n    var axis = coordSys.getAxis(dimName);\n    var axisModel = axis.model;\n    var dataZoomModel = findDataZoom(dimName, axisModel, ecModel); // Restrict range.\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy(axisModel).getMinMaxSpan();\n\n    if (minMaxSpan.minValueSpan != null || minMaxSpan.maxValueSpan != null) {\n      minMax = sliderMove(0, minMax.slice(), axis.scale.getExtent(), 0, minMaxSpan.minValueSpan, minMaxSpan.maxValueSpan);\n    }\n\n    dataZoomModel && (snapshot[dataZoomModel.id] = {\n      dataZoomId: dataZoomModel.id,\n      startValue: minMax[0],\n      endValue: minMax[1]\n    });\n  }\n\n  function findDataZoom(dimName, axisModel, ecModel) {\n    var found;\n    ecModel.eachComponent({\n      mainType: 'dataZoom',\n      subType: 'select'\n    }, function (dzModel) {\n      var has = dzModel.getAxisModel(dimName, axisModel.componentIndex);\n      has && (found = dzModel);\n    });\n    return found;\n  }\n};\n/**\n * @private\n */\n\n\nproto._dispatchZoomAction = function (snapshot) {\n  var batch = []; // Convert from hash map to array.\n\n  each(snapshot, function (batchItem, dataZoomId) {\n    batch.push(zrUtil.clone(batchItem));\n  });\n  batch.length && this.api.dispatchAction({\n    type: 'dataZoom',\n    from: this.uid,\n    batch: batch\n  });\n};\n\nfunction retrieveAxisSetting(option) {\n  var setting = {}; // Compatible with previous setting: null => all axis, false => no axis.\n\n  zrUtil.each(['xAxisIndex', 'yAxisIndex'], function (name) {\n    setting[name] = option[name];\n    setting[name] == null && (setting[name] = 'all');\n    (setting[name] === false || setting[name] === 'none') && (setting[name] = []);\n  });\n  return setting;\n}\n\nfunction updateBackBtnStatus(featureModel, ecModel) {\n  featureModel.setIconStatus('back', history.count(ecModel) > 1 ? 'emphasis' : 'normal');\n}\n\nfunction updateZoomBtnStatus(featureModel, ecModel, view, payload, api) {\n  var zoomActive = view._isZoomActive;\n\n  if (payload && payload.type === 'takeGlobalCursor') {\n    zoomActive = payload.key === 'dataZoomSelect' ? payload.dataZoomSelectActive : false;\n  }\n\n  view._isZoomActive = zoomActive;\n  featureModel.setIconStatus('zoom', zoomActive ? 'emphasis' : 'normal');\n  var brushTargetManager = new BrushTargetManager(retrieveAxisSetting(featureModel.option), ecModel, {\n    include: ['grid']\n  });\n\n  view._brushController.setPanels(brushTargetManager.makePanelOpts(api, function (targetInfo) {\n    return targetInfo.xAxisDeclared && !targetInfo.yAxisDeclared ? 'lineX' : !targetInfo.xAxisDeclared && targetInfo.yAxisDeclared ? 'lineY' : 'rect';\n  })).enableBrush(zoomActive ? {\n    brushType: 'auto',\n    brushStyle: {\n      // FIXME user customized?\n      lineWidth: 0,\n      fill: 'rgba(0,0,0,0.2)'\n    }\n  } : false);\n}\n\nfeatureManager.register('dataZoom', DataZoom); // Create special dataZoom option for select\n// FIXME consider the case of merge option, where axes options are not exists.\n\necharts.registerPreprocessor(function (option) {\n  if (!option) {\n    return;\n  }\n\n  var dataZoomOpts = option.dataZoom || (option.dataZoom = []);\n\n  if (!zrUtil.isArray(dataZoomOpts)) {\n    option.dataZoom = dataZoomOpts = [dataZoomOpts];\n  }\n\n  var toolboxOpt = option.toolbox;\n\n  if (toolboxOpt) {\n    // Assume there is only one toolbox\n    if (zrUtil.isArray(toolboxOpt)) {\n      toolboxOpt = toolboxOpt[0];\n    }\n\n    if (toolboxOpt && toolboxOpt.feature) {\n      var dataZoomOpt = toolboxOpt.feature.dataZoom; // FIXME: If add dataZoom when setOption in merge mode,\n      // no axis info to be added. See `test/dataZoom-extreme.html`\n\n      addForAxis('xAxis', dataZoomOpt);\n      addForAxis('yAxis', dataZoomOpt);\n    }\n  }\n\n  function addForAxis(axisName, dataZoomOpt) {\n    if (!dataZoomOpt) {\n      return;\n    } // Try not to modify model, because it is not merged yet.\n\n\n    var axisIndicesName = axisName + 'Index';\n    var givenAxisIndices = dataZoomOpt[axisIndicesName];\n\n    if (givenAxisIndices != null && givenAxisIndices !== 'all' && !zrUtil.isArray(givenAxisIndices)) {\n      givenAxisIndices = givenAxisIndices === false || givenAxisIndices === 'none' ? [] : [givenAxisIndices];\n    }\n\n    forEachComponent(axisName, function (axisOpt, axisIndex) {\n      if (givenAxisIndices != null && givenAxisIndices !== 'all' && zrUtil.indexOf(givenAxisIndices, axisIndex) === -1) {\n        return;\n      }\n\n      var newOpt = {\n        type: 'select',\n        $fromToolbox: true,\n        // Default to be filter\n        filterMode: dataZoomOpt.filterMode || 'filter',\n        // Id for merge mapping.\n        id: DATA_ZOOM_ID_BASE + axisName + axisIndex\n      }; // FIXME\n      // Only support one axis now.\n\n      newOpt[axisIndicesName] = axisIndex;\n      dataZoomOpts.push(newOpt);\n    });\n  }\n\n  function forEachComponent(mainType, cb) {\n    var opts = option[mainType];\n\n    if (!zrUtil.isArray(opts)) {\n      opts = opts ? [opts] : [];\n    }\n\n    each(opts, cb);\n  }\n});\nvar _default = DataZoom;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../../echarts\");\n\nvar history = require(\"../../dataZoom/history\");\n\nvar lang = require(\"../../../lang\");\n\nvar featureManager = require(\"../featureManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar restoreLang = lang.toolbox.restore;\n\nfunction Restore(model) {\n  this.model = model;\n}\n\nRestore.defaultOption = {\n  show: true,\n\n  /* eslint-disable */\n  icon: 'M3.8,33.4 M47,18.9h9.8V8.7 M56.3,20.1 C52.1,9,40.5,0.6,26.8,2.1C12.6,3.7,1.6,16.2,2.1,30.6 M13,41.1H3.1v10.2 M3.7,39.9c4.2,11.1,15.8,19.5,29.5,18 c14.2-1.6,25.2-14.1,24.7-28.5',\n\n  /* eslint-enable */\n  title: restoreLang.title\n};\nvar proto = Restore.prototype;\n\nproto.onclick = function (ecModel, api, type) {\n  history.clear(ecModel);\n  api.dispatchAction({\n    type: 'restore',\n    from: this.uid\n  });\n};\n\nfeatureManager.register('restore', Restore);\necharts.registerAction({\n  type: 'restore',\n  event: 'restore',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  ecModel.resetOption('recreate');\n});\nvar _default = Restore;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./tooltip/TooltipModel\");\n\nrequire(\"./tooltip/TooltipView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME Better way to pack data in graphic element\n\n/**\n * @action\n * @property {string} type\n * @property {number} seriesIndex\n * @property {number} dataIndex\n * @property {number} [x]\n * @property {number} [y]\n */\n\n\necharts.registerAction({\n  type: 'showTip',\n  event: 'showTip',\n  update: 'tooltip:manuallyShowTip'\n}, // noop\nfunction () {});\necharts.registerAction({\n  type: 'hideTip',\n  event: 'hideTip',\n  update: 'tooltip:manuallyHideTip'\n}, // noop\nfunction () {});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentModel({\n  type: 'tooltip',\n  dependencies: ['axisPointer'],\n  defaultOption: {\n    zlevel: 0,\n    z: 60,\n    show: true,\n    // tooltip主体内容\n    showContent: true,\n    // 'trigger' only works on coordinate system.\n    // 'item' | 'axis' | 'none'\n    trigger: 'item',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: 'mousemove|click',\n    alwaysShowContent: false,\n    displayMode: 'single',\n    // 'single' | 'multipleByCoordSys'\n    renderMode: 'auto',\n    // 'auto' | 'html' | 'richText'\n    // 'auto': use html by default, and use non-html if `document` is not defined\n    // 'html': use html for tooltip\n    // 'richText': use canvas, svg, and etc. for tooltip\n    // 位置 {Array} | {Function}\n    // position: null\n    // Consider triggered from axisPointer handle, verticalAlign should be 'middle'\n    // align: null,\n    // verticalAlign: null,\n    // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n    confine: false,\n    // 内容格式器：{string}（Template） ¦ {Function}\n    // formatter: null\n    showDelay: 0,\n    // 隐藏延迟，单位ms\n    hideDelay: 100,\n    // 动画变换时间，单位s\n    transitionDuration: 0.4,\n    enterable: false,\n    // 提示背景颜色，默认为透明度为0.7的黑色\n    backgroundColor: 'rgba(50,50,50,0.7)',\n    // 提示边框颜色\n    borderColor: '#333',\n    // 提示边框圆角，单位px，默认为4\n    borderRadius: 4,\n    // 提示边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 提示内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // Extra css text\n    extraCssText: '',\n    // 坐标轴指示器，坐标轴触发有效\n    axisPointer: {\n      // 默认为直线\n      // 可选为：'line' | 'shadow' | 'cross'\n      type: 'line',\n      // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n      // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n      // 默认 'auto'，会选择类型为 category 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n      // 极坐标系会默认选择 angle 轴\n      axis: 'auto',\n      animation: 'auto',\n      animationDurationUpdate: 200,\n      animationEasingUpdate: 'exponentialOut',\n      crossStyle: {\n        color: '#999',\n        width: 1,\n        type: 'dashed',\n        // TODO formatter\n        textStyle: {} // lineStyle and shadowStyle should not be specified here,\n        // otherwise it will always override those styles on option.axisPointer.\n\n      }\n    },\n    textStyle: {\n      color: '#fff',\n      fontSize: 14\n    }\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar TooltipContent = require(\"./TooltipContent\");\n\nvar TooltipRichContent = require(\"./TooltipRichContent\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar findPointFromSeries = require(\"../axisPointer/findPointFromSeries\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar Model = require(\"../../model/Model\");\n\nvar globalListener = require(\"../axisPointer/globalListener\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar axisPointerViewHelper = require(\"../axisPointer/viewHelper\");\n\nvar _model = require(\"../../util/model\");\n\nvar getTooltipRenderMode = _model.getTooltipRenderMode;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar parsePercent = numberUtil.parsePercent;\nvar proxyRect = new graphic.Rect({\n  shape: {\n    x: -1,\n    y: -1,\n    width: 2,\n    height: 2\n  }\n});\n\nvar _default = echarts.extendComponentView({\n  type: 'tooltip',\n  init: function init(ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    var tooltipModel = ecModel.getComponent('tooltip');\n    var renderMode = tooltipModel.get('renderMode');\n    this._renderMode = getTooltipRenderMode(renderMode);\n    var tooltipContent;\n\n    if (this._renderMode === 'html') {\n      tooltipContent = new TooltipContent(api.getDom(), api, {\n        appendToBody: tooltipModel.get('appendToBody', true)\n      });\n      this._newLine = '<br/>';\n    } else {\n      tooltipContent = new TooltipRichContent(api);\n      this._newLine = '\\n';\n    }\n\n    this._tooltipContent = tooltipContent;\n  },\n  render: function render(tooltipModel, ecModel, api) {\n    if (env.node) {\n      return;\n    } // Reset\n\n\n    this.group.removeAll();\n    /**\n     * @private\n     * @type {module:echarts/component/tooltip/TooltipModel}\n     */\n\n    this._tooltipModel = tooltipModel;\n    /**\n     * @private\n     * @type {module:echarts/model/Global}\n     */\n\n    this._ecModel = ecModel;\n    /**\n     * @private\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this._api = api;\n    /**\n     * Should be cleaned when render.\n     * @private\n     * @type {Array.<Array.<Object>>}\n     */\n\n    this._lastDataByCoordSys = null;\n    /**\n     * @private\n     * @type {boolean}\n     */\n\n    this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n    var tooltipContent = this._tooltipContent;\n    tooltipContent.update();\n    tooltipContent.setEnterable(tooltipModel.get('enterable'));\n\n    this._initGlobalListener();\n\n    this._keepShow();\n  },\n  _initGlobalListener: function _initGlobalListener() {\n    var tooltipModel = this._tooltipModel;\n    var triggerOn = tooltipModel.get('triggerOn');\n    globalListener.register('itemTooltip', this._api, bind(function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none') {\n        if (triggerOn.indexOf(currTrigger) >= 0) {\n          this._tryShow(e, dispatchAction);\n        } else if (currTrigger === 'leave') {\n          this._hide(dispatchAction);\n        }\n      }\n    }, this));\n  },\n  _keepShow: function _keepShow() {\n    var tooltipModel = this._tooltipModel;\n    var ecModel = this._ecModel;\n    var api = this._api; // Try to keep the tooltip show when refreshing\n\n    if (this._lastX != null && this._lastY != null // When user is willing to control tooltip totally using API,\n    // self.manuallyShowTip({x, y}) might cause tooltip hide,\n    // which is not expected.\n    && tooltipModel.get('triggerOn') !== 'none') {\n      var self = this;\n      clearTimeout(this._refreshUpdateTimeout);\n      this._refreshUpdateTimeout = setTimeout(function () {\n        // Show tip next tick after other charts are rendered\n        // In case highlight action has wrong result\n        // FIXME\n        !api.isDisposed() && self.manuallyShowTip(tooltipModel, ecModel, api, {\n          x: self._lastX,\n          y: self._lastY\n        });\n      });\n    }\n  },\n\n  /**\n   * Show tip manually by\n   * dispatchAction({\n   *     type: 'showTip',\n   *     x: 10,\n   *     y: 10\n   * });\n   * Or\n   * dispatchAction({\n   *      type: 'showTip',\n   *      seriesIndex: 0,\n   *      dataIndex or dataIndexInside or name\n   * });\n   *\n   *  TODO Batch\n   */\n  manuallyShowTip: function manuallyShowTip(tooltipModel, ecModel, api, payload) {\n    if (payload.from === this.uid || env.node) {\n      return;\n    }\n\n    var dispatchAction = makeDispatchAction(payload, api); // Reset ticket\n\n    this._ticket = ''; // When triggered from axisPointer.\n\n    var dataByCoordSys = payload.dataByCoordSys;\n\n    if (payload.tooltip && payload.x != null && payload.y != null) {\n      var el = proxyRect;\n      el.position = [payload.x, payload.y];\n      el.update();\n      el.tooltip = payload.tooltip; // Manually show tooltip while view is not using zrender elements.\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        target: el\n      }, dispatchAction);\n    } else if (dataByCoordSys) {\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        dataByCoordSys: payload.dataByCoordSys,\n        tooltipOption: payload.tooltipOption\n      }, dispatchAction);\n    } else if (payload.seriesIndex != null) {\n      if (this._manuallyAxisShowTip(tooltipModel, ecModel, api, payload)) {\n        return;\n      }\n\n      var pointInfo = findPointFromSeries(payload, ecModel);\n      var cx = pointInfo.point[0];\n      var cy = pointInfo.point[1];\n\n      if (cx != null && cy != null) {\n        this._tryShow({\n          offsetX: cx,\n          offsetY: cy,\n          position: payload.position,\n          target: pointInfo.el\n        }, dispatchAction);\n      }\n    } else if (payload.x != null && payload.y != null) {\n      // FIXME\n      // should wrap dispatchAction like `axisPointer/globalListener` ?\n      api.dispatchAction({\n        type: 'updateAxisPointer',\n        x: payload.x,\n        y: payload.y\n      });\n\n      this._tryShow({\n        offsetX: payload.x,\n        offsetY: payload.y,\n        position: payload.position,\n        target: api.getZr().findHover(payload.x, payload.y).target\n      }, dispatchAction);\n    }\n  },\n  manuallyHideTip: function manuallyHideTip(tooltipModel, ecModel, api, payload) {\n    var tooltipContent = this._tooltipContent;\n\n    if (!this._alwaysShowContent && this._tooltipModel) {\n      tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n    }\n\n    this._lastX = this._lastY = null;\n\n    if (payload.from !== this.uid) {\n      this._hide(makeDispatchAction(payload, api));\n    }\n  },\n  // Be compatible with previous design, that is, when tooltip.type is 'axis' and\n  // dispatchAction 'showTip' with seriesIndex and dataIndex will trigger axis pointer\n  // and tooltip.\n  _manuallyAxisShowTip: function _manuallyAxisShowTip(tooltipModel, ecModel, api, payload) {\n    var seriesIndex = payload.seriesIndex;\n    var dataIndex = payload.dataIndex;\n    var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo;\n\n    if (seriesIndex == null || dataIndex == null || coordSysAxesInfo == null) {\n      return;\n    }\n\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n\n    if (!seriesModel) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), seriesModel, (seriesModel.coordinateSystem || {}).model, tooltipModel]);\n\n    if (tooltipModel.get('trigger') !== 'axis') {\n      return;\n    }\n\n    api.dispatchAction({\n      type: 'updateAxisPointer',\n      seriesIndex: seriesIndex,\n      dataIndex: dataIndex,\n      position: payload.position\n    });\n    return true;\n  },\n  _tryShow: function _tryShow(e, dispatchAction) {\n    var el = e.target;\n    var tooltipModel = this._tooltipModel;\n\n    if (!tooltipModel) {\n      return;\n    } // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n\n\n    this._lastX = e.offsetX;\n    this._lastY = e.offsetY;\n    var dataByCoordSys = e.dataByCoordSys;\n\n    if (dataByCoordSys && dataByCoordSys.length) {\n      this._showAxisTooltip(dataByCoordSys, e);\n    } // Always show item tooltip if mouse is on the element with dataIndex\n    else if (el && el.dataIndex != null) {\n        this._lastDataByCoordSys = null;\n\n        this._showSeriesItemTooltip(e, el, dispatchAction);\n      } // Tooltip provided directly. Like legend.\n      else if (el && el.tooltip) {\n          this._lastDataByCoordSys = null;\n\n          this._showComponentItemTooltip(e, el, dispatchAction);\n        } else {\n          this._lastDataByCoordSys = null;\n\n          this._hide(dispatchAction);\n        }\n  },\n  _showOrMove: function _showOrMove(tooltipModel, cb) {\n    // showDelay is used in this case: tooltip.enterable is set\n    // as true. User intent to move mouse into tooltip and click\n    // something. `showDelay` makes it easyer to enter the content\n    // but tooltip do not move immediately.\n    var delay = tooltipModel.get('showDelay');\n    cb = zrUtil.bind(cb, this);\n    clearTimeout(this._showTimout);\n    delay > 0 ? this._showTimout = setTimeout(cb, delay) : cb();\n  },\n  _showAxisTooltip: function _showAxisTooltip(dataByCoordSys, e) {\n    var ecModel = this._ecModel;\n    var globalTooltipModel = this._tooltipModel;\n    var point = [e.offsetX, e.offsetY];\n    var singleDefaultHTML = [];\n    var singleParamsList = [];\n    var singleTooltipModel = buildTooltipModel([e.tooltipOption, globalTooltipModel]);\n    var renderMode = this._renderMode;\n    var newLine = this._newLine;\n    var markers = {};\n    each(dataByCoordSys, function (itemCoordSys) {\n      // var coordParamList = [];\n      // var coordDefaultHTML = [];\n      // var coordTooltipModel = buildTooltipModel([\n      //     e.tooltipOption,\n      //     itemCoordSys.tooltipOption,\n      //     ecModel.getComponent(itemCoordSys.coordSysMainType, itemCoordSys.coordSysIndex),\n      //     globalTooltipModel\n      // ]);\n      // var displayMode = coordTooltipModel.get('displayMode');\n      // var paramsList = displayMode === 'single' ? singleParamsList : [];\n      each(itemCoordSys.dataByAxis, function (item) {\n        var axisModel = ecModel.getComponent(item.axisDim + 'Axis', item.axisIndex);\n        var axisValue = item.value;\n        var seriesDefaultHTML = [];\n\n        if (!axisModel || axisValue == null) {\n          return;\n        }\n\n        var valueLabel = axisPointerViewHelper.getValueLabel(axisValue, axisModel.axis, ecModel, item.seriesDataIndices, item.valueLabelOpt);\n        zrUtil.each(item.seriesDataIndices, function (idxItem) {\n          var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n          var dataIndex = idxItem.dataIndexInside;\n          var dataParams = series && series.getDataParams(dataIndex);\n          dataParams.axisDim = item.axisDim;\n          dataParams.axisIndex = item.axisIndex;\n          dataParams.axisType = item.axisType;\n          dataParams.axisId = item.axisId;\n          dataParams.axisValue = axisHelper.getAxisRawValue(axisModel.axis, axisValue);\n          dataParams.axisValueLabel = valueLabel;\n\n          if (dataParams) {\n            singleParamsList.push(dataParams);\n            var seriesTooltip = series.formatTooltip(dataIndex, true, null, renderMode);\n            var html;\n\n            if (zrUtil.isObject(seriesTooltip)) {\n              html = seriesTooltip.html;\n              var newMarkers = seriesTooltip.markers;\n              zrUtil.merge(markers, newMarkers);\n            } else {\n              html = seriesTooltip;\n            }\n\n            seriesDefaultHTML.push(html);\n          }\n        }); // Default tooltip content\n        // FIXME\n        // (1) shold be the first data which has name?\n        // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n\n        var firstLine = valueLabel;\n\n        if (renderMode !== 'html') {\n          singleDefaultHTML.push(seriesDefaultHTML.join(newLine));\n        } else {\n          singleDefaultHTML.push((firstLine ? formatUtil.encodeHTML(firstLine) + newLine : '') + seriesDefaultHTML.join(newLine));\n        }\n      });\n    }, this); // In most case, the second axis is shown upper than the first one.\n\n    singleDefaultHTML.reverse();\n    singleDefaultHTML = singleDefaultHTML.join(this._newLine + this._newLine);\n    var positionExpr = e.position;\n\n    this._showOrMove(singleTooltipModel, function () {\n      if (this._updateContentNotChangedOnAxis(dataByCoordSys)) {\n        this._updatePosition(singleTooltipModel, positionExpr, point[0], point[1], this._tooltipContent, singleParamsList);\n      } else {\n        this._showTooltipContent(singleTooltipModel, singleDefaultHTML, singleParamsList, Math.random(), point[0], point[1], positionExpr, undefined, markers);\n      }\n    }); // Do not trigger events here, because this branch only be entered\n    // from dispatchAction.\n\n  },\n  _showSeriesItemTooltip: function _showSeriesItemTooltip(e, el, dispatchAction) {\n    var ecModel = this._ecModel; // Use dataModel in element if possible\n    // Used when mouseover on a element like markPoint or edge\n    // In which case, the data is not main data in series.\n\n    var seriesIndex = el.seriesIndex;\n    var seriesModel = ecModel.getSeriesByIndex(seriesIndex); // For example, graph link.\n\n    var dataModel = el.dataModel || seriesModel;\n    var dataIndex = el.dataIndex;\n    var dataType = el.dataType;\n    var data = dataModel.getData(dataType);\n    var tooltipModel = buildTooltipModel([data.getItemModel(dataIndex), dataModel, seriesModel && (seriesModel.coordinateSystem || {}).model, this._tooltipModel]);\n    var tooltipTrigger = tooltipModel.get('trigger');\n\n    if (tooltipTrigger != null && tooltipTrigger !== 'item') {\n      return;\n    }\n\n    var params = dataModel.getDataParams(dataIndex, dataType);\n    var seriesTooltip = dataModel.formatTooltip(dataIndex, false, dataType, this._renderMode);\n    var defaultHtml;\n    var markers;\n\n    if (zrUtil.isObject(seriesTooltip)) {\n      defaultHtml = seriesTooltip.html;\n      markers = seriesTooltip.markers;\n    } else {\n      defaultHtml = seriesTooltip;\n      markers = null;\n    }\n\n    var asyncTicket = 'item_' + dataModel.name + '_' + dataIndex;\n\n    this._showOrMove(tooltipModel, function () {\n      this._showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, e.offsetX, e.offsetY, e.position, e.target, markers);\n    }); // FIXME\n    // duplicated showtip if manuallyShowTip is called from dispatchAction.\n\n\n    dispatchAction({\n      type: 'showTip',\n      dataIndexInside: dataIndex,\n      dataIndex: data.getRawIndex(dataIndex),\n      seriesIndex: seriesIndex,\n      from: this.uid\n    });\n  },\n  _showComponentItemTooltip: function _showComponentItemTooltip(e, el, dispatchAction) {\n    var tooltipOpt = el.tooltip;\n\n    if (typeof tooltipOpt === 'string') {\n      var content = tooltipOpt;\n      tooltipOpt = {\n        content: content,\n        // Fixed formatter\n        formatter: content\n      };\n    }\n\n    var subTooltipModel = new Model(tooltipOpt, this._tooltipModel, this._ecModel);\n    var defaultHtml = subTooltipModel.get('content');\n    var asyncTicket = Math.random(); // Do not check whether `trigger` is 'none' here, because `trigger`\n    // only works on cooridinate system. In fact, we have not found case\n    // that requires setting `trigger` nothing on component yet.\n\n    this._showOrMove(subTooltipModel, function () {\n      this._showTooltipContent(subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {}, asyncTicket, e.offsetX, e.offsetY, e.position, el);\n    }); // If not dispatch showTip, tip may be hide triggered by axis.\n\n\n    dispatchAction({\n      type: 'showTip',\n      from: this.uid\n    });\n  },\n  _showTooltipContent: function _showTooltipContent(tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, el, markers) {\n    // Reset ticket\n    this._ticket = '';\n\n    if (!tooltipModel.get('showContent') || !tooltipModel.get('show')) {\n      return;\n    }\n\n    var tooltipContent = this._tooltipContent;\n    var formatter = tooltipModel.get('formatter');\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var html = defaultHtml;\n\n    if (formatter && typeof formatter === 'string') {\n      html = formatUtil.formatTpl(formatter, params, true);\n    } else if (typeof formatter === 'function') {\n      var callback = bind(function (cbTicket, html) {\n        if (cbTicket === this._ticket) {\n          tooltipContent.setContent(html, markers, tooltipModel);\n\n          this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n        }\n      }, this);\n      this._ticket = asyncTicket;\n      html = formatter(params, asyncTicket, callback);\n    }\n\n    tooltipContent.setContent(html, markers, tooltipModel);\n    tooltipContent.show(tooltipModel);\n\n    this._updatePosition(tooltipModel, positionExpr, x, y, tooltipContent, params, el);\n  },\n\n  /**\n   * @param  {string|Function|Array.<number>|Object} positionExpr\n   * @param  {number} x Mouse x\n   * @param  {number} y Mouse y\n   * @param  {boolean} confine Whether confine tooltip content in view rect.\n   * @param  {Object|<Array.<Object>} params\n   * @param  {module:zrender/Element} el target element\n   * @param  {module:echarts/ExtensionAPI} api\n   * @return {Array.<number>}\n   */\n  _updatePosition: function _updatePosition(tooltipModel, positionExpr, x, y, content, params, el) {\n    var viewWidth = this._api.getWidth();\n\n    var viewHeight = this._api.getHeight();\n\n    positionExpr = positionExpr || tooltipModel.get('position');\n    var contentSize = content.getSize();\n    var align = tooltipModel.get('align');\n    var vAlign = tooltipModel.get('verticalAlign');\n    var rect = el && el.getBoundingRect().clone();\n    el && rect.applyTransform(el.transform);\n\n    if (typeof positionExpr === 'function') {\n      // Callback of position can be an array or a string specify the position\n      positionExpr = positionExpr([x, y], params, content.el, rect, {\n        viewSize: [viewWidth, viewHeight],\n        contentSize: contentSize.slice()\n      });\n    }\n\n    if (zrUtil.isArray(positionExpr)) {\n      x = parsePercent(positionExpr[0], viewWidth);\n      y = parsePercent(positionExpr[1], viewHeight);\n    } else if (zrUtil.isObject(positionExpr)) {\n      positionExpr.width = contentSize[0];\n      positionExpr.height = contentSize[1];\n      var layoutRect = layoutUtil.getLayoutRect(positionExpr, {\n        width: viewWidth,\n        height: viewHeight\n      });\n      x = layoutRect.x;\n      y = layoutRect.y;\n      align = null; // When positionExpr is left/top/right/bottom,\n      // align and verticalAlign will not work.\n\n      vAlign = null;\n    } // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n    else if (typeof positionExpr === 'string' && el) {\n        var pos = calcTooltipPosition(positionExpr, rect, contentSize);\n        x = pos[0];\n        y = pos[1];\n      } else {\n        var pos = refixTooltipPosition(x, y, content, viewWidth, viewHeight, align ? null : 20, vAlign ? null : 20);\n        x = pos[0];\n        y = pos[1];\n      }\n\n    align && (x -= isCenterAlign(align) ? contentSize[0] / 2 : align === 'right' ? contentSize[0] : 0);\n    vAlign && (y -= isCenterAlign(vAlign) ? contentSize[1] / 2 : vAlign === 'bottom' ? contentSize[1] : 0);\n\n    if (tooltipModel.get('confine')) {\n      var pos = confineTooltipPosition(x, y, content, viewWidth, viewHeight);\n      x = pos[0];\n      y = pos[1];\n    }\n\n    content.moveTo(x, y);\n  },\n  // FIXME\n  // Should we remove this but leave this to user?\n  _updateContentNotChangedOnAxis: function _updateContentNotChangedOnAxis(dataByCoordSys) {\n    var lastCoordSys = this._lastDataByCoordSys;\n    var contentNotChanged = !!lastCoordSys && lastCoordSys.length === dataByCoordSys.length;\n    contentNotChanged && each(lastCoordSys, function (lastItemCoordSys, indexCoordSys) {\n      var lastDataByAxis = lastItemCoordSys.dataByAxis || {};\n      var thisItemCoordSys = dataByCoordSys[indexCoordSys] || {};\n      var thisDataByAxis = thisItemCoordSys.dataByAxis || [];\n      contentNotChanged &= lastDataByAxis.length === thisDataByAxis.length;\n      contentNotChanged && each(lastDataByAxis, function (lastItem, indexAxis) {\n        var thisItem = thisDataByAxis[indexAxis] || {};\n        var lastIndices = lastItem.seriesDataIndices || [];\n        var newIndices = thisItem.seriesDataIndices || [];\n        contentNotChanged &= lastItem.value === thisItem.value && lastItem.axisType === thisItem.axisType && lastItem.axisId === thisItem.axisId && lastIndices.length === newIndices.length;\n        contentNotChanged && each(lastIndices, function (lastIdxItem, j) {\n          var newIdxItem = newIndices[j];\n          contentNotChanged &= lastIdxItem.seriesIndex === newIdxItem.seriesIndex && lastIdxItem.dataIndex === newIdxItem.dataIndex;\n        });\n      });\n    });\n    this._lastDataByCoordSys = dataByCoordSys;\n    return !!contentNotChanged;\n  },\n  _hide: function _hide(dispatchAction) {\n    // Do not directly hideLater here, because this behavior may be prevented\n    // in dispatchAction when showTip is dispatched.\n    // FIXME\n    // duplicated hideTip if manuallyHideTip is called from dispatchAction.\n    this._lastDataByCoordSys = null;\n    dispatchAction({\n      type: 'hideTip',\n      from: this.uid\n    });\n  },\n  dispose: function dispose(ecModel, api) {\n    if (env.node) {\n      return;\n    }\n\n    this._tooltipContent.dispose();\n\n    globalListener.unregister('itemTooltip', api);\n  }\n});\n/**\n * @param {Array.<Object|module:echarts/model/Model>} modelCascade\n * From top to bottom. (the last one should be globalTooltipModel);\n */\n\n\nfunction buildTooltipModel(modelCascade) {\n  var resultModel = modelCascade.pop();\n\n  while (modelCascade.length) {\n    var tooltipOpt = modelCascade.pop();\n\n    if (tooltipOpt) {\n      if (Model.isInstance(tooltipOpt)) {\n        tooltipOpt = tooltipOpt.get('tooltip', true);\n      } // In each data item tooltip can be simply write:\n      // {\n      //  value: 10,\n      //  tooltip: 'Something you need to know'\n      // }\n\n\n      if (typeof tooltipOpt === 'string') {\n        tooltipOpt = {\n          formatter: tooltipOpt\n        };\n      }\n\n      resultModel = new Model(tooltipOpt, resultModel, resultModel.ecModel);\n    }\n  }\n\n  return resultModel;\n}\n\nfunction makeDispatchAction(payload, api) {\n  return payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n}\n\nfunction refixTooltipPosition(x, y, content, viewWidth, viewHeight, gapH, gapV) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n\n  if (gapH != null) {\n    if (x + width + gapH > viewWidth) {\n      x -= width + gapH;\n    } else {\n      x += gapH;\n    }\n  }\n\n  if (gapV != null) {\n    if (y + height + gapV > viewHeight) {\n      y -= height + gapV;\n    } else {\n      y += gapV;\n    }\n  }\n\n  return [x, y];\n}\n\nfunction confineTooltipPosition(x, y, content, viewWidth, viewHeight) {\n  var size = content.getOuterSize();\n  var width = size.width;\n  var height = size.height;\n  x = Math.min(x + width, viewWidth) - width;\n  y = Math.min(y + height, viewHeight) - height;\n  x = Math.max(x, 0);\n  y = Math.max(y, 0);\n  return [x, y];\n}\n\nfunction calcTooltipPosition(position, rect, contentSize) {\n  var domWidth = contentSize[0];\n  var domHeight = contentSize[1];\n  var gap = 5;\n  var x = 0;\n  var y = 0;\n  var rectWidth = rect.width;\n  var rectHeight = rect.height;\n\n  switch (position) {\n    case 'inside':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'top':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y - domHeight - gap;\n      break;\n\n    case 'bottom':\n      x = rect.x + rectWidth / 2 - domWidth / 2;\n      y = rect.y + rectHeight + gap;\n      break;\n\n    case 'left':\n      x = rect.x - domWidth - gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n      break;\n\n    case 'right':\n      x = rect.x + rectWidth + gap;\n      y = rect.y + rectHeight / 2 - domHeight / 2;\n  }\n\n  return [x, y];\n}\n\nfunction isCenterAlign(align) {\n  return align === 'center' || align === 'middle';\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar eventUtil = require(\"zrender/lib/core/event\");\n\nvar domUtil = require(\"zrender/lib/core/dom\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar formatUtil = require(\"../../util/format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar toCamelCase = formatUtil.toCamelCase;\nvar vendors = ['', '-webkit-', '-moz-', '-o-'];\nvar gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n/**\n * @param {number} duration\n * @return {string}\n * @inner\n */\n\nfunction assembleTransition(duration) {\n  var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n  var transitionText = 'left ' + duration + 's ' + transitionCurve + ',' + 'top ' + duration + 's ' + transitionCurve;\n  return zrUtil.map(vendors, function (vendorPrefix) {\n    return vendorPrefix + 'transition:' + transitionText;\n  }).join(';');\n}\n/**\n * @param {Object} textStyle\n * @return {string}\n * @inner\n */\n\n\nfunction assembleFont(textStyleModel) {\n  var cssText = [];\n  var fontSize = textStyleModel.get('fontSize');\n  var color = textStyleModel.getTextColor();\n  color && cssText.push('color:' + color);\n  cssText.push('font:' + textStyleModel.getFont());\n  fontSize && cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n  each(['decoration', 'align'], function (name) {\n    var val = textStyleModel.get(name);\n    val && cssText.push('text-' + name + ':' + val);\n  });\n  return cssText.join(';');\n}\n/**\n * @param {Object} tooltipModel\n * @return {string}\n * @inner\n */\n\n\nfunction assembleCssText(tooltipModel) {\n  var cssText = [];\n  var transitionDuration = tooltipModel.get('transitionDuration');\n  var backgroundColor = tooltipModel.get('backgroundColor');\n  var textStyleModel = tooltipModel.getModel('textStyle');\n  var padding = tooltipModel.get('padding'); // Animation transition. Do not animate when transitionDuration is 0.\n\n  transitionDuration && cssText.push(assembleTransition(transitionDuration));\n\n  if (backgroundColor) {\n    if (env.canvasSupported) {\n      cssText.push('background-Color:' + backgroundColor);\n    } else {\n      // for ie\n      cssText.push('background-Color:#' + zrColor.toHex(backgroundColor));\n      cssText.push('filter:alpha(opacity=70)');\n    }\n  } // Border style\n\n\n  each(['width', 'color', 'radius'], function (name) {\n    var borderName = 'border-' + name;\n    var camelCase = toCamelCase(borderName);\n    var val = tooltipModel.get(camelCase);\n    val != null && cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n  }); // Text style\n\n  cssText.push(assembleFont(textStyleModel)); // Padding\n\n  if (padding != null) {\n    cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n  }\n\n  return cssText.join(';') + ';';\n} // If not able to make, do not modify the input `out`.\n\n\nfunction makeStyleCoord(out, zr, appendToBody, zrX, zrY) {\n  var zrPainter = zr && zr.painter;\n\n  if (appendToBody) {\n    var zrViewportRoot = zrPainter && zrPainter.getViewportRoot();\n\n    if (zrViewportRoot) {\n      // Some APPs might use scale on body, so we support CSS transform here.\n      domUtil.transformLocalCoord(out, zrViewportRoot, document.body, zrX, zrY);\n    }\n  } else {\n    out[0] = zrX;\n    out[1] = zrY; // xy should be based on canvas root. But tooltipContent is\n    // the sibling of canvas root. So padding of ec container\n    // should be considered here.\n\n    var viewportRootOffset = zrPainter && zrPainter.getViewportRootOffset();\n\n    if (viewportRootOffset) {\n      out[0] += viewportRootOffset.offsetLeft;\n      out[1] += viewportRootOffset.offsetTop;\n    }\n  }\n}\n/**\n * @alias module:echarts/component/tooltip/TooltipContent\n * @param {HTMLElement} container\n * @param {ExtensionAPI} api\n * @param {Object} [opt]\n * @param {boolean} [opt.appendToBody]\n *        `false`: the DOM element will be inside the container. Default value.\n *        `true`: the DOM element will be appended to HTML body, which avoid\n *                some overflow clip but intrude outside of the container.\n * @constructor\n */\n\n\nfunction TooltipContent(container, api, opt) {\n  if (env.wxa) {\n    return null;\n  }\n\n  var el = document.createElement('div');\n  el.domBelongToZr = true;\n  this.el = el;\n  var zr = this._zr = api.getZr();\n  var appendToBody = this._appendToBody = opt && opt.appendToBody;\n  this._styleCoord = [0, 0];\n  makeStyleCoord(this._styleCoord, zr, appendToBody, api.getWidth() / 2, api.getHeight() / 2);\n\n  if (appendToBody) {\n    document.body.appendChild(el);\n  } else {\n    container.appendChild(el);\n  }\n\n  this._container = container;\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout; // FIXME\n  // Is it needed to trigger zr event manually if\n  // the browser do not support `pointer-events: none`.\n\n  var self = this;\n\n  el.onmouseenter = function () {\n    // clear the timeout in hideLater and keep showing tooltip\n    if (self._enterable) {\n      clearTimeout(self._hideTimeout);\n      self._show = true;\n    }\n\n    self._inContent = true;\n  };\n\n  el.onmousemove = function (e) {\n    e = e || window.event;\n\n    if (!self._enterable) {\n      // `pointer-events: none` is set to tooltip content div\n      // if `enterable` is set as `false`, and `el.onmousemove`\n      // can not be triggered. But in browser that do not\n      // support `pointer-events`, we need to do this:\n      // Try trigger zrender event to avoid mouse\n      // in and out shape too frequently\n      var handler = zr.handler;\n      var zrViewportRoot = zr.painter.getViewportRoot();\n      eventUtil.normalizeEvent(zrViewportRoot, e, true);\n      handler.dispatch('mousemove', e);\n    }\n  };\n\n  el.onmouseleave = function () {\n    if (self._enterable) {\n      if (self._show) {\n        self.hideLater(self._hideDelay);\n      }\n    }\n\n    self._inContent = false;\n  };\n}\n\nTooltipContent.prototype = {\n  constructor: TooltipContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function update() {\n    // FIXME\n    // Move this logic to ec main?\n    var container = this._container;\n    var stl = container.currentStyle || document.defaultView.getComputedStyle(container);\n    var domStyle = container.style;\n\n    if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n      domStyle.position = 'relative';\n    } // Hide the tooltip\n    // PENDING\n    // this.hide();\n\n  },\n  show: function show(tooltipModel) {\n    clearTimeout(this._hideTimeout);\n    var el = this.el;\n    var styleCoord = this._styleCoord;\n    el.style.cssText = gCssText + assembleCssText(tooltipModel) // Because of the reason described in:\n    // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n    // we should set initial value to `left` and `top`.\n    + ';left:' + styleCoord[0] + 'px;top:' + styleCoord[1] + 'px;' + (tooltipModel.get('extraCssText') || '');\n    el.style.display = el.innerHTML ? 'block' : 'none'; // If mouse occsionally move over the tooltip, a mouseout event will be\n    // triggered by canvas, and cuase some unexpectable result like dragging\n    // stop, \"unfocusAdjacency\". Here `pointer-events: none` is used to solve\n    // it. Although it is not suppored by IE8~IE10, fortunately it is a rare\n    // scenario.\n\n    el.style.pointerEvents = this._enterable ? 'auto' : 'none';\n    this._show = true;\n  },\n  setContent: function setContent(content) {\n    this.el.innerHTML = content == null ? '' : content;\n  },\n  setEnterable: function setEnterable(enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function getSize() {\n    var el = this.el;\n    return [el.clientWidth, el.clientHeight];\n  },\n  moveTo: function moveTo(zrX, zrY) {\n    var styleCoord = this._styleCoord;\n    makeStyleCoord(styleCoord, this._zr, this._appendToBody, zrX, zrY);\n    var style = this.el.style;\n    style.left = styleCoord[0] + 'px';\n    style.top = styleCoord[1] + 'px';\n  },\n  hide: function hide() {\n    this.el.style.display = 'none';\n    this._show = false;\n  },\n  hideLater: function hideLater(time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function isShow() {\n    return this._show;\n  },\n  dispose: function dispose() {\n    this.el.parentNode.removeChild(this.el);\n  },\n  getOuterSize: function getOuterSize() {\n    var width = this.el.clientWidth;\n    var height = this.el.clientHeight; // Consider browser compatibility.\n    // IE8 does not support getComputedStyle.\n\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      var stl = document.defaultView.getComputedStyle(this.el);\n\n      if (stl) {\n        width += parseInt(stl.borderLeftWidth, 10) + parseInt(stl.borderRightWidth, 10);\n        height += parseInt(stl.borderTopWidth, 10) + parseInt(stl.borderBottomWidth, 10);\n      }\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n};\nvar _default = TooltipContent;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Text = require(\"zrender/lib/graphic/Text\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import Group from 'zrender/src/container/Group';\n\n/**\n * @alias module:echarts/component/tooltip/TooltipRichContent\n * @constructor\n */\n\n\nfunction TooltipRichContent(api) {\n  this._zr = api.getZr();\n  this._show = false;\n  /**\n   * @private\n   */\n\n  this._hideTimeout;\n}\n\nTooltipRichContent.prototype = {\n  constructor: TooltipRichContent,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _enterable: true,\n\n  /**\n   * Update when tooltip is rendered\n   */\n  update: function update() {// noop\n  },\n  show: function show(tooltipModel) {\n    if (this._hideTimeout) {\n      clearTimeout(this._hideTimeout);\n    }\n\n    this.el.attr('show', true);\n    this._show = true;\n  },\n\n  /**\n   * Set tooltip content\n   *\n   * @param {string} content rich text string of content\n   * @param {Object} markerRich rich text style\n   * @param {Object} tooltipModel tooltip model\n   */\n  setContent: function setContent(content, markerRich, tooltipModel) {\n    if (this.el) {\n      this._zr.remove(this.el);\n    }\n\n    var markers = {};\n    var text = content;\n    var prefix = '{marker';\n    var suffix = '|}';\n    var startId = text.indexOf(prefix);\n\n    while (startId >= 0) {\n      var endId = text.indexOf(suffix);\n      var name = text.substr(startId + prefix.length, endId - startId - prefix.length);\n\n      if (name.indexOf('sub') > -1) {\n        markers['marker' + name] = {\n          textWidth: 4,\n          textHeight: 4,\n          textBorderRadius: 2,\n          textBackgroundColor: markerRich[name],\n          // TODO: textOffset is not implemented for rich text\n          textOffset: [3, 0]\n        };\n      } else {\n        markers['marker' + name] = {\n          textWidth: 10,\n          textHeight: 10,\n          textBorderRadius: 5,\n          textBackgroundColor: markerRich[name]\n        };\n      }\n\n      text = text.substr(endId + 1);\n      startId = text.indexOf('{marker');\n    }\n\n    this.el = new Text({\n      style: {\n        rich: markers,\n        text: content,\n        textLineHeight: 20,\n        textBackgroundColor: tooltipModel.get('backgroundColor'),\n        textBorderRadius: tooltipModel.get('borderRadius'),\n        textFill: tooltipModel.get('textStyle.color'),\n        textPadding: tooltipModel.get('padding')\n      },\n      z: tooltipModel.get('z')\n    });\n\n    this._zr.add(this.el);\n\n    var self = this;\n    this.el.on('mouseover', function () {\n      // clear the timeout in hideLater and keep showing tooltip\n      if (self._enterable) {\n        clearTimeout(self._hideTimeout);\n        self._show = true;\n      }\n\n      self._inContent = true;\n    });\n    this.el.on('mouseout', function () {\n      if (self._enterable) {\n        if (self._show) {\n          self.hideLater(self._hideDelay);\n        }\n      }\n\n      self._inContent = false;\n    });\n  },\n  setEnterable: function setEnterable(enterable) {\n    this._enterable = enterable;\n  },\n  getSize: function getSize() {\n    var bounding = this.el.getBoundingRect();\n    return [bounding.width, bounding.height];\n  },\n  moveTo: function moveTo(x, y) {\n    if (this.el) {\n      this.el.attr('position', [x, y]);\n    }\n  },\n  hide: function hide() {\n    if (this.el) {\n      this.el.hide();\n    }\n\n    this._show = false;\n  },\n  hideLater: function hideLater(time) {\n    if (this._show && !(this._inContent && this._enterable)) {\n      if (time) {\n        this._hideDelay = time; // Set show false to avoid invoke hideLater mutiple times\n\n        this._show = false;\n        this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n      } else {\n        this.hide();\n      }\n    }\n  },\n  isShow: function isShow() {\n    return this._show;\n  },\n  getOuterSize: function getOuterSize() {\n    var size = this.getSize();\n    return {\n      width: size[0],\n      height: size[1]\n    };\n  }\n};\nvar _default = TooltipRichContent;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar featureManager = require(\"../featureManager\");\n\nvar lang = require(\"../../../lang\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar brushLang = lang.toolbox.brush;\n\nfunction Brush(model, ecModel, api) {\n  this.model = model;\n  this.ecModel = ecModel;\n  this.api = api;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._brushMode;\n}\n\nBrush.defaultOption = {\n  show: true,\n  type: ['rect', 'polygon', 'lineX', 'lineY', 'keep', 'clear'],\n  icon: {\n    /* eslint-disable */\n    rect: 'M7.3,34.7 M0.4,10V-0.2h9.8 M89.6,10V-0.2h-9.8 M0.4,60v10.2h9.8 M89.6,60v10.2h-9.8 M12.3,22.4V10.5h13.1 M33.6,10.5h7.8 M49.1,10.5h7.8 M77.5,22.4V10.5h-13 M12.3,31.1v8.2 M77.7,31.1v8.2 M12.3,47.6v11.9h13.1 M33.6,59.5h7.6 M49.1,59.5 h7.7 M77.5,47.6v11.9h-13',\n    // jshint ignore:line\n    polygon: 'M55.2,34.9c1.7,0,3.1,1.4,3.1,3.1s-1.4,3.1-3.1,3.1 s-3.1-1.4-3.1-3.1S53.5,34.9,55.2,34.9z M50.4,51c1.7,0,3.1,1.4,3.1,3.1c0,1.7-1.4,3.1-3.1,3.1c-1.7,0-3.1-1.4-3.1-3.1 C47.3,52.4,48.7,51,50.4,51z M55.6,37.1l1.5-7.8 M60.1,13.5l1.6-8.7l-7.8,4 M59,19l-1,5.3 M24,16.1l6.4,4.9l6.4-3.3 M48.5,11.6 l-5.9,3.1 M19.1,12.8L9.7,5.1l1.1,7.7 M13.4,29.8l1,7.3l6.6,1.6 M11.6,18.4l1,6.1 M32.8,41.9 M26.6,40.4 M27.3,40.2l6.1,1.6 M49.9,52.1l-5.6-7.6l-4.9-1.2',\n    // jshint ignore:line\n    lineX: 'M15.2,30 M19.7,15.6V1.9H29 M34.8,1.9H40.4 M55.3,15.6V1.9H45.9 M19.7,44.4V58.1H29 M34.8,58.1H40.4 M55.3,44.4 V58.1H45.9 M12.5,20.3l-9.4,9.6l9.6,9.8 M3.1,29.9h16.5 M62.5,20.3l9.4,9.6L62.3,39.7 M71.9,29.9H55.4',\n    // jshint ignore:line\n    lineY: 'M38.8,7.7 M52.7,12h13.2v9 M65.9,26.6V32 M52.7,46.3h13.2v-9 M24.9,12H11.8v9 M11.8,26.6V32 M24.9,46.3H11.8v-9 M48.2,5.1l-9.3-9l-9.4,9.2 M38.9-3.9V12 M48.2,53.3l-9.3,9l-9.4-9.2 M38.9,62.3V46.4',\n    // jshint ignore:line\n    keep: 'M4,10.5V1h10.3 M20.7,1h6.1 M33,1h6.1 M55.4,10.5V1H45.2 M4,17.3v6.6 M55.6,17.3v6.6 M4,30.5V40h10.3 M20.7,40 h6.1 M33,40h6.1 M55.4,30.5V40H45.2 M21,18.9h62.9v48.6H21V18.9z',\n    // jshint ignore:line\n    clear: 'M22,14.7l30.9,31 M52.9,14.7L22,45.7 M4.7,16.8V4.2h13.1 M26,4.2h7.8 M41.6,4.2h7.8 M70.3,16.8V4.2H57.2 M4.7,25.9v8.6 M70.3,25.9v8.6 M4.7,43.2v12.6h13.1 M26,55.8h7.8 M41.6,55.8h7.8 M70.3,43.2v12.6H57.2' // jshint ignore:line\n\n    /* eslint-enable */\n\n  },\n  // `rect`, `polygon`, `lineX`, `lineY`, `keep`, `clear`\n  title: zrUtil.clone(brushLang.title)\n};\nvar proto = Brush.prototype; // proto.updateLayout = function (featureModel, ecModel, api) {\n\n/* eslint-disable */\n\nproto.render =\n/* eslint-enable */\nproto.updateView = function (featureModel, ecModel, api) {\n  var brushType;\n  var brushMode;\n  var isBrushed;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    brushType = brushModel.brushType;\n    brushMode = brushModel.brushOption.brushMode || 'single';\n    isBrushed |= brushModel.areas.length;\n  });\n  this._brushType = brushType;\n  this._brushMode = brushMode;\n  zrUtil.each(featureModel.get('type', true), function (type) {\n    featureModel.setIconStatus(type, (type === 'keep' ? brushMode === 'multiple' : type === 'clear' ? isBrushed : type === brushType) ? 'emphasis' : 'normal');\n  });\n};\n\nproto.getIcons = function () {\n  var model = this.model;\n  var availableIcons = model.get('icon', true);\n  var icons = {};\n  zrUtil.each(model.get('type', true), function (type) {\n    if (availableIcons[type]) {\n      icons[type] = availableIcons[type];\n    }\n  });\n  return icons;\n};\n\nproto.onclick = function (ecModel, api, type) {\n  var brushType = this._brushType;\n  var brushMode = this._brushMode;\n\n  if (type === 'clear') {\n    // Trigger parallel action firstly\n    api.dispatchAction({\n      type: 'axisAreaSelect',\n      intervals: []\n    });\n    api.dispatchAction({\n      type: 'brush',\n      command: 'clear',\n      // Clear all areas of all brush components.\n      areas: []\n    });\n  } else {\n    api.dispatchAction({\n      type: 'takeGlobalCursor',\n      key: 'brush',\n      brushOption: {\n        brushType: type === 'keep' ? brushType : brushType === type ? false : type,\n        brushMode: type === 'keep' ? brushMode === 'multiple' ? 'single' : 'multiple' : brushMode\n      }\n    });\n  }\n};\n\nfeatureManager.register('brush', Brush);\nvar _default = Brush;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar echarts = require(\"../echarts\");\n\nvar graphic = require(\"../util/graphic\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _format = require(\"../util/format\");\n\nvar windowOpen = _format.windowOpen;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Model\n\necharts.extendComponentModel({\n  type: 'title',\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 6,\n    show: true,\n    text: '',\n    // 超链接跳转\n    // link: null,\n    // 仅支持self | blank\n    target: 'blank',\n    subtext: '',\n    // 超链接跳转\n    // sublink: null,\n    // 仅支持self | blank\n    subtarget: 'blank',\n    // 'center' ¦ 'left' ¦ 'right'\n    // ¦ {number}（x坐标，单位px）\n    left: 0,\n    // 'top' ¦ 'bottom' ¦ 'center'\n    // ¦ {number}（y坐标，单位px）\n    top: 0,\n    // 水平对齐\n    // 'auto' | 'left' | 'right' | 'center'\n    // 默认根据 left 的位置判断是左对齐还是右对齐\n    // textAlign: null\n    //\n    // 垂直对齐\n    // 'auto' | 'top' | 'bottom' | 'middle'\n    // 默认根据 top 位置判断是上对齐还是下对齐\n    // textVerticalAlign: null\n    // textBaseline: null // The same as textVerticalAlign.\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 标题边框颜色\n    borderColor: '#ccc',\n    // 标题边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 标题内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 主副标题纵向间隔，单位px，默认为10，\n    itemGap: 10,\n    textStyle: {\n      fontSize: 18,\n      fontWeight: 'bolder',\n      color: '#333'\n    },\n    subtextStyle: {\n      color: '#aaa'\n    }\n  }\n}); // View\n\necharts.extendComponentView({\n  type: 'title',\n  render: function render(titleModel, ecModel, api) {\n    this.group.removeAll();\n\n    if (!titleModel.get('show')) {\n      return;\n    }\n\n    var group = this.group;\n    var textStyleModel = titleModel.getModel('textStyle');\n    var subtextStyleModel = titleModel.getModel('subtextStyle');\n    var textAlign = titleModel.get('textAlign');\n    var textVerticalAlign = zrUtil.retrieve2(titleModel.get('textBaseline'), titleModel.get('textVerticalAlign'));\n    var textEl = new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: titleModel.get('text'),\n        textFill: textStyleModel.getTextColor()\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var textRect = textEl.getBoundingRect();\n    var subText = titleModel.get('subtext');\n    var subTextEl = new graphic.Text({\n      style: graphic.setTextStyle({}, subtextStyleModel, {\n        text: subText,\n        textFill: subtextStyleModel.getTextColor(),\n        y: textRect.height + titleModel.get('itemGap'),\n        textVerticalAlign: 'top'\n      }, {\n        disableBox: true\n      }),\n      z2: 10\n    });\n    var link = titleModel.get('link');\n    var sublink = titleModel.get('sublink');\n    var triggerEvent = titleModel.get('triggerEvent', true);\n    textEl.silent = !link && !triggerEvent;\n    subTextEl.silent = !sublink && !triggerEvent;\n\n    if (link) {\n      textEl.on('click', function () {\n        windowOpen(link, '_' + titleModel.get('target'));\n      });\n    }\n\n    if (sublink) {\n      subTextEl.on('click', function () {\n        windowOpen(link, '_' + titleModel.get('subtarget'));\n      });\n    }\n\n    textEl.eventData = subTextEl.eventData = triggerEvent ? {\n      componentType: 'title',\n      componentIndex: titleModel.componentIndex\n    } : null;\n    group.add(textEl);\n    subText && group.add(subTextEl); // If no subText, but add subTextEl, there will be an empty line.\n\n    var groupRect = group.getBoundingRect();\n    var layoutOption = titleModel.getBoxLayoutParams();\n    layoutOption.width = groupRect.width;\n    layoutOption.height = groupRect.height;\n    var layoutRect = getLayoutRect(layoutOption, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }, titleModel.get('padding')); // Adjust text align based on position\n\n    if (!textAlign) {\n      // Align left if title is on the left. center and right is same\n      textAlign = titleModel.get('left') || titleModel.get('right');\n\n      if (textAlign === 'middle') {\n        textAlign = 'center';\n      } // Adjust layout by text align\n\n\n      if (textAlign === 'right') {\n        layoutRect.x += layoutRect.width;\n      } else if (textAlign === 'center') {\n        layoutRect.x += layoutRect.width / 2;\n      }\n    }\n\n    if (!textVerticalAlign) {\n      textVerticalAlign = titleModel.get('top') || titleModel.get('bottom');\n\n      if (textVerticalAlign === 'center') {\n        textVerticalAlign = 'middle';\n      }\n\n      if (textVerticalAlign === 'bottom') {\n        layoutRect.y += layoutRect.height;\n      } else if (textVerticalAlign === 'middle') {\n        layoutRect.y += layoutRect.height / 2;\n      }\n\n      textVerticalAlign = textVerticalAlign || 'top';\n    }\n\n    group.attr('position', [layoutRect.x, layoutRect.y]);\n    var alignStyle = {\n      textAlign: textAlign,\n      textVerticalAlign: textVerticalAlign\n    };\n    textEl.setStyle(alignStyle);\n    subTextEl.setStyle(alignStyle); // Render background\n    // Get groupRect again because textAlign has been changed\n\n    groupRect = group.getBoundingRect();\n    var padding = layoutRect.margin;\n    var style = titleModel.getItemStyle(['color', 'opacity']);\n    style.fill = titleModel.get('backgroundColor');\n    var rect = new graphic.Rect({\n      shape: {\n        x: groupRect.x - padding[3],\n        y: groupRect.y - padding[0],\n        width: groupRect.width + padding[1] + padding[3],\n        height: groupRect.height + padding[0] + padding[2],\n        r: titleModel.get('borderRadius')\n      },\n      style: style,\n      subPixelOptimize: true,\n      silent: true\n    });\n    group.add(rect);\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./visualMapContinuous\");\n\nrequire(\"./visualMapPiecewise\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Constant\n\n\nvar DEFAULT_BAR_BOUND = [20, 140];\nvar ContinuousModel = VisualMapModel.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    align: 'auto',\n    // 'auto', 'left', 'right', 'top', 'bottom'\n    calculable: false,\n    // This prop effect default component type determine,\n    // See echarts/component/visualMap/typeDefaulter.\n    range: null,\n    // selected range. In default case `range` is [min, max]\n    // and can auto change along with modification of min max,\n    // util use specifid a range.\n    realtime: true,\n    // Whether realtime update.\n    itemHeight: null,\n    // The length of the range control edge.\n    itemWidth: null,\n    // The length of the other side.\n    hoverLink: true,\n    // Enable hover highlight.\n    hoverLinkDataSize: null,\n    // The size of hovered data.\n    hoverLinkOnHandle: null // Whether trigger hoverLink when hover handle.\n    // If not specified, follow the value of `realtime`.\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    ContinuousModel.superApply(this, 'optionUpdated', arguments);\n    this.resetExtent();\n    this.resetVisual(function (mappingOption) {\n      mappingOption.mappingMethod = 'linear';\n      mappingOption.dataExtent = this.getExtent();\n    });\n\n    this._resetRange();\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  resetItemSize: function resetItemSize() {\n    ContinuousModel.superApply(this, 'resetItemSize', arguments);\n    var itemSize = this.itemSize;\n    this._orient === 'horizontal' && itemSize.reverse();\n    (itemSize[0] == null || isNaN(itemSize[0])) && (itemSize[0] = DEFAULT_BAR_BOUND[0]);\n    (itemSize[1] == null || isNaN(itemSize[1])) && (itemSize[1] = DEFAULT_BAR_BOUND[1]);\n  },\n\n  /**\n   * @private\n   */\n  _resetRange: function _resetRange() {\n    var dataExtent = this.getExtent();\n    var range = this.option.range;\n\n    if (!range || range.auto) {\n      // `range` should always be array (so we dont use other\n      // value like 'auto') for user-friend. (consider getOption).\n      dataExtent.auto = 1;\n      this.option.range = dataExtent;\n    } else if (zrUtil.isArray(range)) {\n      if (range[0] > range[1]) {\n        range.reverse();\n      }\n\n      range[0] = Math.max(range[0], dataExtent[0]);\n      range[1] = Math.min(range[1], dataExtent[1]);\n    }\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function completeVisualOption() {\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n    zrUtil.each(this.stateList, function (state) {\n      var symbolSize = this.option.controller[state].symbolSize;\n\n      if (symbolSize && symbolSize[0] !== symbolSize[1]) {\n        symbolSize[0] = 0; // For good looking.\n      }\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  setSelected: function setSelected(selected) {\n    this.option.range = selected.slice();\n\n    this._resetRange();\n  },\n\n  /**\n   * @public\n   */\n  getSelected: function getSelected() {\n    var dataExtent = this.getExtent();\n    var dataInterval = numberUtil.asc((this.get('range') || []).slice()); // Clamp\n\n    dataInterval[0] > dataExtent[1] && (dataInterval[0] = dataExtent[1]);\n    dataInterval[1] > dataExtent[1] && (dataInterval[1] = dataExtent[1]);\n    dataInterval[0] < dataExtent[0] && (dataInterval[0] = dataExtent[0]);\n    dataInterval[1] < dataExtent[0] && (dataInterval[1] = dataExtent[0]);\n    return dataInterval;\n  },\n\n  /**\n   * @override\n   */\n  getValueState: function getValueState(value) {\n    var range = this.option.range;\n    var dataExtent = this.getExtent(); // When range[0] === dataExtent[0], any value larger than dataExtent[0] maps to 'inRange'.\n    // range[1] is processed likewise.\n\n    return (range[0] <= dataExtent[0] || range[0] <= value) && (range[1] >= dataExtent[1] || value <= range[1]) ? 'inRange' : 'outOfRange';\n  },\n\n  /**\n   * @params {Array.<number>} range target value: range[0] <= value && value <= range[1]\n   * @return {Array.<Object>} [{seriesId, dataIndices: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function findTargetDataIndices(range) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        range[0] <= value && value <= range[1] && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @implement\n   */\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    var oVals = getColorStopValues(this, 'outOfRange', this.getExtent());\n    var iVals = getColorStopValues(this, 'inRange', this.option.range.slice());\n    var stops = [];\n\n    function setStop(value, valueState) {\n      stops.push({\n        value: value,\n        color: getColorVisual(value, valueState)\n      });\n    } // Format to: outOfRange -- inRange -- outOfRange.\n\n\n    var iIdx = 0;\n    var oIdx = 0;\n    var iLen = iVals.length;\n    var oLen = oVals.length;\n\n    for (; oIdx < oLen && (!iVals.length || oVals[oIdx] <= iVals[0]); oIdx++) {\n      // If oVal[oIdx] === iVals[iIdx], oVal[oIdx] should be ignored.\n      if (oVals[oIdx] < iVals[iIdx]) {\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    for (var first = 1; iIdx < iLen; iIdx++, first = 0) {\n      // If range is full, value beyond min, max will be clamped.\n      // make a singularity\n      first && stops.length && setStop(iVals[iIdx], 'outOfRange');\n      setStop(iVals[iIdx], 'inRange');\n    }\n\n    for (var first = 1; oIdx < oLen; oIdx++) {\n      if (!iVals.length || iVals[iVals.length - 1] < oVals[oIdx]) {\n        // make a singularity\n        if (first) {\n          stops.length && setStop(stops[stops.length - 1].value, 'outOfRange');\n          first = 0;\n        }\n\n        setStop(oVals[oIdx], 'outOfRange');\n      }\n    }\n\n    var stopsLen = stops.length;\n    return {\n      stops: stops,\n      outerColors: [stopsLen ? stops[0].color : 'transparent', stopsLen ? stops[stopsLen - 1].color : 'transparent']\n    };\n  }\n});\n\nfunction getColorStopValues(visualMapModel, valueState, dataExtent) {\n  if (dataExtent[0] === dataExtent[1]) {\n    return dataExtent.slice();\n  } // When using colorHue mapping, it is not linear color any more.\n  // Moreover, canvas gradient seems not to be accurate linear.\n  // FIXME\n  // Should be arbitrary value 100? or based on pixel size?\n\n\n  var count = 200;\n  var step = (dataExtent[1] - dataExtent[0]) / count;\n  var value = dataExtent[0];\n  var stopValues = [];\n\n  for (var i = 0; i <= count && value < dataExtent[1]; i++) {\n    stopValues.push(value);\n    value += step;\n  }\n\n  stopValues.push(dataExtent[1]);\n  return stopValues;\n}\n\nvar _default = ContinuousModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar LinearGradient = require(\"zrender/lib/graphic/LinearGradient\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar helper = require(\"./helper\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar linearMap = numberUtil.linearMap;\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max; // Arbitrary value\n\nvar HOVER_LINK_SIZE = 12;\nvar HOVER_LINK_OUT = 6; // Notice:\n// Any \"interval\" should be by the order of [low, high].\n// \"handle0\" (handleIndex === 0) maps to\n// low data value: this._dataInterval[0] and has low coord.\n// \"handle1\" (handleIndex === 1) maps to\n// high data value: this._dataInterval[1] and has high coord.\n// The logic of transform is implemented in this._createBarGroup.\n\nvar ContinuousView = VisualMapView.extend({\n  type: 'visualMap.continuous',\n\n  /**\n   * @override\n   */\n  init: function init() {\n    ContinuousView.superApply(this, 'init', arguments);\n    /**\n     * @private\n     */\n\n    this._shapes = {};\n    /**\n     * @private\n     */\n\n    this._dataInterval = [];\n    /**\n     * @private\n     */\n\n    this._handleEnds = [];\n    /**\n     * @private\n     */\n\n    this._orient;\n    /**\n     * @private\n     */\n\n    this._useHandle;\n    /**\n     * @private\n     */\n\n    this._hoverLinkDataIndices = [];\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._hovering;\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender(visualMapModel, ecModel, api, payload) {\n    if (!payload || payload.type !== 'selectDataRange' || payload.from !== this.uid) {\n      this._buildView();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _buildView: function _buildView() {\n    this.group.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var thisGroup = this.group;\n    this._orient = visualMapModel.get('orient');\n    this._useHandle = visualMapModel.get('calculable');\n\n    this._resetInterval();\n\n    this._renderBar(thisGroup);\n\n    var dataRangeText = visualMapModel.get('text');\n\n    this._renderEndsText(thisGroup, dataRangeText, 0);\n\n    this._renderEndsText(thisGroup, dataRangeText, 1); // Do this for background size calculation.\n\n\n    this._updateView(true); // After updating view, inner shapes is built completely,\n    // and then background can be rendered.\n\n\n    this.renderBackground(thisGroup); // Real update view\n\n    this._updateView();\n\n    this._enableHoverLinkToSeries();\n\n    this._enableHoverLinkFromSeries();\n\n    this.positionGroup(thisGroup);\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, dataRangeText, endsIndex) {\n    if (!dataRangeText) {\n      return;\n    } // Compatible with ec2, text[0] map to high value, text[1] map low value.\n\n\n    var text = dataRangeText[1 - endsIndex];\n    text = text != null ? text + '' : '';\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var itemSize = visualMapModel.itemSize;\n    var barGroup = this._shapes.barGroup;\n\n    var position = this._applyTransform([itemSize[0] / 2, endsIndex === 0 ? -textGap : itemSize[1] + textGap], barGroup);\n\n    var align = this._applyTransform(endsIndex === 0 ? 'bottom' : 'top', barGroup);\n\n    var orient = this._orient;\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    this.group.add(new graphic.Text({\n      style: {\n        x: position[0],\n        y: position[1],\n        textVerticalAlign: orient === 'horizontal' ? 'middle' : align,\n        textAlign: orient === 'horizontal' ? align : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderBar: function _renderBar(targetGroup) {\n    var visualMapModel = this.visualMapModel;\n    var shapes = this._shapes;\n    var itemSize = visualMapModel.itemSize;\n    var orient = this._orient;\n    var useHandle = this._useHandle;\n    var itemAlign = helper.getItemAlign(visualMapModel, this.api, itemSize);\n\n    var barGroup = shapes.barGroup = this._createBarGroup(itemAlign); // Bar\n\n\n    barGroup.add(shapes.outOfRange = createPolygon());\n    barGroup.add(shapes.inRange = createPolygon(null, useHandle ? getCursor(this._orient) : null, zrUtil.bind(this._dragHandle, this, 'all', false), zrUtil.bind(this._dragHandle, this, 'all', true)));\n    var textRect = visualMapModel.textStyleModel.getTextRect('国');\n    var textSize = mathMax(textRect.width, textRect.height); // Handle\n\n    if (useHandle) {\n      shapes.handleThumbs = [];\n      shapes.handleLabels = [];\n      shapes.handleLabelPoints = [];\n\n      this._createHandle(barGroup, 0, itemSize, textSize, orient, itemAlign);\n\n      this._createHandle(barGroup, 1, itemSize, textSize, orient, itemAlign);\n    }\n\n    this._createIndicator(barGroup, itemSize, textSize, orient);\n\n    targetGroup.add(barGroup);\n  },\n\n  /**\n   * @private\n   */\n  _createHandle: function _createHandle(barGroup, handleIndex, itemSize, textSize, orient) {\n    var onDrift = zrUtil.bind(this._dragHandle, this, handleIndex, false);\n    var onDragEnd = zrUtil.bind(this._dragHandle, this, handleIndex, true);\n    var handleThumb = createPolygon(createHandlePoints(handleIndex, textSize), getCursor(this._orient), onDrift, onDragEnd);\n    handleThumb.position[0] = itemSize[0];\n    barGroup.add(handleThumb); // Text is always horizontal layout but should not be effected by\n    // transform (orient/inverse). So label is built separately but not\n    // use zrender/graphic/helper/RectText, and is located based on view\n    // group (according to handleLabelPoint) but not barGroup.\n\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var handleLabel = new graphic.Text({\n      draggable: true,\n      drift: onDrift,\n      onmousemove: function onmousemove(e) {\n        // Fot mobile devicem, prevent screen slider on the button.\n        eventTool.stop(e.event);\n      },\n      ondragend: onDragEnd,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(handleLabel);\n    var handleLabelPoint = [orient === 'horizontal' ? textSize / 2 : textSize * 1.5, orient === 'horizontal' ? handleIndex === 0 ? -(textSize * 1.5) : textSize * 1.5 : handleIndex === 0 ? -textSize / 2 : textSize / 2];\n    var shapes = this._shapes;\n    shapes.handleThumbs[handleIndex] = handleThumb;\n    shapes.handleLabelPoints[handleIndex] = handleLabelPoint;\n    shapes.handleLabels[handleIndex] = handleLabel;\n  },\n\n  /**\n   * @private\n   */\n  _createIndicator: function _createIndicator(barGroup, itemSize, textSize, orient) {\n    var indicator = createPolygon([[0, 0]], 'move');\n    indicator.position[0] = itemSize[0];\n    indicator.attr({\n      invisible: true,\n      silent: true\n    });\n    barGroup.add(indicator);\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    var indicatorLabel = new graphic.Text({\n      silent: true,\n      invisible: true,\n      style: {\n        x: 0,\n        y: 0,\n        text: '',\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    });\n    this.group.add(indicatorLabel);\n    var indicatorLabelPoint = [orient === 'horizontal' ? textSize / 2 : HOVER_LINK_OUT + 3, 0];\n    var shapes = this._shapes;\n    shapes.indicator = indicator;\n    shapes.indicatorLabel = indicatorLabel;\n    shapes.indicatorLabelPoint = indicatorLabelPoint;\n  },\n\n  /**\n   * @private\n   */\n  _dragHandle: function _dragHandle(handleIndex, isEnd, dx, dy) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    this._dragging = !isEnd;\n\n    if (!isEnd) {\n      // Transform dx, dy to bar coordination.\n      var vertex = this._applyTransform([dx, dy], this._shapes.barGroup, true);\n\n      this._updateInterval(handleIndex, vertex[1]); // Considering realtime, update view should be executed\n      // before dispatch action.\n\n\n      this._updateView();\n    } // dragEnd do not dispatch action when realtime.\n\n\n    if (isEnd === !this.visualMapModel.get('realtime')) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'selectDataRange',\n        from: this.uid,\n        visualMapId: this.visualMapModel.id,\n        selected: this._dataInterval.slice()\n      });\n    }\n\n    if (isEnd) {\n      !this._hovering && this._clearHoverLinkToSeries();\n    } else if (useHoverLinkOnHandle(this.visualMapModel)) {\n      this._doHoverLinkToSeries(this._handleEnds[handleIndex], false);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var visualMapModel = this.visualMapModel;\n    var dataInterval = this._dataInterval = visualMapModel.getSelected();\n    var dataExtent = visualMapModel.getExtent();\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    this._handleEnds = [linearMap(dataInterval[0], dataExtent, sizeExtent, true), linearMap(dataInterval[1], dataExtent, sizeExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} dx\n   * @param {number} dy\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    delta = delta || 0;\n    var visualMapModel = this.visualMapModel;\n    var handleEnds = this._handleEnds;\n    var sizeExtent = [0, visualMapModel.itemSize[1]];\n    sliderMove(delta, handleEnds, sizeExtent, handleIndex, // cross is forbiden\n    0);\n    var dataExtent = visualMapModel.getExtent(); // Update data interval.\n\n    this._dataInterval = [linearMap(handleEnds[0], sizeExtent, dataExtent, true), linearMap(handleEnds[1], sizeExtent, dataExtent, true)];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(forSketch) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var shapes = this._shapes;\n    var outOfRangeHandleEnds = [0, visualMapModel.itemSize[1]];\n    var inRangeHandleEnds = forSketch ? outOfRangeHandleEnds : this._handleEnds;\n\n    var visualInRange = this._createBarVisual(this._dataInterval, dataExtent, inRangeHandleEnds, 'inRange');\n\n    var visualOutOfRange = this._createBarVisual(dataExtent, dataExtent, outOfRangeHandleEnds, 'outOfRange');\n\n    shapes.inRange.setStyle({\n      fill: visualInRange.barColor,\n      opacity: visualInRange.opacity\n    }).setShape('points', visualInRange.barPoints);\n    shapes.outOfRange.setStyle({\n      fill: visualOutOfRange.barColor,\n      opacity: visualOutOfRange.opacity\n    }).setShape('points', visualOutOfRange.barPoints);\n\n    this._updateHandle(inRangeHandleEnds, visualInRange);\n  },\n\n  /**\n   * @private\n   */\n  _createBarVisual: function _createBarVisual(dataInterval, dataExtent, handleEnds, forceState) {\n    var opts = {\n      forceState: forceState,\n      convertOpacityToAlpha: true\n    };\n\n    var colorStops = this._makeColorGradient(dataInterval, opts);\n\n    var symbolSizes = [this.getControllerVisual(dataInterval[0], 'symbolSize', opts), this.getControllerVisual(dataInterval[1], 'symbolSize', opts)];\n\n    var barPoints = this._createBarPoints(handleEnds, symbolSizes);\n\n    return {\n      barColor: new LinearGradient(0, 0, 0, 1, colorStops),\n      barPoints: barPoints,\n      handlesColor: [colorStops[0].color, colorStops[colorStops.length - 1].color]\n    };\n  },\n\n  /**\n   * @private\n   */\n  _makeColorGradient: function _makeColorGradient(dataInterval, opts) {\n    // Considering colorHue, which is not linear, so we have to sample\n    // to calculate gradient color stops, but not only caculate head\n    // and tail.\n    var sampleNumber = 100; // Arbitrary value.\n\n    var colorStops = [];\n    var step = (dataInterval[1] - dataInterval[0]) / sampleNumber;\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[0], 'color', opts),\n      offset: 0\n    });\n\n    for (var i = 1; i < sampleNumber; i++) {\n      var currValue = dataInterval[0] + step * i;\n\n      if (currValue > dataInterval[1]) {\n        break;\n      }\n\n      colorStops.push({\n        color: this.getControllerVisual(currValue, 'color', opts),\n        offset: i / sampleNumber\n      });\n    }\n\n    colorStops.push({\n      color: this.getControllerVisual(dataInterval[1], 'color', opts),\n      offset: 1\n    });\n    return colorStops;\n  },\n\n  /**\n   * @private\n   */\n  _createBarPoints: function _createBarPoints(handleEnds, symbolSizes) {\n    var itemSize = this.visualMapModel.itemSize;\n    return [[itemSize[0] - symbolSizes[0], handleEnds[0]], [itemSize[0], handleEnds[0]], [itemSize[0], handleEnds[1]], [itemSize[0] - symbolSizes[1], handleEnds[1]]];\n  },\n\n  /**\n   * @private\n   */\n  _createBarGroup: function _createBarGroup(itemAlign) {\n    var orient = this._orient;\n    var inverse = this.visualMapModel.get('inverse');\n    return new graphic.Group(orient === 'horizontal' && !inverse ? {\n      scale: itemAlign === 'bottom' ? [1, 1] : [-1, 1],\n      rotation: Math.PI / 2\n    } : orient === 'horizontal' && inverse ? {\n      scale: itemAlign === 'bottom' ? [-1, 1] : [1, 1],\n      rotation: -Math.PI / 2\n    } : orient === 'vertical' && !inverse ? {\n      scale: itemAlign === 'left' ? [1, -1] : [-1, -1]\n    } : {\n      scale: itemAlign === 'left' ? [1, 1] : [-1, 1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _updateHandle: function _updateHandle(handleEnds, visualInRange) {\n    if (!this._useHandle) {\n      return;\n    }\n\n    var shapes = this._shapes;\n    var visualMapModel = this.visualMapModel;\n    var handleThumbs = shapes.handleThumbs;\n    var handleLabels = shapes.handleLabels;\n    each([0, 1], function (handleIndex) {\n      var handleThumb = handleThumbs[handleIndex];\n      handleThumb.setStyle('fill', visualInRange.handlesColor[handleIndex]);\n      handleThumb.position[1] = handleEnds[handleIndex]; // Update handle label position.\n\n      var textPoint = graphic.applyTransform(shapes.handleLabelPoints[handleIndex], graphic.getTransform(handleThumb, this.group));\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        text: visualMapModel.formatValueText(this._dataInterval[handleIndex]),\n        textVerticalAlign: 'middle',\n        textAlign: this._applyTransform(this._orient === 'horizontal' ? handleIndex === 0 ? 'bottom' : 'top' : 'left', shapes.barGroup)\n      });\n    }, this);\n  },\n\n  /**\n   * @private\n   * @param {number} cursorValue\n   * @param {number} textValue\n   * @param {string} [rangeSymbol]\n   * @param {number} [halfHoverLinkSize]\n   */\n  _showIndicator: function _showIndicator(cursorValue, textValue, rangeSymbol, halfHoverLinkSize) {\n    var visualMapModel = this.visualMapModel;\n    var dataExtent = visualMapModel.getExtent();\n    var itemSize = visualMapModel.itemSize;\n    var sizeExtent = [0, itemSize[1]];\n    var pos = linearMap(cursorValue, dataExtent, sizeExtent, true);\n    var shapes = this._shapes;\n    var indicator = shapes.indicator;\n\n    if (!indicator) {\n      return;\n    }\n\n    indicator.position[1] = pos;\n    indicator.attr('invisible', false);\n    indicator.setShape('points', createIndicatorPoints(!!rangeSymbol, halfHoverLinkSize, pos, itemSize[1]));\n    var opts = {\n      convertOpacityToAlpha: true\n    };\n    var color = this.getControllerVisual(cursorValue, 'color', opts);\n    indicator.setStyle('fill', color); // Update handle label position.\n\n    var textPoint = graphic.applyTransform(shapes.indicatorLabelPoint, graphic.getTransform(indicator, this.group));\n    var indicatorLabel = shapes.indicatorLabel;\n    indicatorLabel.attr('invisible', false);\n\n    var align = this._applyTransform('left', shapes.barGroup);\n\n    var orient = this._orient;\n    indicatorLabel.setStyle({\n      text: (rangeSymbol ? rangeSymbol : '') + visualMapModel.formatValueText(textValue),\n      textVerticalAlign: orient === 'horizontal' ? align : 'middle',\n      textAlign: orient === 'horizontal' ? 'center' : align,\n      x: textPoint[0],\n      y: textPoint[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkToSeries: function _enableHoverLinkToSeries() {\n    var self = this;\n\n    this._shapes.barGroup.on('mousemove', function (e) {\n      self._hovering = true;\n\n      if (!self._dragging) {\n        var itemSize = self.visualMapModel.itemSize;\n\n        var pos = self._applyTransform([e.offsetX, e.offsetY], self._shapes.barGroup, true, true); // For hover link show when hover handle, which might be\n        // below or upper than sizeExtent.\n\n\n        pos[1] = mathMin(mathMax(0, pos[1]), itemSize[1]);\n\n        self._doHoverLinkToSeries(pos[1], 0 <= pos[0] && pos[0] <= itemSize[0]);\n      }\n    }).on('mouseout', function () {\n      // When mouse is out of handle, hoverLink still need\n      // to be displayed when realtime is set as false.\n      self._hovering = false;\n      !self._dragging && self._clearHoverLinkToSeries();\n    });\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLinkFromSeries: function _enableHoverLinkFromSeries() {\n    var zr = this.api.getZr();\n\n    if (this.visualMapModel.option.hoverLink) {\n      zr.on('mouseover', this._hoverLinkFromSeriesMouseOver, this);\n      zr.on('mouseout', this._hideIndicator, this);\n    } else {\n      this._clearHoverLinkFromSeries();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doHoverLinkToSeries: function _doHoverLinkToSeries(cursorPos, hoverOnBar) {\n    var visualMapModel = this.visualMapModel;\n    var itemSize = visualMapModel.itemSize;\n\n    if (!visualMapModel.option.hoverLink) {\n      return;\n    }\n\n    var sizeExtent = [0, itemSize[1]];\n    var dataExtent = visualMapModel.getExtent(); // For hover link show when hover handle, which might be below or upper than sizeExtent.\n\n    cursorPos = mathMin(mathMax(sizeExtent[0], cursorPos), sizeExtent[1]);\n    var halfHoverLinkSize = getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent);\n    var hoverRange = [cursorPos - halfHoverLinkSize, cursorPos + halfHoverLinkSize];\n    var cursorValue = linearMap(cursorPos, sizeExtent, dataExtent, true);\n    var valueRange = [linearMap(hoverRange[0], sizeExtent, dataExtent, true), linearMap(hoverRange[1], sizeExtent, dataExtent, true)]; // Consider data range is out of visualMap range, see test/visualMap-continuous.html,\n    // where china and india has very large population.\n\n    hoverRange[0] < sizeExtent[0] && (valueRange[0] = -Infinity);\n    hoverRange[1] > sizeExtent[1] && (valueRange[1] = Infinity); // Do not show indicator when mouse is over handle,\n    // otherwise labels overlap, especially when dragging.\n\n    if (hoverOnBar) {\n      if (valueRange[0] === -Infinity) {\n        this._showIndicator(cursorValue, valueRange[1], '< ', halfHoverLinkSize);\n      } else if (valueRange[1] === Infinity) {\n        this._showIndicator(cursorValue, valueRange[0], '> ', halfHoverLinkSize);\n      } else {\n        this._showIndicator(cursorValue, cursorValue, '≈ ', halfHoverLinkSize);\n      }\n    } // When realtime is set as false, handles, which are in barGroup,\n    // also trigger hoverLink, which help user to realize where they\n    // focus on when dragging. (see test/heatmap-large.html)\n    // When realtime is set as true, highlight will not show when hover\n    // handle, because the label on handle, which displays a exact value\n    // but not range, might mislead users.\n\n\n    var oldBatch = this._hoverLinkDataIndices;\n    var newBatch = [];\n\n    if (hoverOnBar || useHoverLinkOnHandle(visualMapModel)) {\n      newBatch = this._hoverLinkDataIndices = visualMapModel.findTargetDataIndices(valueRange);\n    }\n\n    var resultBatches = modelUtil.compressBatches(oldBatch, newBatch);\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(resultBatches[0], visualMapModel));\n\n    this._dispatchHighDown('highlight', helper.makeHighDownBatch(resultBatches[1], visualMapModel));\n  },\n\n  /**\n   * @private\n   */\n  _hoverLinkFromSeriesMouseOver: function _hoverLinkFromSeriesMouseOver(e) {\n    var el = e.target;\n    var visualMapModel = this.visualMapModel;\n\n    if (!el || el.dataIndex == null) {\n      return;\n    }\n\n    var dataModel = this.ecModel.getSeriesByIndex(el.seriesIndex);\n\n    if (!visualMapModel.isTargetSeries(dataModel)) {\n      return;\n    }\n\n    var data = dataModel.getData(el.dataType);\n    var value = data.get(visualMapModel.getDataDimension(data), el.dataIndex, true);\n\n    if (!isNaN(value)) {\n      this._showIndicator(value, value);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _hideIndicator: function _hideIndicator() {\n    var shapes = this._shapes;\n    shapes.indicator && shapes.indicator.attr('invisible', true);\n    shapes.indicatorLabel && shapes.indicatorLabel.attr('invisible', true);\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkToSeries: function _clearHoverLinkToSeries() {\n    this._hideIndicator();\n\n    var indices = this._hoverLinkDataIndices;\n\n    this._dispatchHighDown('downplay', helper.makeHighDownBatch(indices, this.visualMapModel));\n\n    indices.length = 0;\n  },\n\n  /**\n   * @private\n   */\n  _clearHoverLinkFromSeries: function _clearHoverLinkFromSeries() {\n    this._hideIndicator();\n\n    var zr = this.api.getZr();\n    zr.off('mouseover', this._hoverLinkFromSeriesMouseOver);\n    zr.off('mouseout', this._hideIndicator);\n  },\n\n  /**\n   * @private\n   */\n  _applyTransform: function _applyTransform(vertex, element, inverse, global) {\n    var transform = graphic.getTransform(element, global ? null : this.group);\n    return graphic[zrUtil.isArray(vertex) ? 'applyTransform' : 'transformDirection'](vertex, transform, inverse);\n  },\n\n  /**\n   * @private\n   */\n  _dispatchHighDown: function _dispatchHighDown(type, batch) {\n    batch && batch.length && this.api.dispatchAction({\n      type: type,\n      batch: batch\n    });\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearHoverLinkFromSeries();\n\n    this._clearHoverLinkToSeries();\n  }\n});\n\nfunction createPolygon(points, cursor, onDrift, onDragEnd) {\n  return new graphic.Polygon({\n    shape: {\n      points: points\n    },\n    draggable: !!onDrift,\n    cursor: cursor,\n    drift: onDrift,\n    onmousemove: function onmousemove(e) {\n      // Fot mobile devicem, prevent screen slider on the button.\n      eventTool.stop(e.event);\n    },\n    ondragend: onDragEnd\n  });\n}\n\nfunction createHandlePoints(handleIndex, textSize) {\n  return handleIndex === 0 ? [[0, 0], [textSize, 0], [textSize, -textSize]] : [[0, 0], [textSize, 0], [textSize, textSize]];\n}\n\nfunction createIndicatorPoints(isRange, halfHoverLinkSize, pos, extentMax) {\n  return isRange ? [// indicate range\n  [0, -mathMin(halfHoverLinkSize, mathMax(pos, 0))], [HOVER_LINK_OUT, 0], [0, mathMin(halfHoverLinkSize, mathMax(extentMax - pos, 0))]] : [// indicate single value\n  [0, 0], [5, -5], [5, 5]];\n}\n\nfunction getHalfHoverLinkSize(visualMapModel, dataExtent, sizeExtent) {\n  var halfHoverLinkSize = HOVER_LINK_SIZE / 2;\n  var hoverLinkDataSize = visualMapModel.get('hoverLinkDataSize');\n\n  if (hoverLinkDataSize) {\n    halfHoverLinkSize = linearMap(hoverLinkDataSize, dataExtent, sizeExtent, true) / 2;\n  }\n\n  return halfHoverLinkSize;\n}\n\nfunction useHoverLinkOnHandle(visualMapModel) {\n  var hoverLinkOnHandle = visualMapModel.get('hoverLinkOnHandle');\n  return !!(hoverLinkOnHandle == null ? visualMapModel.get('realtime') : hoverLinkOnHandle);\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = ContinuousView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapModel = require(\"./VisualMapModel\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar _number = require(\"../../util/number\");\n\nvar reformIntervals = _number.reformIntervals;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PiecewiseModel = VisualMapModel.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * Order Rule:\n   *\n   * option.categories / option.pieces / option.text / option.selected:\n   *     If !option.inverse,\n   *     Order when vertical: ['top', ..., 'bottom'].\n   *     Order when horizontal: ['left', ..., 'right'].\n   *     If option.inverse, the meaning of\n   *     the order should be reversed.\n   *\n   * this._pieceList:\n   *     The order is always [low, ..., high].\n   *\n   * Mapping from location to low-high:\n   *     If !option.inverse\n   *     When vertical, top is high.\n   *     When horizontal, right is high.\n   *     If option.inverse, reverse.\n   */\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    selected: null,\n    // Object. If not specified, means selected.\n    // When pieces and splitNumber: {'0': true, '5': true}\n    // When categories: {'cate1': false, 'cate3': true}\n    // When selected === false, means all unselected.\n    minOpen: false,\n    // Whether include values that smaller than `min`.\n    maxOpen: false,\n    // Whether include values that bigger than `max`.\n    align: 'auto',\n    // 'auto', 'left', 'right'\n    itemWidth: 20,\n    // When put the controller vertically, it is the length of\n    // horizontal side of each item. Otherwise, vertical side.\n    itemHeight: 14,\n    // When put the controller vertically, it is the length of\n    // vertical side of each item. Otherwise, horizontal side.\n    itemSymbol: 'roundRect',\n    pieceList: null,\n    // Each item is Object, with some of those attrs:\n    // {min, max, lt, gt, lte, gte, value,\n    // color, colorSaturation, colorAlpha, opacity,\n    // symbol, symbolSize}, which customize the range or visual\n    // coding of the certain piece. Besides, see \"Order Rule\".\n    categories: null,\n    // category names, like: ['some1', 'some2', 'some3'].\n    // Attr min/max are ignored when categories set. See \"Order Rule\"\n    splitNumber: 5,\n    // If set to 5, auto split five pieces equally.\n    // If set to 0 and component type not set, component type will be\n    // determined as \"continuous\". (It is less reasonable but for ec2\n    // compatibility, see echarts/component/visualMap/typeDefaulter)\n    selectedMode: 'multiple',\n    // Can be 'multiple' or 'single'.\n    itemGap: 10,\n    // The gap between two items, in px.\n    hoverLink: true,\n    // Enable hover highlight.\n    showLabel: null // By default, when text is used, label will hide (the logic\n    // is remained for compatibility reason)\n\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    PiecewiseModel.superApply(this, 'optionUpdated', arguments);\n    /**\n     * The order is always [low, ..., high].\n     * [{text: string, interval: Array.<number>}, ...]\n     * @private\n     * @type {Array.<Object>}\n     */\n\n    this._pieceList = [];\n    this.resetExtent();\n    /**\n     * 'pieces', 'categories', 'splitNumber'\n     * @type {string}\n     */\n\n    var mode = this._mode = this._determineMode();\n\n    resetMethods[this._mode].call(this);\n\n    this._resetSelected(newOption, isInit);\n\n    var categories = this.option.categories;\n    this.resetVisual(function (mappingOption, state) {\n      if (mode === 'categories') {\n        mappingOption.mappingMethod = 'category';\n        mappingOption.categories = zrUtil.clone(categories);\n      } else {\n        mappingOption.dataExtent = this.getExtent();\n        mappingOption.mappingMethod = 'piecewise';\n        mappingOption.pieceList = zrUtil.map(this._pieceList, function (piece) {\n          var piece = zrUtil.clone(piece);\n\n          if (state !== 'inRange') {\n            // FIXME\n            // outOfRange do not support special visual in pieces.\n            piece.visual = null;\n          }\n\n          return piece;\n        });\n      }\n    });\n  },\n\n  /**\n   * @protected\n   * @override\n   */\n  completeVisualOption: function completeVisualOption() {\n    // Consider this case:\n    // visualMap: {\n    //      pieces: [{symbol: 'circle', lt: 0}, {symbol: 'rect', gte: 0}]\n    // }\n    // where no inRange/outOfRange set but only pieces. So we should make\n    // default inRange/outOfRange for this case, otherwise visuals that only\n    // appear in `pieces` will not be taken into account in visual encoding.\n    var option = this.option;\n    var visualTypesInPieces = {};\n    var visualTypes = VisualMapping.listVisualTypes();\n    var isCategory = this.isCategory();\n    zrUtil.each(option.pieces, function (piece) {\n      zrUtil.each(visualTypes, function (visualType) {\n        if (piece.hasOwnProperty(visualType)) {\n          visualTypesInPieces[visualType] = 1;\n        }\n      });\n    });\n    zrUtil.each(visualTypesInPieces, function (v, visualType) {\n      var exists = 0;\n      zrUtil.each(this.stateList, function (state) {\n        exists |= has(option, state, visualType) || has(option.target, state, visualType);\n      }, this);\n      !exists && zrUtil.each(this.stateList, function (state) {\n        (option[state] || (option[state] = {}))[visualType] = visualDefault.get(visualType, state === 'inRange' ? 'active' : 'inactive', isCategory);\n      });\n    }, this);\n\n    function has(obj, state, visualType) {\n      return obj && obj[state] && (zrUtil.isObject(obj[state]) ? obj[state].hasOwnProperty(visualType) : obj[state] === visualType // e.g., inRange: 'symbol'\n      );\n    }\n\n    VisualMapModel.prototype.completeVisualOption.apply(this, arguments);\n  },\n  _resetSelected: function _resetSelected(newOption, isInit) {\n    var thisOption = this.option;\n    var pieceList = this._pieceList; // Selected do not merge but all override.\n\n    var selected = (isInit ? thisOption : newOption).selected || {};\n    thisOption.selected = selected; // Consider 'not specified' means true.\n\n    zrUtil.each(pieceList, function (piece, index) {\n      var key = this.getSelectedMapKey(piece);\n\n      if (!selected.hasOwnProperty(key)) {\n        selected[key] = true;\n      }\n    }, this);\n\n    if (thisOption.selectedMode === 'single') {\n      // Ensure there is only one selected.\n      var hasSel = false;\n      zrUtil.each(pieceList, function (piece, index) {\n        var key = this.getSelectedMapKey(piece);\n\n        if (selected[key]) {\n          hasSel ? selected[key] = false : hasSel = true;\n        }\n      }, this);\n    } // thisOption.selectedMode === 'multiple', default: all selected.\n\n  },\n\n  /**\n   * @public\n   */\n  getSelectedMapKey: function getSelectedMapKey(piece) {\n    return this._mode === 'categories' ? piece.value + '' : piece.index + '';\n  },\n\n  /**\n   * @public\n   */\n  getPieceList: function getPieceList() {\n    return this._pieceList;\n  },\n\n  /**\n   * @private\n   * @return {string}\n   */\n  _determineMode: function _determineMode() {\n    var option = this.option;\n    return option.pieces && option.pieces.length > 0 ? 'pieces' : this.option.categories ? 'categories' : 'splitNumber';\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  setSelected: function setSelected(selected) {\n    this.option.selected = zrUtil.clone(selected);\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getValueState: function getValueState(value) {\n    var index = VisualMapping.findPieceIndex(value, this._pieceList);\n    return index != null ? this.option.selected[this.getSelectedMapKey(this._pieceList[index])] ? 'inRange' : 'outOfRange' : 'outOfRange';\n  },\n\n  /**\n   * @public\n   * @params {number} pieceIndex piece index in visualMapModel.getPieceList()\n   * @return {Array.<Object>} [{seriesId, dataIndex: <Array.<number>>}, ...]\n   */\n  findTargetDataIndices: function findTargetDataIndices(pieceIndex) {\n    var result = [];\n    this.eachTargetSeries(function (seriesModel) {\n      var dataIndices = [];\n      var data = seriesModel.getData();\n      data.each(this.getDataDimension(data), function (value, dataIndex) {\n        // Should always base on model pieceList, because it is order sensitive.\n        var pIdx = VisualMapping.findPieceIndex(value, this._pieceList);\n        pIdx === pieceIndex && dataIndices.push(dataIndex);\n      }, this);\n      result.push({\n        seriesId: seriesModel.id,\n        dataIndex: dataIndices\n      });\n    }, this);\n    return result;\n  },\n\n  /**\n   * @private\n   * @param {Object} piece piece.value or piece.interval is required.\n   * @return {number} Can be Infinity or -Infinity\n   */\n  getRepresentValue: function getRepresentValue(piece) {\n    var representValue;\n\n    if (this.isCategory()) {\n      representValue = piece.value;\n    } else {\n      if (piece.value != null) {\n        representValue = piece.value;\n      } else {\n        var pieceInterval = piece.interval || [];\n        representValue = pieceInterval[0] === -Infinity && pieceInterval[1] === Infinity ? 0 : (pieceInterval[0] + pieceInterval[1]) / 2;\n      }\n    }\n\n    return representValue;\n  },\n  getVisualMeta: function getVisualMeta(getColorVisual) {\n    // Do not support category. (category axis is ordinal, numerical)\n    if (this.isCategory()) {\n      return;\n    }\n\n    var stops = [];\n    var outerColors = [];\n    var visualMapModel = this;\n\n    function setStop(interval, valueState) {\n      var representValue = visualMapModel.getRepresentValue({\n        interval: interval\n      });\n\n      if (!valueState) {\n        valueState = visualMapModel.getValueState(representValue);\n      }\n\n      var color = getColorVisual(representValue, valueState);\n\n      if (interval[0] === -Infinity) {\n        outerColors[0] = color;\n      } else if (interval[1] === Infinity) {\n        outerColors[1] = color;\n      } else {\n        stops.push({\n          value: interval[0],\n          color: color\n        }, {\n          value: interval[1],\n          color: color\n        });\n      }\n    } // Suplement\n\n\n    var pieceList = this._pieceList.slice();\n\n    if (!pieceList.length) {\n      pieceList.push({\n        interval: [-Infinity, Infinity]\n      });\n    } else {\n      var edge = pieceList[0].interval[0];\n      edge !== -Infinity && pieceList.unshift({\n        interval: [-Infinity, edge]\n      });\n      edge = pieceList[pieceList.length - 1].interval[1];\n      edge !== Infinity && pieceList.push({\n        interval: [edge, Infinity]\n      });\n    }\n\n    var curr = -Infinity;\n    zrUtil.each(pieceList, function (piece) {\n      var interval = piece.interval;\n\n      if (interval) {\n        // Fulfill gap.\n        interval[0] > curr && setStop([curr, interval[0]], 'outOfRange');\n        setStop(interval.slice());\n        curr = interval[1];\n      }\n    }, this);\n    return {\n      stops: stops,\n      outerColors: outerColors\n    };\n  }\n});\n/**\n * Key is this._mode\n * @type {Object}\n * @this {module:echarts/component/viusalMap/PiecewiseMode}\n */\n\nvar resetMethods = {\n  splitNumber: function splitNumber() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    var precision = Math.min(thisOption.precision, 20);\n    var dataExtent = this.getExtent();\n    var splitNumber = thisOption.splitNumber;\n    splitNumber = Math.max(parseInt(splitNumber, 10), 1);\n    thisOption.splitNumber = splitNumber;\n    var splitStep = (dataExtent[1] - dataExtent[0]) / splitNumber; // Precision auto-adaption\n\n    while (+splitStep.toFixed(precision) !== splitStep && precision < 5) {\n      precision++;\n    }\n\n    thisOption.precision = precision;\n    splitStep = +splitStep.toFixed(precision);\n\n    if (thisOption.minOpen) {\n      pieceList.push({\n        interval: [-Infinity, dataExtent[0]],\n        close: [0, 0]\n      });\n    }\n\n    for (var index = 0, curr = dataExtent[0]; index < splitNumber; curr += splitStep, index++) {\n      var max = index === splitNumber - 1 ? dataExtent[1] : curr + splitStep;\n      pieceList.push({\n        interval: [curr, max],\n        close: [1, 1]\n      });\n    }\n\n    if (thisOption.maxOpen) {\n      pieceList.push({\n        interval: [dataExtent[1], Infinity],\n        close: [0, 0]\n      });\n    }\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece, index) {\n      piece.index = index;\n      piece.text = this.formatValueText(piece.interval);\n    }, this);\n  },\n  categories: function categories() {\n    var thisOption = this.option;\n    zrUtil.each(thisOption.categories, function (cate) {\n      // FIXME category模式也使用pieceList，但在visualMapping中不是使用pieceList。\n      // 是否改一致。\n      this._pieceList.push({\n        text: this.formatValueText(cate, true),\n        value: cate\n      });\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, this._pieceList);\n  },\n  pieces: function pieces() {\n    var thisOption = this.option;\n    var pieceList = this._pieceList;\n    zrUtil.each(thisOption.pieces, function (pieceListItem, index) {\n      if (!zrUtil.isObject(pieceListItem)) {\n        pieceListItem = {\n          value: pieceListItem\n        };\n      }\n\n      var item = {\n        text: '',\n        index: index\n      };\n\n      if (pieceListItem.label != null) {\n        item.text = pieceListItem.label;\n      }\n\n      if (pieceListItem.hasOwnProperty('value')) {\n        var value = item.value = pieceListItem.value;\n        item.interval = [value, value];\n        item.close = [1, 1];\n      } else {\n        // `min` `max` is legacy option.\n        // `lt` `gt` `lte` `gte` is recommanded.\n        var interval = item.interval = [];\n        var close = item.close = [0, 0];\n        var closeList = [1, 0, 1];\n        var infinityList = [-Infinity, Infinity];\n        var useMinMax = [];\n\n        for (var lg = 0; lg < 2; lg++) {\n          var names = [['gte', 'gt', 'min'], ['lte', 'lt', 'max']][lg];\n\n          for (var i = 0; i < 3 && interval[lg] == null; i++) {\n            interval[lg] = pieceListItem[names[i]];\n            close[lg] = closeList[i];\n            useMinMax[lg] = i === 2;\n          }\n\n          interval[lg] == null && (interval[lg] = infinityList[lg]);\n        }\n\n        useMinMax[0] && interval[1] === Infinity && (close[0] = 0);\n        useMinMax[1] && interval[0] === -Infinity && (close[1] = 0);\n\n        if (interval[0] === interval[1] && close[0] && close[1]) {\n          // Consider: [{min: 5, max: 5, visual: {...}}, {min: 0, max: 5}],\n          // we use value to lift the priority when min === max\n          item.value = interval[0];\n        }\n      }\n\n      item.visual = VisualMapping.retrieveVisuals(pieceListItem);\n      pieceList.push(item);\n    }, this); // See \"Order Rule\".\n\n    normalizeReverse(thisOption, pieceList); // Only pieces\n\n    reformIntervals(pieceList);\n    zrUtil.each(pieceList, function (piece) {\n      var close = piece.close;\n      var edgeSymbols = [['<', '≤'][close[1]], ['>', '≥'][close[0]]];\n      piece.text = piece.text || this.formatValueText(piece.value != null ? piece.value : piece.interval, false, edgeSymbols);\n    }, this);\n  }\n};\n\nfunction normalizeReverse(thisOption, pieceList) {\n  var inverse = thisOption.inverse;\n\n  if (thisOption.orient === 'vertical' ? !inverse : inverse) {\n    pieceList.reverse();\n  }\n}\n\nvar _default = PiecewiseModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar VisualMapView = require(\"./VisualMapView\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PiecewiseVisualMapView = VisualMapView.extend({\n  type: 'visualMap.piecewise',\n\n  /**\n   * @protected\n   * @override\n   */\n  doRender: function doRender() {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n    var visualMapModel = this.visualMapModel;\n    var textGap = visualMapModel.get('textGap');\n    var textStyleModel = visualMapModel.textStyleModel;\n    var textFont = textStyleModel.getFont();\n    var textFill = textStyleModel.getTextColor();\n\n    var itemAlign = this._getItemAlign();\n\n    var itemSize = visualMapModel.itemSize;\n\n    var viewData = this._getViewData();\n\n    var endsText = viewData.endsText;\n    var showLabel = zrUtil.retrieve(visualMapModel.get('showLabel', true), !endsText);\n    endsText && this._renderEndsText(thisGroup, endsText[0], itemSize, showLabel, itemAlign);\n    zrUtil.each(viewData.viewPieceList, renderItem, this);\n    endsText && this._renderEndsText(thisGroup, endsText[1], itemSize, showLabel, itemAlign);\n    layout.box(visualMapModel.get('orient'), thisGroup, visualMapModel.get('itemGap'));\n    this.renderBackground(thisGroup);\n    this.positionGroup(thisGroup);\n\n    function renderItem(item) {\n      var piece = item.piece;\n      var itemGroup = new graphic.Group();\n      itemGroup.onclick = zrUtil.bind(this._onItemClick, this, piece);\n\n      this._enableHoverLink(itemGroup, item.indexInModelPieceList);\n\n      var representValue = visualMapModel.getRepresentValue(piece);\n\n      this._createItemSymbol(itemGroup, representValue, [0, 0, itemSize[0], itemSize[1]]);\n\n      if (showLabel) {\n        var visualState = this.visualMapModel.getValueState(representValue);\n        itemGroup.add(new graphic.Text({\n          style: {\n            x: itemAlign === 'right' ? -textGap : itemSize[0] + textGap,\n            y: itemSize[1] / 2,\n            text: piece.text,\n            textVerticalAlign: 'middle',\n            textAlign: itemAlign,\n            textFont: textFont,\n            textFill: textFill,\n            opacity: visualState === 'outOfRange' ? 0.5 : 1\n          }\n        }));\n      }\n\n      thisGroup.add(itemGroup);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _enableHoverLink: function _enableHoverLink(itemGroup, pieceIndex) {\n    itemGroup.on('mouseover', zrUtil.bind(onHoverLink, this, 'highlight')).on('mouseout', zrUtil.bind(onHoverLink, this, 'downplay'));\n\n    function onHoverLink(method) {\n      var visualMapModel = this.visualMapModel;\n      visualMapModel.option.hoverLink && this.api.dispatchAction({\n        type: method,\n        batch: helper.makeHighDownBatch(visualMapModel.findTargetDataIndices(pieceIndex), visualMapModel)\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _getItemAlign: function _getItemAlign() {\n    var visualMapModel = this.visualMapModel;\n    var modelOption = visualMapModel.option;\n\n    if (modelOption.orient === 'vertical') {\n      return helper.getItemAlign(visualMapModel, this.api, visualMapModel.itemSize);\n    } else {\n      // horizontal, most case left unless specifying right.\n      var align = modelOption.align;\n\n      if (!align || align === 'auto') {\n        align = 'left';\n      }\n\n      return align;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderEndsText: function _renderEndsText(group, text, itemSize, showLabel, itemAlign) {\n    if (!text) {\n      return;\n    }\n\n    var itemGroup = new graphic.Group();\n    var textStyleModel = this.visualMapModel.textStyleModel;\n    itemGroup.add(new graphic.Text({\n      style: {\n        x: showLabel ? itemAlign === 'right' ? itemSize[0] : 0 : itemSize[0] / 2,\n        y: itemSize[1] / 2,\n        textVerticalAlign: 'middle',\n        textAlign: showLabel ? itemAlign : 'center',\n        text: text,\n        textFont: textStyleModel.getFont(),\n        textFill: textStyleModel.getTextColor()\n      }\n    }));\n    group.add(itemGroup);\n  },\n\n  /**\n   * @private\n   * @return {Object} {peiceList, endsText} The order is the same as screen pixel order.\n   */\n  _getViewData: function _getViewData() {\n    var visualMapModel = this.visualMapModel;\n    var viewPieceList = zrUtil.map(visualMapModel.getPieceList(), function (piece, index) {\n      return {\n        piece: piece,\n        indexInModelPieceList: index\n      };\n    });\n    var endsText = visualMapModel.get('text'); // Consider orient and inverse.\n\n    var orient = visualMapModel.get('orient');\n    var inverse = visualMapModel.get('inverse'); // Order of model pieceList is always [low, ..., high]\n\n    if (orient === 'horizontal' ? inverse : !inverse) {\n      viewPieceList.reverse();\n    } // Origin order of endsText is [high, low]\n    else if (endsText) {\n        endsText = endsText.slice().reverse();\n      }\n\n    return {\n      viewPieceList: viewPieceList,\n      endsText: endsText\n    };\n  },\n\n  /**\n   * @private\n   */\n  _createItemSymbol: function _createItemSymbol(group, representValue, shapeParam) {\n    group.add(createSymbol(this.getControllerVisual(representValue, 'symbol'), shapeParam[0], shapeParam[1], shapeParam[2], shapeParam[3], this.getControllerVisual(representValue, 'color')));\n  },\n\n  /**\n   * @private\n   */\n  _onItemClick: function _onItemClick(piece) {\n    var visualMapModel = this.visualMapModel;\n    var option = visualMapModel.option;\n    var selected = zrUtil.clone(option.selected);\n    var newKey = visualMapModel.getSelectedMapKey(piece);\n\n    if (option.selectedMode === 'single') {\n      selected[newKey] = true;\n      zrUtil.each(selected, function (o, key) {\n        selected[key] = key === newKey;\n      });\n    } else {\n      selected[newKey] = !selected[newKey];\n    }\n\n    this.api.dispatchAction({\n      type: 'selectDataRange',\n      from: this.uid,\n      visualMapId: this.visualMapModel.id,\n      selected: selected\n    });\n  }\n});\nvar _default = PiecewiseVisualMapView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\n\n\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  var fixMin = min != null;\n  var fixMax = max != null;\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n      var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n      var isBaseAxisAndHasBarSeries;\n      zrUtil.each(barSeriesModels, function (seriesModel) {\n        isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n      });\n\n      if (isBaseAxisAndHasBarSeries) {\n        // Calculate placement of bars on axis\n        var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n        var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n        min = adjustedScale.min;\n        max = adjustedScale.max;\n      }\n    }\n\n  return {\n    extent: [min, max],\n    // \"fix\" means \"fixed\", the value should not be\n    // changed in the subsequent steps.\n    fixMin: fixMin,\n    fixMax: fixMax\n  };\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extentInfo = getScaleExtent(scale, model);\n  var extent = extentInfo.extent;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: extentInfo.fixMin,\n    fixMax: extentInfo.fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        // For category axis, get raw value; for numeric axis,\n        // get foramtted label like '1,333,444'.\n        val = axis.scale.getLabel(val);\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n/**\n * @param {module:echarts/src/model/Model} model axisLabelModel or axisTickModel\n * @return {number|String} Can be null|'auto'|number|function\n */\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n/**\n * Set `categoryInterval` as 0 implicitly indicates that\n * show all labels reguardless of overlap.\n * @param {Object} axis axisModel.axis\n * @return {boolean}\n */\n\n\nfunction shouldShowAllLabels(axis) {\n  return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\nexports.getOptionCategoryInterval = getOptionCategoryInterval;\nexports.shouldShowAllLabels = shouldShowAllLabels;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\n\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// The result of `guessOrdinal`.\n\nvar BE_ORDINAL = {\n  Must: 1,\n  // Encounter string but not '-' and not number-like.\n  Might: 2,\n  // Encounter string but number-like.\n  Not: 3 // Other cases\n\n};\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine);\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    // Note: dataset option does not have `encode`.\n    encodeDefine: seriesOption.encode\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n}\n/**\n * [The strategy of the arrengment of data dimensions for dataset]:\n * \"value way\": all axes are non-category axes. So series one by one take\n *     several (the number is coordSysDims.length) dimensions from dataset.\n *     The result of data arrengment of data dimensions like:\n *     | ser0_x | ser0_y | ser1_x | ser1_y | ser2_x | ser2_y |\n * \"category way\": at least one axis is category axis. So the the first data\n *     dimension is always mapped to the first category axis and shared by\n *     all of the series. The other data dimensions are taken by series like\n *     \"value way\" does.\n *     The result of data arrengment of data dimensions like:\n *     | ser_shared_x | ser0_y | ser1_y | ser2_y |\n *\n * @param {Array.<Object|string>} coordDimensions [{name: <string>, type: <string>, dimsDef: <Array>}, ...]\n * @param {module:model/Series} seriesModel\n * @param {module:data/Source} source\n * @return {Object} encode Never be `null/undefined`.\n */\n\n\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = getDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\n\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = inner(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    !isObject(coordDimInfo) && (coordDimensions[coordDimIdx] = {\n      name: coordDimInfo\n    });\n\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimensions[coordDimIdx]);\n    }\n\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  }); // TODO\n  // Auto detect first time axis and do arrangement.\n\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo); // In value way.\n\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count; // ??? TODO give a better default series name rule?\n      // especially when encode x y specified.\n      // consider: when mutiple series share one dimension\n      // category axis, series name should better use\n      // the other dimsion name. On the other hand, use\n      // both dimensions name.\n    } // In category way, the first category axis.\n    else if (baseCategoryDimIndex === coordDimIdx) {\n        pushDim(encode[coordDimName], 0, count);\n        pushDim(encodeItemName, 0, count);\n      } // In category way, the other axis.\n      else {\n          var start = datasetRecord.categoryWayDim;\n          pushDim(encode[coordDimName], start, count);\n          pushDim(encodeSeriesName, start, count);\n          datasetRecord.categoryWayDim += count;\n        }\n  });\n\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * Work for data like [{name: ..., value: ...}, ...].\n *\n * @param {module:model/Series} seriesModel\n * @param {module:data/Source} source\n * @return {Object} encode Never be `null/undefined`.\n */\n\n\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = getDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\n\n  if (!datasetModel) {\n    return encode;\n  }\n\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n\n  if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  } // idxResult: {v, n}.\n\n\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = []; // 5 is an experience value.\n\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === BE_ORDINAL.Not; // [Strategy of idxRes0]: find the first BE_ORDINAL.Not as the value dim,\n      // and then find a name dim with the priority:\n      // \"BE_ORDINAL.Might|BE_ORDINAL.Must\" > \"other dim\" > \"the value dim itself\".\n\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== BE_ORDINAL.Not) {\n        return idxRes0;\n      } // [Strategy of idxRes1]: if idxRes0 not satisfied (that is, no BE_ORDINAL.Not),\n      // find the first BE_ORDINAL.Might as the value dim,\n      // and then find a name dim with the priority:\n      // \"other dim\" > \"the value dim itself\".\n      // That is for backward compat: number-like (e.g., `'3'`, `'55'`) can be\n      // treated as number.\n\n\n      if (!isPureNumber) {\n        if (guessResult === BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n\n  if (idxResult) {\n    encode.value = idxResult.v; // `potentialNameDimIndex` has highest priority.\n\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n; // By default, label use itemName in charts.\n    // So we dont set encodeLabel here.\n\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {BE_ORDINAL} guess result.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n// return {BE_ORDINAL}\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return BE_ORDINAL.Not;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n  var dimType;\n\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n\n    if (isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n\n  if (dimType != null) {\n    return dimType === 'ordinal' ? BE_ORDINAL.Must : BE_ORDINAL.Not;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return BE_ORDINAL.Not;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return BE_ORDINAL.Not;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    var beStr = isString(val); // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? BE_ORDINAL.Might : BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return BE_ORDINAL.Must;\n    }\n  }\n\n  return BE_ORDINAL.Not;\n}\n\nexports.BE_ORDINAL = BE_ORDINAL;\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\nexports.guessOrdinal = guessOrdinal;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar _getPixelPrecision = _number.getPixelPrecision;\nvar round = _number.round;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar _calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function Axis(dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function contain(coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this.scale.contain(data);\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function getExtent() {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function getPixelPrecision(dataExtent) {\n    return _getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function setExtent(start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function dataToCoord(data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function coordToData(coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function pointToData(point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {Model} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function getTicksCoords(opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Array.<Object>>} [{ coord: ..., tickValue: ...}]\n   */\n  getMinorTicksCoords: function getMinorTicksCoords() {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\n\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\n      return map(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function getViewLabels() {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function getLabelModel() {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function getTickModel() {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function getBandWidth() {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function calculateCategoryInterval() {\n    return _calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift * diffSize\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unecessary tick added.\n    a = round(a);\n    b = round(b);\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar features = {};\n\nfunction register(name, ctor) {\n  features[name] = ctor;\n}\n\nfunction get(name) {\n  return features[name];\n}\n\nexports.register = register;\nexports.get = get;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\n\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function count() {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function getItem(idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function count() {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function getItem(idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function appendData() {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function count() {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function getItem(idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function appendData(newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function count() {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function getItem(idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function appendData(newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function clean() {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function objectRows(dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function original(dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function objectRows(dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function original(dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function typedArray(dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function add(func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function update(func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function remove(func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function execute() {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.shift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar completeDimensions = require(\"./completeDimensions\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @param {Function} [opt.encodeDefaulter] Make default encode if user not specified.\n * @return {Array.<Object>} dimensionsInfo\n */\n\n\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    encodeDefaulter: opt.encodeDefaulter,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as axisHelper from './axisHelper';\n\n\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function getMin(origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function getMax(origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function getNeedCrossZero() {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function setRange(rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function resetRange() {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\n\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\n\n\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function mergeDefaultAndTheme(option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function optionUpdated() {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function getCategories(rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function getOrdinalMeta() {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n\nvar geoJSONLoader = require(\"./geoJSONLoader\");\n\nvar geoSVGLoader = require(\"./geoSVGLoader\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar loaders = {\n  geoJSON: geoJSONLoader,\n  svg: geoSVGLoader\n};\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} nameMap\n   * @param {string} nameProperty\n   * @return {Object} source {regions, regionsMap, nameCoordMap, boundingRect}\n   */\n  load: function load(mapName, nameMap, nameProperty) {\n    var regions = [];\n    var regionsMap = createHashMap();\n    var nameCoordMap = createHashMap();\n    var boundingRect;\n    var mapRecords = retrieveMap(mapName);\n    each(mapRecords, function (record) {\n      var singleSource = loaders[record.type].load(mapName, record, nameProperty);\n      each(singleSource.regions, function (region) {\n        var regionName = region.name; // Try use the alias in geoNameMap\n\n        if (nameMap && nameMap.hasOwnProperty(regionName)) {\n          region = region.cloneShallow(regionName = nameMap[regionName]);\n        }\n\n        regions.push(region);\n        regionsMap.set(regionName, region);\n        nameCoordMap.set(regionName, region.center);\n      });\n      var rect = singleSource.boundingRect;\n\n      if (rect) {\n        boundingRect ? boundingRect.union(rect) : boundingRect = rect.clone();\n      }\n    });\n    return {\n      regions: regions,\n      regionsMap: regionsMap,\n      nameCoordMap: nameCoordMap,\n      // FIXME Always return new ?\n      boundingRect: boundingRect || new BoundingRect(0, 0, 0, 0)\n    };\n  },\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   * @return {Array.<module:zrender/Element>} Roots.\n   */\n  makeGraphic: makeInvoker('makeGraphic'),\n\n  /**\n   * @param {string} mapName\n   * @param {string} hostKey For cache.\n   */\n  removeGraphic: makeInvoker('removeGraphic')\n};\n\nfunction makeInvoker(methodName) {\n  return function (mapName, hostKey) {\n    var mapRecords = retrieveMap(mapName);\n    var results = [];\n    each(mapRecords, function (record) {\n      var method = loaders[record.type][methodName];\n      method && results.push(method(mapName, record, hostKey));\n    });\n    return results;\n  };\n}\n\nfunction mapNotExistsError(mapName) {}\n\nfunction retrieveMap(mapName) {\n  var mapRecords = mapDataStorage.retrieveMap(mapName) || [];\n  return mapRecords;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function registerMap(mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function retrieveMap(mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function geoJSON(record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function svg(record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\n\n\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Geo = require(\"./Geo\");\n\nvar layout = require(\"../../util/layout\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n\nvar mapDataStorage = require(\"./mapDataStorage\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Resize method bound to the geo\n * @param {module:echarts/coord/geo/GeoModel|module:echarts/chart/map/MapModel} geoModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizeGeo(geoModel, api) {\n  var boundingCoords = geoModel.get('boundingCoords');\n\n  if (boundingCoords != null) {\n    var leftTop = boundingCoords[0];\n    var rightBottom = boundingCoords[1];\n\n    if (isNaN(leftTop[0]) || isNaN(leftTop[1]) || isNaN(rightBottom[0]) || isNaN(rightBottom[1])) {} else {\n      this.setBoundingRect(leftTop[0], leftTop[1], rightBottom[0] - leftTop[0], rightBottom[1] - leftTop[1]);\n    }\n  }\n\n  var rect = this.getBoundingRect();\n  var boxLayoutOption;\n  var center = geoModel.get('layoutCenter');\n  var size = geoModel.get('layoutSize');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var aspect = rect.width / rect.height * this.aspectScale;\n  var useCenterAndSize = false;\n\n  if (center && size) {\n    center = [numberUtil.parsePercent(center[0], viewWidth), numberUtil.parsePercent(center[1], viewHeight)];\n    size = numberUtil.parsePercent(size, Math.min(viewWidth, viewHeight));\n\n    if (!isNaN(center[0]) && !isNaN(center[1]) && !isNaN(size)) {\n      useCenterAndSize = true;\n    } else {}\n  }\n\n  var viewRect;\n\n  if (useCenterAndSize) {\n    var viewRect = {};\n\n    if (aspect > 1) {\n      // Width is same with size\n      viewRect.width = size;\n      viewRect.height = size / aspect;\n    } else {\n      viewRect.height = size;\n      viewRect.width = size * aspect;\n    }\n\n    viewRect.y = center[1] - viewRect.height / 2;\n    viewRect.x = center[0] - viewRect.width / 2;\n  } else {\n    // Use left/top/width/height\n    boxLayoutOption = geoModel.getBoxLayoutParams(); // 0.75 rate\n\n    boxLayoutOption.aspect = aspect;\n    viewRect = layout.getLayoutRect(boxLayoutOption, {\n      width: viewWidth,\n      height: viewHeight\n    });\n  }\n\n  this.setViewRect(viewRect.x, viewRect.y, viewRect.width, viewRect.height);\n  this.setCenter(geoModel.get('center'));\n  this.setZoom(geoModel.get('zoom'));\n}\n/**\n * @param {module:echarts/coord/Geo} geo\n * @param {module:echarts/model/Model} model\n * @inner\n */\n\n\nfunction setGeoCoords(geo, model) {\n  zrUtil.each(model.get('geoCoord'), function (geoCoord, name) {\n    geo.addGeoCoord(name, geoCoord);\n  });\n}\n\nvar geoCreator = {\n  // For deciding which dimensions to use when creating list data\n  dimensions: Geo.prototype.dimensions,\n  create: function create(ecModel, api) {\n    var geoList = []; // FIXME Create each time may be slow\n\n    ecModel.eachComponent('geo', function (geoModel, idx) {\n      var name = geoModel.get('map');\n      var aspectScale = geoModel.get('aspectScale');\n      var invertLongitute = true;\n      var mapRecords = mapDataStorage.retrieveMap(name);\n\n      if (mapRecords && mapRecords[0] && mapRecords[0].type === 'svg') {\n        aspectScale == null && (aspectScale = 1);\n        invertLongitute = false;\n      } else {\n        aspectScale == null && (aspectScale = 0.75);\n      }\n\n      var geo = new Geo(name + idx, name, geoModel.get('nameMap'), invertLongitute);\n      geo.aspectScale = aspectScale;\n      geo.zoomLimit = geoModel.get('scaleLimit');\n      geoList.push(geo);\n      setGeoCoords(geo, geoModel);\n      geoModel.coordinateSystem = geo;\n      geo.model = geoModel; // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.resize(geoModel, api);\n    });\n    ecModel.eachSeries(function (seriesModel) {\n      var coordSys = seriesModel.get('coordinateSystem');\n\n      if (coordSys === 'geo') {\n        var geoIndex = seriesModel.get('geoIndex') || 0;\n        seriesModel.coordinateSystem = geoList[geoIndex];\n      }\n    }); // If has map series\n\n    var mapModelGroupBySeries = {};\n    ecModel.eachSeriesByType('map', function (seriesModel) {\n      if (!seriesModel.getHostGeoModel()) {\n        var mapType = seriesModel.getMapType();\n        mapModelGroupBySeries[mapType] = mapModelGroupBySeries[mapType] || [];\n        mapModelGroupBySeries[mapType].push(seriesModel);\n      }\n    });\n    zrUtil.each(mapModelGroupBySeries, function (mapSeries, mapType) {\n      var nameMapList = zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('nameMap');\n      });\n      var geo = new Geo(mapType, mapType, zrUtil.mergeAll(nameMapList));\n      geo.zoomLimit = zrUtil.retrieve.apply(null, zrUtil.map(mapSeries, function (singleMapSeries) {\n        return singleMapSeries.get('scaleLimit');\n      }));\n      geoList.push(geo); // Inject resize method\n\n      geo.resize = resizeGeo;\n      geo.aspectScale = mapSeries[0].get('aspectScale');\n      geo.resize(mapSeries[0], api);\n      zrUtil.each(mapSeries, function (singleMapSeries) {\n        singleMapSeries.coordinateSystem = geo;\n        setGeoCoords(geo, singleMapSeries);\n      });\n    });\n    return geoList;\n  },\n\n  /**\n   * Fill given regions array\n   * @param  {Array.<Object>} originRegionArr\n   * @param  {string} mapName\n   * @param  {Object} [nameMap]\n   * @return {Array}\n   */\n  getFilledRegions: function getFilledRegions(originRegionArr, mapName, nameMap) {\n    // Not use the original\n    var regionsArr = (originRegionArr || []).slice();\n    var dataNameMap = zrUtil.createHashMap();\n\n    for (var i = 0; i < regionsArr.length; i++) {\n      dataNameMap.set(regionsArr[i].name, regionsArr[i]);\n    }\n\n    var source = geoSourceManager.load(mapName, nameMap);\n    zrUtil.each(source.regions, function (region) {\n      var name = region.name;\n      !dataNameMap.get(name) && regionsArr.push({\n        name: name\n      });\n    });\n    return regionsArr;\n  }\n};\necharts.registerCoordinateSystem('geo', geoCreator);\nvar _default = geoCreator;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Simple view coordinate system\n * Mapping given x, y to transformd view x, y\n */\n\n\nvar v2ApplyTransform = vector.applyTransform; // Dummy transform node\n\nfunction TransformDummy() {\n  Transformable.call(this);\n}\n\nzrUtil.mixin(TransformDummy, Transformable);\n\nfunction View(name) {\n  /**\n   * @type {string}\n   */\n  this.name = name;\n  /**\n   * @type {Object}\n   */\n\n  this.zoomLimit;\n  Transformable.call(this);\n  this._roamTransformable = new TransformDummy();\n  this._rawTransformable = new TransformDummy();\n  this._center;\n  this._zoom;\n}\n\nView.prototype = {\n  constructor: View,\n  type: 'view',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Set bounding rect\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  // PENDING to getRect\n  setBoundingRect: function setBoundingRect(x, y, width, height) {\n    this._rect = new BoundingRect(x, y, width, height);\n    return this._rect;\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  // PENDING to getRect\n  getBoundingRect: function getBoundingRect() {\n    return this._rect;\n  },\n\n  /**\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  setViewRect: function setViewRect(x, y, width, height) {\n    this.transformTo(x, y, width, height);\n    this._viewRect = new BoundingRect(x, y, width, height);\n  },\n\n  /**\n   * Transformed to particular position and size\n   * @param {number} x\n   * @param {number} y\n   * @param {number} width\n   * @param {number} height\n   */\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var rawTransform = this._rawTransformable;\n    rawTransform.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransform.decomposeTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * Set center of view\n   * @param {Array.<number>} [centerCoord]\n   */\n  setCenter: function setCenter(centerCoord) {\n    if (!centerCoord) {\n      return;\n    }\n\n    this._center = centerCoord;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * @param {number} zoom\n   */\n  setZoom: function setZoom(zoom) {\n    zoom = zoom || 1;\n    var zoomLimit = this.zoomLimit;\n\n    if (zoomLimit) {\n      if (zoomLimit.max != null) {\n        zoom = Math.min(zoomLimit.max, zoom);\n      }\n\n      if (zoomLimit.min != null) {\n        zoom = Math.max(zoomLimit.min, zoom);\n      }\n    }\n\n    this._zoom = zoom;\n\n    this._updateCenterAndZoom();\n  },\n\n  /**\n   * Get default center without roam\n   */\n  getDefaultCenter: function getDefaultCenter() {\n    // Rect before any transform\n    var rawRect = this.getBoundingRect();\n    var cx = rawRect.x + rawRect.width / 2;\n    var cy = rawRect.y + rawRect.height / 2;\n    return [cx, cy];\n  },\n  getCenter: function getCenter() {\n    return this._center || this.getDefaultCenter();\n  },\n  getZoom: function getZoom() {\n    return this._zoom || 1;\n  },\n\n  /**\n   * @return {Array.<number}\n   */\n  getRoamTransform: function getRoamTransform() {\n    return this._roamTransformable.getLocalTransform();\n  },\n\n  /**\n   * Remove roam\n   */\n  _updateCenterAndZoom: function _updateCenterAndZoom() {\n    // Must update after view transform updated\n    var rawTransformMatrix = this._rawTransformable.getLocalTransform();\n\n    var roamTransform = this._roamTransformable;\n    var defaultCenter = this.getDefaultCenter();\n    var center = this.getCenter();\n    var zoom = this.getZoom();\n    center = vector.applyTransform([], center, rawTransformMatrix);\n    defaultCenter = vector.applyTransform([], defaultCenter, rawTransformMatrix);\n    roamTransform.origin = center;\n    roamTransform.position = [defaultCenter[0] - center[0], defaultCenter[1] - center[1]];\n    roamTransform.scale = [zoom, zoom];\n\n    this._updateTransform();\n  },\n\n  /**\n   * Update transform from roam and mapLocation\n   * @private\n   */\n  _updateTransform: function _updateTransform() {\n    var roamTransformable = this._roamTransformable;\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.parent = roamTransformable;\n    roamTransformable.updateTransform();\n    rawTransformable.updateTransform();\n    matrix.copy(this.transform || (this.transform = []), rawTransformable.transform || matrix.create());\n    this._rawTransform = rawTransformable.getLocalTransform();\n    this.invTransform = this.invTransform || [];\n    matrix.invert(this.invTransform, this.transform);\n    this.decomposeTransform();\n  },\n  getTransformInfo: function getTransformInfo() {\n    var roamTransform = this._roamTransformable.transform;\n    var rawTransformable = this._rawTransformable;\n    return {\n      roamTransform: roamTransform ? zrUtil.slice(roamTransform) : matrix.create(),\n      rawScale: zrUtil.slice(rawTransformable.scale),\n      rawPosition: zrUtil.slice(rawTransformable.position)\n    };\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRect: function getViewRect() {\n    return this._viewRect;\n  },\n\n  /**\n   * Get view rect after roam transform\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getViewRectAfterRoam: function getViewRectAfterRoam() {\n    var rect = this.getBoundingRect().clone();\n    rect.applyTransform(this.transform);\n    return rect;\n  },\n\n  /**\n   * Convert a single (lon, lat) data item to (x, y) point.\n   * @param {Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, noRoam, out) {\n    var transform = noRoam ? this._rawTransform : this.transform;\n    out = out || [];\n    return transform ? v2ApplyTransform(out, data, transform) : vector.copy(out, data);\n  },\n\n  /**\n   * Convert a (x, y) point to (lon, lat) data\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point) {\n    var invTransform = this.invTransform;\n    return invTransform ? v2ApplyTransform([], point, invTransform) : [point[0], point[1]];\n  },\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData'),\n\n  /**\n   * @implements\n   * see {module:echarts/CoodinateSystem}\n   */\n  containPoint: function containPoint(point) {\n    return this.getViewRectAfterRoam().contain(point[0], point[1]);\n  }\n  /**\n   * @return {number}\n   */\n  // getScalarScale: function () {\n  //     // Use determinant square root of transform to mutiply scalar\n  //     var m = this.transform;\n  //     var det = Math.sqrt(Math.abs(m[0] * m[3] - m[2] * m[1]));\n  //     return det;\n  // }\n\n};\nzrUtil.mixin(View, Transformable);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var seriesModel = finder.seriesModel;\n  var coordSys = seriesModel ? seriesModel.coordinateSystem : null; // e.g., graph.\n\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = View;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar linkList = require(\"./helper/linkList\");\n\nvar List = require(\"./List\");\n\nvar createDimensions = require(\"./helper/createDimensions\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n *\n * @module echarts/data/Tree\n */\n\n/**\n * @constructor module:echarts/data/Tree~TreeNode\n * @param {string} name\n * @param {module:echarts/data/Tree} hostTree\n */\n\n\nvar TreeNode = function TreeNode(name, hostTree) {\n  /**\n   * @type {string}\n   */\n  this.name = name || '';\n  /**\n   * Depth of node\n   *\n   * @type {number}\n   * @readOnly\n   */\n\n  this.depth = 0;\n  /**\n   * Height of the subtree rooted at this node.\n   * @type {number}\n   * @readOnly\n   */\n\n  this.height = 0;\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n\n  this.parentNode = null;\n  /**\n   * Reference to list item.\n   * Do not persistent dataIndex outside,\n   * besause it may be changed by list.\n   * If dataIndex -1,\n   * this node is logical deleted (filtered) in list.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.dataIndex = -1;\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @readOnly\n   */\n\n  this.children = [];\n  /**\n   * @type {Array.<module:echarts/data/Tree~TreeNode>}\n   * @pubilc\n   */\n\n  this.viewChildren = [];\n  /**\n   * @type {moduel:echarts/data/Tree}\n   * @readOnly\n   */\n\n  this.hostTree = hostTree;\n};\n\nTreeNode.prototype = {\n  constructor: TreeNode,\n\n  /**\n   * The node is removed.\n   * @return {boolean} is removed.\n   */\n  isRemoved: function isRemoved() {\n    return this.dataIndex < 0;\n  },\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb If in preorder and return false,\n   *                      its subtree will not be visited.\n   * @param {Object} [context]\n   */\n  eachNode: function eachNode(options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  },\n\n  /**\n   * Update depth and height of this subtree.\n   *\n   * @param  {number} depth\n   */\n  updateDepthAndHeight: function updateDepthAndHeight(depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  },\n\n  /**\n   * @param  {string} id\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeById: function getNodeById(id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~TreeNode} node\n   * @return {boolean}\n   */\n  contains: function contains(node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  },\n\n  /**\n   * @param {boolean} includeSelf Default false.\n   * @return {Array.<module:echarts/data/Tree~TreeNode>} order: [root, child, grandchild, ...]\n   */\n  getAncestors: function getAncestors(includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  },\n\n  /**\n   * @param {string|Array=} [dimension='value'] Default 'value'. can be 0, 1, 2, 3\n   * @return {number} Value.\n   */\n  getValue: function getValue(dimension) {\n    var data = this.hostTree.data;\n    return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n  },\n\n  /**\n   * @param {Object} layout\n   * @param {boolean=} [merge=false]\n   */\n  setLayout: function setLayout(layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  },\n\n  /**\n   * @return {Object} layout\n   */\n  getLayout: function getLayout() {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    var levelModel = this.getLevelModel(); // FIXME: refactor levelModel to \"beforeLink\", and remove levelModel here.\n\n    if (levelModel) {\n      return itemModel.getModel(path, levelModel.getModel(path));\n    } else {\n      return itemModel.getModel(path);\n    }\n  },\n\n  /**\n   * @return {module:echarts/model/Model}\n   */\n  getLevelModel: function getLevelModel() {\n    return (this.hostTree.levelModels || [])[this.depth];\n  },\n\n  /**\n   * @example\n   *  setItemVisual('color', color);\n   *  setItemVisual({\n   *      'color': color\n   *  });\n   */\n  setVisual: function setVisual(key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  },\n\n  /**\n   * Get item visual\n   */\n  getVisual: function getVisual(key, ignoreParent) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key, ignoreParent);\n  },\n\n  /**\n   * @public\n   * @return {number}\n   */\n  getRawIndex: function getRawIndex() {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  },\n\n  /**\n   * @public\n   * @return {string}\n   */\n  getId: function getId() {\n    return this.hostTree.data.getId(this.dataIndex);\n  },\n\n  /**\n   * if this is an ancestor of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is ancestor\n   */\n  isAncestorOf: function isAncestorOf(node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  },\n\n  /**\n   * if this is an descendant of another node\n   *\n   * @public\n   * @param {TreeNode} node another node\n   * @return {boolean} if is descendant\n   */\n  isDescendantOf: function isDescendantOf(node) {\n    return node !== this && node.isAncestorOf(this);\n  }\n};\n/**\n * @constructor\n * @alias module:echarts/data/Tree\n * @param {module:echarts/model/Model} hostModel\n * @param {Array.<Object>} levelOptions\n */\n\nfunction Tree(hostModel, levelOptions) {\n  /**\n   * @type {module:echarts/data/Tree~TreeNode}\n   * @readOnly\n   */\n  this.root;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * Index of each item is the same as the raw index of coresponding list item.\n   * @private\n   * @type {Array.<module:echarts/data/Tree~TreeNode}\n   */\n\n  this._nodes = [];\n  /**\n   * @private\n   * @readOnly\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @private\n   * @readOnly\n   * @type {Array.<module:echarts/model/Model}\n   */\n\n  this.levelModels = zrUtil.map(levelOptions || [], function (levelDefine) {\n    return new Model(levelDefine, hostModel, hostModel.ecModel);\n  });\n}\n\nTree.prototype = {\n  constructor: Tree,\n  type: 'tree',\n\n  /**\n   * Travel this subtree (include this node).\n   * Usage:\n   *    node.eachNode(function () { ... }); // preorder\n   *    node.eachNode('preorder', function () { ... }); // preorder\n   *    node.eachNode('postorder', function () { ... }); // postorder\n   *    node.eachNode(\n   *        {order: 'postorder', attr: 'viewChildren'},\n   *        function () { ... }\n   *    ); // postorder\n   *\n   * @param {(Object|string)} options If string, means order.\n   * @param {string=} options.order 'preorder' or 'postorder'\n   * @param {string=} options.attr 'children' or 'viewChildren'\n   * @param {Function} cb\n   * @param {Object}   [context]\n   */\n  eachNode: function eachNode(options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  },\n\n  /**\n   * @param {number} dataIndex\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByDataIndex: function getNodeByDataIndex(dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/data/Tree~TreeNode}\n   */\n  getNodeByName: function getNodeByName(name) {\n    return this.root.getNodeByName(name);\n  },\n\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n  update: function update() {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  },\n\n  /**\n   * Clear all layouts\n   */\n  clearLayouts: function clearLayouts() {\n    this.data.clearItemLayouts();\n  }\n};\n/**\n * data node format:\n * {\n *     name: ...\n *     value: ...\n *     children: [\n *         {\n *             name: ...\n *             value: ...\n *             children: ...\n *         },\n *         ...\n *     ]\n * }\n *\n * @static\n * @param {Object} dataRoot Root node.\n * @param {module:echarts/model/Model} hostModel\n * @param {Object} treeOptions\n * @param {Array.<Object>} treeOptions.levels\n * @return module:echarts/data/Tree\n */\n\nTree.createTree = function (dataRoot, hostModel, treeOptions, beforeLink) {\n  var tree = new Tree(hostModel, treeOptions && treeOptions.levels);\n  var listData = [];\n  var dimMax = 1;\n  buildHierarchy(dataRoot);\n\n  function buildHierarchy(dataNode, parentNode) {\n    var value = dataNode.value;\n    dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n    listData.push(dataNode);\n    var node = new TreeNode(dataNode.name, tree);\n    parentNode ? addChild(node, parentNode) : tree.root = node;\n\n    tree._nodes.push(node);\n\n    var children = dataNode.children;\n\n    if (children) {\n      for (var i = 0; i < children.length; i++) {\n        buildHierarchy(children[i], node);\n      }\n    }\n  }\n\n  tree.root.updateDepthAndHeight(0);\n  var dimensionsInfo = createDimensions(listData, {\n    coordDimensions: ['value'],\n    dimensionsCount: dimMax\n  });\n  var list = new List(dimensionsInfo, hostModel);\n  list.initData(listData);\n  beforeLink && beforeLink(list);\n  linkList({\n    mainData: list,\n    struct: tree,\n    structAttr: 'tree'\n  });\n  tree.update();\n  return tree;\n};\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n *\n * @param {(module:echarts/data/Tree~TreeNode|Object)} child\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nvar _default = Tree;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Polar = require(\"./Polar\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./PolarModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Axis scale\n\n/**\n * Resize method bound to the polar\n * @param {module:echarts/coord/polar/PolarModel} polarModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction resizePolar(polar, polarModel, api) {\n  var center = polarModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  polar.cx = parsePercent(center[0], width);\n  polar.cy = parsePercent(center[1], height);\n  var radiusAxis = polar.getRadiusAxis();\n  var size = Math.min(width, height) / 2;\n  var radius = polarModel.get('radius');\n\n  if (radius == null) {\n    radius = [0, '100%'];\n  } else if (!zrUtil.isArray(radius)) {\n    // r0 = 0\n    radius = [0, radius];\n  }\n\n  radius = [parsePercent(radius[0], size), parsePercent(radius[1], size)];\n  radiusAxis.inverse ? radiusAxis.setExtent(radius[1], radius[0]) : radiusAxis.setExtent(radius[0], radius[1]);\n}\n/**\n * Update polar\n */\n\n\nfunction updatePolarScale(ecModel, api) {\n  var polar = this;\n  var angleAxis = polar.getAngleAxis();\n  var radiusAxis = polar.getRadiusAxis(); // Reset scale\n\n  angleAxis.scale.setExtent(Infinity, -Infinity);\n  radiusAxis.scale.setExtent(Infinity, -Infinity);\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.coordinateSystem === polar) {\n      var data = seriesModel.getData();\n      zrUtil.each(data.mapDimension('radius', true), function (dim) {\n        radiusAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n      zrUtil.each(data.mapDimension('angle', true), function (dim) {\n        angleAxis.scale.unionExtentFromData(data, getStackedDimension(data, dim));\n      });\n    }\n  });\n  niceScaleExtent(angleAxis.scale, angleAxis.model);\n  niceScaleExtent(radiusAxis.scale, radiusAxis.model); // Fix extent of category angle axis\n\n  if (angleAxis.type === 'category' && !angleAxis.onBand) {\n    var extent = angleAxis.getExtent();\n    var diff = 360 / angleAxis.scale.count();\n    angleAxis.inverse ? extent[1] += diff : extent[1] -= diff;\n    angleAxis.setExtent(extent[0], extent[1]);\n  }\n}\n/**\n * Set common axis properties\n * @param {module:echarts/coord/polar/AngleAxis|module:echarts/coord/polar/RadiusAxis}\n * @param {module:echarts/coord/polar/AxisModel}\n * @inner\n */\n\n\nfunction setAxis(axis, axisModel) {\n  axis.type = axisModel.get('type');\n  axis.scale = createScaleByModel(axisModel);\n  axis.onBand = axisModel.get('boundaryGap') && axis.type === 'category';\n  axis.inverse = axisModel.get('inverse');\n\n  if (axisModel.mainType === 'angleAxis') {\n    axis.inverse ^= axisModel.get('clockwise');\n    var startAngle = axisModel.get('startAngle');\n    axis.setExtent(startAngle, startAngle + (axis.inverse ? -360 : 360));\n  } // Inject axis instance\n\n\n  axisModel.axis = axis;\n  axis.model = axisModel;\n}\n\nvar polarCreator = {\n  dimensions: Polar.prototype.dimensions,\n  create: function create(ecModel, api) {\n    var polarList = [];\n    ecModel.eachComponent('polar', function (polarModel, idx) {\n      var polar = new Polar(idx); // Inject resize and update method\n\n      polar.update = updatePolarScale;\n      var radiusAxis = polar.getRadiusAxis();\n      var angleAxis = polar.getAngleAxis();\n      var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n      var angleAxisModel = polarModel.findAxisModel('angleAxis');\n      setAxis(radiusAxis, radiusAxisModel);\n      setAxis(angleAxis, angleAxisModel);\n      resizePolar(polar, polarModel, api);\n      polarList.push(polar);\n      polarModel.coordinateSystem = polar;\n      polar.model = polarModel;\n    }); // Inject coordinateSystem to series\n\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.get('coordinateSystem') === 'polar') {\n        var polarModel = ecModel.queryComponents({\n          mainType: 'polar',\n          index: seriesModel.get('polarIndex'),\n          id: seriesModel.get('polarId')\n        })[0];\n        seriesModel.coordinateSystem = polarModel.coordinateSystem;\n      }\n    });\n    return polarList;\n  }\n};\nCoordinateSystem.register('polar', polarCreator);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @class\n * @param {Object|DataDimensionInfo} [opt] All of the fields will be shallow copied.\n */\n\n\nfunction DataDimensionInfo(opt) {\n  if (opt != null) {\n    zrUtil.extend(this, opt);\n  }\n  /**\n   * Dimension name.\n   * Mandatory.\n   * @type {string}\n   */\n  // this.name;\n\n  /**\n   * The origin name in dimsDef, see source helper.\n   * If displayName given, the tooltip will displayed vertically.\n   * Optional.\n   * @type {string}\n   */\n  // this.displayName;\n\n  /**\n   * Which coordSys dimension this dimension mapped to.\n   * A `coordDim` can be a \"coordSysDim\" that the coordSys required\n   * (for example, an item in `coordSysDims` of `model/referHelper#CoordSysInfo`),\n   * or an generated \"extra coord name\" if does not mapped to any \"coordSysDim\"\n   * (That is determined by whether `isExtraCoord` is `true`).\n   * Mandatory.\n   * @type {string}\n   */\n  // this.coordDim;\n\n  /**\n   * The index of this dimension in `series.encode[coordDim]`.\n   * Mandatory.\n   * @type {number}\n   */\n  // this.coordDimIndex;\n\n  /**\n   * Dimension type. The enumerable values are the key of\n   * `dataCtors` of `data/List`.\n   * Optional.\n   * @type {string}\n   */\n  // this.type;\n\n  /**\n   * This index of this dimension info in `data/List#_dimensionInfos`.\n   * Mandatory after added to `data/List`.\n   * @type {number}\n   */\n  // this.index;\n\n  /**\n   * The format of `otherDims` is:\n   * ```js\n   * {\n   *     tooltip: number optional,\n   *     label: number optional,\n   *     itemName: number optional,\n   *     seriesName: number optional,\n   * }\n   * ```\n   *\n   * A `series.encode` can specified these fields:\n   * ```js\n   * encode: {\n   *     // \"3, 1, 5\" is the index of data dimension.\n   *     tooltip: [3, 1, 5],\n   *     label: [0, 3],\n   *     ...\n   * }\n   * ```\n   * `otherDims` is the parse result of the `series.encode` above, like:\n   * ```js\n   * // Suppose the index of this data dimension is `3`.\n   * this.otherDims = {\n   *     // `3` is at the index `0` of the `encode.tooltip`\n   *     tooltip: 0,\n   *     // `3` is at the index `1` of the `encode.tooltip`\n   *     label: 1\n   * };\n   * ```\n   *\n   * This prop should never be `null`/`undefined` after initialized.\n   * @type {Object}\n   */\n\n\n  this.otherDims = {};\n  /**\n   * Be `true` if this dimension is not mapped to any \"coordSysDim\" that the\n   * \"coordSys\" required.\n   * Mandatory.\n   * @type {boolean}\n   */\n  // this.isExtraCoord;\n\n  /**\n   * @type {module:data/OrdinalMeta}\n   */\n  // this.ordinalMeta;\n\n  /**\n   * Whether to create inverted indices.\n   * @type {boolean}\n   */\n  // this.createInvertedIndices;\n}\n\n;\nvar _default = DataDimensionInfo;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\nvar BE_ORDINAL = _sourceHelper.BE_ORDINAL;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\nvar DataDimensionInfo = require(\"../DataDimensionInfo\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * This method builds the relationship between:\n * + \"what the coord sys or series requires (see `sysDims`)\",\n * + \"what the user defines (in `encode` and `dimensions`, see `opt.dimsDef` and `opt.encodeDef`)\"\n * + \"what the data source provids (see `source`)\".\n *\n * Some guess strategy will be adapted if user does not define something.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {Function} [opt.encodeDefaulter] Called if no `opt.encodeDef` exists.\n *      If not specified, auto find the next available data dim.\n *      param source {module:data/Source}\n *      param dimCount {number}\n *      return {Object} encode Never be `null/undefined`.\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *      If not specified, extra dim names will be:\n *      'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *      If `generateCoordCount` specified, the generated dim names will be:\n *      `generateCoord` + 0, `generateCoord` + 1, ...\n *      can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<module:data/DataDimensionInfo>}\n */\n\n\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = new DataDimensionInfo(); // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  }\n\n  var encodeDef = opt.encodeDef;\n\n  if (!encodeDef && opt.encodeDefaulter) {\n    encodeDef = opt.encodeDefaulter(source, dimCount);\n  }\n\n  encodeDef = createHashMap(encodeDef); // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\n      encodeDef.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || new DataDimensionInfo();\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && (guessOrdinal(source, resultDimIdx, resultItem.name) === BE_ORDINAL.Must // Consider the case:\n    // {\n    //    dataset: {source: [\n    //        ['2001', 123],\n    //        ['2002', 456],\n    //        ...\n    //        ['The others', 987],\n    //    ]},\n    //    series: {type: 'pie'}\n    // }\n    // The first colum should better be treated as a \"ordinal\" although it\n    // might not able to be detected as an \"ordinal\" by `guessOrdinal`.\n    || resultItem.isExtraCoord && (resultItem.otherDims.itemName != null || resultItem.otherDims.seriesName != null))) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\n\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\n\n\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @param {string} nameProperty\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson, nameProperty) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties[nameProperty || 'name'], geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\n\n\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function getBoundingRect() {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function contain(coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function cloneShallow(name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption() {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function restoreData() {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5,\n  // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n  minorTick: {\n    // Minor tick, not available for cateogry axis.\n    show: false,\n    // Split number of minor ticks. The value should be in range of (0, 100)\n    splitNumber: 5,\n    // Lenght of minor tick\n    length: 3,\n    // Same inside with axisTick\n    // Line style\n    lineStyle: {// Default to be same with axisTick\n    }\n  },\n  minorSplitLine: {\n    show: false,\n    lineStyle: {\n      color: '#eee',\n      width: 1\n    }\n  }\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\n\n\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Link lists and struct (graph or tree)\n */\n\n\nvar each = zrUtil.each;\nvar DATAS = '\\0__link_datas';\nvar MAIN_DATA = '\\0__link_mainData'; // Caution:\n// In most case, either list or its shallow clones (see list.cloneShallow)\n// is active in echarts process. So considering heap memory consumption,\n// we do not clone tree or graph, but share them among list and its shallow clones.\n// But in some rare case, we have to keep old list (like do animation in chart). So\n// please take care that both the old list and the new list share the same tree/graph.\n\n/**\n * @param {Object} opt\n * @param {module:echarts/data/List} opt.mainData\n * @param {Object} [opt.struct] For example, instance of Graph or Tree.\n * @param {string} [opt.structAttr] designation: list[structAttr] = struct;\n * @param {Object} [opt.datas] {dataType: data},\n *                 like: {node: nodeList, edge: edgeList}.\n *                 Should contain mainData.\n * @param {Object} [opt.datasAttr] {dataType: attr},\n *                 designation: struct[datasAttr[dataType]] = list;\n */\n\nfunction linkList(opt) {\n  var mainData = opt.mainData;\n  var datas = opt.datas;\n\n  if (!datas) {\n    datas = {\n      main: mainData\n    };\n    opt.datasAttr = {\n      main: 'data'\n    };\n  }\n\n  opt.datas = opt.mainData = null;\n  linkAll(mainData, datas, opt); // Porxy data original methods.\n\n  each(datas, function (data) {\n    each(mainData.TRANSFERABLE_METHODS, function (methodName) {\n      data.wrapMethod(methodName, zrUtil.curry(transferInjection, opt));\n    });\n  }); // Beyond transfer, additional features should be added to `cloneShallow`.\n\n  mainData.wrapMethod('cloneShallow', zrUtil.curry(cloneShallowInjection, opt)); // Only mainData trigger change, because struct.update may trigger\n  // another changable methods, which may bring about dead lock.\n\n  each(mainData.CHANGABLE_METHODS, function (methodName) {\n    mainData.wrapMethod(methodName, zrUtil.curry(changeInjection, opt));\n  }); // Make sure datas contains mainData.\n\n  zrUtil.assert(datas[mainData.dataType] === mainData);\n}\n\nfunction transferInjection(opt, res) {\n  if (isMainData(this)) {\n    // Transfer datas to new main data.\n    var datas = zrUtil.extend({}, this[DATAS]);\n    datas[this.dataType] = res;\n    linkAll(res, datas, opt);\n  } else {\n    // Modify the reference in main data to point newData.\n    linkSingle(res, this.dataType, this[MAIN_DATA], opt);\n  }\n\n  return res;\n}\n\nfunction changeInjection(opt, res) {\n  opt.struct && opt.struct.update(this);\n  return res;\n}\n\nfunction cloneShallowInjection(opt, res) {\n  // cloneShallow, which brings about some fragilities, may be inappropriate\n  // to be exposed as an API. So for implementation simplicity we can make\n  // the restriction that cloneShallow of not-mainData should not be invoked\n  // outside, but only be invoked here.\n  each(res[DATAS], function (data, dataType) {\n    data !== res && linkSingle(data.cloneShallow(), dataType, res, opt);\n  });\n  return res;\n}\n/**\n * Supplement method to List.\n *\n * @public\n * @param {string} [dataType] If not specified, return mainData.\n * @return {module:echarts/data/List}\n */\n\n\nfunction getLinkedData(dataType) {\n  var mainData = this[MAIN_DATA];\n  return dataType == null || mainData == null ? mainData : mainData[DATAS][dataType];\n}\n\nfunction isMainData(data) {\n  return data[MAIN_DATA] === data;\n}\n\nfunction linkAll(mainData, datas, opt) {\n  mainData[DATAS] = {};\n  each(datas, function (data, dataType) {\n    linkSingle(data, dataType, mainData, opt);\n  });\n}\n\nfunction linkSingle(data, dataType, mainData, opt) {\n  mainData[DATAS][dataType] = data;\n  data[MAIN_DATA] = mainData;\n  data.dataType = dataType;\n\n  if (opt.struct) {\n    data[opt.structAttr] = opt.struct;\n    opt.struct[opt.datasAttr[dataType]] = data;\n  } // Supplement method.\n\n\n  data.getLinkedData = getLinkedData;\n}\n\nvar _default = linkList;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Parallel = require(\"./Parallel\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel coordinate system creater.\n */\n\n\nfunction create(ecModel, api) {\n  var coordSysList = [];\n  ecModel.eachComponent('parallel', function (parallelModel, idx) {\n    var coordSys = new Parallel(parallelModel, ecModel, api);\n    coordSys.name = 'parallel_' + idx;\n    coordSys.resize(parallelModel, api);\n    parallelModel.coordinateSystem = coordSys;\n    coordSys.model = parallelModel;\n    coordSysList.push(coordSys);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'parallel') {\n      var parallelModel = ecModel.queryComponents({\n        mainType: 'parallel',\n        index: seriesModel.get('parallelIndex'),\n        id: seriesModel.get('parallelId')\n      })[0];\n      seriesModel.coordinateSystem = parallelModel.coordinateSystem;\n    }\n  });\n  return coordSysList;\n}\n\nCoordinateSystem.register('parallel', {\n  create: create\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\n\n\nfunction layout(axisModel, opt) {\n  opt = opt || {};\n  var single = axisModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var axisPosition = axis.position;\n  var orient = axis.orient;\n  var rect = single.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var positionMap = {\n    horizontal: {\n      top: rectBound[2],\n      bottom: rectBound[3]\n    },\n    vertical: {\n      left: rectBound[0],\n      right: rectBound[1]\n    }\n  };\n  layout.position = [orient === 'vertical' ? positionMap.vertical[axisPosition] : rectBound[0], orient === 'horizontal' ? positionMap.horizontal[axisPosition] : rectBound[3]];\n  var r = {\n    horizontal: 0,\n    vertical: 1\n  };\n  layout.rotation = Math.PI / 2 * r[orient];\n  var directionMap = {\n    top: -1,\n    bottom: 1,\n    right: 1,\n    left: -1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = directionMap[axisPosition];\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  }\n\n  var labelRotation = opt.rotate;\n  labelRotation == null && (labelRotation = axisModel.get('axisLabel.rotate'));\n  layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/ContinuousModel\");\n\nrequire(\"./visualMap/ContinuousView\");\n\nrequire(\"./visualMap/visualMapAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\n\nfunction _default(option) {\n  var visualMap = option && option.visualMap;\n\n  if (!zrUtil.isArray(visualMap)) {\n    visualMap = visualMap ? [visualMap] : [];\n  }\n\n  each(visualMap, function (opt) {\n    if (!opt) {\n      return;\n    } // rename splitList to pieces\n\n\n    if (has(opt, 'splitList') && !has(opt, 'pieces')) {\n      opt.pieces = opt.splitList;\n      delete opt.splitList;\n    }\n\n    var pieces = opt.pieces;\n\n    if (pieces && zrUtil.isArray(pieces)) {\n      each(pieces, function (piece) {\n        if (zrUtil.isObject(piece)) {\n          if (has(piece, 'start') && !has(piece, 'min')) {\n            piece.min = piece.start;\n          }\n\n          if (has(piece, 'end') && !has(piece, 'max')) {\n            piece.max = piece.end;\n          }\n        }\n      });\n    }\n  });\n}\n\nfunction has(obj, name) {\n  return obj && obj.hasOwnProperty && obj.hasOwnProperty(name);\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('visualMap', function (option) {\n  // Compatible with ec2, when splitNumber === 0, continuous visualMap will be used.\n  return !option.categories && (!(option.pieces ? option.pieces.length > 0 : option.splitNumber > 0) || option.calculable) ? 'continuous' : 'piecewise';\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar VISUAL_PRIORITY = echarts.PRIORITY.VISUAL.COMPONENT;\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var resetDefines = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      var pipelineContext = seriesModel.pipelineContext;\n\n      if (!visualMapModel.isTargetSeries(seriesModel) || pipelineContext && pipelineContext.large) {\n        return;\n      }\n\n      resetDefines.push(visualSolution.incrementalApplyVisual(visualMapModel.stateList, visualMapModel.targetVisuals, zrUtil.bind(visualMapModel.getValueState, visualMapModel), visualMapModel.getDataDimension(seriesModel.getData())));\n    });\n    return resetDefines;\n  }\n}); // Only support color.\n\necharts.registerVisual(VISUAL_PRIORITY, {\n  createOnAllSeries: true,\n  reset: function reset(seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var visualMetaList = [];\n    ecModel.eachComponent('visualMap', function (visualMapModel) {\n      if (visualMapModel.isTargetSeries(seriesModel)) {\n        var visualMeta = visualMapModel.getVisualMeta(zrUtil.bind(getColorVisual, null, seriesModel, visualMapModel)) || {\n          stops: [],\n          outerColors: []\n        };\n        var concreteDim = visualMapModel.getDataDimension(data);\n        var dimInfo = data.getDimensionInfo(concreteDim);\n\n        if (dimInfo != null) {\n          // visualMeta.dimension should be dimension index, but not concrete dimension.\n          visualMeta.dimension = dimInfo.index;\n          visualMetaList.push(visualMeta);\n        }\n      }\n    }); // console.log(JSON.stringify(visualMetaList.map(a => a.stops)));\n\n    seriesModel.getData().setVisual('visualMeta', visualMetaList);\n  }\n}); // FIXME\n// performance and export for heatmap?\n// value can be Infinity or -Infinity\n\nfunction getColorVisual(seriesModel, visualMapModel, value, valueState) {\n  var mappings = visualMapModel.targetVisuals[valueState];\n  var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n  var resultVisual = {\n    color: seriesModel.getData().getVisual('color') // default color.\n\n  };\n\n  for (var i = 0, len = visualTypes.length; i < len; i++) {\n    var type = visualTypes[i];\n    var mapping = mappings[type === 'opacity' ? '__alphaForOpacity' : type];\n    mapping && mapping.applyVisual(value, getVisual, setVisual);\n  }\n\n  return resultVisual.color;\n\n  function getVisual(key) {\n    return resultVisual[key];\n  }\n\n  function setVisual(key, value) {\n    resultVisual[key] = value;\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar visualDefault = require(\"../../visual/visualDefault\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar mapVisual = VisualMapping.mapVisual;\nvar eachVisual = VisualMapping.eachVisual;\nvar isArray = zrUtil.isArray;\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\nvar linearMap = numberUtil.linearMap;\nvar noop = zrUtil.noop;\nvar VisualMapModel = echarts.extendComponentModel({\n  type: 'visualMap',\n  dependencies: ['series'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  stateList: ['inRange', 'outOfRange'],\n\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  replacableOptionKeys: ['inRange', 'outOfRange', 'target', 'controller', 'color'],\n\n  /**\n   * [lowerBound, upperBound]\n   *\n   * @readOnly\n   * @type {Array.<number>}\n   */\n  dataBound: [-Infinity, Infinity],\n\n  /**\n   * @readOnly\n   * @type {string|Object}\n   */\n  layoutMode: {\n    type: 'box',\n    ignoreSize: true\n  },\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    zlevel: 0,\n    z: 4,\n    seriesIndex: 'all',\n    // 'all' or null/undefined: all series.\n    // A number or an array of number: the specified series.\n    // set min: 0, max: 200, only for campatible with ec2.\n    // In fact min max should not have default value.\n    min: 0,\n    // min value, must specified if pieces is not specified.\n    max: 200,\n    // max value, must specified if pieces is not specified.\n    dimension: null,\n    inRange: null,\n    // 'color', 'colorHue', 'colorSaturation', 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    outOfRange: null,\n    // 'color', 'colorHue', 'colorSaturation',\n    // 'colorLightness', 'colorAlpha',\n    // 'symbol', 'symbolSize'\n    left: 0,\n    // 'center' ¦ 'left' ¦ 'right' ¦ {number} (px)\n    right: null,\n    // The same as left.\n    top: null,\n    // 'top' ¦ 'bottom' ¦ 'center' ¦ {number} (px)\n    bottom: 0,\n    // The same as top.\n    itemWidth: null,\n    itemHeight: null,\n    inverse: false,\n    orient: 'vertical',\n    // 'horizontal' ¦ 'vertical'\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    // 值域边框颜色\n    contentColor: '#5793f3',\n    inactiveColor: '#aaa',\n    borderWidth: 0,\n    // 值域边框线宽，单位px，默认为0（无边框）\n    padding: 5,\n    // 值域内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    textGap: 10,\n    //\n    precision: 0,\n    // 小数精度，默认为0，无小数点\n    color: null,\n    //颜色（deprecated，兼容ec2，顺序同pieces，不同于inRange/outOfRange）\n    formatter: null,\n    text: null,\n    // 文本，如['高', '低']，兼容ec2，text[0]对应高值，text[1]对应低值\n    textStyle: {\n      color: '#333' // 值域文字颜色\n\n    }\n  },\n\n  /**\n   * @protected\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {Array.<number>}\n     */\n    this._dataExtent;\n    /**\n     * @readOnly\n     */\n\n    this.targetVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.controllerVisuals = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * [width, height]\n     * @readOnly\n     * @type {Array.<number>}\n     */\n\n    this.itemSize;\n    this.mergeDefaultAndTheme(option, ecModel);\n  },\n\n  /**\n   * @protected\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option; // FIXME\n    // necessary?\n    // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, this.replacableOptionKeys);\n    this.textStyleModel = this.getModel('textStyle');\n    this.resetItemSize();\n    this.completeVisualOption();\n  },\n\n  /**\n   * @protected\n   */\n  resetVisual: function resetVisual(supplementVisualOption) {\n    var stateList = this.stateList;\n    supplementVisualOption = zrUtil.bind(supplementVisualOption, this);\n    this.controllerVisuals = visualSolution.createVisualMappings(this.option.controller, stateList, supplementVisualOption);\n    this.targetVisuals = visualSolution.createVisualMappings(this.option.target, stateList, supplementVisualOption);\n  },\n\n  /**\n   * @protected\n   * @return {Array.<number>} An array of series indices.\n   */\n  getTargetSeriesIndices: function getTargetSeriesIndices() {\n    var optionSeriesIndex = this.option.seriesIndex;\n    var seriesIndices = [];\n\n    if (optionSeriesIndex == null || optionSeriesIndex === 'all') {\n      this.ecModel.eachSeries(function (seriesModel, index) {\n        seriesIndices.push(index);\n      });\n    } else {\n      seriesIndices = modelUtil.normalizeToArray(optionSeriesIndex);\n    }\n\n    return seriesIndices;\n  },\n\n  /**\n   * @public\n   */\n  eachTargetSeries: function eachTargetSeries(callback, context) {\n    zrUtil.each(this.getTargetSeriesIndices(), function (seriesIndex) {\n      callback.call(context, this.ecModel.getSeriesByIndex(seriesIndex));\n    }, this);\n  },\n\n  /**\n   * @pubilc\n   */\n  isTargetSeries: function isTargetSeries(seriesModel) {\n    var is = false;\n    this.eachTargetSeries(function (model) {\n      model === seriesModel && (is = true);\n    });\n    return is;\n  },\n\n  /**\n   * @example\n   * this.formatValueText(someVal); // format single numeric value to text.\n   * this.formatValueText(someVal, true); // format single category value to text.\n   * this.formatValueText([min, max]); // format numeric min-max to text.\n   * this.formatValueText([this.dataBound[0], max]); // using data lower bound.\n   * this.formatValueText([min, this.dataBound[1]]); // using data upper bound.\n   *\n   * @param {number|Array.<number>} value Real value, or this.dataBound[0 or 1].\n   * @param {boolean} [isCategory=false] Only available when value is number.\n   * @param {Array.<string>} edgeSymbols Open-close symbol when value is interval.\n   * @return {string}\n   * @protected\n   */\n  formatValueText: function formatValueText(value, isCategory, edgeSymbols) {\n    var option = this.option;\n    var precision = option.precision;\n    var dataBound = this.dataBound;\n    var formatter = option.formatter;\n    var isMinMax;\n    var textValue;\n    edgeSymbols = edgeSymbols || ['<', '>'];\n\n    if (zrUtil.isArray(value)) {\n      value = value.slice();\n      isMinMax = true;\n    }\n\n    textValue = isCategory ? value : isMinMax ? [toFixed(value[0]), toFixed(value[1])] : toFixed(value);\n\n    if (zrUtil.isString(formatter)) {\n      return formatter.replace('{value}', isMinMax ? textValue[0] : textValue).replace('{value2}', isMinMax ? textValue[1] : textValue);\n    } else if (zrUtil.isFunction(formatter)) {\n      return isMinMax ? formatter(value[0], value[1]) : formatter(value);\n    }\n\n    if (isMinMax) {\n      if (value[0] === dataBound[0]) {\n        return edgeSymbols[0] + ' ' + textValue[1];\n      } else if (value[1] === dataBound[1]) {\n        return edgeSymbols[1] + ' ' + textValue[0];\n      } else {\n        return textValue[0] + ' - ' + textValue[1];\n      }\n    } else {\n      // Format single value (includes category case).\n      return textValue;\n    }\n\n    function toFixed(val) {\n      return val === dataBound[0] ? 'min' : val === dataBound[1] ? 'max' : (+val).toFixed(Math.min(precision, 20));\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetExtent: function resetExtent() {\n    var thisOption = this.option; // Can not calculate data extent by data here.\n    // Because series and data may be modified in processing stage.\n    // So we do not support the feature \"auto min/max\".\n\n    var extent = asc([thisOption.min, thisOption.max]);\n    this._dataExtent = extent;\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/data/List} list\n   * @return {string} Concrete dimention. If return null/undefined,\n   *                  no dimension used.\n   */\n  getDataDimension: function getDataDimension(list) {\n    var optDim = this.option.dimension;\n    var listDimensions = list.dimensions;\n\n    if (optDim == null && !listDimensions.length) {\n      return;\n    }\n\n    if (optDim != null) {\n      return list.getDimension(optDim);\n    }\n\n    var dimNames = list.dimensions;\n\n    for (var i = dimNames.length - 1; i >= 0; i--) {\n      var dimName = dimNames[i];\n      var dimInfo = list.getDimensionInfo(dimName);\n\n      if (!dimInfo.isCalculationCoord) {\n        return dimName;\n      }\n    }\n  },\n\n  /**\n   * @public\n   * @override\n   */\n  getExtent: function getExtent() {\n    return this._dataExtent.slice();\n  },\n\n  /**\n   * @protected\n   */\n  completeVisualOption: function completeVisualOption() {\n    var ecModel = this.ecModel;\n    var thisOption = this.option;\n    var base = {\n      inRange: thisOption.inRange,\n      outOfRange: thisOption.outOfRange\n    };\n    var target = thisOption.target || (thisOption.target = {});\n    var controller = thisOption.controller || (thisOption.controller = {});\n    zrUtil.merge(target, base); // Do not override\n\n    zrUtil.merge(controller, base); // Do not override\n\n    var isCategory = this.isCategory();\n    completeSingle.call(this, target);\n    completeSingle.call(this, controller);\n    completeInactive.call(this, target, 'inRange', 'outOfRange'); // completeInactive.call(this, target, 'outOfRange', 'inRange');\n\n    completeController.call(this, controller);\n\n    function completeSingle(base) {\n      // Compatible with ec2 dataRange.color.\n      // The mapping order of dataRange.color is: [high value, ..., low value]\n      // whereas inRange.color and outOfRange.color is [low value, ..., high value]\n      // Notice: ec2 has no inverse.\n      if (isArray(thisOption.color) // If there has been inRange: {symbol: ...}, adding color is a mistake.\n      // So adding color only when no inRange defined.\n      && !base.inRange) {\n        base.inRange = {\n          color: thisOption.color.slice().reverse()\n        };\n      } // Compatible with previous logic, always give a defautl color, otherwise\n      // simple config with no inRange and outOfRange will not work.\n      // Originally we use visualMap.color as the default color, but setOption at\n      // the second time the default color will be erased. So we change to use\n      // constant DEFAULT_COLOR.\n      // If user do not want the defualt color, set inRange: {color: null}.\n\n\n      base.inRange = base.inRange || {\n        color: ecModel.get('gradientColor')\n      }; // If using shortcut like: {inRange: 'symbol'}, complete default value.\n\n      each(this.stateList, function (state) {\n        var visualType = base[state];\n\n        if (zrUtil.isString(visualType)) {\n          var defa = visualDefault.get(visualType, 'active', isCategory);\n\n          if (defa) {\n            base[state] = {};\n            base[state][visualType] = defa;\n          } else {\n            // Mark as not specified.\n            delete base[state];\n          }\n        }\n      }, this);\n    }\n\n    function completeInactive(base, stateExist, stateAbsent) {\n      var optExist = base[stateExist];\n      var optAbsent = base[stateAbsent];\n\n      if (optExist && !optAbsent) {\n        optAbsent = base[stateAbsent] = {};\n        each(optExist, function (visualData, visualType) {\n          if (!VisualMapping.isValidType(visualType)) {\n            return;\n          }\n\n          var defa = visualDefault.get(visualType, 'inactive', isCategory);\n\n          if (defa != null) {\n            optAbsent[visualType] = defa; // Compatibable with ec2:\n            // Only inactive color to rgba(0,0,0,0) can not\n            // make label transparent, so use opacity also.\n\n            if (visualType === 'color' && !optAbsent.hasOwnProperty('opacity') && !optAbsent.hasOwnProperty('colorAlpha')) {\n              optAbsent.opacity = [0, 0];\n            }\n          }\n        });\n      }\n    }\n\n    function completeController(controller) {\n      var symbolExists = (controller.inRange || {}).symbol || (controller.outOfRange || {}).symbol;\n      var symbolSizeExists = (controller.inRange || {}).symbolSize || (controller.outOfRange || {}).symbolSize;\n      var inactiveColor = this.get('inactiveColor');\n      each(this.stateList, function (state) {\n        var itemSize = this.itemSize;\n        var visuals = controller[state]; // Set inactive color for controller if no other color\n        // attr (like colorAlpha) specified.\n\n        if (!visuals) {\n          visuals = controller[state] = {\n            color: isCategory ? inactiveColor : [inactiveColor]\n          };\n        } // Consistent symbol and symbolSize if not specified.\n\n\n        if (visuals.symbol == null) {\n          visuals.symbol = symbolExists && zrUtil.clone(symbolExists) || (isCategory ? 'roundRect' : ['roundRect']);\n        }\n\n        if (visuals.symbolSize == null) {\n          visuals.symbolSize = symbolSizeExists && zrUtil.clone(symbolSizeExists) || (isCategory ? itemSize[0] : [itemSize[0], itemSize[0]]);\n        } // Filter square and none.\n\n\n        visuals.symbol = mapVisual(visuals.symbol, function (symbol) {\n          return symbol === 'none' || symbol === 'square' ? 'roundRect' : symbol;\n        }); // Normalize symbolSize\n\n        var symbolSize = visuals.symbolSize;\n\n        if (symbolSize != null) {\n          var max = -Infinity; // symbolSize can be object when categories defined.\n\n          eachVisual(symbolSize, function (value) {\n            value > max && (max = value);\n          });\n          visuals.symbolSize = mapVisual(symbolSize, function (value) {\n            return linearMap(value, [0, max], [0, itemSize[0]], true);\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  resetItemSize: function resetItemSize() {\n    this.itemSize = [parseFloat(this.get('itemWidth')), parseFloat(this.get('itemHeight'))];\n  },\n\n  /**\n   * @public\n   */\n  isCategory: function isCategory() {\n    return !!this.option.categories;\n  },\n\n  /**\n   * @public\n   * @abstract\n   */\n  setSelected: noop,\n\n  /**\n   * @public\n   * @abstract\n   * @param {*|module:echarts/data/List} valueOrData\n   * @param {number} dataIndex\n   * @return {string} state See this.stateList\n   */\n  getValueState: noop,\n\n  /**\n   * FIXME\n   * Do not publish to thirt-part-dev temporarily\n   * util the interface is stable. (Should it return\n   * a function but not visual meta?)\n   *\n   * @pubilc\n   * @abstract\n   * @param {Function} getColorVisual\n   *        params: value, valueState\n   *        return: color\n   * @return {Object} visualMeta\n   *        should includes {stops, outerColors}\n   *        outerColor means [colorBeyondMinValue, colorBeyondMaxValue]\n   */\n  getVisualMeta: noop\n});\nvar _default = VisualMapModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar layout = require(\"../../util/layout\");\n\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'visualMap',\n\n  /**\n   * @readOnly\n   * @type {Object}\n   */\n  autoPositionValues: {\n    left: 1,\n    right: 1,\n    top: 1,\n    bottom: 1\n  },\n  init: function init(ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/visualMap/visualMapModel}\n     */\n\n    this.visualMapModel;\n  },\n\n  /**\n   * @protected\n   */\n  render: function render(visualMapModel, ecModel, api, payload) {\n    this.visualMapModel = visualMapModel;\n\n    if (visualMapModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    }\n\n    this.doRender.apply(this, arguments);\n  },\n\n  /**\n   * @protected\n   */\n  renderBackground: function renderBackground(group) {\n    var visualMapModel = this.visualMapModel;\n    var padding = formatUtil.normalizeCssArray(visualMapModel.get('padding') || 0);\n    var rect = group.getBoundingRect();\n    group.add(new graphic.Rect({\n      z2: -1,\n      // Lay background rect on the lowest layer.\n      silent: true,\n      shape: {\n        x: rect.x - padding[3],\n        y: rect.y - padding[0],\n        width: rect.width + padding[3] + padding[1],\n        height: rect.height + padding[0] + padding[2]\n      },\n      style: {\n        fill: visualMapModel.get('backgroundColor'),\n        stroke: visualMapModel.get('borderColor'),\n        lineWidth: visualMapModel.get('borderWidth')\n      }\n    }));\n  },\n\n  /**\n   * @protected\n   * @param {number} targetValue can be Infinity or -Infinity\n   * @param {string=} visualCluster Only can be 'color' 'opacity' 'symbol' 'symbolSize'\n   * @param {Object} [opts]\n   * @param {string=} [opts.forceState] Specify state, instead of using getValueState method.\n   * @param {string=} [opts.convertOpacityToAlpha=false] For color gradient in controller widget.\n   * @return {*} Visual value.\n   */\n  getControllerVisual: function getControllerVisual(targetValue, visualCluster, opts) {\n    opts = opts || {};\n    var forceState = opts.forceState;\n    var visualMapModel = this.visualMapModel;\n    var visualObj = {}; // Default values.\n\n    if (visualCluster === 'symbol') {\n      visualObj.symbol = visualMapModel.get('itemSymbol');\n    }\n\n    if (visualCluster === 'color') {\n      var defaultColor = visualMapModel.get('contentColor');\n      visualObj.color = defaultColor;\n    }\n\n    function getter(key) {\n      return visualObj[key];\n    }\n\n    function setter(key, value) {\n      visualObj[key] = value;\n    }\n\n    var mappings = visualMapModel.controllerVisuals[forceState || visualMapModel.getValueState(targetValue)];\n    var visualTypes = VisualMapping.prepareVisualTypes(mappings);\n    zrUtil.each(visualTypes, function (type) {\n      var visualMapping = mappings[type];\n\n      if (opts.convertOpacityToAlpha && type === 'opacity') {\n        type = 'colorAlpha';\n        visualMapping = mappings.__alphaForOpacity;\n      }\n\n      if (VisualMapping.dependsOn(type, visualCluster)) {\n        visualMapping && visualMapping.applyVisual(targetValue, getter, setter);\n      }\n    });\n    return visualObj[visualCluster];\n  },\n\n  /**\n   * @protected\n   */\n  positionGroup: function positionGroup(group) {\n    var model = this.visualMapModel;\n    var api = this.api;\n    layout.positionElement(group, model.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n  },\n\n  /**\n   * @protected\n   * @abstract\n   */\n  doRender: zrUtil.noop\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/component/visualMap/VisualMapModel} visualMapModel\\\n * @param {module:echarts/ExtensionAPI} api\n * @param {Array.<number>} itemSize always [short, long]\n * @return {string} 'left' or 'right' or 'top' or 'bottom'\n */\n\nfunction getItemAlign(visualMapModel, api, itemSize) {\n  var modelOption = visualMapModel.option;\n  var itemAlign = modelOption.align;\n\n  if (itemAlign != null && itemAlign !== 'auto') {\n    return itemAlign;\n  } // Auto decision align.\n\n\n  var ecSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var realIndex = modelOption.orient === 'horizontal' ? 1 : 0;\n  var paramsSet = [['left', 'right', 'width'], ['top', 'bottom', 'height']];\n  var reals = paramsSet[realIndex];\n  var fakeValue = [0, null, 10];\n  var layoutInput = {};\n\n  for (var i = 0; i < 3; i++) {\n    layoutInput[paramsSet[1 - realIndex][i]] = fakeValue[i];\n    layoutInput[reals[i]] = i === 2 ? itemSize[0] : modelOption[reals[i]];\n  }\n\n  var rParam = [['x', 'width', 3], ['y', 'height', 0]][realIndex];\n  var rect = getLayoutRect(layoutInput, ecSize, modelOption.padding);\n  return reals[(rect.margin[rParam[2]] || 0) + rect[rParam[0]] + rect[rParam[1]] * 0.5 < ecSize[rParam[1]] * 0.5 ? 0 : 1];\n}\n/**\n * Prepare dataIndex for outside usage, where dataIndex means rawIndex, and\n * dataIndexInside means filtered index.\n */\n\n\nfunction makeHighDownBatch(batch, visualMapModel) {\n  zrUtil.each(batch || [], function (batchItem) {\n    if (batchItem.dataIndex != null) {\n      batchItem.dataIndexInside = batchItem.dataIndex;\n      batchItem.dataIndex = null;\n    }\n\n    batchItem.highlightKey = 'visualMap' + (visualMapModel ? visualMapModel.componentIndex : '');\n  });\n  return batch;\n}\n\nexports.getItemAlign = getItemAlign;\nexports.makeHighDownBatch = makeHighDownBatch;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar actionInfo = {\n  type: 'selectDataRange',\n  event: 'dataRangeSelected',\n  // FIXME use updateView appears wrong\n  update: 'update'\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'visualMap',\n    query: payload\n  }, function (model) {\n    model.setSelected(payload.selected);\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./visualMap/preprocessor\");\n\nrequire(\"./visualMap/typeDefaulter\");\n\nrequire(\"./visualMap/visualEncoding\");\n\nrequire(\"./visualMap/PiecewiseModel\");\n\nrequire(\"./visualMap/PiecewiseView\");\n\nrequire(\"./visualMap/visualMapAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\nvar getOptionCategoryInterval = _axisHelper.getOptionCategoryInterval;\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var axisExtent = axis.getExtent();\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n  // For example, if all of the axis labels are `a, b, c, d, e, f, g`.\n  // The jitter will cause that sometimes the displayed labels are\n  // `a, d, g` (interval: 2) sometimes `a, c, e`(interval: 1).\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval // If the axis change is caused by chart resize, the cache should not\n  // be used. Otherwise some hiden labels might not be shown again.\n  && cache.axisExtend0 === axisExtent[0] && cache.axisExtend1 === axisExtent[1]) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n      cache.axisExtend0 = axisExtent[0];\n      cache.axisExtend1 = axisExtent[1];\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showAllLabel = shouldShowAllLabels(axis);\n  var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\n  var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\n\n  if (includeMinLabel && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (includeMaxLabel && tickValue - step !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Cartesian = require(\"./Cartesian\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function containData(data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function clampData(data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function getOtherAxis(axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  },\n\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {BoundingRect}\n   */\n  getArea: function getArea() {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    var rect = new BoundingRect(x, y, width, height);\n    return rect;\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function Cartesian(name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function getAxis(dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function getAxes() {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function getAxesByScale(scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function addAxis(axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function dataToCoord(val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function coordToData(val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function _dataCoordConvert(input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar Axis2D = function Axis2D(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function getGlobalExtent(asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function getOtherAxis() {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar IndicatorAxis = require(\"./IndicatorAxis\");\n\nvar IntervalScale = require(\"../../scale/Interval\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _axisHelper = require(\"../axisHelper\");\n\nvar getScaleExtent = _axisHelper.getScaleExtent;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar LogScale = require(\"../../scale/Log\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\n\n\nfunction Radar(radarModel, ecModel, api) {\n  this._model = radarModel;\n  /**\n   * Radar dimensions\n   * @type {Array.<string>}\n   */\n\n  this.dimensions = [];\n  this._indicatorAxes = zrUtil.map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n    var dim = 'indicator_' + idx;\n    var indicatorAxis = new IndicatorAxis(dim, indicatorModel.get('axisType') === 'log' ? new LogScale() : new IntervalScale());\n    indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n    indicatorAxis.model = indicatorModel;\n    indicatorModel.axis = indicatorAxis;\n    this.dimensions.push(dim);\n    return indicatorAxis;\n  }, this);\n  this.resize(radarModel, api);\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cx;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.cy;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.r0;\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.startAngle;\n}\n\nRadar.prototype.getIndicatorAxes = function () {\n  return this._indicatorAxes;\n};\n\nRadar.prototype.dataToPoint = function (value, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n};\n\nRadar.prototype.coordToPoint = function (coord, indicatorIndex) {\n  var indicatorAxis = this._indicatorAxes[indicatorIndex];\n  var angle = indicatorAxis.angle;\n  var x = this.cx + coord * Math.cos(angle);\n  var y = this.cy - coord * Math.sin(angle);\n  return [x, y];\n};\n\nRadar.prototype.pointToData = function (pt) {\n  var dx = pt[0] - this.cx;\n  var dy = pt[1] - this.cy;\n  var radius = Math.sqrt(dx * dx + dy * dy);\n  dx /= radius;\n  dy /= radius;\n  var radian = Math.atan2(-dy, dx); // Find the closest angle\n  // FIXME index can calculated directly\n\n  var minRadianDiff = Infinity;\n  var closestAxis;\n  var closestAxisIdx = -1;\n\n  for (var i = 0; i < this._indicatorAxes.length; i++) {\n    var indicatorAxis = this._indicatorAxes[i];\n    var diff = Math.abs(radian - indicatorAxis.angle);\n\n    if (diff < minRadianDiff) {\n      closestAxis = indicatorAxis;\n      closestAxisIdx = i;\n      minRadianDiff = diff;\n    }\n  }\n\n  return [closestAxisIdx, +(closestAxis && closestAxis.coordToData(radius))];\n};\n\nRadar.prototype.resize = function (radarModel, api) {\n  var center = radarModel.get('center');\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  var viewSize = Math.min(viewWidth, viewHeight) / 2;\n  this.cx = numberUtil.parsePercent(center[0], viewWidth);\n  this.cy = numberUtil.parsePercent(center[1], viewHeight);\n  this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\n\n  var radius = radarModel.get('radius');\n\n  if (typeof radius === 'string' || typeof radius === 'number') {\n    radius = [0, radius];\n  }\n\n  this.r0 = numberUtil.parsePercent(radius[0], viewSize);\n  this.r = numberUtil.parsePercent(radius[1], viewSize);\n  zrUtil.each(this._indicatorAxes, function (indicatorAxis, idx) {\n    indicatorAxis.setExtent(this.r0, this.r);\n    var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n    angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n    indicatorAxis.angle = angle;\n  }, this);\n};\n\nRadar.prototype.update = function (ecModel, api) {\n  var indicatorAxes = this._indicatorAxes;\n  var radarModel = this._model;\n  zrUtil.each(indicatorAxes, function (indicatorAxis) {\n    indicatorAxis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n    if (radarSeries.get('coordinateSystem') !== 'radar' || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n      return;\n    }\n\n    var data = radarSeries.getData();\n    zrUtil.each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n    });\n  }, this);\n  var splitNumber = radarModel.get('splitNumber');\n\n  function increaseInterval(interval) {\n    var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n    var f = interval / exp10;\n\n    if (f === 2) {\n      f = 5;\n    } else {\n      // f is 2 or 5\n      f *= 2;\n    }\n\n    return f * exp10;\n  } // Force all the axis fixing the maxSplitNumber.\n\n\n  zrUtil.each(indicatorAxes, function (indicatorAxis, idx) {\n    var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model).extent;\n    niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n    var axisModel = indicatorAxis.model;\n    var scale = indicatorAxis.scale;\n    var fixedMin = axisModel.getMin();\n    var fixedMax = axisModel.getMax();\n    var interval = scale.getInterval();\n\n    if (fixedMin != null && fixedMax != null) {\n      // User set min, max, divide to get new interval\n      scale.setExtent(+fixedMin, +fixedMax);\n      scale.setInterval((fixedMax - fixedMin) / splitNumber);\n    } else if (fixedMin != null) {\n      var max; // User set min, expand extent on the other side\n\n      do {\n        max = fixedMin + interval * splitNumber;\n        scale.setExtent(+fixedMin, max); // Interval must been set after extent\n        // FIXME\n\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n    } else if (fixedMax != null) {\n      var min; // User set min, expand extent on the other side\n\n      do {\n        min = fixedMax - interval * splitNumber;\n        scale.setExtent(min, +fixedMax);\n        scale.setInterval(interval);\n        interval = increaseInterval(interval);\n      } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n    } else {\n      var nicedSplitNumber = scale.getTicks().length - 1;\n\n      if (nicedSplitNumber > splitNumber) {\n        interval = increaseInterval(interval);\n      } // TODO\n\n\n      var max = Math.ceil(rawExtent[1] / interval) * interval;\n      var min = numberUtil.round(max - interval * splitNumber);\n      scale.setExtent(min, max);\n      scale.setInterval(interval);\n    }\n  });\n};\n/**\n * Radar dimensions is based on the data\n * @type {Array}\n */\n\n\nRadar.dimensions = [];\n\nRadar.create = function (ecModel, api) {\n  var radarList = [];\n  ecModel.eachComponent('radar', function (radarModel) {\n    var radar = new Radar(radarModel, ecModel, api);\n    radarList.push(radar);\n    radarModel.coordinateSystem = radar;\n  });\n  ecModel.eachSeriesByType('radar', function (radarSeries) {\n    if (radarSeries.get('coordinateSystem') === 'radar') {\n      // Inject coordinate system\n      radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n    }\n  });\n  return radarList;\n};\n\nCoordinateSystem.register('radar', Radar);\nvar _default = Radar;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction IndicatorAxis(dim, scale, radiusExtent) {\n  Axis.call(this, dim, scale, radiusExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = 'value';\n  this.angle = 0;\n  /**\n   * Indicator name\n   * @type {string}\n   */\n\n  this.name = '';\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.model;\n}\n\nzrUtil.inherits(IndicatorAxis, Axis);\nvar _default = IndicatorAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"../axisDefault\");\n\nvar Model = require(\"../../model/Model\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar valueAxisDefault = axisDefault.valueAxis;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel = echarts.extendComponentModel({\n  type: 'radar',\n  optionUpdated: function optionUpdated() {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick');\n    var axisType = this.get('axisType');\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('name');\n    var showName = this.get('name.show');\n    var nameFormatter = this.get('name.formatter');\n    var nameGap = this.get('nameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      indicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        axisType: axisType,\n        axisLabel: axisLabel,\n        // Compatible with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        indicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = indicatorOpt.name;\n        indicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        indicatorOpt.name = nameFormatter(indicatorOpt.name, indicatorOpt);\n      }\n\n      var model = zrUtil.extend(new Model(indicatorOpt, null, this.ecModel), axisModelCommonMixin); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n\n    this.getIndicatorModels = function () {\n      return indicatorModels;\n    };\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    name: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    nameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    axisType: 'interval',\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  }\n});\nvar _default = RadarModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n\nvar parseGeoJson = require(\"./parseGeoJson\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar fixNanhai = require(\"./fix/nanhai\");\n\nvar fixTextCoord = require(\"./fix/textCoord\");\n\nvar fixGeoCoord = require(\"./fix/geoCoord\");\n\nvar fixDiaoyuIsland = require(\"./fix/diaoyuIsland\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Built-in GEO fixer.\n\n\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @param {string} nameProperty\n   * @return {Object} {regions, boundingRect}\n   */\n  load: function load(mapName, mapRecord, nameProperty) {\n    var parsed = inner(mapRecord).parsed;\n\n    if (parsed) {\n      return parsed;\n    }\n\n    var specialAreas = mapRecord.specialAreas || {};\n    var geoJSON = mapRecord.geoJSON;\n    var regions; // https://jsperf.com/try-catch-performance-overhead\n\n    try {\n      regions = geoJSON ? parseGeoJson(geoJSON, nameProperty) : [];\n    } catch (e) {\n      throw new Error('Invalid geoJson format\\n' + e.message);\n    }\n\n    fixNanhai(mapName, regions);\n    each(regions, function (region) {\n      var regionName = region.name;\n      fixTextCoord(mapName, region);\n      fixGeoCoord(mapName, region);\n      fixDiaoyuIsland(mapName, region); // Some area like Alaska in USA map needs to be tansformed\n      // to look better\n\n      var specialArea = specialAreas[regionName];\n\n      if (specialArea) {\n        region.transformTo(specialArea.left, specialArea.top, specialArea.width, specialArea.height);\n      }\n    });\n    return inner(mapRecord).parsed = {\n      regions: regions,\n      boundingRect: getBoundingRect(regions)\n    };\n  }\n};\n\nfunction getBoundingRect(regions) {\n  var rect;\n\n  for (var i = 0; i < regions.length; i++) {\n    var regionRect = regions[i].getBoundingRect();\n    rect = rect || regionRect.clone();\n    rect.union(regionRect);\n  }\n\n  return rect;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"../Region\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 南海诸岛\n\n\nvar geoCoord = [126, 25];\nvar points = [[[0, 3.5], [7, 11.2], [15, 11.9], [30, 7], [42, 0.7], [52, 0.7], [56, 7.7], [59, 0.7], [64, 0.7], [64, 0], [5, 0], [0, 3.5]], [[13, 16.1], [19, 14.7], [16, 21.7], [11, 23.1], [13, 16.1]], [[12, 32.2], [14, 38.5], [15, 38.5], [13, 32.2], [12, 32.2]], [[16, 47.6], [12, 53.2], [13, 53.2], [18, 47.6], [16, 47.6]], [[6, 64.4], [8, 70], [9, 70], [8, 64.4], [6, 64.4]], [[23, 82.6], [29, 79.8], [30, 79.8], [25, 82.6], [23, 82.6]], [[37, 70.7], [43, 62.3], [44, 62.3], [39, 70.7], [37, 70.7]], [[48, 51.1], [51, 45.5], [53, 45.5], [50, 51.1], [48, 51.1]], [[51, 35], [51, 28.7], [53, 28.7], [53, 35], [51, 35]], [[52, 22.4], [55, 17.5], [56, 17.5], [53, 22.4], [52, 22.4]], [[58, 12.6], [62, 7], [63, 7], [60, 12.6], [58, 12.6]], [[0, 3.5], [0, 93.1], [64, 93.1], [64, 0], [63, 0], [63, 92.4], [1, 92.4], [1, 3.5], [0, 3.5]]];\n\nfor (var i = 0; i < points.length; i++) {\n  for (var k = 0; k < points[i].length; k++) {\n    points[i][k][0] /= 10.5;\n    points[i][k][1] /= -10.5 / 0.75;\n    points[i][k][0] += geoCoord[0];\n    points[i][k][1] += geoCoord[1];\n  }\n}\n\nfunction _default(mapType, regions) {\n  if (mapType === 'china') {\n    regions.push(new Region('南海诸岛', zrUtil.map(points, function (exterior) {\n      return {\n        type: 'polygon',\n        exterior: exterior\n      };\n    }), geoCoord));\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar coordsOffsetMap = {\n  '南海诸岛': [32, 80],\n  // 全国\n  '广东': [0, -10],\n  '香港': [10, 5],\n  '澳门': [-10, 10],\n  //'北京': [-10, 0],\n  '天津': [5, 5]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'china') {\n    var coordFix = coordsOffsetMap[region.name];\n\n    if (coordFix) {\n      var cp = region.center;\n      cp[0] += coordFix[0] / 10.5;\n      cp[1] += -coordFix[1] / (10.5 / 0.75);\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar geoCoordMap = {\n  'Russia': [100, 60],\n  'United States': [-99, 38],\n  'United States of America': [-99, 38]\n};\n\nfunction _default(mapType, region) {\n  if (mapType === 'world') {\n    var geoCoord = geoCoordMap[region.name];\n\n    if (geoCoord) {\n      var cp = region.center;\n      cp[0] = geoCoord[0];\n      cp[1] = geoCoord[1];\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Fix for 钓鱼岛\n// var Region = require('../Region');\n// var zrUtil = require('zrender/src/core/util');\n// var geoCoord = [126, 25];\nvar points = [[[123.45165252685547, 25.73527164402261], [123.49731445312499, 25.73527164402261], [123.49731445312499, 25.750734064600884], [123.45165252685547, 25.750734064600884], [123.45165252685547, 25.73527164402261]]];\n\nfunction _default(mapType, region) {\n  if (mapType === 'china' && region.name === '台湾') {\n    region.geometries.push({\n      type: 'polygon',\n      exterior: points[0]\n    });\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseSVG = _parseSVG.parseSVG;\nvar makeViewBoxTransform = _parseSVG.makeViewBoxTransform;\n\nvar Group = require(\"zrender/lib/container/Group\");\n\nvar Rect = require(\"zrender/lib/graphic/shape/Rect\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar createHashMap = _util.createHashMap;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\nvar _default = {\n  /**\n   * @param {string} mapName\n   * @param {Object} mapRecord {specialAreas, geoJSON}\n   * @return {Object} {root, boundingRect}\n   */\n  load: function load(mapName, mapRecord) {\n    var originRoot = inner(mapRecord).originRoot;\n\n    if (originRoot) {\n      return {\n        root: originRoot,\n        boundingRect: inner(mapRecord).boundingRect\n      };\n    }\n\n    var graphic = buildGraphic(mapRecord);\n    inner(mapRecord).originRoot = graphic.root;\n    inner(mapRecord).boundingRect = graphic.boundingRect;\n    return graphic;\n  },\n  makeGraphic: function makeGraphic(mapName, mapRecord, hostKey) {\n    // For performance consideration (in large SVG), graphic only maked\n    // when necessary and reuse them according to hostKey.\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap || (field.rootMap = createHashMap());\n    var root = rootMap.get(hostKey);\n\n    if (root) {\n      return root;\n    }\n\n    var originRoot = field.originRoot;\n    var boundingRect = field.boundingRect; // For performance, if originRoot is not used by a view,\n    // assign it to a view, but not reproduce graphic elements.\n\n    if (!field.originRootHostKey) {\n      field.originRootHostKey = hostKey;\n      root = originRoot;\n    } else {\n      root = buildGraphic(mapRecord, boundingRect).root;\n    }\n\n    return rootMap.set(hostKey, root);\n  },\n  removeGraphic: function removeGraphic(mapName, mapRecord, hostKey) {\n    var field = inner(mapRecord);\n    var rootMap = field.rootMap;\n    rootMap && rootMap.removeKey(hostKey);\n\n    if (hostKey === field.originRootHostKey) {\n      field.originRootHostKey = null;\n    }\n  }\n};\n\nfunction buildGraphic(mapRecord, boundingRect) {\n  var svgXML = mapRecord.svgXML;\n  var result;\n  var root;\n\n  try {\n    result = svgXML && parseSVG(svgXML, {\n      ignoreViewBox: true,\n      ignoreRootClip: true\n    }) || {};\n    root = result.root;\n    assert(root != null);\n  } catch (e) {\n    throw new Error('Invalid svg format\\n' + e.message);\n  }\n\n  var svgWidth = result.width;\n  var svgHeight = result.height;\n  var viewBoxRect = result.viewBoxRect;\n\n  if (!boundingRect) {\n    boundingRect = svgWidth == null || svgHeight == null ? // If svg width / height not specified, calculate\n    // bounding rect as the width / height\n    root.getBoundingRect() : new BoundingRect(0, 0, 0, 0);\n\n    if (svgWidth != null) {\n      boundingRect.width = svgWidth;\n    }\n\n    if (svgHeight != null) {\n      boundingRect.height = svgHeight;\n    }\n  }\n\n  if (viewBoxRect) {\n    var viewBoxTransform = makeViewBoxTransform(viewBoxRect, boundingRect.width, boundingRect.height);\n    var elRoot = root;\n    root = new Group();\n    root.add(elRoot);\n    elRoot.scale = viewBoxTransform.scale;\n    elRoot.position = viewBoxTransform.position;\n  }\n\n  root.setClipPath(new Rect({\n    shape: boundingRect.plain()\n  }));\n  return {\n    root: root,\n    boundingRect: boundingRect\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar View = require(\"../View\");\n\nvar geoSourceManager = require(\"./geoSourceManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Geo description]\n * For backward compatibility, the orginal interface:\n * `name, map, geoJson, specialAreas, nameMap` is kept.\n *\n * @param {string|Object} name\n * @param {string} map Map type\n *        Specify the positioned areas by left, top, width, height\n * @param {Object.<string, string>} [nameMap]\n *        Specify name alias\n * @param {boolean} [invertLongitute=true]\n */\n\n\nfunction Geo(name, map, nameMap, invertLongitute) {\n  View.call(this, name);\n  /**\n   * Map type\n   * @type {string}\n   */\n\n  this.map = map;\n  var source = geoSourceManager.load(map, nameMap);\n  this._nameCoordMap = source.nameCoordMap;\n  this._regionsMap = source.regionsMap;\n  this._invertLongitute = invertLongitute == null ? true : invertLongitute;\n  /**\n   * @readOnly\n   */\n\n  this.regions = source.regions;\n  /**\n   * @type {module:zrender/src/core/BoundingRect}\n   */\n\n  this._rect = source.boundingRect;\n}\n\nGeo.prototype = {\n  constructor: Geo,\n  type: 'geo',\n\n  /**\n   * @param {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['lng', 'lat'],\n\n  /**\n   * If contain given lng,lat coord\n   * @param {Array.<number>}\n   * @readOnly\n   */\n  containCoord: function containCoord(coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return true;\n      }\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  transformTo: function transformTo(x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var invertLongitute = this._invertLongitute;\n    rect = rect.clone();\n\n    if (invertLongitute) {\n      // Longitute is inverted\n      rect.y = -rect.y - rect.height;\n    }\n\n    var rawTransformable = this._rawTransformable;\n    rawTransformable.transform = rect.calculateTransform(new BoundingRect(x, y, width, height));\n    rawTransformable.decomposeTransform();\n\n    if (invertLongitute) {\n      var scale = rawTransformable.scale;\n      scale[1] = -scale[1];\n    }\n\n    rawTransformable.updateTransform();\n\n    this._updateTransform();\n  },\n\n  /**\n   * @param {string} name\n   * @return {module:echarts/coord/geo/Region}\n   */\n  getRegion: function getRegion(name) {\n    return this._regionsMap.get(name);\n  },\n  getRegionByCoord: function getRegionByCoord(coord) {\n    var regions = this.regions;\n\n    for (var i = 0; i < regions.length; i++) {\n      if (regions[i].contain(coord)) {\n        return regions[i];\n      }\n    }\n  },\n\n  /**\n   * Add geoCoord for indexing by name\n   * @param {string} name\n   * @param {Array.<number>} geoCoord\n   */\n  addGeoCoord: function addGeoCoord(name, geoCoord) {\n    this._nameCoordMap.set(name, geoCoord);\n  },\n\n  /**\n   * Get geoCoord by name\n   * @param {string} name\n   * @return {Array.<number>}\n   */\n  getGeoCoord: function getGeoCoord(name) {\n    return this._nameCoordMap.get(name);\n  },\n\n  /**\n   * @override\n   */\n  getBoundingRect: function getBoundingRect() {\n    return this._rect;\n  },\n\n  /**\n   * @param {string|Array.<number>} data\n   * @param {boolean} noRoam\n   * @param {Array.<number>} [out]\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(data, noRoam, out) {\n    if (typeof data === 'string') {\n      // Map area name to geoCoord\n      data = this.getGeoCoord(data);\n    }\n\n    if (data) {\n      return View.prototype.dataToPoint.call(this, data, noRoam, out);\n    }\n  },\n\n  /**\n   * @override\n   */\n  convertToPixel: zrUtil.curry(doConvert, 'dataToPoint'),\n\n  /**\n   * @override\n   */\n  convertFromPixel: zrUtil.curry(doConvert, 'pointToData')\n};\nzrUtil.mixin(Geo, View);\n\nfunction doConvert(methodName, ecModel, finder, value) {\n  var geoModel = finder.geoModel;\n  var seriesModel = finder.seriesModel;\n  var coordSys = geoModel ? geoModel.coordinateSystem : seriesModel ? seriesModel.coordinateSystem // For map.\n  || (seriesModel.getReferringComponents('geo')[0] || {}).coordinateSystem : null;\n  return coordSys === this ? coordSys[methodName](value) : null;\n}\n\nvar _default = Geo;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// id may be function name of Object, add a prefix to avoid this problem.\n\nfunction generateNodeKey(id) {\n  return '_EC_' + id;\n}\n/**\n * @alias module:echarts/data/Graph\n * @constructor\n * @param {boolean} directed\n */\n\n\nvar Graph = function Graph(directed) {\n  /**\n   * 是否是有向图\n   * @type {boolean}\n   * @private\n   */\n  this._directed = directed || false;\n  /**\n   * @type {Array.<module:echarts/data/Graph.Node>}\n   * @readOnly\n   */\n\n  this.nodes = [];\n  /**\n   * @type {Array.<module:echarts/data/Graph.Edge>}\n   * @readOnly\n   */\n\n  this.edges = [];\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Node>}\n   * @private\n   */\n\n  this._nodesMap = {};\n  /**\n   * @type {Object.<string, module:echarts/data/Graph.Edge>}\n   * @private\n   */\n\n  this._edgesMap = {};\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.data;\n  /**\n   * @type {module:echarts/data/List}\n   * @readOnly\n   */\n\n  this.edgeData;\n};\n\nvar graphProto = Graph.prototype;\n/**\n * @type {string}\n */\n\ngraphProto.type = 'graph';\n/**\n * If is directed graph\n * @return {boolean}\n */\n\ngraphProto.isDirected = function () {\n  return this._directed;\n};\n/**\n * Add a new node\n * @param {string} id\n * @param {number} [dataIndex]\n */\n\n\ngraphProto.addNode = function (id, dataIndex) {\n  id = id == null ? '' + dataIndex : '' + id;\n  var nodesMap = this._nodesMap;\n\n  if (nodesMap[generateNodeKey(id)]) {\n    return;\n  }\n\n  var node = new Node(id, dataIndex);\n  node.hostGraph = this;\n  this.nodes.push(node);\n  nodesMap[generateNodeKey(id)] = node;\n  return node;\n};\n/**\n * Get node by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getNodeByIndex = function (dataIndex) {\n  var rawIdx = this.data.getRawIndex(dataIndex);\n  return this.nodes[rawIdx];\n};\n/**\n * Get node by id\n * @param  {string} id\n * @return {module:echarts/data/Graph.Node}\n */\n\n\ngraphProto.getNodeById = function (id) {\n  return this._nodesMap[generateNodeKey(id)];\n};\n/**\n * Add a new edge\n * @param {number|string|module:echarts/data/Graph.Node} n1\n * @param {number|string|module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.addEdge = function (n1, n2, dataIndex) {\n  var nodesMap = this._nodesMap;\n  var edgesMap = this._edgesMap; // PNEDING\n\n  if (typeof n1 === 'number') {\n    n1 = this.nodes[n1];\n  }\n\n  if (typeof n2 === 'number') {\n    n2 = this.nodes[n2];\n  }\n\n  if (!Node.isInstance(n1)) {\n    n1 = nodesMap[generateNodeKey(n1)];\n  }\n\n  if (!Node.isInstance(n2)) {\n    n2 = nodesMap[generateNodeKey(n2)];\n  }\n\n  if (!n1 || !n2) {\n    return;\n  }\n\n  var key = n1.id + '-' + n2.id; // PENDING\n\n  if (edgesMap[key]) {\n    return;\n  }\n\n  var edge = new Edge(n1, n2, dataIndex);\n  edge.hostGraph = this;\n\n  if (this._directed) {\n    n1.outEdges.push(edge);\n    n2.inEdges.push(edge);\n  }\n\n  n1.edges.push(edge);\n\n  if (n1 !== n2) {\n    n2.edges.push(edge);\n  }\n\n  this.edges.push(edge);\n  edgesMap[key] = edge;\n  return edge;\n};\n/**\n * Get edge by data index\n * @param  {number} dataIndex\n * @return {module:echarts/data/Graph~Node}\n */\n\n\ngraphProto.getEdgeByIndex = function (dataIndex) {\n  var rawIdx = this.edgeData.getRawIndex(dataIndex);\n  return this.edges[rawIdx];\n};\n/**\n * Get edge by two linked nodes\n * @param  {module:echarts/data/Graph.Node|string} n1\n * @param  {module:echarts/data/Graph.Node|string} n2\n * @return {module:echarts/data/Graph.Edge}\n */\n\n\ngraphProto.getEdge = function (n1, n2) {\n  if (Node.isInstance(n1)) {\n    n1 = n1.id;\n  }\n\n  if (Node.isInstance(n2)) {\n    n2 = n2.id;\n  }\n\n  var edgesMap = this._edgesMap;\n\n  if (this._directed) {\n    return edgesMap[n1 + '-' + n2];\n  } else {\n    return edgesMap[n1 + '-' + n2] || edgesMap[n2 + '-' + n1];\n  }\n};\n/**\n * Iterate all nodes\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachNode = function (cb, context) {\n  var nodes = this.nodes;\n  var len = nodes.length;\n\n  for (var i = 0; i < len; i++) {\n    if (nodes[i].dataIndex >= 0) {\n      cb.call(context, nodes[i], i);\n    }\n  }\n};\n/**\n * Iterate all edges\n * @param  {Function} cb\n * @param  {*} [context]\n */\n\n\ngraphProto.eachEdge = function (cb, context) {\n  var edges = this.edges;\n  var len = edges.length;\n\n  for (var i = 0; i < len; i++) {\n    if (edges[i].dataIndex >= 0 && edges[i].node1.dataIndex >= 0 && edges[i].node2.dataIndex >= 0) {\n      cb.call(context, edges[i], i);\n    }\n  }\n};\n/**\n * Breadth first traverse\n * @param {Function} cb\n * @param {module:echarts/data/Graph.Node} startNode\n * @param {string} [direction='none'] 'none'|'in'|'out'\n * @param {*} [context]\n */\n\n\ngraphProto.breadthFirstTraverse = function (cb, startNode, direction, context) {\n  if (!Node.isInstance(startNode)) {\n    startNode = this._nodesMap[generateNodeKey(startNode)];\n  }\n\n  if (!startNode) {\n    return;\n  }\n\n  var edgeType = direction === 'out' ? 'outEdges' : direction === 'in' ? 'inEdges' : 'edges';\n\n  for (var i = 0; i < this.nodes.length; i++) {\n    this.nodes[i].__visited = false;\n  }\n\n  if (cb.call(context, startNode, null)) {\n    return;\n  }\n\n  var queue = [startNode];\n\n  while (queue.length) {\n    var currentNode = queue.shift();\n    var edges = currentNode[edgeType];\n\n    for (var i = 0; i < edges.length; i++) {\n      var e = edges[i];\n      var otherNode = e.node1 === currentNode ? e.node2 : e.node1;\n\n      if (!otherNode.__visited) {\n        if (cb.call(context, otherNode, currentNode)) {\n          // Stop traversing\n          return;\n        }\n\n        queue.push(otherNode);\n        otherNode.__visited = true;\n      }\n    }\n  }\n}; // TODO\n// graphProto.depthFirstTraverse = function (\n//     cb, startNode, direction, context\n// ) {\n// };\n// Filter update\n\n\ngraphProto.update = function () {\n  var data = this.data;\n  var edgeData = this.edgeData;\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0, len = nodes.length; i < len; i++) {\n    nodes[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = data.count(); i < len; i++) {\n    nodes[data.getRawIndex(i)].dataIndex = i;\n  }\n\n  edgeData.filterSelf(function (idx) {\n    var edge = edges[edgeData.getRawIndex(idx)];\n    return edge.node1.dataIndex >= 0 && edge.node2.dataIndex >= 0;\n  }); // Update edge\n\n  for (var i = 0, len = edges.length; i < len; i++) {\n    edges[i].dataIndex = -1;\n  }\n\n  for (var i = 0, len = edgeData.count(); i < len; i++) {\n    edges[edgeData.getRawIndex(i)].dataIndex = i;\n  }\n};\n/**\n * @return {module:echarts/data/Graph}\n */\n\n\ngraphProto.clone = function () {\n  var graph = new Graph(this._directed);\n  var nodes = this.nodes;\n  var edges = this.edges;\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(nodes[i].id, nodes[i].dataIndex);\n  }\n\n  for (var i = 0; i < edges.length; i++) {\n    var e = edges[i];\n    graph.addEdge(e.node1.id, e.node2.id, e.dataIndex);\n  }\n\n  return graph;\n};\n/**\n * @alias module:echarts/data/Graph.Node\n */\n\n\nfunction Node(id, dataIndex) {\n  /**\n  * @type {string}\n  */\n  this.id = id == null ? '' : id;\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.inEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.outEdges = [];\n  /**\n  * @type {Array.<module:echarts/data/Graph.Edge>}\n  */\n\n  this.edges = [];\n  /**\n   * @type {module:echarts/data/Graph}\n   */\n\n  this.hostGraph;\n  /**\n   * @type {number}\n   */\n\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n\nNode.prototype = {\n  constructor: Node,\n\n  /**\n   * @return {number}\n   */\n  degree: function degree() {\n    return this.edges.length;\n  },\n\n  /**\n   * @return {number}\n   */\n  inDegree: function inDegree() {\n    return this.inEdges.length;\n  },\n\n  /**\n  * @return {number}\n  */\n  outDegree: function outDegree() {\n    return this.outEdges.length;\n  },\n\n  /**\n   * @param {string} [path]\n   * @return {module:echarts/model/Model}\n   */\n  getModel: function getModel(path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var graph = this.hostGraph;\n    var itemModel = graph.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }\n};\n/**\n * 图边\n * @alias module:echarts/data/Graph.Edge\n * @param {module:echarts/data/Graph.Node} n1\n * @param {module:echarts/data/Graph.Node} n2\n * @param {number} [dataIndex=-1]\n */\n\nfunction Edge(n1, n2, dataIndex) {\n  /**\n   * 节点1，如果是有向图则为源节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n  this.node1 = n1;\n  /**\n   * 节点2，如果是有向图则为目标节点\n   * @type {module:echarts/data/Graph.Node}\n   */\n\n  this.node2 = n2;\n  this.dataIndex = dataIndex == null ? -1 : dataIndex;\n}\n/**\n * @param {string} [path]\n * @return {module:echarts/model/Model}\n */\n\n\nEdge.prototype.getModel = function (path) {\n  if (this.dataIndex < 0) {\n    return;\n  }\n\n  var graph = this.hostGraph;\n  var itemModel = graph.edgeData.getItemModel(this.dataIndex);\n  return itemModel.getModel(path);\n};\n\nvar createGraphDataProxyMixin = function createGraphDataProxyMixin(hostName, dataName) {\n  return {\n    /**\n     * @param {string=} [dimension='value'] Default 'value'. can be 'a', 'b', 'c', 'd', 'e'.\n     * @return {number}\n     */\n    getValue: function getValue(dimension) {\n      var data = this[hostName][dataName];\n      return data.get(data.getDimension(dimension || 'value'), this.dataIndex);\n    },\n\n    /**\n     * @param {Object|string} key\n     * @param {*} [value]\n     */\n    setVisual: function setVisual(key, value) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemVisual(this.dataIndex, key, value);\n    },\n\n    /**\n     * @param {string} key\n     * @return {boolean}\n     */\n    getVisual: function getVisual(key, ignoreParent) {\n      return this[hostName][dataName].getItemVisual(this.dataIndex, key, ignoreParent);\n    },\n\n    /**\n     * @param {Object} layout\n     * @return {boolean} [merge=false]\n     */\n    setLayout: function setLayout(layout, merge) {\n      this.dataIndex >= 0 && this[hostName][dataName].setItemLayout(this.dataIndex, layout, merge);\n    },\n\n    /**\n     * @return {Object}\n     */\n    getLayout: function getLayout() {\n      return this[hostName][dataName].getItemLayout(this.dataIndex);\n    },\n\n    /**\n     * @return {module:zrender/Element}\n     */\n    getGraphicEl: function getGraphicEl() {\n      return this[hostName][dataName].getItemGraphicEl(this.dataIndex);\n    },\n\n    /**\n     * @return {number}\n     */\n    getRawIndex: function getRawIndex() {\n      return this[hostName][dataName].getRawIndex(this.dataIndex);\n    }\n  };\n};\n\nzrUtil.mixin(Node, createGraphDataProxyMixin('hostGraph', 'data'));\nzrUtil.mixin(Edge, createGraphDataProxyMixin('hostGraph', 'edgeData'));\nGraph.Node = Node;\nGraph.Edge = Edge;\nenableClassCheck(Node);\nenableClassCheck(Edge);\nvar _default = Graph;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  createParallelIfNeeded(option);\n  mergeAxisOptionFromParallel(option);\n}\n/**\n * Create a parallel coordinate if not exists.\n * @inner\n */\n\n\nfunction createParallelIfNeeded(option) {\n  if (option.parallel) {\n    return;\n  }\n\n  var hasParallelSeries = false;\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'parallel') {\n      hasParallelSeries = true;\n    }\n  });\n\n  if (hasParallelSeries) {\n    option.parallel = [{}];\n  }\n}\n/**\n * Merge aixs definition from parallel option (if exists) to axis option.\n * @inner\n */\n\n\nfunction mergeAxisOptionFromParallel(option) {\n  var axes = modelUtil.normalizeToArray(option.parallelAxis);\n  zrUtil.each(axes, function (axisOption) {\n    if (!zrUtil.isObject(axisOption)) {\n      return;\n    }\n\n    var parallelIndex = axisOption.parallelIndex || 0;\n    var parallelOption = modelUtil.normalizeToArray(option.parallel)[parallelIndex];\n\n    if (parallelOption && parallelOption.parallelAxisDefault) {\n      zrUtil.merge(axisOption, parallelOption.parallelAxisDefault, false);\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar ParallelAxis = require(\"./ParallelAxis\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar sliderMove = require(\"../../component/helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parallel Coordinates\n * <https://en.wikipedia.org/wiki/Parallel_coordinates>\n */\n\n\nvar each = zrUtil.each;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathFloor = Math.floor;\nvar mathCeil = Math.ceil;\nvar round = numberUtil.round;\nvar PI = Math.PI;\n\nfunction Parallel(parallelModel, ecModel, api) {\n  /**\n   * key: dimension\n   * @type {Object.<string, module:echarts/coord/parallel/Axis>}\n   * @private\n   */\n  this._axesMap = zrUtil.createHashMap();\n  /**\n   * key: dimension\n   * value: {position: [], rotation, }\n   * @type {Object.<string, Object>}\n   * @private\n   */\n\n  this._axesLayout = {};\n  /**\n   * Always follow axis order.\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = parallelModel.dimensions;\n  /**\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n  /**\n   * @type {module:echarts/coord/parallel/ParallelModel}\n   */\n\n  this._model = parallelModel;\n\n  this._init(parallelModel, ecModel, api);\n}\n\nParallel.prototype = {\n  type: 'parallel',\n  constructor: Parallel,\n\n  /**\n   * Initialize cartesian coordinate systems\n   * @private\n   */\n  _init: function _init(parallelModel, ecModel, api) {\n    var dimensions = parallelModel.dimensions;\n    var parallelAxisIndex = parallelModel.parallelAxisIndex;\n    each(dimensions, function (dim, idx) {\n      var axisIndex = parallelAxisIndex[idx];\n      var axisModel = ecModel.getComponent('parallelAxis', axisIndex);\n\n      var axis = this._axesMap.set(dim, new ParallelAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisIndex));\n\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Injection\n\n      axisModel.axis = axis;\n      axis.model = axisModel;\n      axis.coordinateSystem = axisModel.coordinateSystem = this;\n    }, this);\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function update(ecModel, api) {\n    this._updateAxesFromSeries(this._model, ecModel);\n  },\n\n  /**\n   * @override\n   */\n  containPoint: function containPoint(point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var axisBase = layoutInfo.axisBase;\n    var layoutBase = layoutInfo.layoutBase;\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var pAxis = point[1 - pixelDimIndex];\n    var pLayout = point[pixelDimIndex];\n    return pAxis >= axisBase && pAxis <= axisBase + layoutInfo.axisLength && pLayout >= layoutBase && pLayout <= layoutBase + layoutInfo.layoutLength;\n  },\n  getModel: function getModel() {\n    return this._model;\n  },\n\n  /**\n   * Update properties from series\n   * @private\n   */\n  _updateAxesFromSeries: function _updateAxesFromSeries(parallelModel, ecModel) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (!parallelModel.contains(seriesModel, ecModel)) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      each(this.dimensions, function (dim) {\n        var axis = this._axesMap.get(dim);\n\n        axis.scale.unionExtentFromData(data, data.mapDimension(dim));\n        axisHelper.niceScaleExtent(axis.scale, axis.model);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * Resize the parallel coordinate system.\n   * @param {module:echarts/coord/parallel/ParallelModel} parallelModel\n   * @param {module:echarts/ExtensionAPI} api\n   */\n  resize: function resize(parallelModel, api) {\n    this._rect = layoutUtil.getLayoutRect(parallelModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._layoutAxes();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function getRect() {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _makeLayoutInfo: function _makeLayoutInfo() {\n    var parallelModel = this._model;\n    var rect = this._rect;\n    var xy = ['x', 'y'];\n    var wh = ['width', 'height'];\n    var layout = parallelModel.get('layout');\n    var pixelDimIndex = layout === 'horizontal' ? 0 : 1;\n    var layoutLength = rect[wh[pixelDimIndex]];\n    var layoutExtent = [0, layoutLength];\n    var axisCount = this.dimensions.length;\n    var axisExpandWidth = restrict(parallelModel.get('axisExpandWidth'), layoutExtent);\n    var axisExpandCount = restrict(parallelModel.get('axisExpandCount') || 0, [0, axisCount]);\n    var axisExpandable = parallelModel.get('axisExpandable') && axisCount > 3 && axisCount > axisExpandCount && axisExpandCount > 1 && axisExpandWidth > 0 && layoutLength > 0; // `axisExpandWindow` is According to the coordinates of [0, axisExpandLength],\n    // for sake of consider the case that axisCollapseWidth is 0 (when screen is narrow),\n    // where collapsed axes should be overlapped.\n\n    var axisExpandWindow = parallelModel.get('axisExpandWindow');\n    var winSize;\n\n    if (!axisExpandWindow) {\n      winSize = restrict(axisExpandWidth * (axisExpandCount - 1), layoutExtent);\n      var axisExpandCenter = parallelModel.get('axisExpandCenter') || mathFloor(axisCount / 2);\n      axisExpandWindow = [axisExpandWidth * axisExpandCenter - winSize / 2];\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    } else {\n      winSize = restrict(axisExpandWindow[1] - axisExpandWindow[0], layoutExtent);\n      axisExpandWindow[1] = axisExpandWindow[0] + winSize;\n    }\n\n    var axisCollapseWidth = (layoutLength - winSize) / (axisCount - axisExpandCount); // Avoid axisCollapseWidth is too small.\n\n    axisCollapseWidth < 3 && (axisCollapseWidth = 0); // Find the first and last indices > ewin[0] and < ewin[1].\n\n    var winInnerIndices = [mathFloor(round(axisExpandWindow[0] / axisExpandWidth, 1)) + 1, mathCeil(round(axisExpandWindow[1] / axisExpandWidth, 1)) - 1]; // Pos in ec coordinates.\n\n    var axisExpandWindow0Pos = axisCollapseWidth / axisExpandWidth * axisExpandWindow[0];\n    return {\n      layout: layout,\n      pixelDimIndex: pixelDimIndex,\n      layoutBase: rect[xy[pixelDimIndex]],\n      layoutLength: layoutLength,\n      axisBase: rect[xy[1 - pixelDimIndex]],\n      axisLength: rect[wh[1 - pixelDimIndex]],\n      axisExpandable: axisExpandable,\n      axisExpandWidth: axisExpandWidth,\n      axisCollapseWidth: axisCollapseWidth,\n      axisExpandWindow: axisExpandWindow,\n      axisCount: axisCount,\n      winInnerIndices: winInnerIndices,\n      axisExpandWindow0Pos: axisExpandWindow0Pos\n    };\n  },\n\n  /**\n   * @private\n   */\n  _layoutAxes: function _layoutAxes() {\n    var rect = this._rect;\n    var axes = this._axesMap;\n    var dimensions = this.dimensions;\n\n    var layoutInfo = this._makeLayoutInfo();\n\n    var layout = layoutInfo.layout;\n    axes.each(function (axis) {\n      var axisExtent = [0, layoutInfo.axisLength];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(axisExtent[idx], axisExtent[1 - idx]);\n    });\n    each(dimensions, function (dim, idx) {\n      var posInfo = (layoutInfo.axisExpandable ? layoutAxisWithExpand : layoutAxisWithoutExpand)(idx, layoutInfo);\n      var positionTable = {\n        horizontal: {\n          x: posInfo.position,\n          y: layoutInfo.axisLength\n        },\n        vertical: {\n          x: 0,\n          y: posInfo.position\n        }\n      };\n      var rotationTable = {\n        horizontal: PI / 2,\n        vertical: 0\n      };\n      var position = [positionTable[layout].x + rect.x, positionTable[layout].y + rect.y];\n      var rotation = rotationTable[layout];\n      var transform = matrix.create();\n      matrix.rotate(transform, transform, rotation);\n      matrix.translate(transform, transform, position); // TODO\n      // tick等排布信息。\n      // TODO\n      // 根据axis order 更新 dimensions顺序。\n\n      this._axesLayout[dim] = {\n        position: position,\n        rotation: rotation,\n        transform: transform,\n        axisNameAvailableWidth: posInfo.axisNameAvailableWidth,\n        axisLabelShow: posInfo.axisLabelShow,\n        nameTruncateMaxWidth: posInfo.nameTruncateMaxWidth,\n        tickDirection: 1,\n        labelDirection: 1\n      };\n    }, this);\n  },\n\n  /**\n   * Get axis by dim.\n   * @param {string} dim\n   * @return {module:echarts/coord/parallel/ParallelAxis} [description]\n   */\n  getAxis: function getAxis(dim) {\n    return this._axesMap.get(dim);\n  },\n\n  /**\n   * Convert a dim value of a single item of series data to Point.\n   * @param {*} value\n   * @param {string} dim\n   * @return {Array}\n   */\n  dataToPoint: function dataToPoint(value, dim) {\n    return this.axisCoordToPoint(this._axesMap.get(dim).dataToCoord(value), dim);\n  },\n\n  /**\n   * Travel data for one time, get activeState of each data item.\n   * @param {module:echarts/data/List} data\n   * @param {Functio} cb param: {string} activeState 'active' or 'inactive' or 'normal'\n   *                            {number} dataIndex\n   * @param {number} [start=0] the start dataIndex that travel from.\n   * @param {number} [end=data.count()] the next dataIndex of the last dataIndex will be travel.\n   */\n  eachActiveState: function eachActiveState(data, callback, start, end) {\n    start == null && (start = 0);\n    end == null && (end = data.count());\n    var axesMap = this._axesMap;\n    var dimensions = this.dimensions;\n    var dataDimensions = [];\n    var axisModels = [];\n    zrUtil.each(dimensions, function (axisDim) {\n      dataDimensions.push(data.mapDimension(axisDim));\n      axisModels.push(axesMap.get(axisDim).model);\n    });\n    var hasActiveSet = this.hasAxisBrushed();\n\n    for (var dataIndex = start; dataIndex < end; dataIndex++) {\n      var activeState;\n\n      if (!hasActiveSet) {\n        activeState = 'normal';\n      } else {\n        activeState = 'active';\n        var values = data.getValues(dataDimensions, dataIndex);\n\n        for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n          var state = axisModels[j].getActiveState(values[j]);\n\n          if (state === 'inactive') {\n            activeState = 'inactive';\n            break;\n          }\n        }\n      }\n\n      callback(activeState, dataIndex);\n    }\n  },\n\n  /**\n   * Whether has any activeSet.\n   * @return {boolean}\n   */\n  hasAxisBrushed: function hasAxisBrushed() {\n    var dimensions = this.dimensions;\n    var axesMap = this._axesMap;\n    var hasActiveSet = false;\n\n    for (var j = 0, lenj = dimensions.length; j < lenj; j++) {\n      if (axesMap.get(dimensions[j]).model.getActiveState() !== 'normal') {\n        hasActiveSet = true;\n      }\n    }\n\n    return hasActiveSet;\n  },\n\n  /**\n   * Convert coords of each axis to Point.\n   *  Return point. For example: [10, 20]\n   * @param {Array.<number>} coords\n   * @param {string} dim\n   * @return {Array.<number>}\n   */\n  axisCoordToPoint: function axisCoordToPoint(coord, dim) {\n    var axisLayout = this._axesLayout[dim];\n    return graphic.applyTransform([coord, 0], axisLayout.transform);\n  },\n\n  /**\n   * Get axis layout.\n   */\n  getAxisLayout: function getAxisLayout(dim) {\n    return zrUtil.clone(this._axesLayout[dim]);\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Object} {axisExpandWindow, delta, behavior: 'jump' | 'slide' | 'none'}.\n   */\n  getSlidedAxisExpandWindow: function getSlidedAxisExpandWindow(point) {\n    var layoutInfo = this._makeLayoutInfo();\n\n    var pixelDimIndex = layoutInfo.pixelDimIndex;\n    var axisExpandWindow = layoutInfo.axisExpandWindow.slice();\n    var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n    var extent = [0, layoutInfo.axisExpandWidth * (layoutInfo.axisCount - 1)]; // Out of the area of coordinate system.\n\n    if (!this.containPoint(point)) {\n      return {\n        behavior: 'none',\n        axisExpandWindow: axisExpandWindow\n      };\n    } // Conver the point from global to expand coordinates.\n\n\n    var pointCoord = point[pixelDimIndex] - layoutInfo.layoutBase - layoutInfo.axisExpandWindow0Pos; // For dragging operation convenience, the window should not be\n    // slided when mouse is the center area of the window.\n\n    var delta;\n    var behavior = 'slide';\n    var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n\n    var triggerArea = this._model.get('axisExpandSlideTriggerArea'); // But consider touch device, jump is necessary.\n\n\n    var useJump = triggerArea[0] != null;\n\n    if (axisCollapseWidth) {\n      if (useJump && axisCollapseWidth && pointCoord < winSize * triggerArea[0]) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * triggerArea[2];\n      } else if (useJump && axisCollapseWidth && pointCoord > winSize * (1 - triggerArea[0])) {\n        behavior = 'jump';\n        delta = pointCoord - winSize * (1 - triggerArea[2]);\n      } else {\n        (delta = pointCoord - winSize * triggerArea[1]) >= 0 && (delta = pointCoord - winSize * (1 - triggerArea[1])) <= 0 && (delta = 0);\n      }\n\n      delta *= layoutInfo.axisExpandWidth / axisCollapseWidth;\n      delta ? sliderMove(delta, axisExpandWindow, extent, 'all') // Avoid nonsense triger on mousemove.\n      : behavior = 'none';\n    } // When screen is too narrow, make it visible and slidable, although it is hard to interact.\n    else {\n        var winSize = axisExpandWindow[1] - axisExpandWindow[0];\n        var pos = extent[1] * pointCoord / winSize;\n        axisExpandWindow = [mathMax(0, pos - winSize / 2)];\n        axisExpandWindow[1] = mathMin(extent[1], axisExpandWindow[0] + winSize);\n        axisExpandWindow[0] = axisExpandWindow[1] - winSize;\n      }\n\n    return {\n      axisExpandWindow: axisExpandWindow,\n      behavior: behavior\n    };\n  }\n};\n\nfunction restrict(len, extent) {\n  return mathMin(mathMax(len, extent[0]), extent[1]);\n}\n\nfunction layoutAxisWithoutExpand(axisIndex, layoutInfo) {\n  var step = layoutInfo.layoutLength / (layoutInfo.axisCount - 1);\n  return {\n    position: step * axisIndex,\n    axisNameAvailableWidth: step,\n    axisLabelShow: true\n  };\n}\n\nfunction layoutAxisWithExpand(axisIndex, layoutInfo) {\n  var layoutLength = layoutInfo.layoutLength;\n  var axisExpandWidth = layoutInfo.axisExpandWidth;\n  var axisCount = layoutInfo.axisCount;\n  var axisCollapseWidth = layoutInfo.axisCollapseWidth;\n  var winInnerIndices = layoutInfo.winInnerIndices;\n  var position;\n  var axisNameAvailableWidth = axisCollapseWidth;\n  var axisLabelShow = false;\n  var nameTruncateMaxWidth;\n\n  if (axisIndex < winInnerIndices[0]) {\n    position = axisIndex * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  } else if (axisIndex <= winInnerIndices[1]) {\n    position = layoutInfo.axisExpandWindow0Pos + axisIndex * axisExpandWidth - layoutInfo.axisExpandWindow[0];\n    axisNameAvailableWidth = axisExpandWidth;\n    axisLabelShow = true;\n  } else {\n    position = layoutLength - (axisCount - 1 - axisIndex) * axisCollapseWidth;\n    nameTruncateMaxWidth = axisCollapseWidth;\n  }\n\n  return {\n    position: position,\n    axisNameAvailableWidth: axisNameAvailableWidth,\n    axisLabelShow: axisLabelShow,\n    nameTruncateMaxWidth: nameTruncateMaxWidth\n  };\n}\n\nvar _default = Parallel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor module:echarts/coord/parallel/ParallelAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n */\n\n\nvar ParallelAxis = function ParallelAxis(dim, scale, coordExtent, axisType, axisIndex) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * @type {number}\n   * @readOnly\n   */\n\n  this.axisIndex = axisIndex;\n};\n\nParallelAxis.prototype = {\n  constructor: ParallelAxis,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/parallel/AxisModel}\n   */\n  model: null,\n\n  /**\n   * @override\n   */\n  isHorizontal: function isHorizontal() {\n    return this.coordinateSystem.getModel().get('layout') !== 'horizontal';\n  }\n};\nzrUtil.inherits(ParallelAxis, Axis);\nvar _default = ParallelAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Component = require(\"../../model/Component\");\n\nrequire(\"./AxisModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = Component.extend({\n  type: 'parallel',\n  dependencies: ['parallelAxis'],\n\n  /**\n   * @type {module:echarts/coord/parallel/Parallel}\n   */\n  coordinateSystem: null,\n\n  /**\n   * Each item like: 'dim0', 'dim1', 'dim2', ...\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: null,\n\n  /**\n   * Coresponding to dimensions.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n  parallelAxisIndex: null,\n  layoutMode: 'box',\n  defaultOption: {\n    zlevel: 0,\n    z: 0,\n    left: 80,\n    top: 60,\n    right: 80,\n    bottom: 60,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    layout: 'horizontal',\n    // 'horizontal' or 'vertical'\n    // FIXME\n    // naming?\n    axisExpandable: false,\n    axisExpandCenter: null,\n    axisExpandCount: 0,\n    axisExpandWidth: 50,\n    // FIXME '10%' ?\n    axisExpandRate: 17,\n    axisExpandDebounce: 50,\n    // [out, in, jumpTarget]. In percentage. If use [null, 0.05], null means full.\n    // Do not doc to user until necessary.\n    axisExpandSlideTriggerArea: [-0.15, 0.05, 0.4],\n    axisExpandTriggerOn: 'click',\n    // 'mousemove' or 'click'\n    parallelAxisDefault: null\n  },\n\n  /**\n   * @override\n   */\n  init: function init() {\n    Component.prototype.init.apply(this, arguments);\n    this.mergeOption({});\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(newOption) {\n    var thisOption = this.option;\n    newOption && zrUtil.merge(thisOption, newOption, true);\n\n    this._initDimensions();\n  },\n\n  /**\n   * Whether series or axis is in this coordinate system.\n   * @param {module:echarts/model/Series|module:echarts/coord/parallel/AxisModel} model\n   * @param {module:echarts/model/Global} ecModel\n   */\n  contains: function contains(model, ecModel) {\n    var parallelIndex = model.get('parallelIndex');\n    return parallelIndex != null && ecModel.getComponent('parallel', parallelIndex) === this;\n  },\n  setAxisExpand: function setAxisExpand(opt) {\n    zrUtil.each(['axisExpandable', 'axisExpandCenter', 'axisExpandCount', 'axisExpandWidth', 'axisExpandWindow'], function (name) {\n      if (opt.hasOwnProperty(name)) {\n        this.option[name] = opt[name];\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _initDimensions: function _initDimensions() {\n    var dimensions = this.dimensions = [];\n    var parallelAxisIndex = this.parallelAxisIndex = [];\n    var axisModels = zrUtil.filter(this.dependentModels.parallelAxis, function (axisModel) {\n      // Can not use this.contains here, because\n      // initialization has not been completed yet.\n      return (axisModel.get('parallelIndex') || 0) === this.componentIndex;\n    }, this);\n    zrUtil.each(axisModels, function (axisModel) {\n      dimensions.push('dim' + axisModel.get('dim'));\n      parallelAxisIndex.push(axisModel.componentIndex);\n    });\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'baseParallelAxis',\n\n  /**\n   * @type {module:echarts/coord/parallel/Axis}\n   */\n  axis: null,\n\n  /**\n   * @type {Array.<Array.<number>}\n   * @readOnly\n   */\n  activeIntervals: [],\n\n  /**\n   * @return {Object}\n   */\n  getAreaSelectStyle: function getAreaSelectStyle() {\n    return makeStyleMapper([['fill', 'color'], ['lineWidth', 'borderWidth'], ['stroke', 'borderColor'], ['width', 'width'], ['opacity', 'opacity']])(this.getModel('areaSelectStyle'));\n  },\n\n  /**\n   * The code of this feature is put on AxisModel but not ParallelAxis,\n   * because axisModel can be alive after echarts updating but instance of\n   * ParallelAxis having been disposed. this._activeInterval should be kept\n   * when action dispatched (i.e. legend click).\n   *\n   * @param {Array.<Array<number>>} intervals interval.length === 0\n   *                                          means set all active.\n   * @public\n   */\n  setActiveIntervals: function setActiveIntervals(intervals) {\n    var activeIntervals = this.activeIntervals = zrUtil.clone(intervals); // Normalize\n\n    if (activeIntervals) {\n      for (var i = activeIntervals.length - 1; i >= 0; i--) {\n        numberUtil.asc(activeIntervals[i]);\n      }\n    }\n  },\n\n  /**\n   * @param {number|string} [value] When attempting to detect 'no activeIntervals set',\n   *                         value can not be input.\n   * @return {string} 'normal': no activeIntervals set,\n   *                  'active',\n   *                  'inactive'.\n   * @public\n   */\n  getActiveState: function getActiveState(value) {\n    var activeIntervals = this.activeIntervals;\n\n    if (!activeIntervals.length) {\n      return 'normal';\n    }\n\n    if (value == null || isNaN(value)) {\n      return 'inactive';\n    } // Simple optimization\n\n\n    if (activeIntervals.length === 1) {\n      var interval = activeIntervals[0];\n\n      if (interval[0] <= value && value <= interval[1]) {\n        return 'active';\n      }\n    } else {\n      for (var i = 0, len = activeIntervals.length; i < len; i++) {\n        if (activeIntervals[i][0] <= value && value <= activeIntervals[i][1]) {\n          return 'active';\n        }\n      }\n    }\n\n    return 'inactive';\n  }\n});\nvar defaultOption = {\n  type: 'value',\n\n  /**\n   * @type {Array.<number>}\n   */\n  dim: null,\n  // 0, 1, 2, ...\n  // parallelIndex: null,\n  areaSelectStyle: {\n    width: 20,\n    borderWidth: 1,\n    borderColor: 'rgba(160,197,232)',\n    color: 'rgba(160,197,232)',\n    opacity: 0.3\n  },\n  realtime: true,\n  // Whether realtime update view when select.\n  z: 10\n};\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\naxisModelCreator('parallel', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Single = require(\"./Single\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinate system creator.\n */\n\n/**\n * Create single coordinate system and inject it into seriesModel.\n *\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Array.<module:echarts/coord/single/Single>}\n */\n\n\nfunction create(ecModel, api) {\n  var singles = [];\n  ecModel.eachComponent('singleAxis', function (axisModel, idx) {\n    var single = new Single(axisModel, ecModel, api);\n    single.name = 'single_' + idx;\n    single.resize(axisModel, api);\n    axisModel.coordinateSystem = single;\n    singles.push(single);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (seriesModel.get('coordinateSystem') === 'singleAxis') {\n      var singleAxisModel = ecModel.queryComponents({\n        mainType: 'singleAxis',\n        index: seriesModel.get('singleAxisIndex'),\n        id: seriesModel.get('singleAxisId')\n      })[0];\n      seriesModel.coordinateSystem = singleAxisModel && singleAxisModel.coordinateSystem;\n    }\n  });\n  return singles;\n}\n\nCoordinateSystem.register('single', {\n  create: create,\n  dimensions: Single.prototype.dimensions\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SingleAxis = require(\"./SingleAxis\");\n\nvar axisHelper = require(\"../axisHelper\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Single coordinates system.\n */\n\n/**\n * Create a single coordinates system.\n *\n * @param {module:echarts/coord/single/AxisModel} axisModel\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\nfunction Single(axisModel, ecModel, api) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.dimension = 'single';\n  /**\n   * Add it just for draw tooltip.\n   *\n   * @type {Array.<string>}\n   * @readOnly\n   */\n\n  this.dimensions = ['single'];\n  /**\n   * @private\n   * @type {module:echarts/coord/single/SingleAxis}.\n   */\n\n  this._axis = null;\n  /**\n   * @private\n   * @type {module:zrender/core/BoundingRect}\n   */\n\n  this._rect;\n\n  this._init(axisModel, ecModel, api);\n  /**\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n\n\n  this.model = axisModel;\n}\n\nSingle.prototype = {\n  type: 'singleAxis',\n  axisPointerEnabled: true,\n  constructor: Single,\n\n  /**\n   * Initialize single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   * @private\n   */\n  _init: function _init(axisModel, ecModel, api) {\n    var dim = this.dimension;\n    var axis = new SingleAxis(dim, axisHelper.createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisModel.get('position'));\n    var isCategory = axis.type === 'category';\n    axis.onBand = isCategory && axisModel.get('boundaryGap');\n    axis.inverse = axisModel.get('inverse');\n    axis.orient = axisModel.get('orient');\n    axisModel.axis = axis;\n    axis.model = axisModel;\n    axis.coordinateSystem = this;\n    this._axis = axis;\n  },\n\n  /**\n   * Update axis scale after data processed\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  update: function update(ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      if (seriesModel.coordinateSystem === this) {\n        var data = seriesModel.getData();\n        each(data.mapDimension(this.dimension, true), function (dim) {\n          this._axis.scale.unionExtentFromData(data, dim);\n        }, this);\n        axisHelper.niceScaleExtent(this._axis.scale, this._axis.model);\n      }\n    }, this);\n  },\n\n  /**\n   * Resize the single coordinate system.\n   *\n   * @param  {module:echarts/coord/single/AxisModel} axisModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  resize: function resize(axisModel, api) {\n    this._rect = getLayoutRect({\n      left: axisModel.get('left'),\n      top: axisModel.get('top'),\n      right: axisModel.get('right'),\n      bottom: axisModel.get('bottom'),\n      width: axisModel.get('width'),\n      height: axisModel.get('height')\n    }, {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n\n    this._adjustAxis();\n  },\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getRect: function getRect() {\n    return this._rect;\n  },\n\n  /**\n   * @private\n   */\n  _adjustAxis: function _adjustAxis() {\n    var rect = this._rect;\n    var axis = this._axis;\n    var isHorizontal = axis.isHorizontal();\n    var extent = isHorizontal ? [0, rect.width] : [0, rect.height];\n    var idx = axis.reverse ? 1 : 0;\n    axis.setExtent(extent[idx], extent[1 - idx]);\n\n    this._updateAxisTransform(axis, isHorizontal ? rect.x : rect.y);\n  },\n\n  /**\n   * @param  {module:echarts/coord/single/SingleAxis} axis\n   * @param  {number} coordBase\n   */\n  _updateAxisTransform: function _updateAxisTransform(axis, coordBase) {\n    var axisExtent = axis.getExtent();\n    var extentSum = axisExtent[0] + axisExtent[1];\n    var isHorizontal = axis.isHorizontal();\n    axis.toGlobalCoord = isHorizontal ? function (coord) {\n      return coord + coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n    axis.toLocalCoord = isHorizontal ? function (coord) {\n      return coord - coordBase;\n    } : function (coord) {\n      return extentSum - coord + coordBase;\n    };\n  },\n\n  /**\n   * Get axis.\n   *\n   * @return {module:echarts/coord/single/SingleAxis}\n   */\n  getAxis: function getAxis() {\n    return this._axis;\n  },\n\n  /**\n   * Get axis, add it just for draw tooltip.\n   *\n   * @return {[type]} [description]\n   */\n  getBaseAxis: function getBaseAxis() {\n    return this._axis;\n  },\n\n  /**\n   * @return {Array.<module:echarts/coord/Axis>}\n   */\n  getAxes: function getAxes() {\n    return [this._axis];\n  },\n\n  /**\n   * @return {Object} {baseAxes: [], otherAxes: []}\n   */\n  getTooltipAxes: function getTooltipAxes() {\n    return {\n      baseAxes: [this.getAxis()]\n    };\n  },\n\n  /**\n   * If contain point.\n   *\n   * @param  {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function containPoint(point) {\n    var rect = this.getRect();\n    var axis = this.getAxis();\n    var orient = axis.orient;\n\n    if (orient === 'horizontal') {\n      return axis.contain(axis.toLocalCoord(point[0])) && point[1] >= rect.y && point[1] <= rect.y + rect.height;\n    } else {\n      return axis.contain(axis.toLocalCoord(point[1])) && point[0] >= rect.y && point[0] <= rect.y + rect.height;\n    }\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @return {Array.<number>}\n   */\n  pointToData: function pointToData(point) {\n    var axis = this.getAxis();\n    return [axis.coordToData(axis.toLocalCoord(point[axis.orient === 'horizontal' ? 0 : 1]))];\n  },\n\n  /**\n   * Convert the series data to concrete point.\n   *\n   * @param  {number|Array.<number>} val\n   * @return {Array.<number>}\n   */\n  dataToPoint: function dataToPoint(val) {\n    var axis = this.getAxis();\n    var rect = this.getRect();\n    var pt = [];\n    var idx = axis.orient === 'horizontal' ? 0 : 1;\n\n    if (val instanceof Array) {\n      val = val[0];\n    }\n\n    pt[idx] = axis.toGlobalCoord(axis.dataToCoord(+val));\n    pt[1 - idx] = idx === 0 ? rect.y + rect.height / 2 : rect.x + rect.width / 2;\n    return pt;\n  }\n};\nvar _default = Single;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor  module:echarts/coord/single/SingleAxis\n * @extends {module:echarts/coord/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar SingleAxis = function SingleAxis(dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   * - 'category'\n   * - 'value'\n   * - 'time'\n   * - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   *  @type {string}\n   */\n\n  this.position = position || 'bottom';\n  /**\n   * Axis orient\n   *  - 'horizontal'\n   *  - 'vertical'\n   * @type {[type]}\n   */\n\n  this.orient = null;\n};\n\nSingleAxis.prototype = {\n  constructor: SingleAxis,\n\n  /**\n   * Axis model\n   * @type {module:echarts/coord/single/AxisModel}\n   */\n  model: null,\n\n  /**\n   * Judge the orient of the axis.\n   * @return {boolean}\n   */\n  isHorizontal: function isHorizontal() {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function pointToData(point, clamp) {\n    return this.coordinateSystem.pointToData(point, clamp)[0];\n  },\n\n  /**\n   * Convert the local coord(processed by dataToCoord())\n   * to global coord(concrete pixel coord).\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toGlobalCoord: null,\n\n  /**\n   * Convert the global coord to local coord.\n   * designated by module:echarts/coord/single/Single.\n   * @type {Function}\n   */\n  toLocalCoord: null\n};\nzrUtil.inherits(SingleAxis, Axis);\nvar _default = SingleAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisModel = ComponentModel.extend({\n  type: 'singleAxis',\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/single/SingleAxis}\n   */\n  axis: null,\n\n  /**\n   * @type {module:echarts/coord/single/Single}\n   */\n  coordinateSystem: null,\n\n  /**\n   * @override\n   */\n  getCoordSysModel: function getCoordSysModel() {\n    return this;\n  }\n});\nvar defaultOption = {\n  left: '5%',\n  top: '5%',\n  right: '5%',\n  bottom: '5%',\n  type: 'value',\n  position: 'bottom',\n  orient: 'horizontal',\n  axisLine: {\n    show: true,\n    lineStyle: {\n      width: 1,\n      type: 'solid'\n    }\n  },\n  // Single coordinate system and single axis is the,\n  // which is used as the parent tooltip model.\n  // same model, so we set default tooltip show as true.\n  tooltip: {\n    show: true\n  },\n  axisTick: {\n    show: true,\n    length: 6,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    interval: 'auto'\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      type: 'dashed',\n      opacity: 0.2\n    }\n  }\n};\n\nfunction getAxisType(axisName, option) {\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\naxisModelCreator('single', AxisModel, getAxisType, defaultOption);\nvar _default = AxisModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  // dataItem is necessary in log axis.\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map(['x', 'y'], function (dim, dimIdx) {\n    var axis = this.getAxis(dim);\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    return axis.type === 'category' ? axis.getBandWidth() : Math.abs(axis.dataToCoord(val - halfSize) - axis.dataToCoord(val + halfSize));\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.grid.getRect();\n  return {\n    coordSys: {\n      // The name exposed to user is always 'cartesian2d' but not 'grid'.\n      type: 'cartesian2d',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    },\n    api: {\n      coord: function coord(data) {\n        // do not provide \"out\" param\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction dataToCoordSize(dataSize, dataItem) {\n  dataItem = dataItem || [0, 0];\n  return zrUtil.map([0, 1], function (dimIdx) {\n    var val = dataItem[dimIdx];\n    var halfSize = dataSize[dimIdx] / 2;\n    var p1 = [];\n    var p2 = [];\n    p1[dimIdx] = val - halfSize;\n    p2[dimIdx] = val + halfSize;\n    p1[1 - dimIdx] = p2[1 - dimIdx] = dataItem[1 - dimIdx];\n    return Math.abs(this.dataToPoint(p1)[dimIdx] - this.dataToPoint(p2)[dimIdx]);\n  }, this);\n}\n\nfunction _default(coordSys) {\n  var rect = coordSys.getBoundingRect();\n  return {\n    coordSys: {\n      type: 'geo',\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height,\n      zoom: coordSys.getZoom()\n    },\n    api: {\n      coord: function coord(data) {\n        // do not provide \"out\" and noRoam param,\n        // Compatible with this usage:\n        // echarts.util.map(item.points, api.coord)\n        return coordSys.dataToPoint(data);\n      },\n      size: zrUtil.bind(dataToCoordSize, coordSys)\n    }\n  };\n}\n\nmodule.exports = _default;"],"sourceRoot":""}