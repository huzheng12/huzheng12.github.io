{"version":3,"sources":["../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/createListFromArray.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/treeHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/createRenderPlanner.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/createListSimply.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/SymbolDraw.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/createClipPathFromCoordSys.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/Symbol.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/labelHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/LineDraw.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/Line.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/line/helper.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/line/poly.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree/layoutHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/createGraphFromNodeEdge.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/focusNodeAdjacencyAction.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/whiskerBoxCommon.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/EffectLine.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/Polyline.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/lines/linesLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/line.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/line/LineSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/line/LineView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/line/lineAnimationDiff.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/pie.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/pie/PieSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/pie/PieView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/pie/pieLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/pie/labelLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/scatter.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/scatter/ScatterSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/scatter/ScatterView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/LargeSymbolDraw.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/radar.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/radar/RadarSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/radar/RadarView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/radar/radarLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/radar/backwardCompat.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map/MapSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map/MapView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map/mapSymbolLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map/mapVisual.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map/mapDataStatistic.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/map/backwardCompat.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree/TreeSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree/TreeView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree/treeAction.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree/treeLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/tree/traversalHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap/TreemapSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap/TreemapView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap/Breadcrumb.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap/treemapAction.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap/treemapVisual.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/treemap/treemapLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/LinePath.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/parallel.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/parallel/ParallelSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/parallel/ParallelView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/parallel/parallelVisual.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sankey.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sankey/SankeySeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sankey/SankeyView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sankey/sankeyAction.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sankey/sankeyLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sankey/sankeyVisual.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/EffectSymbol.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/lines.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/lines/LinesSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/lines/LinesView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/EffectPolyline.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/helper/LargeLineDraw.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/lines/linesVisual.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/heatmap.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/heatmap/HeatmapSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/heatmap/HeatmapView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/heatmap/HeatmapLayer.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/pictorialBar.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/themeRiver.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/themeRiver/ThemeRiverSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/themeRiver/ThemeRiverView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/themeRiver/themeRiverLayout.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/themeRiver/themeRiverVisual.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sunburst.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sunburst/SunburstSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sunburst/SunburstView.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sunburst/SunburstPiece.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sunburst/sunburstAction.js","../node_modules/_echarts@4.8.0@echarts/lib/chart/sunburst/sunburstLayout.js"],"names":["zrUtil","__webpack_require__","List","createDimensions","SOURCE_FORMAT_ORIGINAL","getDimensionTypeByAxis","getDataItemValue","CoordinateSystem","getCoordSysInfoBySeries","Source","enableDataStack","makeSeriesEncodeForAxisCoordSys","_default","source","seriesModel","opt","isInstance","seriesDataToSource","coordSysDimDefs","coordSysName","get","registeredCoordSys","coordSysInfo","map","coordSysDims","dim","dimInfo","name","axisModel","axisMap","axisType","type","getDimensionsInfo","dimensions","slice","firstCategoryDimIndex","hasNameEncode","dimInfoList","coordDimensions","generateCoord","encodeDefaulter","useEncodeDefaulter","curry","each","dimIndex","coordDim","categoryAxisModel","categoryAxisMap","ordinalMeta","getOrdinalMeta","otherDims","itemName","stackCalculationInfo","list","setCalculationInfo","dimValueGetter","sourceFormat","sampleItem","data","i","length","firstDataNotNull","isArray","isNeedCompleteOrdinalData","itemOpt","dimName","dataIndex","this","defaultDimValueGetter","hasItemOption","initData","module","exports","getPathToRoot","node","path","parentNode","push","reverse","retrieveTargetInfo","payload","validPayloadTypes","indexOf","root","getData","tree","targetNode","getNodeById","contains","targetNodeId","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","value","getRawValue","makeInner","inner","fields","pipelineContext","originalLarge","large","originalProgressive","progressiveRender","progressive","_util","extend","nameList","getSource","dimensionsInfo","graphic","SymbolClz","isObject","SymbolDraw","symbolCtor","group","Group","_symbolCtor","symbolDrawProto","prototype","symbolNeedsDraw","point","idx","isNaN","isIgnore","clipShape","contain","getItemVisual","normalizeUpdateOpt","makeSeriesScope","hostModel","itemStyle","getModel","getItemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverAnimation","labelModel","hoverLabelModel","cursorStyle","updateData","oldData","_data","SymbolCtor","seriesScope","removeAll","diff","add","newIdx","getItemLayout","symbolEl","attr","setItemGraphicEl","update","oldIdx","getItemGraphicEl","updateProps","position","remove","el","fadeOut","execute","isPersistent","updateLayout","eachItemGraphicEl","incrementalPrepareUpdate","_seriesScope","incrementalUpdate","taskParams","updateIncrementalAndHover","isGroup","incremental","useHoverLayer","start","end","traverse","enableAnimation","round","createGridClipPath","cartesian","hasAnimation","rect","getArea","isHorizontal","getBaseAxis","x","y","width","height","lineWidth","Math","floor","clipPath","Rect","shape","initProps","createPolarClipPath","polar","sectorArea","Sector","cx","cy","r0","r","startAngle","endAngle","clockwise","createClipPath","coordSys","createSymbol","parsePercent","getDefaultLabel","call","symbolProto","getSymbolSize","symbolSize","Array","getScale","driftSymbol","dx","dy","parent","drift","_createSymbol","symbolType","keepAspect","color","symbolPath","z2","culling","scale","_symbolType","stopSymbolAnimation","toLastFrame","childAt","stopAnimation","getSymbolPath","highlight","trigger","downplay","setZ","zlevel","z","setDraggable","draggable","cursor","silent","isInit","_updateCommon","fadeIn","target","style","opacity","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","highDownOnUpdate","fromState","toState","__symbolOriginalScale","ratio","emphasisOpt","max","animateTo","useStyle","strokeNoScale","setStyle","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","itemModel","getItemModel","getShallow","elStyle","PI","setColor","symbolInnerColor","liftZ","z2Origin","__z2Origin","useNameLabel","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getName","isRectText","autoColor","hoverStyle","isAnimationEnabled","setHoverStyle","cb","keepLabel","text","inherits","retrieveRawValue","labelDims","mapDimension","len","vals","val","join","LineGroup","LineDraw","ctor","_ctor","lineDrawProto","lineData","lineStyle","getLineStyle","hoverLineStyle","isPointNaN","pt","lineNeedsDraw","pts","lineDraw","oldLineData","_lineData","doAdd","newLineData","itemEl","doUpdate","animators","isEffectObject","_clearIncremental","_incremental","clearDisplaybles","vector","symbolUtil","LinePath","SYMBOL_CATEGORIES","makeSymbolTypeKey","symbolCategory","setLinePoints","targetShape","points","x1","y1","x2","y2","percent","cp1","cpx1","cpy1","NaN","Line","_createLine","lineProto","beforeUpdate","symbolFrom","childOfName","symbolTo","label","ignore","invScale","line","__dirty","fromPos","pointAt","toPos","d","sub","normalize","tangent","tangentAt","atan2","textPosition","textAlign","textVerticalAlign","textOrigin","distance","__labelDistance","distanceX","distanceY","halfPercent","n","cp","dir","__position","rotation","__verticalAlign","__textAlign","origin","subPixelOptimize","createLine","Text","lineLabelOriginalOpacity","symbol","_updateCommonStl","linePoints","key","visualColor","visualOpacity","retrieve3","defaults","fill","stroke","defaultLabelColor","baseText","showLabel","hoverShowLabel","getFormattedLabel","dataType","rawVal","isFinite","normalText","emphasisText","retrieve2","labelStyle","setTextStyle","textFill","getTextColor","fontStyle","fontWeight","fontSize","fontFamily","linePath","dirty","isDimensionStacked","prepareDataCoordInfo","valueOrigin","stacked","baseAxis","valueAxis","getOtherAxis","valueStart","extent","getExtent","getValueStart","baseAxisDim","valueAxisDim","valueDim","baseDim","baseDataOffset","dims","stackResultDim","getCalculationInfo","dataDimsForPoint","stackedOverDimension","getStackedOnPoint","dataCoordInfo","stackedData","dataToPoint","Path","vec2","fixClipWithShadow","vec2Min","min","vec2Max","scaleAndAdd","v2Copy","copy","v","cp0","isPointNull","p","drawSegment","ctx","segLen","allLen","smoothMin","smoothMax","smooth","smoothMonotone","connectNulls","prevIdx","k","prevP","ctrlLen","bezierCurveTo","lineTo","apply","arguments","nextIdx","nextP","ratioNextSeg","lenPrevSeg","lenNextSeg","abs","dist","getBoundingBox","smoothConstraint","ptMin","Infinity","ptMax","Polyline","brush","buildPath","result","Polygon","stackedOnPoints","stackedOnSmooth","bbox","stackedOnBBox","closePath","layout","nextRight","children","isExpand","hierNode","thread","nextLeft","nextAncestor","nodeInLeft","ancestor","moveSubtree","wl","wr","shift","change","modifier","prelim","defaultSeparation","node1","node2","init","defaultAncestor","nodes","pop","child","firstWalk","separation","siblings","subtreeW","executeShifts","midPoint","subtreeV","nodeOutRight","nodeInRight","nodeOutLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","apportion","secondWalk","nodeX","setLayout","radialCoordinate","radialCoor","cos","sin","getViewRect","api","getLayoutRect","getBoxLayoutParams","getWidth","getHeight","Graph","linkList","createListFromArray","edges","directed","beforeLink","graph","addNode","retrieve","id","linkNameList","validEdges","linkCount","link","addEdge","nodeData","coordSysCtor","concat","dimensionNames","edgeData","mainData","struct","structAttr","datas","edge","datasAttr","echarts","registerAction","event","createListSimply","seriesModelMixin","_baseAxisDim","getInitialData","option","ecModel","addOrdinal","xAxisModel","getComponent","yAxisModel","xAxisType","yAxisType","coordDims","baseAxisDimIndex","otherAxisDim","axisModels","baseAxisType","otherAxisType","newOptionData","item","index","newItem","unshift","defaultValueDimensions","tooltip","dimsDef","dimensionsCount","axis","curveUtil","EffectLine","_updateEffectSymbol","effectLineProto","effectModel","size","_symbolScale","_updateEffectAnimation","self","period","loop","constantSpeed","delayExpr","count","isDelayFunc","updateAnimationPoints","getLineLength","_period","_loop","delay","__t","animator","animate","when","during","updateSymbolPosition","done","__p1","__cp1","__p2","p1","p2","t","pos","lastPos","quadraticAt","quadraticDerivativeAt","tx","ty","undefined","__lastT","scaleY","_createPolyline","polylineProto","setShape","seriesType","plan","createRenderPlanner","reset","coordinateSystem","isPolyline","isLarge","progress","params","lineCoords","segCount","totalCoordsCount","getLineCoordsCount","Float32Array","offset","getLineCoords","j","curveness","setItemLayout","visualSymbol","layoutPoints","dataSample","registerVisual","registerLayout","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","__DEV__","dependencies","defaultOption","legendHoverLink","clip","step","showSymbol","showAllSymbol","sampling","animationEasing","hoverLayerThreshold","fromPoints","lineAnimationDiff","modelUtil","_poly","ChartView","_helper","_createClipPathFromCoordSys","isPointsSame","points1","points2","getBoundingDiff","min1","max1","min2","max2","getSmooth","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","stepPt","middle","stepPt2","getIsIgnoreFunc","isAuto","categoryAxis","getAxesByScale","axisExtent","availSize","dataLen","canShowAllSymbolForCategory","categoryDataDim","labelMap","getViewLabels","labelItem","tickValue","hasOwnProperty","createLineClipPath","rectShape","expandSize","lineGroup","symbolDraw","_symbolDraw","_lineGroup","render","lineStyleModel","areaStyleModel","mapArray","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","isEmpty","getStackedOnPoints","isIgnoreFunc","__temp","clipShapeForSymbol","r1","_clipShapeForSymbol","_step","_newPolygon","setClipPath","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualMetaList","getVisual","visualMeta","dimension","getDimensionInfo","getAxis","colorStops","stops","stop","coord","toGlobalCoord","dataToCoord","stopLen","outerColors","minCoord","maxCoord","coordSpan","gradient","LinearGradient","getVisualGradient","lineJoin","stackedOnSeries","getAreaStyle","_valueOrigin","dispose","queryDataIndex","current","stackedOnCurrent","next","stackedOnNext","__points","updatedDataInfo","diffStatus","status","cmd","idx1","ptIdx","newData","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","oldValueOrigin","newValueOrigin","diffResult","diffData","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","newDataOldCoordInfo","oldDataNewCoordInfo","diffItem","pointAdded","currentPt","getRawIndex","rawIndex","sort","a","b","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","createDataSelectAction","dataColor","pieLayout","dataFilter","method","getPercentWithPrecision","dataSelectableMixin","retrieveRawAttr","makeSeriesEncodeForNameBased","LegendVisualProvider","PieSeries","extendSeriesModel","superApply","legendVisualProvider","bind","getRawData","updateSelectedMap","_createSelectableList","_defaultLabelLine","mergeOption","newOption","superCall","targetList","selected","getDataParams","valueList","$vars","defaultEmphasis","labelLineNormalOpt","labelLine","labelLineEmphasisOpt","emphasis","show","center","radius","minAngle","minShowLabelAngle","selectedOffset","hoverOffset","avoidLabelOverlap","percentPrecision","stillShowZeroSum","left","top","right","bottom","rotate","alignTo","margin","bleedMargin","distanceToLabelLine","length2","borderWidth","animationType","animationTypeUpdate","mixin","updateDataSelected","uid","dispatchAction","from","seriesId","toggleItemSelected","isSelected","midAngle","PiePiece","sector","piePieceProto","firstCreate","labelText","sectorShape","withAnimation","_updateLabel","hoverIgnore","normalIgnore","labelLayout","targetLineShape","targetTextStyle","labelHoverModel","labelLineModel","labelLineHoverModel","useInsideStyle","inside","verticalAlign","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","eachChild","on","off","s","removeClipPath","_createClipPath","containPoint","itemLayout","sqrt","_number","linearMap","PI2","RADIAN","eachSeriesByType","viewRect","validDataCount","sum","getSum","unitRadian","roseType","getDataExtent","restAngle","valueSumLargerThanMinAngle","currentAngle","angle","textContain","adjustSingleSide","viewWidth","viewHeight","viewLeft","viewTop","farthestX","shiftDown","delta","shiftUp","changeX","isDownList","lastDeltaX","Number","MAX_VALUE","l","labelAlignTo","deltaY","len2","deltaX","lastY","upList","downList","isPositionCenter","labelLayoutList","hasLabelRotate","minShowLabelRadian","labelPosition","labelDistance","labelMargin","font","getFont","labelLineLen","labelLineLen2","textX","textY","labelRotate","textRect","getBoundingRect","isLabelInside","x3","leftList","rightList","leftmostX","rightmostX","targetTextWidth","isAlignToEdge","realTextWidth","truncateText","avoidOverlap","brushSelector","getProgressive","getProgressiveThreshold","progressiveThreshold","largeThreshold","LargeSymbolDraw","pointsLayout","extendChartView","_updateSymbolDraw","_getClipShape","_finished","incrementalPrepareRender","incrementalRender","updateTransform","res","clipArea","isLargeDraw","_isLargeDraw","IncrementalDisplayable","LargeSymbolPath","extendShape","symbolProxy","softClipShape","symbolProxyShape","getContext","afterBrush","setTransform","fillRect","restoreTransform","findDataIndex","w","h","x0","y0","largeSymbolProto","rectHover","getLayout","_setCommon","startIndex","endIndex","byteOffset","buffer","addDisplayable","isIncremental","extrudeShadow","seriesIndex","e","offsetX","offsetY","radarLayout","backwardCompat","registerPreprocessor","SeriesModel","encodeHTML","RadarSeries","generateCoordCount","formatTooltip","indicatorAxes","getIndicatorAxes","getTooltipPosition","values","getValues","coordToPoint","radarIndex","normalizeSymbolSize","updateSymbols","oldPoints","newPoints","symbolGroup","__dimIdx","getInitialPoints","itemGroup","hoverAreaStyleModel","polygonIgnore","parentModel","hoverPolygonIgnore","itemHoverStyle","clone","labelDimIndex","isValidPoint","getValueMissingPoint","axes","axisIndex","firstPoint","find","polarOptArr","polarNotRadar","polarOpt","indicator","radar","series","seriesOpt","polarIndex","mapSymbolLayout","mapVisual","mapDataStatistic","_format","addCommas","geoSourceManager","MapSeries","layoutMode","needsDrawMap","seriesGroup","dataNameMap","createHashMap","selectTargetList","toAppendNames","set","geoSource","load","getMapType","nameMap","nameProperty","regions","region","appendValues","getHostGeoModel","geoIndex","dependentModels","geo","getRegionModel","regionName","indexOfName","formattedValue","seriesNames","otherIndex","originalData","getRegion","setZoom","zoom","setCenter","aspectScale","showLegendSymbol","dataRangeHoverLink","boundingCoords","scaleLimit","borderColor","areaColor","MapDraw","HIGH_DOWN_PROP","RECORD_VERSION_PROP","mapModel","componentType","mapDraw","_mapDraw","draw","_renderSymbols","originalDataIndex","circle","Circle","Z2_EMPHASIS_LIFT","fullData","mainSeries","fullIndex","regionGroup","highDownRecord","recordVersion","random","onEmphasis","onRegionHighDown","onNormal","enterRegionHighDown","toHighOrDown","extendFrom","__mapOriginalZ2","processedMapType","mapSeries","mapType","mapSymbolOffsets","subMapSeries","colorList","itemStyleModel","setVisual","seriesGroups","hostGeoModel","seriesList","statisticType","mapKey","dataStatistics","setData","cloneShallow","mapLocation","treeLayout","Tree","Model","layoutInfo","leaves","leavesModel","createTree","wrapMethod","model","getNodeByDataIndex","treeDepth","eachNode","depth","expandTreeDepth","expandAndCollapse","initialTreeDepth","hostTree","getRawDataItem","collapsed","getOrient","orient","realRoot","getValue","edgeShape","edgeForkPosition","roam","nodeScaleRatio","animationDuration","animationDurationUpdate","View","roamHelper","RoamController","onIrrelevantElement","TreeShape","parentPoint","childPoints","forkPosition","childLen","firstChildPos","lastChildPos","moveTo","forkDim","otherDim","tmpPoint","_oldTree","_mainGroup","_controller","getZr","_controllerHost","_updateViewCoordSys","_updateController","curvature","updateNode","removeNode","_nodeScaleRatio","_updateNodeAndLinkScale","oldMin","_min","oldMax","_max","viewCoordSys","zoomLimit","setBoundingRect","_viewCoordSys","controller","controllerHost","setPointerChecker","applyTransform","transform","enable","getZoom","updateViewOnPan","updateViewOnZoom","originX","originY","nodeScale","_getNodeGlobalScale","groupScale","groupZoom","getTreeNodeStyle","virtualRoot","sourceSymbolEl","sourceLayout","sourceOldLayout","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","__radialRawX","__radialRawY","rad","isLeft","rootLayout","labelRotateRadian","textRotation","__edge","BezierCurve","getEdgeShape","childLayout","drawEdge","sourceEdge","cpx2","cpy2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","updateCenterAndZoom","eachComponent","mainType","subType","query","_traversalHelper","eachAfter","eachBefore","_layoutHelper","sep","kx","ky","coorX","coorY","finalCoor","commonLayout","callback","treemapVisual","treemapLayout","preventUsingHoverLayer","_viewRoot","clipWindow","squareRatio","leafDepth","drillDownIcon","zoomToNodeRatio","nodeClick","animation","breadcrumb","emptyItemWidth","textStyle","padding","ellipsis","upperLabel","colorAlpha","colorSaturation","gapWidth","borderColorSaturation","visualDimension","visualMin","visualMax","colorMappingBy","visibleMin","childrenVisibleMin","levels","completeTreeValue","dataNode","childValue","thisValue","hasColorDefine","globalColorList","levelDefine","modelColor","level0","setDefault","levelModels","levelModel","optionUpdated","resetViewRoot","setLayoutInfo","mapIdToIndex","idIndexMap","_idIndexMap","_idIndexMapCount","getViewRoot","DataDiffer","helper","Breadcrumb","BoundingRect","matrix","animationUtil","makeStyleMapper","windowOpen","PATH_LABEL_NOAMAL","PATH_LABEL_EMPHASIS","PATH_UPPERLABEL_NORMAL","PATH_UPPERLABEL_EMPHASIS","Z_BASE","Z_BG","Z_CONTENT","getItemStyleEmphasis","getItemStyleNormal","o","_containerGroup","_storage","nodeGroup","background","content","_breadcrumb","_state","models","findComponents","targetInfo","payloadType","thisStorage","reRoot","rootNodeGroup","direction","containerGroup","_giveContainerGroup","renderResult","_doRender","renderFinally","_doAnimation","_resetController","_renderBreadcrumb","_initEvents","thisTree","oldTree","lastsForAnimation","oldStorage","willInvisibleEls","doRenderNode","renderNode","dualTravel","thisViewChildren","oldViewChildren","parentGroup","sameTree","isRemoved","processNode","getKey","getId","newIndex","oldIndex","thisNode","oldNode","viewChildren","willDeleteEls","storage","store","storageName","delEls","__tmWillDelete","clearStorage","els","invisible","duration","easing","animationWrap","createWrap","__tmNodeWidth","__tmNodeHeight","targetX","targetY","last","old","fadein","_onPan","_onZoom","_clearController","rootRect","mouseX","mouseY","m","create","translate","findTarget","isLeafRoot","_rootToNode","_zoomToNode","linkTarget","order","bgEl","transformCoordToLocal","thisLayout","isInView","thisWidth","thisHeight","thisInvisible","thisRawIndex","oldRawIndex","upperHeight","isParent","itemStyleNormalModel","itemStyleEmphasisModel","giveGraphic","isAboveViewRoot","nodeModel","bg","useUpperLabel","processInvisible","visualBorderColor","emphasisBorderColor","normalStyle","emphasisStyle","upperLabelWidth","prepareText","setElementHoverStyle","renderBackground","upperLabelHeight","isHighDownDispatcher","setAsHighDownDispatcher","contentWidth","contentHeight","renderContent","element","upperLabelRect","normalLabelModel","emphasisLabelModel","isShow","labelProp","addDrillDownIcon","truncate","outerWidth","outerHeight","minChar","iconChar","Ctor","lasts","prepareAnimationWhenHasOld","calculateZ","__tmDepth","__tmStorageName","lastCfg","parentOldX","parentOldY","parentOldBg","prepareAnimationWhenNoOld","zInLevel","zb","ARRAY_LENGTH","makeItemPoints","itemWidth","itemHeight","head","tail","splice","packEventData","itemNode","eventData","componentSubType","componentIndex","seriesName","selfType","constructor","onSelect","thisGroup","normalStyleModel","textStyleModel","layoutParam","box","totalWidth","renderList","_prepare","_renderContent","positionElement","getTextRect","TEXT_PADDING","lastX","availableSize","getAvailableSize","textFont","onclick","noop","actionTypes","originViewRoot","VisualMapping","zrColor","ITEM_STYLE_NORMAL","seriesItemStyleModel","travelTree","designatedVisual","levelItemStyles","viewRootAncestors","nodeLayout","nodeItemStyleModel","levelItemStyle","visuals","visualName","buildVisuals","thisNodeColor","calculateColor","modifyHSL","calculateBorderColor","mapping","rangeVisual","getRangeVisual","dataExtent","visual","range","mappingMethod","__drColorMappingBy","buildVisualMapping","childVisual","childVisuals","mappingType","mapValueToVisual","getAncestors","getValueVisualDefine","modifyAlpha","MAX_SAFE_INTEGER","mathMax","mathMin","retrieveValue","PATH_BORDER_WIDTH","PATH_GAP_WIDTH","PATH_UPPER_LABEL_SHOW","PATH_UPPER_LABEL_HEIGHT","ecWidth","ecHeight","seriesOption","containerWidth","containerHeight","viewAbovePath","rootSize","currNode","defaultSize","viewArea","area","currNodeValue","getUpperLabelHeight","pow","estimateRootSize","options","clearLayouts","viewRootLayout","squarify","hideChildren","halfGapWidth","layoutOffset","layoutOffsetUpper","totalArea","orderBy","overLeafDepth","filter","info","statistic","orderedChildren","deletePoint","filterByThreshold","initChildren","rowFixedLength","best","row","score","worst","treeRoot","defaultPosition","targetCenter","calculateRootPosition","prunning","clipRect","nodeInViewAbovePath","intersect","childClipRect","areaMax","areaMin","squareArea","f","flush","idx0WhenH","idx1WhenH","xy","wh","rowOtherLength","rowLen","wh1","remain","modWH","wh0","straightLineProto","bezierCurveProto","isLine","_buildPathLine","_buildPathCurve","_pointAtLine","_pointAtCurve","_tangentAtCurve","parallelVisual","visualColorAccessPath","encodeDefine","parallelModel","axisDim","dataDimIndex","replace","setEncodeAndDimensions","getRawIndicesByActiveState","activeState","indices","eachActiveState","theActiveState","parallelIndex","inactiveOpacity","activeOpacity","DEFAULT_SMOOTH","createLinePoints","addEl","dataGroup","updateElCommon","_dataGroup","_initialized","newDataIndex","oldDataIndex","animationModel","getRect","rectEl","createGridClipShape","setTimeout","opacityAccessPath","globalColors","opacityMap","normal","active","inactive","itemOpacity","setItemVisual","sankeyLayout","sankeyVisual","createGraphFromNodeEdge","SankeySeries","links","customizeGetParent","nodeDepth","getGraph","getEdgeByIndex","setNodePosition","localPosition","dataItem","localX","localY","getEdgeData","multipleSeries","rawDataOpt","html","getNodeByIndex","focusNodeAdjacency","nodeValue","nodeWidth","nodeGap","layoutIterations","nodeAlign","nodeOpacityPath","hoverNodeOpacityPath","lineOpacityPath","hoverLineOpacityPath","getItemOpacity","opacityPath","fadeOutItem","opacityRatio","getGraphicEl","fadeInItem","SankeyShape","_model","_focusAdjacencyDisabled","sankeyView","eachEdge","curve","n1Layout","node1Model","dragX1","dragY1","n2Layout","node2Model","dragX2","dragY2","edgeLayout","sy","dragX","dragY","ondragend","focusNodeAdjHandler","unfocusNodeAdjHandler","_clearTimer","_dispatchUnfocus","edgeModel","edgeDataIndex","_unfocusDelayTimer","clearTimeout","focusNodeAdj","outEdges","inEdges","unfocusNodeAdjacency","groupData","isNodeDepth","hostGraph","resolveCollisions","nodesByBreadth","keyAttr","nodeDyAttr","relaxRightToLeft","alpha","weightedTarget","getEdgeValue","centerTarget","nodeY","weightedSource","centerSource","array","relaxLeftToRight","value1","value2","nodeRawValue","computeNodeValues","iterations","remainEdges","indegreeArr","zeroIndegrees","nextTargetNode","maxNodeDepth","isItemDepth","edgeIdx","indexEdge","nodeIndex","Error","maxDepth","nextSourceNode","remainNodes","nodeHeight","skNodeHeight","moveSinksRight","adjustNodeWithNodeAlign","scaleNodeBreadths","computeNodeBreadths","groupResult","keys","buckets","prepareNodesByBreadth","minKy","nodeDy","edgeDy","initializeNodeDepth","computeNodeDepths","computeEdgeDepths","layoutSankey","minValue","maxValue","mapValueToColor","customColor","updateRipplePath","rippleGroup","effectCfg","rippleEffectColor","ripplePath","brushType","EffectSymbol","effectSymbolProto","stopEffectAnimation","startEffectAnimation","effectOffset","rippleScale","animateStyle","updateEffectAnimation","oldEffectCfg","_effectCfg","DIFFICULT_PROPS","propName","showEffectOn","linesLayout","linesVisual","concatArray","mergeAll","Uint32Arr","Uint32Array","Float64Arr","Float64Array","compatEc2","coords","fromName","toName","LinesSeries","_processFlatCoordsArray","_flatCoords","flatCoords","_flatCoordsOffset","flatCoordsOffset","appendData","_getCoordsFromItemModel","out","startOffset","coordsOffsetAndLenStorage","coordsStorage","coordsCursor","offsetCursor","dataCount","preventIncremental","xAxisIndex","yAxisIndex","effect","trailLength","EffectPolyline","LargeLineDraw","_updateLineDraw","zr","isSvg","painter","getType","getLayer","clear","_lastZlevel","configLayer","motionBlur","_showEffect","lastFrameAlpha","_clearLayer","_lineDraw","hasEffect","_hasEffet","_isPolyline","_lastFrame","_lastFramePercent","effectPolylineProto","accLenArr","_offsets","_length","offsets","lastFrame","frame","lerp","lineContain","quadraticContain","LargeLineShape","segs","quadraticCurveTo","containStroke","largeLineProto","lineEl","__startIndex","opacityQuery","split","dataEach","coordSysCreator","blurSize","pointSize","maxOpacity","minOpacity","HeatmapLayer","visualMapOfThisSeries","visualMap","eachTargetSeries","targetSeries","_incrementalDisplayable","_renderOnCartesianAndCalendar","isGeoCoordSys","_renderOnGeo","xAxis","yAxis","getBandWidth","hoverStl","coordSysType","dataDims","ceil","dataToRect","contentShape","rawValue","visualMapModel","inRangeVisuals","targetVisuals","inRange","outOfRangeVisuals","outOfRange","hmLayer","_hmLayer","roamTransform","getRoamTransform","lng","lat","isInRange","dataSpan","getIsInContinuousRange","pieceList","piece","interval","lastIndex","getIsInPiecewiseRange","getPieceList","getNormalizer","getColorMapper","img","Image","image","canvas","Heatmap","createCanvas","_gradientPixels","colorFunc","_getBrush","gradientInRange","_getGradient","gradientOutOfRange","globalAlpha","drawImage","imageData","getImageData","pixels","pixelLen","diffOpacity","gradientOffset","putImageData","brushCanvas","_brushCanvas","clearRect","beginPath","arc","state","gradientPixels","pixelsSingleState","Uint8ClampedArray","themeRiverLayout","themeRiverVisual","ThemeRiverSeries","fixData","rawDataLength","layData","items","dataList","layerNum","largestLayer","timeValue","keyIndex","queryComponents","filterData","dimensionsDefine","single","getLayerSeries","lenCount","indexArr","timeDim","layerSeries","index1","index2","getAxisTooltipData","nestestValue","minDist","nearestIdx","pointNum","theValue","dataIndices","htmlName","htmlValue","boundaryGap","singleAxisIndex","_layers","keyGetter","dataDiffer","_layersSeries","newLayersGroups","process","oldLayersGroups","points0","textLayout","layerGroup","hoverItemStyleModel","numberUtil","baseY0","layerPoints","singleLayer","base","sums","temp","computeBaseline","baseLine","layerIndex","rawData","idxMap","sunburstLayout","treeOption","highlightPolicy","renderLabelForZeroData","align","borderType","SunburstPiece","that","newRoot","newChildren","oldChildren","_oldChildren","newId","oldId","newNode","virtualPiece","_onclickEvent","renderRollUp","unhighlight","targetFound","NodeHighlightPolicy","NONE","DESCENDANT","ANCESTOR","SELF","DEFAULT_SECTOR_Z","DEFAULT_TEXT_Z","SunburstPieceProto","_ecModel","getRootId","getNodeColor","fillDefaultColor","stateStyle","merge","activeNode","policy","isAncestorOf","isDescendantOf","onHighlight","onDownplay","normalModel","getLabelAttr","labelMinAngle","labelPadding","rotateType","stateAttr","ROOT_TO_NODE_ACTION","HIGHLIGHT_ACTION","rootDepth","isAsc","sortOrder","renderRollupNode","rPerLevel","rStart","rEnd","siblingAngle"],"mappings":"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","file":"static/js/main~bfcc7908.a8228458.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _sourceType = require(\"../../data/helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _referHelper = require(\"../../model/referHelper\");\n\nvar getCoordSysInfoBySeries = _referHelper.getCoordSysInfoBySeries;\n\nvar Source = require(\"../../data/Source\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForAxisCoordSys = _sourceHelper.makeSeriesEncodeForAxisCoordSys;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/Source|Array} source Or raw data.\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object} [opt]\n * @param {string} [opt.generateCoord]\n * @param {boolean} [opt.useEncodeDefaulter]\n */\n\nfunction createListFromArray(source, seriesModel, opt) {\n  opt = opt || {};\n\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  var coordSysName = seriesModel.get('coordinateSystem');\n  var registeredCoordSys = CoordinateSystem.get(coordSysName);\n  var coordSysInfo = getCoordSysInfoBySeries(seriesModel);\n  var coordSysDimDefs;\n\n  if (coordSysInfo) {\n    coordSysDimDefs = zrUtil.map(coordSysInfo.coordSysDims, function (dim) {\n      var dimInfo = {\n        name: dim\n      };\n      var axisModel = coordSysInfo.axisMap.get(dim);\n\n      if (axisModel) {\n        var axisType = axisModel.get('type');\n        dimInfo.type = getDimensionTypeByAxis(axisType); // dimInfo.stackable = isStackable(axisType);\n      }\n\n      return dimInfo;\n    });\n  }\n\n  if (!coordSysDimDefs) {\n    // Get dimensions from registered coordinate system\n    coordSysDimDefs = registeredCoordSys && (registeredCoordSys.getDimensionsInfo ? registeredCoordSys.getDimensionsInfo() : registeredCoordSys.dimensions.slice()) || ['x', 'y'];\n  }\n\n  var dimInfoList = createDimensions(source, {\n    coordDimensions: coordSysDimDefs,\n    generateCoord: opt.generateCoord,\n    encodeDefaulter: opt.useEncodeDefaulter ? zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordSysDimDefs, seriesModel) : null\n  });\n  var firstCategoryDimIndex;\n  var hasNameEncode;\n  coordSysInfo && zrUtil.each(dimInfoList, function (dimInfo, dimIndex) {\n    var coordDim = dimInfo.coordDim;\n    var categoryAxisModel = coordSysInfo.categoryAxisMap.get(coordDim);\n\n    if (categoryAxisModel) {\n      if (firstCategoryDimIndex == null) {\n        firstCategoryDimIndex = dimIndex;\n      }\n\n      dimInfo.ordinalMeta = categoryAxisModel.getOrdinalMeta();\n    }\n\n    if (dimInfo.otherDims.itemName != null) {\n      hasNameEncode = true;\n    }\n  });\n\n  if (!hasNameEncode && firstCategoryDimIndex != null) {\n    dimInfoList[firstCategoryDimIndex].otherDims.itemName = 0;\n  }\n\n  var stackCalculationInfo = enableDataStack(seriesModel, dimInfoList);\n  var list = new List(dimInfoList, seriesModel);\n  list.setCalculationInfo(stackCalculationInfo);\n  var dimValueGetter = firstCategoryDimIndex != null && isNeedCompleteOrdinalData(source) ? function (itemOpt, dimName, dataIndex, dimIndex) {\n    // Use dataIndex as ordinal value in categoryAxis\n    return dimIndex === firstCategoryDimIndex ? dataIndex : this.defaultDimValueGetter(itemOpt, dimName, dataIndex, dimIndex);\n  } : null;\n  list.hasItemOption = false;\n  list.initData(source, null, dimValueGetter);\n  return list;\n}\n\nfunction isNeedCompleteOrdinalData(source) {\n  if (source.sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var sampleItem = firstDataNotNull(source.data || []);\n    return sampleItem != null && !zrUtil.isArray(getDataItemValue(sampleItem));\n  }\n}\n\nfunction firstDataNotNull(data) {\n  var i = 0;\n\n  while (i < data.length && data[i] == null) {\n    i++;\n  }\n\n  return data[i];\n}\n\nvar _default = createListFromArray;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\n\nfunction getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\n\nfunction aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\n\nfunction wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}\n\nexports.retrieveTargetInfo = retrieveTargetInfo;\nexports.getPathToRoot = getPathToRoot;\nexports.aboveViewRoot = aboveViewRoot;\nexports.wrapTreePathInfo = wrapTreePathInfo;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @return {string} If large mode changed, return string 'reset';\n */\n\nfunction _default() {\n  var inner = makeInner();\n  return function (seriesModel) {\n    var fields = inner(seriesModel);\n    var pipelineContext = seriesModel.pipelineContext;\n    var originalLarge = fields.large;\n    var originalProgressive = fields.progressiveRender; // FIXME: if the planner works on a filtered series, `pipelineContext` does not\n    // exists. See #11611 . Probably we need to modify this structure, see the comment\n    // on `performRawSeries` in `Schedular.js`.\n\n    var large = fields.large = pipelineContext && pipelineContext.large;\n    var progressive = fields.progressiveRender = pipelineContext && pipelineContext.progressiveRender;\n    return !!(originalLarge ^ large || originalProgressive ^ progressive) && 'reset';\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar extend = _util.extend;\nvar isArray = _util.isArray;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Object|Array.<string|Object>} opt opt or coordDimensions\n *        The options in opt, see `echarts/data/helper/createDimensions`\n * @param {Array.<string>} [nameList]\n * @return {module:echarts/data/List}\n */\n\nfunction _default(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({}, opt);\n  var source = seriesModel.getSource();\n  var dimensionsInfo = createDimensions(source, opt);\n  var list = new List(dimensionsInfo, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"./Symbol\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n/**\n * @constructor\n * @alias module:echarts/chart/helper/SymbolDraw\n * @param {module:zrender/graphic/Group} [symbolCtor]\n */\n\nfunction SymbolDraw(symbolCtor) {\n  this.group = new graphic.Group();\n  this._symbolCtor = symbolCtor || SymbolClz;\n}\n\nvar symbolDrawProto = SymbolDraw.prototype;\n\nfunction symbolNeedsDraw(data, point, idx, opt) {\n  return point && !isNaN(point[0]) && !isNaN(point[1]) && !(opt.isIgnore && opt.isIgnore(idx)) // We do not set clipShape on group, because it will cut part of\n  // the symbol element shape. We use the same clip shape here as\n  // the line clip.\n  && !(opt.clipShape && !opt.clipShape.contain(point[0], point[1])) && data.getItemVisual(idx, 'symbol') !== 'none';\n}\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.updateData = function (data, opt) {\n  opt = normalizeUpdateOpt(opt);\n  var group = this.group;\n  var seriesModel = data.hostModel;\n  var oldData = this._data;\n  var SymbolCtor = this._symbolCtor;\n  var seriesScope = makeSeriesScope(data); // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldData) {\n    group.removeAll();\n  }\n\n  data.diff(oldData).add(function (newIdx) {\n    var point = data.getItemLayout(newIdx);\n\n    if (symbolNeedsDraw(data, point, newIdx, opt)) {\n      var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n      symbolEl.attr('position', point);\n      data.setItemGraphicEl(newIdx, symbolEl);\n      group.add(symbolEl);\n    }\n  }).update(function (newIdx, oldIdx) {\n    var symbolEl = oldData.getItemGraphicEl(oldIdx);\n    var point = data.getItemLayout(newIdx);\n\n    if (!symbolNeedsDraw(data, point, newIdx, opt)) {\n      group.remove(symbolEl);\n      return;\n    }\n\n    if (!symbolEl) {\n      symbolEl = new SymbolCtor(data, newIdx);\n      symbolEl.attr('position', point);\n    } else {\n      symbolEl.updateData(data, newIdx, seriesScope);\n      graphic.updateProps(symbolEl, {\n        position: point\n      }, seriesModel);\n    } // Add back\n\n\n    group.add(symbolEl);\n    data.setItemGraphicEl(newIdx, symbolEl);\n  }).remove(function (oldIdx) {\n    var el = oldData.getItemGraphicEl(oldIdx);\n    el && el.fadeOut(function () {\n      group.remove(el);\n    });\n  }).execute();\n  this._data = data;\n};\n\nsymbolDrawProto.isPersistent = function () {\n  return true;\n};\n\nsymbolDrawProto.updateLayout = function () {\n  var data = this._data;\n\n  if (data) {\n    // Not use animation\n    data.eachItemGraphicEl(function (el, idx) {\n      var point = data.getItemLayout(idx);\n      el.attr('position', point);\n    });\n  }\n};\n\nsymbolDrawProto.incrementalPrepareUpdate = function (data) {\n  this._seriesScope = makeSeriesScope(data);\n  this._data = null;\n  this.group.removeAll();\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} [opt] Or isIgnore\n * @param {Function} [opt.isIgnore]\n * @param {Object} [opt.clipShape]\n */\n\n\nsymbolDrawProto.incrementalUpdate = function (taskParams, data, opt) {\n  opt = normalizeUpdateOpt(opt);\n\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var point = data.getItemLayout(idx);\n\n    if (symbolNeedsDraw(data, point, idx, opt)) {\n      var el = new this._symbolCtor(data, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      el.attr('position', point);\n      this.group.add(el);\n      data.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction normalizeUpdateOpt(opt) {\n  if (opt != null && !isObject(opt)) {\n    opt = {\n      isIgnore: opt\n    };\n  }\n\n  return opt || {};\n}\n\nsymbolDrawProto.remove = function (enableAnimation) {\n  var group = this.group;\n  var data = this._data; // Incremental model do not have this._data.\n\n  if (data && enableAnimation) {\n    data.eachItemGraphicEl(function (el) {\n      el.fadeOut(function () {\n        group.remove(el);\n      });\n    });\n  } else {\n    group.removeAll();\n  }\n};\n\nfunction makeSeriesScope(data) {\n  var seriesModel = data.hostModel;\n  return {\n    itemStyle: seriesModel.getModel('itemStyle').getItemStyle(['color']),\n    hoverItemStyle: seriesModel.getModel('emphasis.itemStyle').getItemStyle(),\n    symbolRotate: seriesModel.get('symbolRotate'),\n    symbolOffset: seriesModel.get('symbolOffset'),\n    hoverAnimation: seriesModel.get('hoverAnimation'),\n    labelModel: seriesModel.getModel('label'),\n    hoverLabelModel: seriesModel.getModel('emphasis.label'),\n    cursorStyle: seriesModel.get('cursor')\n  };\n}\n\nvar _default = SymbolDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel) {\n  var rect = cartesian.getArea();\n  var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get('lineStyle.width') || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: round(sectorArea.r0, 1),\n      r: round(sectorArea.r, 1),\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    clipPath.shape.endAngle = sectorArea.startAngle;\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel);\n  }\n\n  return null;\n}\n\nexports.createGridClipPath = createGridClipPath;\nexports.createPolarClipPath = createPolarClipPath;\nexports.createClipPath = createClipPath;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar _labelHelper = require(\"./labelHelper\");\n\nvar getDefaultLabel = _labelHelper.getDefaultLabel;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n/**\n * @constructor\n * @alias {module:echarts/chart/helper/Symbol}\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SymbolClz(data, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.updateData(data, idx, seriesScope);\n}\n\nvar symbolProto = SymbolClz.prototype;\n/**\n * @public\n * @static\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {Array.<number>} [width, height]\n */\n\nvar getSymbolSize = SymbolClz.getSymbolSize = function (data, idx) {\n  var symbolSize = data.getItemVisual(idx, 'symbolSize');\n  return symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n};\n\nfunction getScale(symbolSize) {\n  return [symbolSize[0] / 2, symbolSize[1] / 2];\n}\n\nfunction driftSymbol(dx, dy) {\n  this.parent.drift(dx, dy);\n}\n\nsymbolProto._createSymbol = function (symbolType, data, idx, symbolSize, keepAspect) {\n  // Remove paths created before\n  this.removeAll();\n  var color = data.getItemVisual(idx, 'color'); // var symbolPath = createSymbol(\n  //     symbolType, -0.5, -0.5, 1, 1, color\n  // );\n  // If width/height are set too small (e.g., set to 1) on ios10\n  // and macOS Sierra, a circle stroke become a rect, no matter what\n  // the scale is set. So we set width/height as 2. See #4150.\n\n  var symbolPath = createSymbol(symbolType, -1, -1, 2, 2, color, keepAspect);\n  symbolPath.attr({\n    z2: 100,\n    culling: true,\n    scale: getScale(symbolSize)\n  }); // Rewrite drift method\n\n  symbolPath.drift = driftSymbol;\n  this._symbolType = symbolType;\n  this.add(symbolPath);\n};\n/**\n * Stop animation\n * @param {boolean} toLastFrame\n */\n\n\nsymbolProto.stopSymbolAnimation = function (toLastFrame) {\n  this.childAt(0).stopAnimation(toLastFrame);\n};\n/**\n * FIXME:\n * Caution: This method breaks the encapsulation of this module,\n * but it indeed brings convenience. So do not use the method\n * unless you detailedly know all the implements of `Symbol`,\n * especially animation.\n *\n * Get symbol path element.\n */\n\n\nsymbolProto.getSymbolPath = function () {\n  return this.childAt(0);\n};\n/**\n * Get scale(aka, current symbol size).\n * Including the change caused by animation\n */\n\n\nsymbolProto.getScale = function () {\n  return this.childAt(0).scale;\n};\n/**\n * Highlight symbol\n */\n\n\nsymbolProto.highlight = function () {\n  this.childAt(0).trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\nsymbolProto.downplay = function () {\n  this.childAt(0).trigger('normal');\n};\n/**\n * @param {number} zlevel\n * @param {number} z\n */\n\n\nsymbolProto.setZ = function (zlevel, z) {\n  var symbolPath = this.childAt(0);\n  symbolPath.zlevel = zlevel;\n  symbolPath.z = z;\n};\n\nsymbolProto.setDraggable = function (draggable) {\n  var symbolPath = this.childAt(0);\n  symbolPath.draggable = draggable;\n  symbolPath.cursor = draggable ? 'move' : symbolPath.cursor;\n};\n/**\n * Update symbol properties\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Object} [seriesScope]\n * @param {Object} [seriesScope.itemStyle]\n * @param {Object} [seriesScope.hoverItemStyle]\n * @param {Object} [seriesScope.symbolRotate]\n * @param {Object} [seriesScope.symbolOffset]\n * @param {module:echarts/model/Model} [seriesScope.labelModel]\n * @param {module:echarts/model/Model} [seriesScope.hoverLabelModel]\n * @param {boolean} [seriesScope.hoverAnimation]\n * @param {Object} [seriesScope.cursorStyle]\n * @param {module:echarts/model/Model} [seriesScope.itemModel]\n * @param {string} [seriesScope.symbolInnerColor]\n * @param {Object} [seriesScope.fadeIn=false]\n */\n\n\nsymbolProto.updateData = function (data, idx, seriesScope) {\n  this.silent = false;\n  var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n  var seriesModel = data.hostModel;\n  var symbolSize = getSymbolSize(data, idx);\n  var isInit = symbolType !== this._symbolType;\n\n  if (isInit) {\n    var keepAspect = data.getItemVisual(idx, 'symbolKeepAspect');\n\n    this._createSymbol(symbolType, data, idx, symbolSize, keepAspect);\n  } else {\n    var symbolPath = this.childAt(0);\n    symbolPath.silent = false;\n    graphic.updateProps(symbolPath, {\n      scale: getScale(symbolSize)\n    }, seriesModel, idx);\n  }\n\n  this._updateCommon(data, idx, symbolSize, seriesScope);\n\n  if (isInit) {\n    var symbolPath = this.childAt(0);\n    var fadeIn = seriesScope && seriesScope.fadeIn;\n    var target = {\n      scale: symbolPath.scale.slice()\n    };\n    fadeIn && (target.style = {\n      opacity: symbolPath.style.opacity\n    });\n    symbolPath.scale = [0, 0];\n    fadeIn && (symbolPath.style.opacity = 0);\n    graphic.initProps(symbolPath, target, seriesModel, idx);\n  }\n\n  this._seriesModel = seriesModel;\n}; // Update common properties\n\n\nvar normalStyleAccessPath = ['itemStyle'];\nvar emphasisStyleAccessPath = ['emphasis', 'itemStyle'];\nvar normalLabelAccessPath = ['label'];\nvar emphasisLabelAccessPath = ['emphasis', 'label'];\n/**\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @param {Array.<number>} symbolSize\n * @param {Object} [seriesScope]\n */\n\nsymbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n  var symbolPath = this.childAt(0);\n  var seriesModel = data.hostModel;\n  var color = data.getItemVisual(idx, 'color'); // Reset style\n\n  if (symbolPath.type !== 'image') {\n    symbolPath.useStyle({\n      strokeNoScale: true\n    });\n  } else {\n    symbolPath.setStyle({\n      opacity: null,\n      shadowBlur: null,\n      shadowOffsetX: null,\n      shadowOffsetY: null,\n      shadowColor: null\n    });\n  }\n\n  var itemStyle = seriesScope && seriesScope.itemStyle;\n  var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n  var symbolOffset = seriesScope && seriesScope.symbolOffset;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n  var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n  var cursorStyle = seriesScope && seriesScope.cursorStyle;\n\n  if (!seriesScope || data.hasItemOption) {\n    var itemModel = seriesScope && seriesScope.itemModel ? seriesScope.itemModel : data.getItemModel(idx); // Color must be excluded.\n    // Because symbol provide setColor individually to set fill and stroke\n\n    itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n    hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n    symbolOffset = itemModel.getShallow('symbolOffset');\n    labelModel = itemModel.getModel(normalLabelAccessPath);\n    hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n    hoverAnimation = itemModel.getShallow('hoverAnimation');\n    cursorStyle = itemModel.getShallow('cursor');\n  } else {\n    hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n  }\n\n  var elStyle = symbolPath.style;\n  var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\n  symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n  if (symbolOffset) {\n    symbolPath.attr('position', [parsePercent(symbolOffset[0], symbolSize[0]), parsePercent(symbolOffset[1], symbolSize[1])]);\n  }\n\n  cursorStyle && symbolPath.attr('cursor', cursorStyle); // PENDING setColor before setStyle!!!\n\n  symbolPath.setColor(color, seriesScope && seriesScope.symbolInnerColor);\n  symbolPath.setStyle(itemStyle);\n  var opacity = data.getItemVisual(idx, 'opacity');\n\n  if (opacity != null) {\n    elStyle.opacity = opacity;\n  }\n\n  var liftZ = data.getItemVisual(idx, 'liftZ');\n  var z2Origin = symbolPath.__z2Origin;\n\n  if (liftZ != null) {\n    if (z2Origin == null) {\n      symbolPath.__z2Origin = symbolPath.z2;\n      symbolPath.z2 += liftZ;\n    }\n  } else if (z2Origin != null) {\n    symbolPath.z2 = z2Origin;\n    symbolPath.__z2Origin = null;\n  }\n\n  var useNameLabel = seriesScope && seriesScope.useNameLabel;\n  graphic.setLabelStyle(elStyle, hoverItemStyle, labelModel, hoverLabelModel, {\n    labelFetcher: seriesModel,\n    labelDataIndex: idx,\n    defaultText: getLabelDefaultText,\n    isRectText: true,\n    autoColor: color\n  }); // Do not execute util needed.\n\n  function getLabelDefaultText(idx, opt) {\n    return useNameLabel ? data.getName(idx) : getDefaultLabel(data, idx);\n  }\n\n  symbolPath.__symbolOriginalScale = getScale(symbolSize);\n  symbolPath.hoverStyle = hoverItemStyle;\n  symbolPath.highDownOnUpdate = hoverAnimation && seriesModel.isAnimationEnabled() ? highDownOnUpdate : null;\n  graphic.setHoverStyle(symbolPath);\n};\n\nfunction highDownOnUpdate(fromState, toState) {\n  // Do not support this hover animation util some scenario required.\n  // Animation can only be supported in hover layer when using `el.incremetal`.\n  if (this.incremental || this.useHoverLayer) {\n    return;\n  }\n\n  if (toState === 'emphasis') {\n    var scale = this.__symbolOriginalScale;\n    var ratio = scale[1] / scale[0];\n    var emphasisOpt = {\n      scale: [Math.max(scale[0] * 1.1, scale[0] + 3), Math.max(scale[1] * 1.1, scale[1] + 3 * ratio)]\n    }; // FIXME\n    // modify it after support stop specified animation.\n    // toState === fromState\n    //     ? (this.stopAnimation(), this.attr(emphasisOpt))\n\n    this.animateTo(emphasisOpt, 400, 'elasticOut');\n  } else if (toState === 'normal') {\n    this.animateTo({\n      scale: this.__symbolOriginalScale\n    }, 400, 'elasticOut');\n  }\n}\n/**\n * @param {Function} cb\n * @param {Object} [opt]\n * @param {Object} [opt.keepLabel=true]\n */\n\n\nsymbolProto.fadeOut = function (cb, opt) {\n  var symbolPath = this.childAt(0); // Avoid mistaken hover when fading out\n\n  this.silent = symbolPath.silent = true; // Not show text when animating\n\n  !(opt && opt.keepLabel) && (symbolPath.style.text = null);\n  graphic.updateProps(symbolPath, {\n    style: {\n      opacity: 0\n    },\n    scale: [0, 0]\n  }, this._seriesModel, this.dataIndex, cb);\n};\n\nzrUtil.inherits(SymbolClz, graphic.Group);\nvar _default = SymbolClz;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawValue = _dataProvider.retrieveRawValue;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @return {string} label string. Not null/undefined\n */\n\nfunction getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimension('defaultedLabel', true);\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    return retrieveRawValue(data, dataIndex, labelDims[0]);\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      var val = retrieveRawValue(data, dataIndex, labelDims[i]);\n      vals.push(val);\n    }\n\n    return vals.join(' ');\n  }\n}\n\nexports.getDefaultLabel = getDefaultLabel;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar LineGroup = require(\"./Line\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/LineDraw\n */\n// import IncrementalDisplayable from 'zrender/src/graphic/IncrementalDisplayable';\n\n/**\n * @alias module:echarts/component/marker/LineDraw\n * @constructor\n */\n\n\nfunction LineDraw(ctor) {\n  this._ctor = ctor || LineGroup;\n  this.group = new graphic.Group();\n}\n\nvar lineDrawProto = LineDraw.prototype;\n\nlineDrawProto.isPersistent = function () {\n  return true;\n};\n/**\n * @param {module:echarts/data/List} lineData\n */\n\n\nlineDrawProto.updateData = function (lineData) {\n  var lineDraw = this;\n  var group = lineDraw.group;\n  var oldLineData = lineDraw._lineData;\n  lineDraw._lineData = lineData; // There is no oldLineData only when first rendering or switching from\n  // stream mode to normal mode, where previous elements should be removed.\n\n  if (!oldLineData) {\n    group.removeAll();\n  }\n\n  var seriesScope = makeSeriesScope(lineData);\n  lineData.diff(oldLineData).add(function (idx) {\n    doAdd(lineDraw, lineData, idx, seriesScope);\n  }).update(function (newIdx, oldIdx) {\n    doUpdate(lineDraw, oldLineData, lineData, oldIdx, newIdx, seriesScope);\n  }).remove(function (idx) {\n    group.remove(oldLineData.getItemGraphicEl(idx));\n  }).execute();\n};\n\nfunction doAdd(lineDraw, lineData, idx, seriesScope) {\n  var itemLayout = lineData.getItemLayout(idx);\n\n  if (!lineNeedsDraw(itemLayout)) {\n    return;\n  }\n\n  var el = new lineDraw._ctor(lineData, idx, seriesScope);\n  lineData.setItemGraphicEl(idx, el);\n  lineDraw.group.add(el);\n}\n\nfunction doUpdate(lineDraw, oldLineData, newLineData, oldIdx, newIdx, seriesScope) {\n  var itemEl = oldLineData.getItemGraphicEl(oldIdx);\n\n  if (!lineNeedsDraw(newLineData.getItemLayout(newIdx))) {\n    lineDraw.group.remove(itemEl);\n    return;\n  }\n\n  if (!itemEl) {\n    itemEl = new lineDraw._ctor(newLineData, newIdx, seriesScope);\n  } else {\n    itemEl.updateData(newLineData, newIdx, seriesScope);\n  }\n\n  newLineData.setItemGraphicEl(newIdx, itemEl);\n  lineDraw.group.add(itemEl);\n}\n\nlineDrawProto.updateLayout = function () {\n  var lineData = this._lineData; // Do not support update layout in incremental mode.\n\n  if (!lineData) {\n    return;\n  }\n\n  lineData.eachItemGraphicEl(function (el, idx) {\n    el.updateLayout(lineData, idx);\n  }, this);\n};\n\nlineDrawProto.incrementalPrepareUpdate = function (lineData) {\n  this._seriesScope = makeSeriesScope(lineData);\n  this._lineData = null;\n  this.group.removeAll();\n};\n\nfunction isEffectObject(el) {\n  return el.animators && el.animators.length > 0;\n}\n\nlineDrawProto.incrementalUpdate = function (taskParams, lineData) {\n  function updateIncrementalAndHover(el) {\n    if (!el.isGroup && !isEffectObject(el)) {\n      el.incremental = el.useHoverLayer = true;\n    }\n  }\n\n  for (var idx = taskParams.start; idx < taskParams.end; idx++) {\n    var itemLayout = lineData.getItemLayout(idx);\n\n    if (lineNeedsDraw(itemLayout)) {\n      var el = new this._ctor(lineData, idx, this._seriesScope);\n      el.traverse(updateIncrementalAndHover);\n      this.group.add(el);\n      lineData.setItemGraphicEl(idx, el);\n    }\n  }\n};\n\nfunction makeSeriesScope(lineData) {\n  var hostModel = lineData.hostModel;\n  return {\n    lineStyle: hostModel.getModel('lineStyle').getLineStyle(),\n    hoverLineStyle: hostModel.getModel('emphasis.lineStyle').getLineStyle(),\n    labelModel: hostModel.getModel('label'),\n    hoverLabelModel: hostModel.getModel('emphasis.label')\n  };\n}\n\nlineDrawProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlineDrawProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nfunction isPointNaN(pt) {\n  return isNaN(pt[0]) || isNaN(pt[1]);\n}\n\nfunction lineNeedsDraw(pts) {\n  return !isPointNaN(pts[0]) && !isPointNaN(pts[1]);\n}\n\nvar _default = LineDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar vector = require(\"zrender/lib/core/vector\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n\nvar LinePath = require(\"./LinePath\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _number = require(\"../../util/number\");\n\nvar round = _number.round;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\nvar SYMBOL_CATEGORIES = ['fromSymbol', 'toSymbol'];\n\nfunction makeSymbolTypeKey(symbolCategory) {\n  return '_' + symbolCategory + 'Type';\n}\n/**\n * @inner\n */\n\n\nfunction createSymbol(name, lineData, idx) {\n  var color = lineData.getItemVisual(idx, 'color');\n  var symbolType = lineData.getItemVisual(idx, name);\n  var symbolSize = lineData.getItemVisual(idx, name + 'Size');\n\n  if (!symbolType || symbolType === 'none') {\n    return;\n  }\n\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [symbolSize, symbolSize];\n  }\n\n  var symbolPath = symbolUtil.createSymbol(symbolType, -symbolSize[0] / 2, -symbolSize[1] / 2, symbolSize[0], symbolSize[1], color);\n  symbolPath.name = name;\n  return symbolPath;\n}\n\nfunction createLine(points) {\n  var line = new LinePath({\n    name: 'line',\n    subPixelOptimize: true\n  });\n  setLinePoints(line.shape, points);\n  return line;\n}\n\nfunction setLinePoints(targetShape, points) {\n  targetShape.x1 = points[0][0];\n  targetShape.y1 = points[0][1];\n  targetShape.x2 = points[1][0];\n  targetShape.y2 = points[1][1];\n  targetShape.percent = 1;\n  var cp1 = points[2];\n\n  if (cp1) {\n    targetShape.cpx1 = cp1[0];\n    targetShape.cpy1 = cp1[1];\n  } else {\n    targetShape.cpx1 = NaN;\n    targetShape.cpy1 = NaN;\n  }\n}\n\nfunction updateSymbolAndLabelBeforeLineUpdate() {\n  var lineGroup = this;\n  var symbolFrom = lineGroup.childOfName('fromSymbol');\n  var symbolTo = lineGroup.childOfName('toSymbol');\n  var label = lineGroup.childOfName('label'); // Quick reject\n\n  if (!symbolFrom && !symbolTo && label.ignore) {\n    return;\n  }\n\n  var invScale = 1;\n  var parentNode = this.parent;\n\n  while (parentNode) {\n    if (parentNode.scale) {\n      invScale /= parentNode.scale[0];\n    }\n\n    parentNode = parentNode.parent;\n  }\n\n  var line = lineGroup.childOfName('line'); // If line not changed\n  // FIXME Parent scale changed\n\n  if (!this.__dirty && !line.__dirty) {\n    return;\n  }\n\n  var percent = line.shape.percent;\n  var fromPos = line.pointAt(0);\n  var toPos = line.pointAt(percent);\n  var d = vector.sub([], toPos, fromPos);\n  vector.normalize(d, d);\n\n  if (symbolFrom) {\n    symbolFrom.attr('position', fromPos);\n    var tangent = line.tangentAt(0);\n    symbolFrom.attr('rotation', Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolFrom.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (symbolTo) {\n    symbolTo.attr('position', toPos);\n    var tangent = line.tangentAt(1);\n    symbolTo.attr('rotation', -Math.PI / 2 - Math.atan2(tangent[1], tangent[0]));\n    symbolTo.attr('scale', [invScale * percent, invScale * percent]);\n  }\n\n  if (!label.ignore) {\n    label.attr('position', toPos);\n    var textPosition;\n    var textAlign;\n    var textVerticalAlign;\n    var textOrigin;\n    var distance = label.__labelDistance;\n    var distanceX = distance[0] * invScale;\n    var distanceY = distance[1] * invScale;\n    var halfPercent = percent / 2;\n    var tangent = line.tangentAt(halfPercent);\n    var n = [tangent[1], -tangent[0]];\n    var cp = line.pointAt(halfPercent);\n\n    if (n[1] > 0) {\n      n[0] = -n[0];\n      n[1] = -n[1];\n    }\n\n    var dir = tangent[0] < 0 ? -1 : 1;\n\n    if (label.__position !== 'start' && label.__position !== 'end') {\n      var rotation = -Math.atan2(tangent[1], tangent[0]);\n\n      if (toPos[0] < fromPos[0]) {\n        rotation = Math.PI + rotation;\n      }\n\n      label.attr('rotation', rotation);\n    }\n\n    var dy;\n\n    switch (label.__position) {\n      case 'insideStartTop':\n      case 'insideMiddleTop':\n      case 'insideEndTop':\n      case 'middle':\n        dy = -distanceY;\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'insideStartBottom':\n      case 'insideMiddleBottom':\n      case 'insideEndBottom':\n        dy = distanceY;\n        textVerticalAlign = 'top';\n        break;\n\n      default:\n        dy = 0;\n        textVerticalAlign = 'middle';\n    }\n\n    switch (label.__position) {\n      case 'end':\n        textPosition = [d[0] * distanceX + toPos[0], d[1] * distanceY + toPos[1]];\n        textAlign = d[0] > 0.8 ? 'left' : d[0] < -0.8 ? 'right' : 'center';\n        textVerticalAlign = d[1] > 0.8 ? 'top' : d[1] < -0.8 ? 'bottom' : 'middle';\n        break;\n\n      case 'start':\n        textPosition = [-d[0] * distanceX + fromPos[0], -d[1] * distanceY + fromPos[1]];\n        textAlign = d[0] > 0.8 ? 'right' : d[0] < -0.8 ? 'left' : 'center';\n        textVerticalAlign = d[1] > 0.8 ? 'bottom' : d[1] < -0.8 ? 'top' : 'middle';\n        break;\n\n      case 'insideStartTop':\n      case 'insideStart':\n      case 'insideStartBottom':\n        textPosition = [distanceX * dir + fromPos[0], fromPos[1] + dy];\n        textAlign = tangent[0] < 0 ? 'right' : 'left';\n        textOrigin = [-distanceX * dir, -dy];\n        break;\n\n      case 'insideMiddleTop':\n      case 'insideMiddle':\n      case 'insideMiddleBottom':\n      case 'middle':\n        textPosition = [cp[0], cp[1] + dy];\n        textAlign = 'center';\n        textOrigin = [0, -dy];\n        break;\n\n      case 'insideEndTop':\n      case 'insideEnd':\n      case 'insideEndBottom':\n        textPosition = [-distanceX * dir + toPos[0], toPos[1] + dy];\n        textAlign = tangent[0] >= 0 ? 'right' : 'left';\n        textOrigin = [distanceX * dir, -dy];\n        break;\n    }\n\n    label.attr({\n      style: {\n        // Use the user specified text align and baseline first\n        textVerticalAlign: label.__verticalAlign || textVerticalAlign,\n        textAlign: label.__textAlign || textAlign\n      },\n      position: textPosition,\n      scale: [invScale, invScale],\n      origin: textOrigin\n    });\n  }\n}\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction Line(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createLine(lineData, idx, seriesScope);\n}\n\nvar lineProto = Line.prototype; // Update symbol position and rotation\n\nlineProto.beforeUpdate = updateSymbolAndLabelBeforeLineUpdate;\n\nlineProto._createLine = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var linePoints = lineData.getItemLayout(idx);\n  var line = createLine(linePoints);\n  line.shape.percent = 0;\n  graphic.initProps(line, {\n    shape: {\n      percent: 1\n    }\n  }, seriesModel, idx);\n  this.add(line);\n  var label = new graphic.Text({\n    name: 'label',\n    // FIXME\n    // Temporary solution for `focusNodeAdjacency`.\n    // line label do not use the opacity of lineStyle.\n    lineLabelOriginalOpacity: 1\n  });\n  this.add(label);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = createSymbol(symbolCategory, lineData, idx); // symbols must added after line to make sure\n    // it will be updated after line#update.\n    // Or symbol position and rotation update in line#beforeUpdate will be one frame slow\n\n    this.add(symbol);\n    this[makeSymbolTypeKey(symbolCategory)] = lineData.getItemVisual(idx, symbolCategory);\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var linePoints = lineData.getItemLayout(idx);\n  var target = {\n    shape: {}\n  };\n  setLinePoints(target.shape, linePoints);\n  graphic.updateProps(line, target, seriesModel, idx);\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbolType = lineData.getItemVisual(idx, symbolCategory);\n    var key = makeSymbolTypeKey(symbolCategory); // Symbol changed\n\n    if (this[key] !== symbolType) {\n      this.remove(this.childOfName(symbolCategory));\n      var symbol = createSymbol(symbolCategory, lineData, idx);\n      this.add(symbol);\n    }\n\n    this[key] = symbolType;\n  }, this);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\nlineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childOfName('line');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n  var labelModel = seriesScope && seriesScope.labelModel;\n  var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel; // Optimization for large dataset\n\n  if (!seriesScope || lineData.hasItemOption) {\n    var itemModel = lineData.getItemModel(idx);\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n    labelModel = itemModel.getModel('label');\n    hoverLabelModel = itemModel.getModel('emphasis.label');\n  }\n\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var visualOpacity = zrUtil.retrieve3(lineData.getItemVisual(idx, 'opacity'), lineStyle.opacity, 1);\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor,\n    opacity: visualOpacity\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle; // Update symbol\n\n  zrUtil.each(SYMBOL_CATEGORIES, function (symbolCategory) {\n    var symbol = this.childOfName(symbolCategory);\n\n    if (symbol) {\n      symbol.setColor(visualColor);\n      symbol.setStyle({\n        opacity: visualOpacity\n      });\n    }\n  }, this);\n  var showLabel = labelModel.getShallow('show');\n  var hoverShowLabel = hoverLabelModel.getShallow('show');\n  var label = this.childOfName('label');\n  var defaultLabelColor;\n  var baseText; // FIXME: the logic below probably should be merged to `graphic.setLabelStyle`.\n\n  if (showLabel || hoverShowLabel) {\n    defaultLabelColor = visualColor || '#000';\n    baseText = seriesModel.getFormattedLabel(idx, 'normal', lineData.dataType);\n\n    if (baseText == null) {\n      var rawVal = seriesModel.getRawValue(idx);\n      baseText = rawVal == null ? lineData.getName(idx) : isFinite(rawVal) ? round(rawVal) : rawVal;\n    }\n  }\n\n  var normalText = showLabel ? baseText : null;\n  var emphasisText = hoverShowLabel ? zrUtil.retrieve2(seriesModel.getFormattedLabel(idx, 'emphasis', lineData.dataType), baseText) : null;\n  var labelStyle = label.style; // Always set `textStyle` even if `normalStyle.text` is null, because default\n  // values have to be set on `normalStyle`.\n\n  if (normalText != null || emphasisText != null) {\n    graphic.setTextStyle(label.style, labelModel, {\n      text: normalText\n    }, {\n      autoColor: defaultLabelColor\n    });\n    label.__textAlign = labelStyle.textAlign;\n    label.__verticalAlign = labelStyle.textVerticalAlign; // 'start', 'middle', 'end'\n\n    label.__position = labelModel.get('position') || 'middle';\n    var distance = labelModel.get('distance');\n\n    if (!zrUtil.isArray(distance)) {\n      distance = [distance, distance];\n    }\n\n    label.__labelDistance = distance;\n  }\n\n  if (emphasisText != null) {\n    // Only these properties supported in this emphasis style here.\n    label.hoverStyle = {\n      text: emphasisText,\n      textFill: hoverLabelModel.getTextColor(true),\n      // For merging hover style to normal style, do not use\n      // `hoverLabelModel.getFont()` here.\n      fontStyle: hoverLabelModel.getShallow('fontStyle'),\n      fontWeight: hoverLabelModel.getShallow('fontWeight'),\n      fontSize: hoverLabelModel.getShallow('fontSize'),\n      fontFamily: hoverLabelModel.getShallow('fontFamily')\n    };\n  } else {\n    label.hoverStyle = {\n      text: null\n    };\n  }\n\n  label.ignore = !showLabel && !hoverShowLabel;\n  graphic.setHoverStyle(this);\n};\n\nlineProto.highlight = function () {\n  this.trigger('emphasis');\n};\n\nlineProto.downplay = function () {\n  this.trigger('normal');\n};\n\nlineProto.updateLayout = function (lineData, idx) {\n  this.setLinePoints(lineData.getItemLayout(idx));\n};\n\nlineProto.setLinePoints = function (points) {\n  var linePath = this.childOfName('line');\n  setLinePoints(linePath.shape, points);\n  linePath.dirty();\n};\n\nzrUtil.inherits(Line, graphic.Group);\nvar _default = Line;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar map = _util.map;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} coordSys\n * @param {module:echarts/data/List} data\n * @param {string} valueOrigin lineSeries.option.areaStyle.origin\n */\n\nfunction prepareDataCoordInfo(coordSys, data, valueOrigin) {\n  var baseAxis = coordSys.getBaseAxis();\n  var valueAxis = coordSys.getOtherAxis(baseAxis);\n  var valueStart = getValueStart(valueAxis, valueOrigin);\n  var baseAxisDim = baseAxis.dim;\n  var valueAxisDim = valueAxis.dim;\n  var valueDim = data.mapDimension(valueAxisDim);\n  var baseDim = data.mapDimension(baseAxisDim);\n  var baseDataOffset = valueAxisDim === 'x' || valueAxisDim === 'radius' ? 1 : 0;\n  var dims = map(coordSys.dimensions, function (coordDim) {\n    return data.mapDimension(coordDim);\n  });\n  var stacked;\n  var stackResultDim = data.getCalculationInfo('stackResultDimension');\n\n  if (stacked |= isDimensionStacked(data, dims[0]\n  /*, dims[1]*/\n  )) {\n    // jshint ignore:line\n    dims[0] = stackResultDim;\n  }\n\n  if (stacked |= isDimensionStacked(data, dims[1]\n  /*, dims[0]*/\n  )) {\n    // jshint ignore:line\n    dims[1] = stackResultDim;\n  }\n\n  return {\n    dataDimsForPoint: dims,\n    valueStart: valueStart,\n    valueAxisDim: valueAxisDim,\n    baseAxisDim: baseAxisDim,\n    stacked: !!stacked,\n    valueDim: valueDim,\n    baseDim: baseDim,\n    baseDataOffset: baseDataOffset,\n    stackedOverDimension: data.getCalculationInfo('stackedOverDimension')\n  };\n}\n\nfunction getValueStart(valueAxis, valueOrigin) {\n  var valueStart = 0;\n  var extent = valueAxis.scale.getExtent();\n\n  if (valueOrigin === 'start') {\n    valueStart = extent[0];\n  } else if (valueOrigin === 'end') {\n    valueStart = extent[1];\n  } // auto\n  else {\n      // Both positive\n      if (extent[0] > 0) {\n        valueStart = extent[0];\n      } // Both negative\n      else if (extent[1] < 0) {\n          valueStart = extent[1];\n        } // If is one positive, and one negative, onZero shall be true\n\n    }\n\n  return valueStart;\n}\n\nfunction getStackedOnPoint(dataCoordInfo, coordSys, data, idx) {\n  var value = NaN;\n\n  if (dataCoordInfo.stacked) {\n    value = data.get(data.getCalculationInfo('stackedOverDimension'), idx);\n  }\n\n  if (isNaN(value)) {\n    value = dataCoordInfo.valueStart;\n  }\n\n  var baseDataOffset = dataCoordInfo.baseDataOffset;\n  var stackedData = [];\n  stackedData[baseDataOffset] = data.get(dataCoordInfo.baseDim, idx);\n  stackedData[1 - baseDataOffset] = value;\n  return coordSys.dataToPoint(stackedData);\n}\n\nexports.prepareDataCoordInfo = prepareDataCoordInfo;\nexports.getStackedOnPoint = getStackedOnPoint;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Path = require(\"zrender/lib/graphic/Path\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar fixClipWithShadow = require(\"zrender/lib/graphic/helper/fixClipWithShadow\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Poly path support NaN point\n\n\nvar vec2Min = vec2.min;\nvar vec2Max = vec2.max;\nvar scaleAndAdd = vec2.scaleAndAdd;\nvar v2Copy = vec2.copy; // Temporary variable\n\nvar v = [];\nvar cp0 = [];\nvar cp1 = [];\n\nfunction isPointNull(p) {\n  return isNaN(p[0]) || isNaN(p[1]);\n}\n\nfunction drawSegment(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  // if (smoothMonotone == null) {\n  //     if (isMono(points, 'x')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'x', connectNulls);\n  //     }\n  //     else if (isMono(points, 'y')) {\n  //         return drawMono(ctx, points, start, segLen, allLen,\n  //             dir, smoothMin, smoothMax, smooth, 'y', connectNulls);\n  //     }\n  //     else {\n  //         return drawNonMono.apply(this, arguments);\n  //     }\n  // }\n  // else if (smoothMonotone !== 'none' && isMono(points, smoothMonotone)) {\n  //     return drawMono.apply(this, arguments);\n  // }\n  // else {\n  //     return drawNonMono.apply(this, arguments);\n  // }\n  if (smoothMonotone === 'none' || !smoothMonotone) {\n    return drawNonMono.apply(this, arguments);\n  } else {\n    return drawMono.apply(this, arguments);\n  }\n}\n/**\n * Check if points is in monotone.\n *\n * @param {number[][]} points         Array of points which is in [x, y] form\n * @param {string}     smoothMonotone 'x', 'y', or 'none', stating for which\n *                                    dimension that is checking.\n *                                    If is 'none', `drawNonMono` should be\n *                                    called.\n *                                    If is undefined, either being monotone\n *                                    in 'x' or 'y' will call `drawMono`.\n */\n// function isMono(points, smoothMonotone) {\n//     if (points.length <= 1) {\n//         return true;\n//     }\n//     var dim = smoothMonotone === 'x' ? 0 : 1;\n//     var last = points[0][dim];\n//     var lastDiff = 0;\n//     for (var i = 1; i < points.length; ++i) {\n//         var diff = points[i][dim] - last;\n//         if (!isNaN(diff) && !isNaN(lastDiff)\n//             && diff !== 0 && lastDiff !== 0\n//             && ((diff >= 0) !== (lastDiff >= 0))\n//         ) {\n//             return false;\n//         }\n//         if (!isNaN(diff) && diff !== 0) {\n//             lastDiff = diff;\n//             last = points[i][dim];\n//         }\n//     }\n//     return true;\n// }\n\n/**\n * Draw smoothed line in monotone, in which only vertical or horizontal bezier\n * control points will be used. This should be used when points are monotone\n * either in x or y dimension.\n */\n\n\nfunction drawMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n    } else {\n      if (smooth > 0) {\n        var prevP = points[prevIdx];\n        var dim = smoothMonotone === 'y' ? 1 : 0; // Length of control point to p, either in x or y, but not both\n\n        var ctrlLen = (p[dim] - prevP[dim]) * smooth;\n        v2Copy(cp0, prevP);\n        cp0[dim] = prevP[dim] + ctrlLen;\n        v2Copy(cp1, p);\n        cp1[dim] = p[dim] - ctrlLen;\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n/**\n * Draw smoothed line in non-monotone, in may cause undesired curve in extreme\n * situations. This should be used when points are non-monotone neither in x or\n * y dimension.\n */\n\n\nfunction drawNonMono(ctx, points, start, segLen, allLen, dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls) {\n  var prevIdx = 0;\n  var idx = start;\n\n  for (var k = 0; k < segLen; k++) {\n    var p = points[idx];\n\n    if (idx >= allLen || idx < 0) {\n      break;\n    }\n\n    if (isPointNull(p)) {\n      if (connectNulls) {\n        idx += dir;\n        continue;\n      }\n\n      break;\n    }\n\n    if (idx === start) {\n      ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n      v2Copy(cp0, p);\n    } else {\n      if (smooth > 0) {\n        var nextIdx = idx + dir;\n        var nextP = points[nextIdx];\n\n        if (connectNulls) {\n          // Find next point not null\n          while (nextP && isPointNull(points[nextIdx])) {\n            nextIdx += dir;\n            nextP = points[nextIdx];\n          }\n        }\n\n        var ratioNextSeg = 0.5;\n        var prevP = points[prevIdx];\n        var nextP = points[nextIdx]; // Last point\n\n        if (!nextP || isPointNull(nextP)) {\n          v2Copy(cp1, p);\n        } else {\n          // If next data is null in not connect case\n          if (isPointNull(nextP) && !connectNulls) {\n            nextP = p;\n          }\n\n          vec2.sub(v, nextP, prevP);\n          var lenPrevSeg;\n          var lenNextSeg;\n\n          if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n            var dim = smoothMonotone === 'x' ? 0 : 1;\n            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n          } else {\n            lenPrevSeg = vec2.dist(p, prevP);\n            lenNextSeg = vec2.dist(p, nextP);\n          } // Use ratio of seg length\n\n\n          ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n          scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n        } // Smooth constraint\n\n\n        vec2Min(cp0, cp0, smoothMax);\n        vec2Max(cp0, cp0, smoothMin);\n        vec2Min(cp1, cp1, smoothMax);\n        vec2Max(cp1, cp1, smoothMin);\n        ctx.bezierCurveTo(cp0[0], cp0[1], cp1[0], cp1[1], p[0], p[1]); // cp0 of next segment\n\n        scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n      } else {\n        ctx.lineTo(p[0], p[1]);\n      }\n    }\n\n    prevIdx = idx;\n    idx += dir;\n  }\n\n  return k;\n}\n\nfunction getBoundingBox(points, smoothConstraint) {\n  var ptMin = [Infinity, Infinity];\n  var ptMax = [-Infinity, -Infinity];\n\n  if (smoothConstraint) {\n    for (var i = 0; i < points.length; i++) {\n      var pt = points[i];\n\n      if (pt[0] < ptMin[0]) {\n        ptMin[0] = pt[0];\n      }\n\n      if (pt[1] < ptMin[1]) {\n        ptMin[1] = pt[1];\n      }\n\n      if (pt[0] > ptMax[0]) {\n        ptMax[0] = pt[0];\n      }\n\n      if (pt[1] > ptMax[1]) {\n        ptMax[1] = pt[1];\n      }\n    }\n  }\n\n  return {\n    min: smoothConstraint ? ptMin : ptMax,\n    max: smoothConstraint ? ptMax : ptMin\n  };\n}\n\nvar Polyline = Path.extend({\n  type: 'ec-polyline',\n  shape: {\n    points: [],\n    smooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  style: {\n    fill: null,\n    stroke: '#000'\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var points = shape.points;\n    var i = 0;\n    var len = points.length;\n    var result = getBoundingBox(points, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      i += drawSegment(ctx, points, i, len, len, 1, result.min, result.max, shape.smooth, shape.smoothMonotone, shape.connectNulls) + 1;\n    }\n  }\n});\nvar Polygon = Path.extend({\n  type: 'ec-polygon',\n  shape: {\n    points: [],\n    // Offset between stacked base points and points\n    stackedOnPoints: [],\n    smooth: 0,\n    stackedOnSmooth: 0,\n    smoothConstraint: true,\n    smoothMonotone: null,\n    connectNulls: false\n  },\n  brush: fixClipWithShadow(Path.prototype.brush),\n  buildPath: function buildPath(ctx, shape) {\n    var points = shape.points;\n    var stackedOnPoints = shape.stackedOnPoints;\n    var i = 0;\n    var len = points.length;\n    var smoothMonotone = shape.smoothMonotone;\n    var bbox = getBoundingBox(points, shape.smoothConstraint);\n    var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n    if (shape.connectNulls) {\n      // Must remove first and last null values avoid draw error in polygon\n      for (; len > 0; len--) {\n        if (!isPointNull(points[len - 1])) {\n          break;\n        }\n      }\n\n      for (; i < len; i++) {\n        if (!isPointNull(points[i])) {\n          break;\n        }\n      }\n    }\n\n    while (i < len) {\n      var k = drawSegment(ctx, points, i, len, len, 1, bbox.min, bbox.max, shape.smooth, smoothMonotone, shape.connectNulls);\n      drawSegment(ctx, stackedOnPoints, i + k - 1, k, len, -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth, smoothMonotone, shape.connectNulls);\n      i += k + 1;\n      ctx.closePath();\n    }\n  }\n});\nexports.Polyline = Polyline;\nexports.Polygon = Polygon;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar layout = require(\"../../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\n\n/**\n * Initialize all computational message for following algorithm.\n *\n * @param  {module:echarts/data/Tree~TreeNode} root   The virtual root of the tree.\n */\n\n\nfunction init(root) {\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param {Function} separation\n */\n\n\nfunction firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\n\nfunction separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n *\n * @param  {number} x\n * @param  {number} y\n * @return {Object}\n */\n\n\nfunction radialCoordinate(x, y) {\n  var radialCoor = {};\n  x -= Math.PI / 2;\n  radialCoor.x = y * Math.cos(x);\n  radialCoor.y = y * Math.sin(x);\n  return radialCoor;\n}\n/**\n * Get the layout position of the whole view.\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n */\n\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n *\n * @param  {module:echarts/data/Tree~TreeNode} subtreeV\n * @param  {module:echarts/data/Tree~TreeNode} subtreeW\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @param  {Function} separation\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n *\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n *\n * @param  {module:echarts/data/Tree~TreeNode} nodeInLeft\n * @param  {module:echarts/data/Tree~TreeNode} node\n * @param  {module:echarts/data/Tree~TreeNode} ancestor\n * @return {module:echarts/data/Tree~TreeNode}\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n *\n * @param  {module:echarts/data/Tree~TreeNode} wl\n * @param  {module:echarts/data/Tree~TreeNode} wr\n * @param  {number} shift [description]\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}\n\nexports.init = init;\nexports.firstWalk = firstWalk;\nexports.secondWalk = secondWalk;\nexports.separation = separation;\nexports.radialCoordinate = radialCoordinate;\nexports.getViewRect = getViewRect;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar Graph = require(\"../../data/Graph\");\n\nvar linkList = require(\"../../data/helper/linkList\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar createListFromArray = require(\"./createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(nodes, edges, seriesModel, directed, beforeLink) {\n  // ??? TODO\n  // support dataset?\n  var graph = new Graph(directed);\n\n  for (var i = 0; i < nodes.length; i++) {\n    graph.addNode(zrUtil.retrieve( // Id, name, dataIndex\n    nodes[i].id, nodes[i].name, i), i);\n  }\n\n  var linkNameList = [];\n  var validEdges = [];\n  var linkCount = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    var link = edges[i];\n    var source = link.source;\n    var target = link.target; // addEdge may fail when source or target not exists\n\n    if (graph.addEdge(source, target, linkCount)) {\n      validEdges.push(link);\n      linkNameList.push(zrUtil.retrieve(link.id, source + ' > ' + target));\n      linkCount++;\n    }\n  }\n\n  var coordSys = seriesModel.get('coordinateSystem');\n  var nodeData;\n\n  if (coordSys === 'cartesian2d' || coordSys === 'polar') {\n    nodeData = createListFromArray(nodes, seriesModel);\n  } else {\n    var coordSysCtor = CoordinateSystem.get(coordSys);\n    var coordDimensions = coordSysCtor && coordSysCtor.type !== 'view' ? coordSysCtor.dimensions || [] : []; // FIXME: Some geo do not need `value` dimenson, whereas `calendar` needs\n    // `value` dimension, but graph need `value` dimension. It's better to\n    // uniform this behavior.\n\n    if (zrUtil.indexOf(coordDimensions, 'value') < 0) {\n      coordDimensions.concat(['value']);\n    }\n\n    var dimensionNames = createDimensions(nodes, {\n      coordDimensions: coordDimensions\n    });\n    nodeData = new List(dimensionNames, seriesModel);\n    nodeData.initData(nodes);\n  }\n\n  var edgeData = new List(['value'], seriesModel);\n  edgeData.initData(validEdges, linkNameList);\n  beforeLink && beforeLink(nodeData, edgeData);\n  linkList({\n    mainData: nodeData,\n    struct: graph,\n    structAttr: 'graph',\n    datas: {\n      node: nodeData,\n      edge: edgeData\n    },\n    datasAttr: {\n      node: 'data',\n      edge: 'edgeData'\n    }\n  }); // Update dataIndex of nodes and edges because invalid edge may be removed\n\n  graph.update();\n  return graph;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n * @property {number} [dataIndex]\n */\n\n\necharts.registerAction({\n  type: 'focusNodeAdjacency',\n  event: 'focusNodeAdjacency',\n  update: 'series:focusNodeAdjacency'\n}, function () {});\n/**\n * @payload\n * @property {number} [seriesIndex]\n * @property {string} [seriesId]\n * @property {string} [seriesName]\n */\n\necharts.registerAction({\n  type: 'unfocusNodeAdjacency',\n  event: 'unfocusNodeAdjacency',\n  update: 'series:unfocusNodeAdjacency'\n}, function () {});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForAxisCoordSys = _sourceHelper.makeSeriesEncodeForAxisCoordSys;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar seriesModelMixin = {\n  /**\n   * @private\n   * @type {string}\n   */\n  _baseAxisDim: null,\n\n  /**\n   * @override\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    // When both types of xAxis and yAxis are 'value', layout is\n    // needed to be specified by user. Otherwise, layout can be\n    // judged by which axis is category.\n    var ordinalMeta;\n    var xAxisModel = ecModel.getComponent('xAxis', this.get('xAxisIndex'));\n    var yAxisModel = ecModel.getComponent('yAxis', this.get('yAxisIndex'));\n    var xAxisType = xAxisModel.get('type');\n    var yAxisType = yAxisModel.get('type');\n    var addOrdinal; // FIXME\n    // Consider time axis.\n\n    if (xAxisType === 'category') {\n      option.layout = 'horizontal';\n      ordinalMeta = xAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else if (yAxisType === 'category') {\n      option.layout = 'vertical';\n      ordinalMeta = yAxisModel.getOrdinalMeta();\n      addOrdinal = true;\n    } else {\n      option.layout = option.layout || 'horizontal';\n    }\n\n    var coordDims = ['x', 'y'];\n    var baseAxisDimIndex = option.layout === 'horizontal' ? 0 : 1;\n    var baseAxisDim = this._baseAxisDim = coordDims[baseAxisDimIndex];\n    var otherAxisDim = coordDims[1 - baseAxisDimIndex];\n    var axisModels = [xAxisModel, yAxisModel];\n    var baseAxisType = axisModels[baseAxisDimIndex].get('type');\n    var otherAxisType = axisModels[1 - baseAxisDimIndex].get('type');\n    var data = option.data; // ??? FIXME make a stage to perform data transfrom.\n    // MUST create a new data, consider setOption({}) again.\n\n    if (data && addOrdinal) {\n      var newOptionData = [];\n      zrUtil.each(data, function (item, index) {\n        var newItem;\n\n        if (item.value && zrUtil.isArray(item.value)) {\n          newItem = item.value.slice();\n          item.value.unshift(index);\n        } else if (zrUtil.isArray(item)) {\n          newItem = item.slice();\n          item.unshift(index);\n        } else {\n          newItem = item;\n        }\n\n        newOptionData.push(newItem);\n      });\n      option.data = newOptionData;\n    }\n\n    var defaultValueDimensions = this.defaultValueDimensions;\n    var coordDimensions = [{\n      name: baseAxisDim,\n      type: getDimensionTypeByAxis(baseAxisType),\n      ordinalMeta: ordinalMeta,\n      otherDims: {\n        tooltip: false,\n        itemName: 0\n      },\n      dimsDef: ['base']\n    }, {\n      name: otherAxisDim,\n      type: getDimensionTypeByAxis(otherAxisType),\n      dimsDef: defaultValueDimensions.slice()\n    }];\n    return createListSimply(this, {\n      coordDimensions: coordDimensions,\n      dimensionsCount: defaultValueDimensions.length + 1,\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForAxisCoordSys, coordDimensions, this)\n    });\n  },\n\n  /**\n   * If horizontal, base axis is x, otherwise y.\n   * @override\n   */\n  getBaseAxis: function getBaseAxis() {\n    var dim = this._baseAxisDim;\n    return this.ecModel.getComponent(dim + 'Axis', this.get(dim + 'AxisIndex')).axis;\n  }\n};\nexports.seriesModelMixin = seriesModelMixin;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar Line = require(\"./Line\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar curveUtil = require(\"zrender/lib/core/curve\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Line}\n */\n\n\nfunction EffectLine(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n  this.add(this.createLine(lineData, idx, seriesScope));\n\n  this._updateEffectSymbol(lineData, idx);\n}\n\nvar effectLineProto = EffectLine.prototype;\n\neffectLineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Line(lineData, idx, seriesScope);\n};\n\neffectLineProto._updateEffectSymbol = function (lineData, idx) {\n  var itemModel = lineData.getItemModel(idx);\n  var effectModel = itemModel.getModel('effect');\n  var size = effectModel.get('symbolSize');\n  var symbolType = effectModel.get('symbol');\n\n  if (!zrUtil.isArray(size)) {\n    size = [size, size];\n  }\n\n  var color = effectModel.get('color') || lineData.getItemVisual(idx, 'color');\n  var symbol = this.childAt(1);\n\n  if (this._symbolType !== symbolType) {\n    // Remove previous\n    this.remove(symbol);\n    symbol = createSymbol(symbolType, -0.5, -0.5, 1, 1, color);\n    symbol.z2 = 100;\n    symbol.culling = true;\n    this.add(symbol);\n  } // Symbol may be removed if loop is false\n\n\n  if (!symbol) {\n    return;\n  } // Shadow color is same with color in default\n\n\n  symbol.setStyle('shadowColor', color);\n  symbol.setStyle(effectModel.getItemStyle(['color']));\n  symbol.attr('scale', size);\n  symbol.setColor(color);\n  symbol.attr('scale', size);\n  this._symbolType = symbolType;\n  this._symbolScale = size;\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\neffectLineProto._updateEffectAnimation = function (lineData, effectModel, idx) {\n  var symbol = this.childAt(1);\n\n  if (!symbol) {\n    return;\n  }\n\n  var self = this;\n  var points = lineData.getItemLayout(idx);\n  var period = effectModel.get('period') * 1000;\n  var loop = effectModel.get('loop');\n  var constantSpeed = effectModel.get('constantSpeed');\n  var delayExpr = zrUtil.retrieve(effectModel.get('delay'), function (idx) {\n    return idx / lineData.count() * period / 3;\n  });\n  var isDelayFunc = typeof delayExpr === 'function'; // Ignore when updating\n\n  symbol.ignore = true;\n  this.updateAnimationPoints(symbol, points);\n\n  if (constantSpeed > 0) {\n    period = this.getLineLength(symbol) / constantSpeed * 1000;\n  }\n\n  if (period !== this._period || loop !== this._loop) {\n    symbol.stopAnimation();\n    var delay = delayExpr;\n\n    if (isDelayFunc) {\n      delay = delayExpr(idx);\n    }\n\n    if (symbol.__t > 0) {\n      delay = -period * symbol.__t;\n    }\n\n    symbol.__t = 0;\n    var animator = symbol.animate('', loop).when(period, {\n      __t: 1\n    }).delay(delay).during(function () {\n      self.updateSymbolPosition(symbol);\n    });\n\n    if (!loop) {\n      animator.done(function () {\n        self.remove(symbol);\n      });\n    }\n\n    animator.start();\n  }\n\n  this._period = period;\n  this._loop = loop;\n};\n\neffectLineProto.getLineLength = function (symbol) {\n  // Not so accurate\n  return vec2.dist(symbol.__p1, symbol.__cp1) + vec2.dist(symbol.__cp1, symbol.__p2);\n};\n\neffectLineProto.updateAnimationPoints = function (symbol, points) {\n  symbol.__p1 = points[0];\n  symbol.__p2 = points[1];\n  symbol.__cp1 = points[2] || [(points[0][0] + points[1][0]) / 2, (points[0][1] + points[1][1]) / 2];\n};\n\neffectLineProto.updateData = function (lineData, idx, seriesScope) {\n  this.childAt(0).updateData(lineData, idx, seriesScope);\n\n  this._updateEffectSymbol(lineData, idx);\n};\n\neffectLineProto.updateSymbolPosition = function (symbol) {\n  var p1 = symbol.__p1;\n  var p2 = symbol.__p2;\n  var cp1 = symbol.__cp1;\n  var t = symbol.__t;\n  var pos = symbol.position;\n  var lastPos = [pos[0], pos[1]];\n  var quadraticAt = curveUtil.quadraticAt;\n  var quadraticDerivativeAt = curveUtil.quadraticDerivativeAt;\n  pos[0] = quadraticAt(p1[0], cp1[0], p2[0], t);\n  pos[1] = quadraticAt(p1[1], cp1[1], p2[1], t); // Tangent\n\n  var tx = quadraticDerivativeAt(p1[0], cp1[0], p2[0], t);\n  var ty = quadraticDerivativeAt(p1[1], cp1[1], p2[1], t);\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2; // enable continuity trail for 'line', 'rect', 'roundRect' symbolType\n\n  if (this._symbolType === 'line' || this._symbolType === 'rect' || this._symbolType === 'roundRect') {\n    if (symbol.__lastT !== undefined && symbol.__lastT < symbol.__t) {\n      var scaleY = vec2.dist(lastPos, pos) * 1.05;\n      symbol.attr('scale', [symbol.scale[0], scaleY]); // make sure the last segment render within endPoint\n\n      if (t === 1) {\n        pos[0] = lastPos[0] + (pos[0] - lastPos[0]) / 2;\n        pos[1] = lastPos[1] + (pos[1] - lastPos[1]) / 2;\n      }\n    } else if (symbol.__lastT === 1) {\n      // After first loop, symbol.__t does NOT start with 0, so connect p1 to pos directly.\n      var scaleY = 2 * vec2.dist(p1, pos);\n      symbol.attr('scale', [symbol.scale[0], scaleY]);\n    } else {\n      symbol.attr('scale', this._symbolScale);\n    }\n  }\n\n  symbol.__lastT = symbol.__t;\n  symbol.ignore = false;\n};\n\neffectLineProto.updateLayout = function (lineData, idx) {\n  this.childAt(0).updateLayout(lineData, idx);\n  var effectModel = lineData.getItemModel(idx).getModel('effect');\n\n  this._updateEffectAnimation(lineData, effectModel, idx);\n};\n\nzrUtil.inherits(EffectLine, graphic.Group);\nvar _default = EffectLine;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/chart/helper/Line\n */\n\n/**\n * @constructor\n * @extends {module:zrender/graphic/Group}\n * @alias {module:echarts/chart/helper/Polyline}\n */\n\n\nfunction Polyline(lineData, idx, seriesScope) {\n  graphic.Group.call(this);\n\n  this._createPolyline(lineData, idx, seriesScope);\n}\n\nvar polylineProto = Polyline.prototype;\n\npolylineProto._createPolyline = function (lineData, idx, seriesScope) {\n  // var seriesModel = lineData.hostModel;\n  var points = lineData.getItemLayout(idx);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    }\n  });\n  this.add(line);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto.updateData = function (lineData, idx, seriesScope) {\n  var seriesModel = lineData.hostModel;\n  var line = this.childAt(0);\n  var target = {\n    shape: {\n      points: lineData.getItemLayout(idx)\n    }\n  };\n  graphic.updateProps(line, target, seriesModel, idx);\n\n  this._updateCommonStl(lineData, idx, seriesScope);\n};\n\npolylineProto._updateCommonStl = function (lineData, idx, seriesScope) {\n  var line = this.childAt(0);\n  var itemModel = lineData.getItemModel(idx);\n  var visualColor = lineData.getItemVisual(idx, 'color');\n  var lineStyle = seriesScope && seriesScope.lineStyle;\n  var hoverLineStyle = seriesScope && seriesScope.hoverLineStyle;\n\n  if (!seriesScope || lineData.hasItemOption) {\n    lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n    hoverLineStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n  }\n\n  line.useStyle(zrUtil.defaults({\n    strokeNoScale: true,\n    fill: 'none',\n    stroke: visualColor\n  }, lineStyle));\n  line.hoverStyle = hoverLineStyle;\n  graphic.setHoverStyle(this);\n};\n\npolylineProto.updateLayout = function (lineData, idx) {\n  var polyline = this.childAt(0);\n  polyline.setShape('points', lineData.getItemLayout(idx));\n};\n\nzrUtil.inherits(Polyline, graphic.Group);\nvar _default = Polyline;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar createRenderPlanner = require(\"../helper/createRenderPlanner\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n\n\nvar _default = {\n  seriesType: 'lines',\n  plan: createRenderPlanner(),\n  reset: function reset(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var isPolyline = seriesModel.get('polyline');\n    var isLarge = seriesModel.pipelineContext.large;\n\n    function progress(params, lineData) {\n      var lineCoords = [];\n\n      if (isLarge) {\n        var points;\n        var segCount = params.end - params.start;\n\n        if (isPolyline) {\n          var totalCoordsCount = 0;\n\n          for (var i = params.start; i < params.end; i++) {\n            totalCoordsCount += seriesModel.getLineCoordsCount(i);\n          }\n\n          points = new Float32Array(segCount + totalCoordsCount * 2);\n        } else {\n          points = new Float32Array(segCount * 4);\n        }\n\n        var offset = 0;\n        var pt = [];\n\n        for (var i = params.start; i < params.end; i++) {\n          var len = seriesModel.getLineCoords(i, lineCoords);\n\n          if (isPolyline) {\n            points[offset++] = len;\n          }\n\n          for (var k = 0; k < len; k++) {\n            pt = coordSys.dataToPoint(lineCoords[k], false, pt);\n            points[offset++] = pt[0];\n            points[offset++] = pt[1];\n          }\n        }\n\n        lineData.setLayout('linesPoints', points);\n      } else {\n        for (var i = params.start; i < params.end; i++) {\n          var itemModel = lineData.getItemModel(i);\n          var len = seriesModel.getLineCoords(i, lineCoords);\n          var pts = [];\n\n          if (isPolyline) {\n            for (var j = 0; j < len; j++) {\n              pts.push(coordSys.dataToPoint(lineCoords[j]));\n            }\n          } else {\n            pts[0] = coordSys.dataToPoint(lineCoords[0]);\n            pts[1] = coordSys.dataToPoint(lineCoords[1]);\n            var curveness = itemModel.get('lineStyle.curveness');\n\n            if (+curveness) {\n              pts[2] = [(pts[0][0] + pts[1][0]) / 2 - (pts[0][1] - pts[1][1]) * curveness, (pts[0][1] + pts[1][1]) / 2 - (pts[1][0] - pts[0][0]) * curveness];\n            }\n          }\n\n          lineData.setItemLayout(i, pts);\n        }\n      }\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./line/LineSeries\");\n\nrequire(\"./line/LineView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nvar dataSample = require(\"../processor/dataSample\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerVisual(visualSymbol('line', 'circle', 'line'));\necharts.registerLayout(layoutPoints('line')); // Down sample after filter\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, dataSample('line'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.line',\n  dependencies: ['grid', 'polar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // stack: null\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // polarIndex: 0,\n    // If clip the overflow value\n    clip: true,\n    // cursor: null,\n    label: {\n      position: 'top'\n    },\n    // itemStyle: {\n    // },\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    // areaStyle: {\n    // origin of areaStyle. Valid values:\n    // `'auto'/null/undefined`: from axisLine to data\n    // `'start'`: from min to data\n    // `'end'`: from data to max\n    // origin: 'auto'\n    // },\n    // false, 'start', 'end', 'middle'\n    step: false,\n    // Disabled if step is true\n    smooth: false,\n    smoothMonotone: null,\n    symbol: 'emptyCircle',\n    symbolSize: 4,\n    symbolRotate: null,\n    showSymbol: true,\n    // `false`: follow the label interval strategy.\n    // `true`: show all symbols.\n    // `'auto'`: If possible, show all symbols, otherwise\n    //           follow the label interval strategy.\n    showAllSymbol: 'auto',\n    // Whether to connect break point.\n    connectNulls: false,\n    // Sampling for large data. Can be: 'average', 'max', 'min', 'sum'.\n    sampling: 'none',\n    animationEasing: 'linear',\n    // Disable progressive\n    progressive: 0,\n    hoverLayerThreshold: Infinity\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _bbox = require(\"zrender/lib/core/bbox\");\n\nvar fromPoints = _bbox.fromPoints;\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar lineAnimationDiff = require(\"./lineAnimationDiff\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _poly = require(\"./poly\");\n\nvar Polyline = _poly.Polyline;\nvar Polygon = _poly.Polygon;\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createGridClipPath = _createClipPathFromCoordSys.createGridClipPath;\nvar createPolarClipPath = _createClipPathFromCoordSys.createPolarClipPath;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME step not support polar\n\nfunction isPointsSame(points1, points2) {\n  if (points1.length !== points2.length) {\n    return;\n  }\n\n  for (var i = 0; i < points1.length; i++) {\n    var p1 = points1[i];\n    var p2 = points2[i];\n\n    if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n      return;\n    }\n  }\n\n  return true;\n}\n\nfunction getBoundingDiff(points1, points2) {\n  var min1 = [];\n  var max1 = [];\n  var min2 = [];\n  var max2 = [];\n  fromPoints(points1, min1, max1);\n  fromPoints(points2, min2, max2); // Get a max value from each corner of two boundings.\n\n  return Math.max(Math.abs(min1[0] - min2[0]), Math.abs(min1[1] - min2[1]), Math.abs(max1[0] - max2[0]), Math.abs(max1[1] - max2[1]));\n}\n\nfunction getSmooth(smooth) {\n  return typeof smooth === 'number' ? smooth : smooth ? 0.5 : 0;\n}\n/**\n * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n * @param {module:echarts/data/List} data\n * @param {Object} dataCoordInfo\n * @param {Array.<Array.<number>>} points\n */\n\n\nfunction getStackedOnPoints(coordSys, data, dataCoordInfo) {\n  if (!dataCoordInfo.valueDim) {\n    return [];\n  }\n\n  var points = [];\n\n  for (var idx = 0, len = data.count(); idx < len; idx++) {\n    points.push(getStackedOnPoint(dataCoordInfo, coordSys, data, idx));\n  }\n\n  return points;\n}\n\nfunction turnPointsIntoStep(points, coordSys, stepTurnAt) {\n  var baseAxis = coordSys.getBaseAxis();\n  var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n  var stepPoints = [];\n\n  for (var i = 0; i < points.length - 1; i++) {\n    var nextPt = points[i + 1];\n    var pt = points[i];\n    stepPoints.push(pt);\n    var stepPt = [];\n\n    switch (stepTurnAt) {\n      case 'end':\n        stepPt[baseIndex] = nextPt[baseIndex];\n        stepPt[1 - baseIndex] = pt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n        break;\n\n      case 'middle':\n        // default is start\n        var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n        var stepPt2 = [];\n        stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n        stepPt[1 - baseIndex] = pt[1 - baseIndex];\n        stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n        stepPoints.push(stepPt);\n        stepPoints.push(stepPt2);\n        break;\n\n      default:\n        stepPt[baseIndex] = pt[baseIndex];\n        stepPt[1 - baseIndex] = nextPt[1 - baseIndex]; // default is start\n\n        stepPoints.push(stepPt);\n    }\n  } // Last points\n\n\n  points[i] && stepPoints.push(points[i]);\n  return stepPoints;\n}\n\nfunction getVisualGradient(data, coordSys) {\n  var visualMetaList = data.getVisual('visualMeta');\n\n  if (!visualMetaList || !visualMetaList.length || !data.count()) {\n    // When data.count() is 0, gradient range can not be calculated.\n    return;\n  }\n\n  if (coordSys.type !== 'cartesian2d') {\n    return;\n  }\n\n  var coordDim;\n  var visualMeta;\n\n  for (var i = visualMetaList.length - 1; i >= 0; i--) {\n    var dimIndex = visualMetaList[i].dimension;\n    var dimName = data.dimensions[dimIndex];\n    var dimInfo = data.getDimensionInfo(dimName);\n    coordDim = dimInfo && dimInfo.coordDim; // Can only be x or y\n\n    if (coordDim === 'x' || coordDim === 'y') {\n      visualMeta = visualMetaList[i];\n      break;\n    }\n  }\n\n  if (!visualMeta) {\n    return;\n  } // If the area to be rendered is bigger than area defined by LinearGradient,\n  // the canvas spec prescribes that the color of the first stop and the last\n  // stop should be used. But if two stops are added at offset 0, in effect\n  // browsers use the color of the second stop to render area outside\n  // LinearGradient. So we can only infinitesimally extend area defined in\n  // LinearGradient to render `outerColors`.\n\n\n  var axis = coordSys.getAxis(coordDim); // dataToCoor mapping may not be linear, but must be monotonic.\n\n  var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n    return {\n      coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n      color: stop.color\n    };\n  });\n  var stopLen = colorStops.length;\n  var outerColors = visualMeta.outerColors.slice();\n\n  if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n    colorStops.reverse();\n    outerColors.reverse();\n  }\n\n  var tinyExtent = 10; // Arbitrary value: 10px\n\n  var minCoord = colorStops[0].coord - tinyExtent;\n  var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n  var coordSpan = maxCoord - minCoord;\n\n  if (coordSpan < 1e-3) {\n    return 'transparent';\n  }\n\n  zrUtil.each(colorStops, function (stop) {\n    stop.offset = (stop.coord - minCoord) / coordSpan;\n  });\n  colorStops.push({\n    offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n    color: outerColors[1] || 'transparent'\n  });\n  colorStops.unshift({\n    // notice colorStops.length have been changed.\n    offset: stopLen ? colorStops[0].offset : 0.5,\n    color: outerColors[0] || 'transparent'\n  }); // zrUtil.each(colorStops, function (colorStop) {\n  //     // Make sure each offset has rounded px to avoid not sharp edge\n  //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n  // });\n\n  var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n  gradient[coordDim] = minCoord;\n  gradient[coordDim + '2'] = maxCoord;\n  return gradient;\n}\n\nfunction getIsIgnoreFunc(seriesModel, data, coordSys) {\n  var showAllSymbol = seriesModel.get('showAllSymbol');\n  var isAuto = showAllSymbol === 'auto';\n\n  if (showAllSymbol && !isAuto) {\n    return;\n  }\n\n  var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n\n  if (!categoryAxis) {\n    return;\n  } // Note that category label interval strategy might bring some weird effect\n  // in some scenario: users may wonder why some of the symbols are not\n  // displayed. So we show all symbols as possible as we can.\n\n\n  if (isAuto // Simplify the logic, do not determine label overlap here.\n  && canShowAllSymbolForCategory(categoryAxis, data)) {\n    return;\n  } // Otherwise follow the label interval strategy on category axis.\n\n\n  var categoryDataDim = data.mapDimension(categoryAxis.dim);\n  var labelMap = {};\n  zrUtil.each(categoryAxis.getViewLabels(), function (labelItem) {\n    labelMap[labelItem.tickValue] = 1;\n  });\n  return function (dataIndex) {\n    return !labelMap.hasOwnProperty(data.get(categoryDataDim, dataIndex));\n  };\n}\n\nfunction canShowAllSymbolForCategory(categoryAxis, data) {\n  // In mose cases, line is monotonous on category axis, and the label size\n  // is close with each other. So we check the symbol size and some of the\n  // label size alone with the category axis to estimate whether all symbol\n  // can be shown without overlap.\n  var axisExtent = categoryAxis.getExtent();\n  var availSize = Math.abs(axisExtent[1] - axisExtent[0]) / categoryAxis.scale.count();\n  isNaN(availSize) && (availSize = 0); // 0/0 is NaN.\n  // Sampling some points, max 5.\n\n  var dataLen = data.count();\n  var step = Math.max(1, Math.round(dataLen / 5));\n\n  for (var dataIndex = 0; dataIndex < dataLen; dataIndex += step) {\n    if (SymbolClz.getSymbolSize(data, dataIndex // Only for cartesian, where `isHorizontal` exists.\n    )[categoryAxis.isHorizontal() ? 1 : 0] // Empirical number\n    * 1.5 > availSize) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction createLineClipPath(coordSys, hasAnimation, seriesModel) {\n  if (coordSys.type === 'cartesian2d') {\n    var isHorizontal = coordSys.getBaseAxis().isHorizontal();\n    var clipPath = createGridClipPath(coordSys, hasAnimation, seriesModel); // Expand clip shape to avoid clipping when line value exceeds axis\n\n    if (!seriesModel.get('clip', true)) {\n      var rectShape = clipPath.shape;\n      var expandSize = Math.max(rectShape.width, rectShape.height);\n\n      if (isHorizontal) {\n        rectShape.y -= expandSize;\n        rectShape.height += expandSize * 2;\n      } else {\n        rectShape.x -= expandSize;\n        rectShape.width += expandSize * 2;\n      }\n    }\n\n    return clipPath;\n  } else {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  }\n}\n\nvar _default = ChartView.extend({\n  type: 'line',\n  init: function init() {\n    var lineGroup = new graphic.Group();\n    var symbolDraw = new SymbolDraw();\n    this.group.add(symbolDraw.group);\n    this._symbolDraw = symbolDraw;\n    this._lineGroup = lineGroup;\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var areaStyleModel = seriesModel.getModel('areaStyle');\n    var points = data.mapArray(data.getItemLayout);\n    var isCoordSysPolar = coordSys.type === 'polar';\n    var prevCoordSys = this._coordSys;\n    var symbolDraw = this._symbolDraw;\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var lineGroup = this._lineGroup;\n    var hasAnimation = seriesModel.get('animation');\n    var isAreaChart = !areaStyleModel.isEmpty();\n    var valueOrigin = areaStyleModel.get('origin');\n    var dataCoordInfo = prepareDataCoordInfo(coordSys, data, valueOrigin);\n    var stackedOnPoints = getStackedOnPoints(coordSys, data, dataCoordInfo);\n    var showSymbol = seriesModel.get('showSymbol');\n    var isIgnoreFunc = showSymbol && !isCoordSysPolar && getIsIgnoreFunc(seriesModel, data, coordSys); // Remove temporary symbols\n\n    var oldData = this._data;\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    }); // Remove previous created symbols if showSymbol changed to false\n\n    if (!showSymbol) {\n      symbolDraw.remove();\n    }\n\n    group.add(lineGroup); // FIXME step not support polar\n\n    var step = !isCoordSysPolar && seriesModel.get('step');\n    var clipShapeForSymbol;\n\n    if (coordSys && coordSys.getArea && seriesModel.get('clip', true)) {\n      clipShapeForSymbol = coordSys.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n      // See #7913 and `test/dataZoom-clip.html`.\n\n      if (clipShapeForSymbol.width != null) {\n        clipShapeForSymbol.x -= 0.1;\n        clipShapeForSymbol.y -= 0.1;\n        clipShapeForSymbol.width += 0.2;\n        clipShapeForSymbol.height += 0.2;\n      } else if (clipShapeForSymbol.r0) {\n        clipShapeForSymbol.r0 -= 0.5;\n        clipShapeForSymbol.r1 += 0.5;\n      }\n    }\n\n    this._clipShapeForSymbol = clipShapeForSymbol; // Initialization animation or coordinate system changed\n\n    if (!(polyline && prevCoordSys.type === coordSys.type && step === this._step)) {\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      });\n\n      if (step) {\n        // TODO If stacked series is not step\n        points = turnPointsIntoStep(points, coordSys, step);\n        stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n      }\n\n      polyline = this._newPolyline(points, coordSys, hasAnimation);\n\n      if (isAreaChart) {\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      }\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, true, seriesModel));\n    } else {\n      if (isAreaChart && !polygon) {\n        // If areaStyle is added\n        polygon = this._newPolygon(points, stackedOnPoints, coordSys, hasAnimation);\n      } else if (polygon && !isAreaChart) {\n        // If areaStyle is removed\n        lineGroup.remove(polygon);\n        polygon = this._polygon = null;\n      } // Update clipPath\n\n\n      lineGroup.setClipPath(createLineClipPath(coordSys, false, seriesModel)); // Always update, or it is wrong in the case turning on legend\n      // because points are not changed\n\n      showSymbol && symbolDraw.updateData(data, {\n        isIgnore: isIgnoreFunc,\n        clipShape: clipShapeForSymbol\n      }); // Stop symbol animation and sync with line points\n      // FIXME performance?\n\n      data.eachItemGraphicEl(function (el) {\n        el.stopAnimation(true);\n      }); // In the case data zoom triggerred refreshing frequently\n      // Data may not change if line has a category axis. So it should animate nothing\n\n      if (!isPointsSame(this._stackedOnPoints, stackedOnPoints) || !isPointsSame(this._points, points)) {\n        if (hasAnimation) {\n          this._updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin);\n        } else {\n          // Not do it in update with animation\n          if (step) {\n            // TODO If stacked series is not step\n            points = turnPointsIntoStep(points, coordSys, step);\n            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n          }\n\n          polyline.setShape({\n            points: points\n          });\n          polygon && polygon.setShape({\n            points: points,\n            stackedOnPoints: stackedOnPoints\n          });\n        }\n      }\n    }\n\n    var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n    polyline.useStyle(zrUtil.defaults( // Use color in lineStyle first\n    lineStyleModel.getLineStyle(), {\n      fill: 'none',\n      stroke: visualColor,\n      lineJoin: 'bevel'\n    }));\n    var smooth = seriesModel.get('smooth');\n    smooth = getSmooth(seriesModel.get('smooth'));\n    polyline.setShape({\n      smooth: smooth,\n      smoothMonotone: seriesModel.get('smoothMonotone'),\n      connectNulls: seriesModel.get('connectNulls')\n    });\n\n    if (polygon) {\n      var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n      var stackedOnSmooth = 0;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: visualColor,\n        opacity: 0.7,\n        lineJoin: 'bevel'\n      }));\n\n      if (stackedOnSeries) {\n        stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n      }\n\n      polygon.setShape({\n        smooth: smooth,\n        stackedOnSmooth: stackedOnSmooth,\n        smoothMonotone: seriesModel.get('smoothMonotone'),\n        connectNulls: seriesModel.get('connectNulls')\n      });\n    }\n\n    this._data = data; // Save the coordinate system for transition animation when data changed\n\n    this._coordSys = coordSys;\n    this._stackedOnPoints = stackedOnPoints;\n    this._points = points;\n    this._step = step;\n    this._valueOrigin = valueOrigin;\n  },\n  dispose: function dispose() {},\n  highlight: function highlight(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (!symbol) {\n        // Create a temporary symbol if it is not exists\n        var pt = data.getItemLayout(dataIndex);\n\n        if (!pt) {\n          // Null data\n          return;\n        } // fix #11360: should't draw symbol outside clipShapeForSymbol\n\n\n        if (this._clipShapeForSymbol && !this._clipShapeForSymbol.contain(pt[0], pt[1])) {\n          return;\n        }\n\n        symbol = new SymbolClz(data, dataIndex);\n        symbol.position = pt;\n        symbol.setZ(seriesModel.get('zlevel'), seriesModel.get('z'));\n        symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n        symbol.__temp = true;\n        data.setItemGraphicEl(dataIndex, symbol); // Stop scale animation\n\n        symbol.stopSymbolAnimation(true);\n        this.group.add(symbol);\n      }\n\n      symbol.highlight();\n    } else {\n      // Highlight whole series\n      ChartView.prototype.highlight.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n  downplay: function downplay(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n    if (dataIndex != null && dataIndex >= 0) {\n      var symbol = data.getItemGraphicEl(dataIndex);\n\n      if (symbol) {\n        if (symbol.__temp) {\n          data.setItemGraphicEl(dataIndex, null);\n          this.group.remove(symbol);\n        } else {\n          symbol.downplay();\n        }\n      }\n    } else {\n      // FIXME\n      // can not downplay completely.\n      // Downplay whole series\n      ChartView.prototype.downplay.call(this, seriesModel, ecModel, api, payload);\n    }\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolyline: function _newPolyline(points) {\n    var polyline = this._polyline; // Remove previous created polyline\n\n    if (polyline) {\n      this._lineGroup.remove(polyline);\n    }\n\n    polyline = new Polyline({\n      shape: {\n        points: points\n      },\n      silent: true,\n      z2: 10\n    });\n\n    this._lineGroup.add(polyline);\n\n    this._polyline = polyline;\n    return polyline;\n  },\n\n  /**\n   * @param {module:zrender/container/Group} group\n   * @param {Array.<Array.<number>>} stackedOnPoints\n   * @param {Array.<Array.<number>>} points\n   * @private\n   */\n  _newPolygon: function _newPolygon(points, stackedOnPoints) {\n    var polygon = this._polygon; // Remove previous created polygon\n\n    if (polygon) {\n      this._lineGroup.remove(polygon);\n    }\n\n    polygon = new Polygon({\n      shape: {\n        points: points,\n        stackedOnPoints: stackedOnPoints\n      },\n      silent: true\n    });\n\n    this._lineGroup.add(polygon);\n\n    this._polygon = polygon;\n    return polygon;\n  },\n\n  /**\n   * @private\n   */\n  // FIXME Two value axis\n  _updateAnimation: function _updateAnimation(data, stackedOnPoints, coordSys, api, step, valueOrigin) {\n    var polyline = this._polyline;\n    var polygon = this._polygon;\n    var seriesModel = data.hostModel;\n    var diff = lineAnimationDiff(this._data, data, this._stackedOnPoints, stackedOnPoints, this._coordSys, coordSys, this._valueOrigin, valueOrigin);\n    var current = diff.current;\n    var stackedOnCurrent = diff.stackedOnCurrent;\n    var next = diff.next;\n    var stackedOnNext = diff.stackedOnNext;\n\n    if (step) {\n      // TODO If stacked series is not step\n      current = turnPointsIntoStep(diff.current, coordSys, step);\n      stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n      next = turnPointsIntoStep(diff.next, coordSys, step);\n      stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n    } // Don't apply animation if diff is large.\n    // For better result and avoid memory explosion problems like\n    // https://github.com/apache/incubator-echarts/issues/12229\n\n\n    if (getBoundingDiff(current, next) > 3000 || polygon && getBoundingDiff(stackedOnCurrent, stackedOnNext) > 3000) {\n      polyline.setShape({\n        points: next\n      });\n\n      if (polygon) {\n        polygon.setShape({\n          points: next,\n          stackedOnPoints: stackedOnNext\n        });\n      }\n\n      return;\n    } // `diff.current` is subset of `current` (which should be ensured by\n    // turnPointsIntoStep), so points in `__points` can be updated when\n    // points in `current` are update during animation.\n\n\n    polyline.shape.__points = diff.current;\n    polyline.shape.points = current;\n    graphic.updateProps(polyline, {\n      shape: {\n        points: next\n      }\n    }, seriesModel);\n\n    if (polygon) {\n      polygon.setShape({\n        points: current,\n        stackedOnPoints: stackedOnCurrent\n      });\n      graphic.updateProps(polygon, {\n        shape: {\n          points: next,\n          stackedOnPoints: stackedOnNext\n        }\n      }, seriesModel);\n    }\n\n    var updatedDataInfo = [];\n    var diffStatus = diff.status;\n\n    for (var i = 0; i < diffStatus.length; i++) {\n      var cmd = diffStatus[i].cmd;\n\n      if (cmd === '=') {\n        var el = data.getItemGraphicEl(diffStatus[i].idx1);\n\n        if (el) {\n          updatedDataInfo.push({\n            el: el,\n            ptIdx: i // Index of points\n\n          });\n        }\n      }\n    }\n\n    if (polyline.animators && polyline.animators.length) {\n      polyline.animators[0].during(function () {\n        for (var i = 0; i < updatedDataInfo.length; i++) {\n          var el = updatedDataInfo[i].el;\n          el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n        }\n      });\n    }\n  },\n  remove: function remove(ecModel) {\n    var group = this.group;\n    var oldData = this._data;\n\n    this._lineGroup.removeAll();\n\n    this._symbolDraw.remove(true); // Remove temporary created elements when highlighting\n\n\n    oldData && oldData.eachItemGraphicEl(function (el, idx) {\n      if (el.__temp) {\n        group.remove(el);\n        oldData.setItemGraphicEl(idx, null);\n      }\n    });\n    this._polyline = this._polygon = this._coordSys = this._points = this._stackedOnPoints = this._data = null;\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _helper = require(\"./helper\");\n\nvar prepareDataCoordInfo = _helper.prepareDataCoordInfo;\nvar getStackedOnPoint = _helper.getStackedOnPoint;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var arrayDiff = require('zrender/src/core/arrayDiff');\n// 'zrender/src/core/arrayDiff' has been used before, but it did\n// not do well in performance when roam with fixed dataZoom window.\n// function convertToIntId(newIdList, oldIdList) {\n//     // Generate int id instead of string id.\n//     // Compare string maybe slow in score function of arrDiff\n//     // Assume id in idList are all unique\n//     var idIndicesMap = {};\n//     var idx = 0;\n//     for (var i = 0; i < newIdList.length; i++) {\n//         idIndicesMap[newIdList[i]] = idx;\n//         newIdList[i] = idx++;\n//     }\n//     for (var i = 0; i < oldIdList.length; i++) {\n//         var oldId = oldIdList[i];\n//         // Same with newIdList\n//         if (idIndicesMap[oldId]) {\n//             oldIdList[i] = idIndicesMap[oldId];\n//         }\n//         else {\n//             oldIdList[i] = idx++;\n//         }\n//     }\n// }\n\nfunction diffData(oldData, newData) {\n  var diffResult = [];\n  newData.diff(oldData).add(function (idx) {\n    diffResult.push({\n      cmd: '+',\n      idx: idx\n    });\n  }).update(function (newIdx, oldIdx) {\n    diffResult.push({\n      cmd: '=',\n      idx: oldIdx,\n      idx1: newIdx\n    });\n  }).remove(function (idx) {\n    diffResult.push({\n      cmd: '-',\n      idx: idx\n    });\n  }).execute();\n  return diffResult;\n}\n\nfunction _default(oldData, newData, oldStackedOnPoints, newStackedOnPoints, oldCoordSys, newCoordSys, oldValueOrigin, newValueOrigin) {\n  var diff = diffData(oldData, newData); // var newIdList = newData.mapArray(newData.getId);\n  // var oldIdList = oldData.mapArray(oldData.getId);\n  // convertToIntId(newIdList, oldIdList);\n  // // FIXME One data ?\n  // diff = arrayDiff(oldIdList, newIdList);\n\n  var currPoints = [];\n  var nextPoints = []; // Points for stacking base line\n\n  var currStackedPoints = [];\n  var nextStackedPoints = [];\n  var status = [];\n  var sortedIndices = [];\n  var rawIndices = [];\n  var newDataOldCoordInfo = prepareDataCoordInfo(oldCoordSys, newData, oldValueOrigin);\n  var oldDataNewCoordInfo = prepareDataCoordInfo(newCoordSys, oldData, newValueOrigin);\n\n  for (var i = 0; i < diff.length; i++) {\n    var diffItem = diff[i];\n    var pointAdded = true; // FIXME, animation is not so perfect when dataZoom window moves fast\n    // Which is in case remvoing or add more than one data in the tail or head\n\n    switch (diffItem.cmd) {\n      case '=':\n        var currentPt = oldData.getItemLayout(diffItem.idx);\n        var nextPt = newData.getItemLayout(diffItem.idx1); // If previous data is NaN, use next point directly\n\n        if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n          currentPt = nextPt.slice();\n        }\n\n        currPoints.push(currentPt);\n        nextPoints.push(nextPt);\n        currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n        nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n        rawIndices.push(newData.getRawIndex(diffItem.idx1));\n        break;\n\n      case '+':\n        var idx = diffItem.idx;\n        currPoints.push(oldCoordSys.dataToPoint([newData.get(newDataOldCoordInfo.dataDimsForPoint[0], idx), newData.get(newDataOldCoordInfo.dataDimsForPoint[1], idx)]));\n        nextPoints.push(newData.getItemLayout(idx).slice());\n        currStackedPoints.push(getStackedOnPoint(newDataOldCoordInfo, oldCoordSys, newData, idx));\n        nextStackedPoints.push(newStackedOnPoints[idx]);\n        rawIndices.push(newData.getRawIndex(idx));\n        break;\n\n      case '-':\n        var idx = diffItem.idx;\n        var rawIndex = oldData.getRawIndex(idx); // Data is replaced. In the case of dynamic data queue\n        // FIXME FIXME FIXME\n\n        if (rawIndex !== idx) {\n          currPoints.push(oldData.getItemLayout(idx));\n          nextPoints.push(newCoordSys.dataToPoint([oldData.get(oldDataNewCoordInfo.dataDimsForPoint[0], idx), oldData.get(oldDataNewCoordInfo.dataDimsForPoint[1], idx)]));\n          currStackedPoints.push(oldStackedOnPoints[idx]);\n          nextStackedPoints.push(getStackedOnPoint(oldDataNewCoordInfo, newCoordSys, oldData, idx));\n          rawIndices.push(rawIndex);\n        } else {\n          pointAdded = false;\n        }\n\n    } // Original indices\n\n\n    if (pointAdded) {\n      status.push(diffItem);\n      sortedIndices.push(sortedIndices.length);\n    }\n  } // Diff result may be crossed if all items are changed\n  // Sort by data index\n\n\n  sortedIndices.sort(function (a, b) {\n    return rawIndices[a] - rawIndices[b];\n  });\n  var sortedCurrPoints = [];\n  var sortedNextPoints = [];\n  var sortedCurrStackedPoints = [];\n  var sortedNextStackedPoints = [];\n  var sortedStatus = [];\n\n  for (var i = 0; i < sortedIndices.length; i++) {\n    var idx = sortedIndices[i];\n    sortedCurrPoints[i] = currPoints[idx];\n    sortedNextPoints[i] = nextPoints[idx];\n    sortedCurrStackedPoints[i] = currStackedPoints[idx];\n    sortedNextStackedPoints[i] = nextStackedPoints[idx];\n    sortedStatus[i] = status[idx];\n  }\n\n  return {\n    current: sortedCurrPoints,\n    next: sortedNextPoints,\n    stackedOnCurrent: sortedCurrStackedPoints,\n    stackedOnNext: sortedNextStackedPoints,\n    status: sortedStatus\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./pie/PieSeries\");\n\nrequire(\"./pie/PieView\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar pieLayout = require(\"./pie/pieLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\ncreateDataSelectAction('pie', [{\n  type: 'pieToggleSelect',\n  event: 'pieselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'pieSelect',\n  event: 'pieselected',\n  method: 'select'\n}, {\n  type: 'pieUnSelect',\n  event: 'pieunselected',\n  method: 'unSelect'\n}]);\necharts.registerVisual(dataColor('pie'));\necharts.registerLayout(zrUtil.curry(pieLayout, 'pie'));\necharts.registerProcessor(dataFilter('pie'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar _number = require(\"../../util/number\");\n\nvar getPercentWithPrecision = _number.getPercentWithPrecision;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PieSeries = echarts.extendSeriesModel({\n  type: 'series.pie',\n  // Overwrite\n  init: function init(option) {\n    PieSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n    this.updateSelectedMap(this._createSelectableList());\n\n    this._defaultLabelLine(option);\n  },\n  // Overwrite\n  mergeOption: function mergeOption(newOption) {\n    PieSeries.superCall(this, 'mergeOption', newOption);\n    this.updateSelectedMap(this._createSelectableList());\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n  },\n  _createSelectableList: function _createSelectableList() {\n    var data = this.getRawData();\n    var valueDim = data.mapDimension('value');\n    var targetList = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      targetList.push({\n        name: data.getName(i),\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    return targetList;\n  },\n  // Overwrite\n  getDataParams: function getDataParams(dataIndex) {\n    var data = this.getData();\n    var params = PieSeries.superCall(this, 'getDataParams', dataIndex); // FIXME toFixed?\n\n    var valueList = [];\n    data.each(data.mapDimension('value'), function (value) {\n      valueList.push(value);\n    });\n    params.percent = getPercentWithPrecision(valueList, dataIndex, data.hostModel.get('percentPrecision'));\n    params.$vars.push('percent');\n    return params;\n  },\n  _defaultLabelLine: function _defaultLabelLine(option) {\n    // Extend labelLine emphasis\n    modelUtil.defaultEmphasis(option, 'labelLine', ['show']);\n    var labelLineNormalOpt = option.labelLine;\n    var labelLineEmphasisOpt = option.emphasis.labelLine; // Not show label line if `label.normal.show = false`\n\n    labelLineNormalOpt.show = labelLineNormalOpt.show && option.label.show;\n    labelLineEmphasisOpt.show = labelLineEmphasisOpt.show && option.emphasis.label.show;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    // If the angle of a sector less than `minShowLabelAngle`,\n    // the label will not be displayed.\n    minShowLabelAngle: 0,\n    // 选中时扇区偏移量\n    selectedOffset: 10,\n    // 高亮扇区偏移量\n    hoverOffset: 10,\n    // If use strategy to avoid label overlapping\n    avoidLabelOverlap: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n    // roseType: null,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // cursor: null,\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: null,\n    height: null,\n    label: {\n      // If rotate around circle\n      rotate: false,\n      show: true,\n      // 'outer', 'inside', 'center'\n      position: 'outer',\n      // 'none', 'labelLine', 'edge'. Works only when position is 'outer'\n      alignTo: 'none',\n      // Closest distance between label and chart edge.\n      // Works only position is 'outer' and alignTo is 'edge'.\n      margin: '25%',\n      // Works only position is 'outer' and alignTo is not 'edge'.\n      bleedMargin: 10,\n      // Distance between text and label line.\n      distanceToLabelLine: 5 // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n      // 默认使用全局文本样式，详见TEXTSTYLE\n      // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n\n    },\n    // Enabled when label.normal.position is 'outer'\n    labelLine: {\n      show: true,\n      // 引导线两段中的第一段长度\n      length: 15,\n      // 引导线两段中的第二段长度\n      length2: 15,\n      smooth: false,\n      lineStyle: {\n        // color: 各异,\n        width: 1,\n        type: 'solid'\n      }\n    },\n    itemStyle: {\n      borderWidth: 1\n    },\n    // Animation type. Valid values: expansion, scale\n    animationType: 'expansion',\n    // Animation type when update. Valid values: transition, expansion\n    animationTypeUpdate: 'transition',\n    animationEasing: 'cubicOut'\n  }\n});\nzrUtil.mixin(PieSeries, dataSelectableMixin);\nvar _default = PieSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Series} seriesModel\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction updateDataSelected(uid, seriesModel, hasAnimation, api) {\n  var data = seriesModel.getData();\n  var dataIndex = this.dataIndex;\n  var name = data.getName(dataIndex);\n  var selectedOffset = seriesModel.get('selectedOffset');\n  api.dispatchAction({\n    type: 'pieToggleSelect',\n    from: uid,\n    name: name,\n    seriesId: seriesModel.id\n  });\n  data.each(function (idx) {\n    toggleItemSelected(data.getItemGraphicEl(idx), data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), selectedOffset, hasAnimation);\n  });\n}\n/**\n * @param {module:zrender/graphic/Sector} el\n * @param {Object} layout\n * @param {boolean} isSelected\n * @param {number} selectedOffset\n * @param {boolean} hasAnimation\n * @inner\n */\n\n\nfunction toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var offset = isSelected ? selectedOffset : 0;\n  var position = [dx * offset, dy * offset];\n  hasAnimation // animateTo will stop revious animation like update transition\n  ? el.animate().when(200, {\n    position: position\n  }).start('bounceOut') : el.attr('position', position);\n}\n/**\n * Piece of pie including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction PiePiece(data, idx) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: 2\n  });\n  var polyline = new graphic.Polyline();\n  var text = new graphic.Text();\n  this.add(sector);\n  this.add(polyline);\n  this.add(text);\n  this.updateData(data, idx, true);\n}\n\nvar piePieceProto = PiePiece.prototype;\n\npiePieceProto.updateData = function (data, idx, firstCreate) {\n  var sector = this.childAt(0);\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var animationTypeUpdate = seriesModel.getShallow('animationTypeUpdate');\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    var animationType = seriesModel.getShallow('animationType');\n\n    if (animationType === 'scale') {\n      sector.shape.r = layout.r0;\n      graphic.initProps(sector, {\n        shape: {\n          r: layout.r\n        }\n      }, seriesModel, idx);\n    } // Expansion\n    else {\n        sector.shape.endAngle = layout.startAngle;\n        graphic.updateProps(sector, {\n          shape: {\n            endAngle: layout.endAngle\n          }\n        }, seriesModel, idx);\n      }\n  } else {\n    if (animationTypeUpdate === 'expansion') {\n      // Sectors are set to be target shape and an overlaying clipPath is used for animation\n      sector.setShape(sectorShape);\n    } else {\n      // Transition animation from the old shape\n      graphic.updateProps(sector, {\n        shape: sectorShape\n      }, seriesModel, idx);\n    }\n  } // Update common style\n\n\n  var visualColor = data.getItemVisual(idx, 'color');\n  sector.useStyle(zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: visualColor\n  }, itemModel.getModel('itemStyle').getItemStyle()));\n  sector.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle); // Toggle selected\n\n  toggleItemSelected(this, data.getItemLayout(idx), seriesModel.isSelected(data.getName(idx)), seriesModel.get('selectedOffset'), seriesModel.get('animation')); // Label and text animation should be applied only for transition type animation when update\n\n  var withAnimation = !firstCreate && animationTypeUpdate === 'transition';\n\n  this._updateLabel(data, idx, withAnimation);\n\n  this.highDownOnUpdate = !seriesModel.get('silent') ? function (fromState, toState) {\n    var hasAnimation = seriesModel.isAnimationEnabled() && itemModel.get('hoverAnimation');\n\n    if (toState === 'emphasis') {\n      labelLine.ignore = labelLine.hoverIgnore;\n      labelText.ignore = labelText.hoverIgnore; // Sector may has animation of updating data. Force to move to the last frame\n      // Or it may stopped on the wrong shape\n\n      if (hasAnimation) {\n        sector.stopAnimation(true);\n        sector.animateTo({\n          shape: {\n            r: layout.r + seriesModel.get('hoverOffset')\n          }\n        }, 300, 'elasticOut');\n      }\n    } else {\n      labelLine.ignore = labelLine.normalIgnore;\n      labelText.ignore = labelText.normalIgnore;\n\n      if (hasAnimation) {\n        sector.stopAnimation(true);\n        sector.animateTo({\n          shape: {\n            r: layout.r\n          }\n        }, 300, 'elasticOut');\n      }\n    }\n  } : null;\n  graphic.setHoverStyle(this);\n};\n\npiePieceProto._updateLabel = function (data, idx, withAnimation) {\n  var labelLine = this.childAt(1);\n  var labelText = this.childAt(2);\n  var seriesModel = data.hostModel;\n  var itemModel = data.getItemModel(idx);\n  var layout = data.getItemLayout(idx);\n  var labelLayout = layout.label;\n  var visualColor = data.getItemVisual(idx, 'color');\n\n  if (!labelLayout || isNaN(labelLayout.x) || isNaN(labelLayout.y)) {\n    labelText.ignore = labelText.normalIgnore = labelText.hoverIgnore = labelLine.ignore = labelLine.normalIgnore = labelLine.hoverIgnore = true;\n    return;\n  }\n\n  var targetLineShape = {\n    points: labelLayout.linePoints || [[labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]]\n  };\n  var targetTextStyle = {\n    x: labelLayout.x,\n    y: labelLayout.y\n  };\n\n  if (withAnimation) {\n    graphic.updateProps(labelLine, {\n      shape: targetLineShape\n    }, seriesModel, idx);\n    graphic.updateProps(labelText, {\n      style: targetTextStyle\n    }, seriesModel, idx);\n  } else {\n    labelLine.attr({\n      shape: targetLineShape\n    });\n    labelText.attr({\n      style: targetTextStyle\n    });\n  }\n\n  labelText.attr({\n    rotation: labelLayout.rotation,\n    origin: [labelLayout.x, labelLayout.y],\n    z2: 10\n  });\n  var labelModel = itemModel.getModel('label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var labelLineModel = itemModel.getModel('labelLine');\n  var labelLineHoverModel = itemModel.getModel('emphasis.labelLine');\n  var visualColor = data.getItemVisual(idx, 'color');\n  graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, labelHoverModel, {\n    labelFetcher: data.hostModel,\n    labelDataIndex: idx,\n    defaultText: labelLayout.text,\n    autoColor: visualColor,\n    useInsideStyle: !!labelLayout.inside\n  }, {\n    textAlign: labelLayout.textAlign,\n    textVerticalAlign: labelLayout.verticalAlign,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n  labelText.hoverIgnore = !labelHoverModel.get('show');\n  labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n  labelLine.hoverIgnore = !labelLineHoverModel.get('show'); // Default use item visual color\n\n  labelLine.setStyle({\n    stroke: visualColor,\n    opacity: data.getItemVisual(idx, 'opacity')\n  });\n  labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n  labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n  var smooth = labelLineModel.get('smooth');\n\n  if (smooth && smooth === true) {\n    smooth = 0.4;\n  }\n\n  labelLine.setShape({\n    smooth: smooth\n  });\n};\n\nzrUtil.inherits(PiePiece, graphic.Group); // Pie view\n\nvar PieView = ChartView.extend({\n  type: 'pie',\n  init: function init() {\n    var sectorGroup = new graphic.Group();\n    this._sectorGroup = sectorGroup;\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    if (payload && payload.from === this.uid) {\n      return;\n    }\n\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var group = this.group;\n    var hasAnimation = ecModel.get('animation');\n    var isFirstRender = !oldData;\n    var animationType = seriesModel.get('animationType');\n    var animationTypeUpdate = seriesModel.get('animationTypeUpdate');\n    var onSectorClick = zrUtil.curry(updateDataSelected, this.uid, seriesModel, hasAnimation, api);\n    var selectedMode = seriesModel.get('selectedMode');\n    data.diff(oldData).add(function (idx) {\n      var piePiece = new PiePiece(data, idx); // Default expansion animation\n\n      if (isFirstRender && animationType !== 'scale') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      selectedMode && piePiece.on('click', onSectorClick);\n      data.setItemGraphicEl(idx, piePiece);\n      group.add(piePiece);\n    }).update(function (newIdx, oldIdx) {\n      var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n      if (!isFirstRender && animationTypeUpdate !== 'transition') {\n        piePiece.eachChild(function (child) {\n          child.stopAnimation(true);\n        });\n      }\n\n      piePiece.updateData(data, newIdx);\n      piePiece.off('click');\n      selectedMode && piePiece.on('click', onSectorClick);\n      group.add(piePiece);\n      data.setItemGraphicEl(newIdx, piePiece);\n    }).remove(function (idx) {\n      var piePiece = oldData.getItemGraphicEl(idx);\n      group.remove(piePiece);\n    }).execute();\n\n    if (hasAnimation && data.count() > 0 && (isFirstRender ? animationType !== 'scale' : animationTypeUpdate !== 'transition')) {\n      var shape = data.getItemLayout(0);\n\n      for (var s = 1; isNaN(shape.startAngle) && s < data.count(); ++s) {\n        shape = data.getItemLayout(s);\n      }\n\n      var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n      var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n      group.setClipPath(this._createClipPath(shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel, isFirstRender));\n    } else {\n      // clipPath is used in first-time animation, so remove it when otherwise. See: #8994\n      group.removeClipPath();\n    }\n\n    this._data = data;\n  },\n  dispose: function dispose() {},\n  _createClipPath: function _createClipPath(cx, cy, r, startAngle, clockwise, cb, seriesModel, isFirstRender) {\n    var clipPath = new graphic.Sector({\n      shape: {\n        cx: cx,\n        cy: cy,\n        r0: 0,\n        r: r,\n        startAngle: startAngle,\n        endAngle: startAngle,\n        clockwise: clockwise\n      }\n    });\n    var initOrUpdate = isFirstRender ? graphic.initProps : graphic.updateProps;\n    initOrUpdate(clipPath, {\n      shape: {\n        endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n      }\n    }, seriesModel, cb);\n    return clipPath;\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var data = seriesModel.getData();\n    var itemLayout = data.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = PieView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar linearMap = _number.linearMap;\n\nvar layout = require(\"../../util/layout\");\n\nvar labelLayout = require(\"./labelLayout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PI2 = Math.PI * 2;\nvar RADIAN = Math.PI / 180;\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var viewRect = getViewRect(seriesModel, api);\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = parsePercent(viewRect.width, api.getWidth());\n    var height = parsePercent(viewRect.height, api.getHeight());\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width) + viewRect.x;\n    var cy = parsePercent(center[1], height) + viewRect.y;\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var validDataCount = 0;\n    data.each(valueDim, function (value) {\n      !isNaN(value) && validDataCount++;\n    });\n    var sum = data.getSum(valueDim); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var clockwise = seriesModel.get('clockwise');\n    var roseType = seriesModel.get('roseType');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // [0...max]\n\n    var extent = data.getDataExtent(valueDim);\n    extent[0] = 0; // In the case some sector angle is smaller than minAngle\n\n    var restAngle = PI2;\n    var valueSumLargerThanMinAngle = 0;\n    var currentAngle = startAngle;\n    var dir = clockwise ? 1 : -1;\n    data.each(valueDim, function (value, idx) {\n      var angle;\n\n      if (isNaN(value)) {\n        data.setItemLayout(idx, {\n          angle: NaN,\n          startAngle: NaN,\n          endAngle: NaN,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: r0,\n          r: roseType ? NaN : r,\n          viewRect: viewRect\n        });\n        return;\n      } // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n\n\n      if (roseType !== 'area') {\n        angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n      } else {\n        angle = PI2 / validDataCount;\n      }\n\n      if (angle < minAngle) {\n        angle = minAngle;\n        restAngle -= minAngle;\n      } else {\n        valueSumLargerThanMinAngle += value;\n      }\n\n      var endAngle = currentAngle + dir * angle;\n      data.setItemLayout(idx, {\n        angle: angle,\n        startAngle: currentAngle,\n        endAngle: endAngle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: r0,\n        r: roseType ? linearMap(value, extent, [r0, r]) : r,\n        viewRect: viewRect\n      });\n      currentAngle = endAngle;\n    }); // Some sector is constrained by minAngle\n    // Rest sectors needs recalculate angle\n\n    if (restAngle < PI2 && validDataCount) {\n      // Average the angle if rest angle is not enough after all angles is\n      // Constrained by minAngle\n      if (restAngle <= 1e-3) {\n        var angle = PI2 / validDataCount;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            layout.angle = angle;\n            layout.startAngle = startAngle + dir * idx * angle;\n            layout.endAngle = startAngle + dir * (idx + 1) * angle;\n          }\n        });\n      } else {\n        unitRadian = restAngle / valueSumLargerThanMinAngle;\n        currentAngle = startAngle;\n        data.each(valueDim, function (value, idx) {\n          if (!isNaN(value)) {\n            var layout = data.getItemLayout(idx);\n            var angle = layout.angle === minAngle ? minAngle : value * unitRadian;\n            layout.startAngle = currentAngle;\n            layout.endAngle = currentAngle + dir * angle;\n            currentAngle += dir * angle;\n          }\n        });\n      }\n    }\n\n    labelLayout(seriesModel, r, viewRect.width, viewRect.height, viewRect.x, viewRect.y);\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME emphasis label position is not same with normal label position\n\nvar RADIAN = Math.PI / 180;\n\nfunction adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight, viewLeft, viewTop, farthestX) {\n  list.sort(function (a, b) {\n    return a.y - b.y;\n  });\n\n  function shiftDown(start, end, delta, dir) {\n    for (var j = start; j < end; j++) {\n      if (list[j].y + delta > viewTop + viewHeight) {\n        break;\n      }\n\n      list[j].y += delta;\n\n      if (j > start && j + 1 < end && list[j + 1].y > list[j].y + list[j].height) {\n        shiftUp(j, delta / 2);\n        return;\n      }\n    }\n\n    shiftUp(end - 1, delta / 2);\n  }\n\n  function shiftUp(end, delta) {\n    for (var j = end; j >= 0; j--) {\n      if (list[j].y - delta < viewTop) {\n        break;\n      }\n\n      list[j].y -= delta;\n\n      if (j > 0 && list[j].y > list[j - 1].y + list[j - 1].height) {\n        break;\n      }\n    }\n  }\n\n  function changeX(list, isDownList, cx, cy, r, dir) {\n    var lastDeltaX = dir > 0 ? isDownList // right-side\n    ? Number.MAX_VALUE // down\n    : 0 // up\n    : isDownList // left-side\n    ? Number.MAX_VALUE // down\n    : 0; // up\n\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].labelAlignTo !== 'none') {\n        continue;\n      }\n\n      var deltaY = Math.abs(list[i].y - cy);\n      var length = list[i].len;\n      var length2 = list[i].len2;\n      var deltaX = deltaY < r + length ? Math.sqrt((r + length + length2) * (r + length + length2) - deltaY * deltaY) : Math.abs(list[i].x - cx);\n\n      if (isDownList && deltaX >= lastDeltaX) {\n        // right-down, left-down\n        deltaX = lastDeltaX - 10;\n      }\n\n      if (!isDownList && deltaX <= lastDeltaX) {\n        // right-up, left-up\n        deltaX = lastDeltaX + 10;\n      }\n\n      list[i].x = cx + deltaX * dir;\n      lastDeltaX = deltaX;\n    }\n  }\n\n  var lastY = 0;\n  var delta;\n  var len = list.length;\n  var upList = [];\n  var downList = [];\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].position === 'outer' && list[i].labelAlignTo === 'labelLine') {\n      var dx = list[i].x - farthestX;\n      list[i].linePoints[1][0] += dx;\n      list[i].x = farthestX;\n    }\n\n    delta = list[i].y - lastY;\n\n    if (delta < 0) {\n      shiftDown(i, len, -delta, dir);\n    }\n\n    lastY = list[i].y + list[i].height;\n  }\n\n  if (viewHeight - lastY < 0) {\n    shiftUp(len - 1, lastY - viewHeight);\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (list[i].y >= cy) {\n      downList.push(list[i]);\n    } else {\n      upList.push(list[i]);\n    }\n  }\n\n  changeX(upList, false, cx, cy, r, dir);\n  changeX(downList, true, cx, cy, r, dir);\n}\n\nfunction avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var leftList = [];\n  var rightList = [];\n  var leftmostX = Number.MAX_VALUE;\n  var rightmostX = -Number.MAX_VALUE;\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    if (isPositionCenter(labelLayoutList[i])) {\n      continue;\n    }\n\n    if (labelLayoutList[i].x < cx) {\n      leftmostX = Math.min(leftmostX, labelLayoutList[i].x);\n      leftList.push(labelLayoutList[i]);\n    } else {\n      rightmostX = Math.max(rightmostX, labelLayoutList[i].x);\n      rightList.push(labelLayoutList[i]);\n    }\n  }\n\n  adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight, viewLeft, viewTop, rightmostX);\n  adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight, viewLeft, viewTop, leftmostX);\n\n  for (var i = 0; i < labelLayoutList.length; i++) {\n    var layout = labelLayoutList[i];\n\n    if (isPositionCenter(layout)) {\n      continue;\n    }\n\n    var linePoints = layout.linePoints;\n\n    if (linePoints) {\n      var isAlignToEdge = layout.labelAlignTo === 'edge';\n      var realTextWidth = layout.textRect.width;\n      var targetTextWidth;\n\n      if (isAlignToEdge) {\n        if (layout.x < cx) {\n          targetTextWidth = linePoints[2][0] - layout.labelDistance - viewLeft - layout.labelMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.labelMargin - linePoints[2][0] - layout.labelDistance;\n        }\n      } else {\n        if (layout.x < cx) {\n          targetTextWidth = layout.x - viewLeft - layout.bleedMargin;\n        } else {\n          targetTextWidth = viewLeft + viewWidth - layout.x - layout.bleedMargin;\n        }\n      }\n\n      if (targetTextWidth < layout.textRect.width) {\n        layout.text = textContain.truncateText(layout.text, targetTextWidth, layout.font);\n\n        if (layout.labelAlignTo === 'edge') {\n          realTextWidth = textContain.getWidth(layout.text, layout.font);\n        }\n      }\n\n      var dist = linePoints[1][0] - linePoints[2][0];\n\n      if (isAlignToEdge) {\n        if (layout.x < cx) {\n          linePoints[2][0] = viewLeft + layout.labelMargin + realTextWidth + layout.labelDistance;\n        } else {\n          linePoints[2][0] = viewLeft + viewWidth - layout.labelMargin - realTextWidth - layout.labelDistance;\n        }\n      } else {\n        if (layout.x < cx) {\n          linePoints[2][0] = layout.x + layout.labelDistance;\n        } else {\n          linePoints[2][0] = layout.x - layout.labelDistance;\n        }\n\n        linePoints[1][0] = linePoints[2][0] + dist;\n      }\n\n      linePoints[1][1] = linePoints[2][1] = layout.y;\n    }\n  }\n}\n\nfunction isPositionCenter(layout) {\n  // Not change x for center label\n  return layout.position === 'center';\n}\n\nfunction _default(seriesModel, r, viewWidth, viewHeight, viewLeft, viewTop) {\n  var data = seriesModel.getData();\n  var labelLayoutList = [];\n  var cx;\n  var cy;\n  var hasLabelRotate = false;\n  var minShowLabelRadian = (seriesModel.get('minShowLabelAngle') || 0) * RADIAN;\n  data.each(function (idx) {\n    var layout = data.getItemLayout(idx);\n    var itemModel = data.getItemModel(idx);\n    var labelModel = itemModel.getModel('label'); // Use position in normal or emphasis\n\n    var labelPosition = labelModel.get('position') || itemModel.get('emphasis.label.position');\n    var labelDistance = labelModel.get('distanceToLabelLine');\n    var labelAlignTo = labelModel.get('alignTo');\n    var labelMargin = parsePercent(labelModel.get('margin'), viewWidth);\n    var bleedMargin = labelModel.get('bleedMargin');\n    var font = labelModel.getFont();\n    var labelLineModel = itemModel.getModel('labelLine');\n    var labelLineLen = labelLineModel.get('length');\n    labelLineLen = parsePercent(labelLineLen, viewWidth);\n    var labelLineLen2 = labelLineModel.get('length2');\n    labelLineLen2 = parsePercent(labelLineLen2, viewWidth);\n\n    if (layout.angle < minShowLabelRadian) {\n      return;\n    }\n\n    var midAngle = (layout.startAngle + layout.endAngle) / 2;\n    var dx = Math.cos(midAngle);\n    var dy = Math.sin(midAngle);\n    var textX;\n    var textY;\n    var linePoints;\n    var textAlign;\n    cx = layout.cx;\n    cy = layout.cy;\n    var text = seriesModel.getFormattedLabel(idx, 'normal') || data.getName(idx);\n    var textRect = textContain.getBoundingRect(text, font, textAlign, 'top');\n    var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n\n    if (labelPosition === 'center') {\n      textX = layout.cx;\n      textY = layout.cy;\n      textAlign = 'center';\n    } else {\n      var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n      var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n      textX = x1 + dx * 3;\n      textY = y1 + dy * 3;\n\n      if (!isLabelInside) {\n        // For roseType\n        var x2 = x1 + dx * (labelLineLen + r - layout.r);\n        var y2 = y1 + dy * (labelLineLen + r - layout.r);\n        var x3 = x2 + (dx < 0 ? -1 : 1) * labelLineLen2;\n        var y3 = y2;\n\n        if (labelAlignTo === 'edge') {\n          // Adjust textX because text align of edge is opposite\n          textX = dx < 0 ? viewLeft + labelMargin : viewLeft + viewWidth - labelMargin;\n        } else {\n          textX = x3 + (dx < 0 ? -labelDistance : labelDistance);\n        }\n\n        textY = y3;\n        linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n      }\n\n      textAlign = isLabelInside ? 'center' : labelAlignTo === 'edge' ? dx > 0 ? 'right' : 'left' : dx > 0 ? 'left' : 'right';\n    }\n\n    var labelRotate;\n    var rotate = labelModel.get('rotate');\n\n    if (typeof rotate === 'number') {\n      labelRotate = rotate * (Math.PI / 180);\n    } else {\n      labelRotate = rotate ? dx < 0 ? -midAngle + Math.PI : -midAngle : 0;\n    }\n\n    hasLabelRotate = !!labelRotate;\n    layout.label = {\n      x: textX,\n      y: textY,\n      position: labelPosition,\n      height: textRect.height,\n      len: labelLineLen,\n      len2: labelLineLen2,\n      linePoints: linePoints,\n      textAlign: textAlign,\n      verticalAlign: 'middle',\n      rotation: labelRotate,\n      inside: isLabelInside,\n      labelDistance: labelDistance,\n      labelAlignTo: labelAlignTo,\n      labelMargin: labelMargin,\n      bleedMargin: bleedMargin,\n      textRect: textRect,\n      text: text,\n      font: font\n    }; // Not layout the inside label\n\n    if (!isLabelInside) {\n      labelLayoutList.push(layout.label);\n    }\n  });\n\n  if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n    avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight, viewLeft, viewTop);\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\n\n\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar SeriesModel = require(\"../../model/Series\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.scatter',\n  dependencies: ['grid', 'polar', 'geo', 'singleAxis', 'calendar'],\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      useEncodeDefaulter: true\n    });\n  },\n  brushSelector: 'point',\n  getProgressive: function getProgressive() {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      // PENDING\n      return this.option.large ? 5e3 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      // PENDING\n      return this.option.large ? 1e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Polar coordinate system\n    // polarIndex: 0,\n    // Geo coordinate system\n    // geoIndex: 0,\n    // symbol: null,        // 图形类型\n    symbolSize: 10,\n    // 图形大小，半宽（半径）参数，当图形为方向或菱形则总宽度为symbolSize * 2\n    // symbolRotate: null,  // 图形旋转控制\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // cursor: null,\n    // label: {\n    // show: false\n    // distance: 5,\n    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n    // position: 默认自适应，水平布局为'top'，垂直布局为'right'，可选为\n    //           'inside'|'left'|'right'|'top'|'bottom'\n    // 默认使用全局文本样式，详见TEXTSTYLE\n    // },\n    itemStyle: {\n      opacity: 0.8 // color: 各异\n\n    },\n    // If clip the overflow graphics\n    // Works on cartesian / polar series\n    clip: true // progressive: null\n\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar SymbolDraw = require(\"../helper/SymbolDraw\");\n\nvar LargeSymbolDraw = require(\"../helper/LargeSymbolDraw\");\n\nvar pointsLayout = require(\"../../layout/points\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendChartView({\n  type: 'scatter',\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.updateData(data, {\n      // TODO\n      // If this parameter should be a shape or a bounding volume\n      // shape will be more general.\n      // But bounding volume like bounding rect will be much faster in the contain calculation\n      clipShape: this._getClipShape(seriesModel)\n    });\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var symbolDraw = this._updateSymbolDraw(data, seriesModel);\n\n    symbolDraw.incrementalPrepareUpdate(data);\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._symbolDraw.incrementalUpdate(taskParams, seriesModel.getData(), {\n      clipShape: this._getClipShape(seriesModel)\n    });\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData(); // Must mark group dirty and make sure the incremental layer will be cleared\n    // PENDING\n\n    this.group.dirty();\n\n    if (!this._finished || data.count() > 1e4 || !this._symbolDraw.isPersistent()) {\n      return {\n        update: true\n      };\n    } else {\n      var res = pointsLayout().reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._symbolDraw.updateLayout(data);\n    }\n  },\n  _getClipShape: function _getClipShape(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var clipArea = coordSys && coordSys.getArea && coordSys.getArea();\n    return seriesModel.get('clip', true) ? clipArea : null;\n  },\n  _updateSymbolDraw: function _updateSymbolDraw(data, seriesModel) {\n    var symbolDraw = this._symbolDraw;\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!symbolDraw || isLargeDraw !== this._isLargeDraw) {\n      symbolDraw && symbolDraw.remove();\n      symbolDraw = this._symbolDraw = isLargeDraw ? new LargeSymbolDraw() : new SymbolDraw();\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(symbolDraw.group);\n    return symbolDraw;\n  },\n  remove: function remove(ecModel, api) {\n    this._symbolDraw && this._symbolDraw.remove(true);\n    this._symbolDraw = null;\n  },\n  dispose: function dispose() {}\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float32Array */\n// TODO Batch by color\n\n\nvar BOOST_SIZE_THRESHOLD = 4;\nvar LargeSymbolPath = graphic.extendShape({\n  shape: {\n    points: null\n  },\n  symbolProxy: null,\n  softClipShape: null,\n  buildPath: function buildPath(path, shape) {\n    var points = shape.points;\n    var size = shape.size;\n    var symbolProxy = this.symbolProxy;\n    var symbolProxyShape = symbolProxy.shape;\n    var ctx = path.getContext ? path.getContext() : path;\n    var canBoost = ctx && size[0] < BOOST_SIZE_THRESHOLD; // Do draw in afterBrush.\n\n    if (canBoost) {\n      return;\n    }\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      }\n\n      symbolProxyShape.x = x - size[0] / 2;\n      symbolProxyShape.y = y - size[1] / 2;\n      symbolProxyShape.width = size[0];\n      symbolProxyShape.height = size[1];\n      symbolProxy.buildPath(path, symbolProxyShape, true);\n    }\n  },\n  afterBrush: function afterBrush(ctx) {\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var canBoost = size[0] < BOOST_SIZE_THRESHOLD;\n\n    if (!canBoost) {\n      return;\n    }\n\n    this.setTransform(ctx); // PENDING If style or other canvas status changed?\n\n    for (var i = 0; i < points.length;) {\n      var x = points[i++];\n      var y = points[i++];\n\n      if (isNaN(x) || isNaN(y)) {\n        continue;\n      }\n\n      if (this.softClipShape && !this.softClipShape.contain(x, y)) {\n        continue;\n      } // fillRect is faster than building a rect path and draw.\n      // And it support light globalCompositeOperation.\n\n\n      ctx.fillRect(x - size[0] / 2, y - size[1] / 2, size[0], size[1]);\n    }\n\n    this.restoreTransform(ctx);\n  },\n  findDataIndex: function findDataIndex(x, y) {\n    // TODO ???\n    // Consider transform\n    var shape = this.shape;\n    var points = shape.points;\n    var size = shape.size;\n    var w = Math.max(size[0], 4);\n    var h = Math.max(size[1], 4); // Not consider transform\n    // Treat each element as a rect\n    // top down traverse\n\n    for (var idx = points.length / 2 - 1; idx >= 0; idx--) {\n      var i = idx * 2;\n      var x0 = points[i] - w / 2;\n      var y0 = points[i + 1] - h / 2;\n\n      if (x >= x0 && y >= y0 && x <= x0 + w && y <= y0 + h) {\n        return idx;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeSymbolDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeSymbolProto = LargeSymbolDraw.prototype;\n\nlargeSymbolProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n * @param {Object} opt\n * @param {Object} [opt.clipShape]\n */\n\n\nlargeSymbolProto.updateData = function (data, opt) {\n  this.group.removeAll();\n  var symbolEl = new LargeSymbolPath({\n    rectHover: true,\n    cursor: 'default'\n  });\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, false, opt);\n\n  this.group.add(symbolEl);\n  this._incremental = null;\n};\n\nlargeSymbolProto.updateLayout = function (data) {\n  if (this._incremental) {\n    return;\n  }\n\n  var points = data.getLayout('symbolPoints');\n  this.group.eachChild(function (child) {\n    if (child.startIndex != null) {\n      var len = (child.endIndex - child.startIndex) * 2;\n      var byteOffset = child.startIndex * 4 * 2;\n      points = new Float32Array(points.buffer, byteOffset, len);\n    }\n\n    child.setShape('points', points);\n  });\n};\n\nlargeSymbolProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental(); // Only use incremental displayables when data amount is larger than 2 million.\n  // PENDING Incremental data?\n\n\n  if (data.count() > 2e6) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n\nlargeSymbolProto.incrementalUpdate = function (taskParams, data, opt) {\n  var symbolEl;\n\n  if (this._incremental) {\n    symbolEl = new LargeSymbolPath();\n\n    this._incremental.addDisplayable(symbolEl, true);\n  } else {\n    symbolEl = new LargeSymbolPath({\n      rectHover: true,\n      cursor: 'default',\n      startIndex: taskParams.start,\n      endIndex: taskParams.end\n    });\n    symbolEl.incremental = true;\n    this.group.add(symbolEl);\n  }\n\n  symbolEl.setShape({\n    points: data.getLayout('symbolPoints')\n  });\n\n  this._setCommon(symbolEl, data, !!this._incremental, opt);\n};\n\nlargeSymbolProto._setCommon = function (symbolEl, data, isIncremental, opt) {\n  var hostModel = data.hostModel;\n  opt = opt || {}; // TODO\n  // if (data.hasItemVisual.symbolSize) {\n  //     // TODO typed array?\n  //     symbolEl.setShape('sizes', data.mapArray(\n  //         function (idx) {\n  //             var size = data.getItemVisual(idx, 'symbolSize');\n  //             return (size instanceof Array) ? size : [size, size];\n  //         }\n  //     ));\n  // }\n  // else {\n\n  var size = data.getVisual('symbolSize');\n  symbolEl.setShape('size', size instanceof Array ? size : [size, size]); // }\n\n  symbolEl.softClipShape = opt.clipShape || null; // Create symbolProxy to build path for each data\n\n  symbolEl.symbolProxy = createSymbol(data.getVisual('symbol'), 0, 0, 0, 0); // Use symbolProxy setColor method\n\n  symbolEl.setColor = symbolEl.symbolProxy.setColor;\n  var extrudeShadow = symbolEl.shape.size[0] < BOOST_SIZE_THRESHOLD;\n  symbolEl.useStyle( // Draw shadow when doing fillRect is extremely slow.\n  hostModel.getModel('itemStyle').getItemStyle(extrudeShadow ? ['color', 'shadowBlur', 'shadowColor'] : ['color']));\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    symbolEl.setColor(visualColor);\n  }\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    symbolEl.seriesIndex = hostModel.seriesIndex;\n    symbolEl.on('mousemove', function (e) {\n      symbolEl.dataIndex = null;\n      var dataIndex = symbolEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex >= 0) {\n        // Provide dataIndex for tooltip\n        symbolEl.dataIndex = dataIndex + (symbolEl.startIndex || 0);\n      }\n    });\n  }\n};\n\nlargeSymbolProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeSymbolProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeSymbolDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/radar\");\n\nrequire(\"./radar/RadarSeries\");\n\nrequire(\"./radar/RadarView\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar radarLayout = require(\"./radar/radarLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n\nvar backwardCompat = require(\"./radar/backwardCompat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Must use radar component\n\n\necharts.registerVisual(dataColor('radar'));\necharts.registerVisual(visualSymbol('radar', 'circle'));\necharts.registerLayout(radarLayout);\necharts.registerProcessor(dataFilter('radar'));\necharts.registerPreprocessor(backwardCompat);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar RadarSeries = SeriesModel.extend({\n  type: 'series.radar',\n  dependencies: ['radar'],\n  // Overwrite\n  init: function init(option) {\n    RadarSeries.superApply(this, 'init', arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    return encodeHTML(name === '' ? this.name : name) + '<br/>' + zrUtil.map(indicatorAxes, function (axis, idx) {\n      var val = data.get(data.mapDimension(axis.dim), dataIndex);\n      return encodeHTML(axis.name + ' : ' + val);\n    }).join('<br />');\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function getTooltipPosition(dataIndex) {\n    if (dataIndex != null) {\n      var data = this.getData();\n      var coordSys = this.coordinateSystem;\n      var values = data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data.mapDimension(dim);\n      }), dataIndex, true);\n\n      for (var i = 0, len = values.length; i < len; i++) {\n        if (!isNaN(values[i])) {\n          var indicatorAxes = coordSys.getIndicatorAxes();\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\n        }\n      }\n    }\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbol: 'emptyCircle',\n    symbolSize: 4 // symbolRotate: null\n\n  }\n});\nvar _default = RadarSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar symbolUtil = require(\"../../util/symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nvar _default = echarts.extendChartView({\n  type: 'radar',\n  render: function render(seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n      var color = data.getItemVisual(idx, 'color');\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2, color);\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scale: [symbolSize[0] / 2, symbolSize[1] / 2]\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.attr('position', oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              position: newPoints[i]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.attr('position', newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var color = data.getItemVisual(idx, 'color');\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      polyline.hoverStyle = itemModel.getModel('emphasis.lineStyle').getLineStyle();\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var hoverAreaStyleModel = itemModel.getModel('emphasis.areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      var hoverPolygonIgnore = hoverAreaStyleModel.isEmpty() && hoverAreaStyleModel.parentModel.isEmpty();\n      hoverPolygonIgnore = hoverPolygonIgnore && polygonIgnore;\n      polygon.ignore = polygonIgnore;\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7\n      }));\n      polygon.hoverStyle = hoverAreaStyleModel.getAreaStyle();\n      var itemStyle = itemModel.getModel('itemStyle').getItemStyle(['color']);\n      var itemHoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      symbolGroup.eachChild(function (symbolPath) {\n        symbolPath.setStyle(itemStyle);\n        symbolPath.hoverStyle = zrUtil.clone(itemHoverStyle);\n        var defaultText = data.get(data.dimensions[symbolPath.__dimIdx], idx);\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\n        graphic.setLabelStyle(symbolPath.style, symbolPath.hoverStyle, labelModel, labelHoverModel, {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: defaultText,\n          autoColor: color,\n          isRectText: true\n        });\n      });\n\n      itemGroup.highDownOnUpdate = function (fromState, toState) {\n        polygon.attr('ignore', toState === 'emphasis' ? hoverPolygonIgnore : polygonIgnore);\n      };\n\n      graphic.setHoverStyle(itemGroup);\n    });\n    this._data = data;\n  },\n  remove: function remove() {\n    this.group.removeAll();\n    this._data = null;\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n    zrUtil.each(axes, function (axis, axisIndex) {\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\n        points[dataIndex] = points[dataIndex] || [];\n        var point = coordSys.dataToPoint(val, axisIndex);\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\n      });\n    }); // Close polygon\n\n    data.each(function (idx) {\n      // TODO\n      // Is it appropriate to connect to the next data when some data is missing?\n      // Or, should trade it like `connectNull` in line chart?\n      var firstPoint = zrUtil.find(points[idx], function (point) {\n        return isValidPoint(point);\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\n\n      points[idx].push(firstPoint.slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nfunction isValidPoint(point) {\n  return !isNaN(point[0]) && !isNaN(point[1]);\n}\n\nfunction getValueMissingPoint(coordSys) {\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\n  // (probably cause problem when refreshing or animating)\n  return [coordSys.cx, coordSys.cy];\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Backward compat for radar chart in 2\n\n\nfunction _default(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./map/MapSeries\");\n\nrequire(\"./map/MapView\");\n\nrequire(\"../action/geoRoam\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nvar mapSymbolLayout = require(\"./map/mapSymbolLayout\");\n\nvar mapVisual = require(\"./map/mapVisual\");\n\nvar mapDataStatistic = require(\"./map/mapDataStatistic\");\n\nvar backwardCompat = require(\"./map/backwardCompat\");\n\nvar createDataSelectAction = require(\"../action/createDataSelectAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(mapSymbolLayout);\necharts.registerVisual(mapVisual);\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, mapDataStatistic);\necharts.registerPreprocessor(backwardCompat);\ncreateDataSelectAction('map', [{\n  type: 'mapToggleSelect',\n  event: 'mapselectchanged',\n  method: 'toggleSelected'\n}, {\n  type: 'mapSelect',\n  event: 'mapselected',\n  method: 'select'\n}, {\n  type: 'mapUnSelect',\n  event: 'mapunselected',\n  method: 'unSelect'\n}]);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListSimply = require(\"../helper/createListSimply\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar dataSelectableMixin = require(\"../../component/helper/selectableMixin\");\n\nvar _dataProvider = require(\"../../data/helper/dataProvider\");\n\nvar retrieveRawAttr = _dataProvider.retrieveRawAttr;\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _sourceHelper = require(\"../../data/helper/sourceHelper\");\n\nvar makeSeriesEncodeForNameBased = _sourceHelper.makeSeriesEncodeForNameBased;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar MapSeries = SeriesModel.extend({\n  type: 'series.map',\n  dependencies: ['geo'],\n  layoutMode: 'box',\n\n  /**\n   * Only first map series of same mapType will drawMap\n   * @type {boolean}\n   */\n  needsDrawMap: false,\n\n  /**\n   * Group of all map series with same mapType\n   * @type {boolean}\n   */\n  seriesGroup: [],\n  getInitialData: function getInitialData(option) {\n    var data = createListSimply(this, {\n      coordDimensions: ['value'],\n      encodeDefaulter: zrUtil.curry(makeSeriesEncodeForNameBased, this)\n    });\n    var valueDim = data.mapDimension('value');\n    var dataNameMap = zrUtil.createHashMap();\n    var selectTargetList = [];\n    var toAppendNames = [];\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      var name = data.getName(i);\n      dataNameMap.set(name, true);\n      selectTargetList.push({\n        name: name,\n        value: data.get(valueDim, i),\n        selected: retrieveRawAttr(data, i, 'selected')\n      });\n    }\n\n    var geoSource = geoSourceManager.load(this.getMapType(), this.option.nameMap, this.option.nameProperty);\n    zrUtil.each(geoSource.regions, function (region) {\n      var name = region.name;\n\n      if (!dataNameMap.get(name)) {\n        selectTargetList.push({\n          name: name\n        });\n        toAppendNames.push(name);\n      }\n    });\n    this.updateSelectedMap(selectTargetList); // Complete data with missing regions. The consequent processes (like visual\n    // map and render) can not be performed without a \"full data\". For example,\n    // find `dataIndex` by name.\n\n    data.appendValues([], toAppendNames);\n    return data;\n  },\n\n  /**\n   * If no host geo model, return null, which means using a\n   * inner exclusive geo model.\n   */\n  getHostGeoModel: function getHostGeoModel() {\n    var geoIndex = this.option.geoIndex;\n    return geoIndex != null ? this.dependentModels.geo[geoIndex] : null;\n  },\n  getMapType: function getMapType() {\n    return (this.getHostGeoModel() || this).option.map;\n  },\n  // _fillOption: function (option, mapName) {\n  // Shallow clone\n  // option = zrUtil.extend({}, option);\n  // option.data = geoCreator.getFilledRegions(option.data, mapName, option.nameMap);\n  // return option;\n  // },\n  getRawValue: function getRawValue(dataIndex) {\n    // Use value stored in data instead because it is calculated from multiple series\n    // FIXME Provide all value of multiple series ?\n    var data = this.getData();\n    return data.get(data.mapDimension('value'), dataIndex);\n  },\n\n  /**\n   * Get model of region\n   * @param  {string} name\n   * @return {module:echarts/model/Model}\n   */\n  getRegionModel: function getRegionModel(regionName) {\n    var data = this.getData();\n    return data.getItemModel(data.indexOfName(regionName));\n  },\n\n  /**\n   * Map tooltip formatter\n   *\n   * @param {number} dataIndex\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    // FIXME orignalData and data is a bit confusing\n    var data = this.getData();\n    var formattedValue = addCommas(this.getRawValue(dataIndex));\n    var name = data.getName(dataIndex);\n    var seriesGroup = this.seriesGroup;\n    var seriesNames = [];\n\n    for (var i = 0; i < seriesGroup.length; i++) {\n      var otherIndex = seriesGroup[i].originalData.indexOfName(name);\n      var valueDim = data.mapDimension('value');\n\n      if (!isNaN(seriesGroup[i].originalData.get(valueDim, otherIndex))) {\n        seriesNames.push(encodeHTML(seriesGroup[i].name));\n      }\n    }\n\n    return seriesNames.join(', ') + '<br />' + encodeHTML(name + ' : ' + formattedValue);\n  },\n\n  /**\n   * @implement\n   */\n  getTooltipPosition: function getTooltipPosition(dataIndex) {\n    if (dataIndex != null) {\n      var name = this.getData().getName(dataIndex);\n      var geo = this.coordinateSystem;\n      var region = geo.getRegion(name);\n      return region && geo.dataToPoint(region.center);\n    }\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 2,\n    coordinateSystem: 'geo',\n    // map should be explicitly specified since ec3.\n    map: '',\n    // If `geoIndex` is not specified, a exclusive geo will be\n    // created. Otherwise use the specified geo component, and\n    // `map` and `mapType` are ignored.\n    // geoIndex: 0,\n    // 'center' | 'left' | 'right' | 'x%' | {number}\n    left: 'center',\n    // 'center' | 'top' | 'bottom' | 'x%' | {number}\n    top: 'center',\n    // right\n    // bottom\n    // width:\n    // height\n    // Aspect is width / height. Inited to be geoJson bbox aspect\n    // This parameter is used for scale this aspect\n    aspectScale: 0.75,\n    ///// Layout with center and size\n    // If you wan't to put map in a fixed size box with right aspect ratio\n    // This two properties may more conveninet\n    // layoutCenter: [50%, 50%]\n    // layoutSize: 100\n    // 数值合并方式，默认加和，可选为：\n    // 'sum' | 'average' | 'max' | 'min'\n    // mapValueCalculation: 'sum',\n    // 地图数值计算结果小数精度\n    // mapValuePrecision: 0,\n    // 显示图例颜色标识（系列标识的小圆点），图例开启时有效\n    showLegendSymbol: true,\n    // 选择模式，默认关闭，可选single，multiple\n    // selectedMode: false,\n    dataRangeHoverLink: true,\n    // 是否开启缩放及漫游模式\n    // roam: false,\n    // Define left-top, right-bottom coords to control view\n    // For example, [ [180, 90], [-180, -90] ],\n    // higher priority than center and zoom\n    boundingCoords: null,\n    // Default on center of map\n    center: null,\n    zoom: 1,\n    scaleLimit: null,\n    label: {\n      show: false,\n      color: '#000'\n    },\n    // scaleLimit: null,\n    itemStyle: {\n      borderWidth: 0.5,\n      borderColor: '#444',\n      areaColor: '#eee'\n    },\n    emphasis: {\n      label: {\n        show: true,\n        color: 'rgb(100,0,0)'\n      },\n      itemStyle: {\n        areaColor: 'rgba(255,215,0,0.8)'\n      }\n    },\n    nameProperty: 'name'\n  }\n});\nzrUtil.mixin(MapSeries, dataSelectableMixin);\nvar _default = MapSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar MapDraw = require(\"../../component/helper/MapDraw\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar HIGH_DOWN_PROP = '__seriesMapHighDown';\nvar RECORD_VERSION_PROP = '__seriesMapCallKey';\n\nvar _default = echarts.extendChartView({\n  type: 'map',\n  render: function render(mapModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'mapToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var group = this.group;\n    group.removeAll();\n\n    if (mapModel.getHostGeoModel()) {\n      return;\n    } // Not update map if it is an roam action from self\n\n\n    if (!(payload && payload.type === 'geoRoam' && payload.componentType === 'series' && payload.seriesId === mapModel.id)) {\n      if (mapModel.needsDrawMap) {\n        var mapDraw = this._mapDraw || new MapDraw(api, true);\n        group.add(mapDraw.group);\n        mapDraw.draw(mapModel, ecModel, api, this, payload);\n        this._mapDraw = mapDraw;\n      } else {\n        // Remove drawed map\n        this._mapDraw && this._mapDraw.remove();\n        this._mapDraw = null;\n      }\n    } else {\n      var mapDraw = this._mapDraw;\n      mapDraw && group.add(mapDraw.group);\n    }\n\n    mapModel.get('showLegendSymbol') && ecModel.getComponent('legend') && this._renderSymbols(mapModel, ecModel, api);\n  },\n  remove: function remove() {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n    this.group.removeAll();\n  },\n  dispose: function dispose() {\n    this._mapDraw && this._mapDraw.remove();\n    this._mapDraw = null;\n  },\n  _renderSymbols: function _renderSymbols(mapModel, ecModel, api) {\n    var originalData = mapModel.originalData;\n    var group = this.group;\n    originalData.each(originalData.mapDimension('value'), function (value, originalDataIndex) {\n      if (isNaN(value)) {\n        return;\n      }\n\n      var layout = originalData.getItemLayout(originalDataIndex);\n\n      if (!layout || !layout.point) {\n        // Not exists in map\n        return;\n      }\n\n      var point = layout.point;\n      var offset = layout.offset;\n      var circle = new graphic.Circle({\n        style: {\n          // Because the special of map draw.\n          // Which needs statistic of multiple series and draw on one map.\n          // And each series also need a symbol with legend color\n          //\n          // Layout and visual are put one the different data\n          fill: mapModel.getData().getVisual('color')\n        },\n        shape: {\n          cx: point[0] + offset * 9,\n          cy: point[1],\n          r: 3\n        },\n        silent: true,\n        // Do not overlap the first series, on which labels are displayed.\n        z2: 8 + (!offset ? graphic.Z2_EMPHASIS_LIFT + 1 : 0)\n      }); // Only the series that has the first value on the same region is in charge of rendering the label.\n      // But consider the case:\n      // series: [\n      //     {id: 'X', type: 'map', map: 'm', {data: [{name: 'A', value: 11}, {name: 'B', {value: 22}]},\n      //     {id: 'Y', type: 'map', map: 'm', {data: [{name: 'A', value: 21}, {name: 'C', {value: 33}]}\n      // ]\n      // The offset `0` of item `A` is at series `X`, but of item `C` is at series `Y`.\n      // For backward compatibility, we follow the rule that render label `A` by the\n      // settings on series `X` but render label `C` by the settings on series `Y`.\n\n      if (!offset) {\n        var fullData = mapModel.mainSeries.getData();\n        var name = originalData.getName(originalDataIndex);\n        var fullIndex = fullData.indexOfName(name);\n        var itemModel = originalData.getItemModel(originalDataIndex);\n        var labelModel = itemModel.getModel('label');\n        var hoverLabelModel = itemModel.getModel('emphasis.label');\n        var regionGroup = fullData.getItemGraphicEl(fullIndex); // `getFormattedLabel` needs to use `getData` inside. Here\n        // `mapModel.getData()` is shallow cloned from `mainSeries.getData()`.\n        // FIXME\n        // If this is not the `mainSeries`, the item model (like label formatter)\n        // set on original data item will never get. But it has been working\n        // like that from the begining, and this scenario is rarely encountered.\n        // So it won't be fixed until have to.\n\n        var normalText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'normal'), name);\n        var emphasisText = zrUtil.retrieve2(mapModel.getFormattedLabel(fullIndex, 'emphasis'), normalText);\n        var highDownRecord = regionGroup[HIGH_DOWN_PROP];\n        var recordVersion = Math.random(); // Prevent from register listeners duplicatedly when roaming.\n\n        if (!highDownRecord) {\n          highDownRecord = regionGroup[HIGH_DOWN_PROP] = {};\n          var onEmphasis = zrUtil.curry(onRegionHighDown, true);\n          var onNormal = zrUtil.curry(onRegionHighDown, false);\n          regionGroup.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal);\n        } // Prevent removed regions effect current grapics.\n\n\n        regionGroup[RECORD_VERSION_PROP] = recordVersion;\n        zrUtil.extend(highDownRecord, {\n          recordVersion: recordVersion,\n          circle: circle,\n          labelModel: labelModel,\n          hoverLabelModel: hoverLabelModel,\n          emphasisText: emphasisText,\n          normalText: normalText\n        }); // FIXME\n        // Consider set option when emphasis.\n\n        enterRegionHighDown(highDownRecord, false);\n      }\n\n      group.add(circle);\n    });\n  }\n});\n\nfunction onRegionHighDown(toHighOrDown) {\n  var highDownRecord = this[HIGH_DOWN_PROP];\n\n  if (highDownRecord && highDownRecord.recordVersion === this[RECORD_VERSION_PROP]) {\n    enterRegionHighDown(highDownRecord, toHighOrDown);\n  }\n}\n\nfunction enterRegionHighDown(highDownRecord, toHighOrDown) {\n  var circle = highDownRecord.circle;\n  var labelModel = highDownRecord.labelModel;\n  var hoverLabelModel = highDownRecord.hoverLabelModel;\n  var emphasisText = highDownRecord.emphasisText;\n  var normalText = highDownRecord.normalText;\n\n  if (toHighOrDown) {\n    circle.style.extendFrom(graphic.setTextStyle({}, hoverLabelModel, {\n      text: hoverLabelModel.get('show') ? emphasisText : null\n    }, {\n      isRectText: true,\n      useInsideStyle: false\n    }, true)); // Make label upper than others if overlaps.\n\n    circle.__mapOriginalZ2 = circle.z2;\n    circle.z2 += graphic.Z2_EMPHASIS_LIFT;\n  } else {\n    graphic.setTextStyle(circle.style, labelModel, {\n      text: labelModel.get('show') ? normalText : null,\n      textPosition: labelModel.getShallow('position') || 'bottom'\n    }, {\n      isRectText: true,\n      useInsideStyle: false\n    }); // Trigger normalize style like padding.\n\n    circle.dirty(false);\n\n    if (circle.__mapOriginalZ2 != null) {\n      circle.z2 = circle.__mapOriginalZ2;\n      circle.__mapOriginalZ2 = null;\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel) {\n  var processedMapType = {};\n  ecModel.eachSeriesByType('map', function (mapSeries) {\n    var mapType = mapSeries.getMapType();\n\n    if (mapSeries.getHostGeoModel() || processedMapType[mapType]) {\n      return;\n    }\n\n    var mapSymbolOffsets = {};\n    zrUtil.each(mapSeries.seriesGroup, function (subMapSeries) {\n      var geo = subMapSeries.coordinateSystem;\n      var data = subMapSeries.originalData;\n\n      if (subMapSeries.get('showLegendSymbol') && ecModel.getComponent('legend')) {\n        data.each(data.mapDimension('value'), function (value, idx) {\n          var name = data.getName(idx);\n          var region = geo.getRegion(name); // If input series.data is [11, 22, '-'/null/undefined, 44],\n          // it will be filled with NaN: [11, 22, NaN, 44] and NaN will\n          // not be drawn. So here must validate if value is NaN.\n\n          if (!region || isNaN(value)) {\n            return;\n          }\n\n          var offset = mapSymbolOffsets[name] || 0;\n          var point = geo.dataToPoint(region.center);\n          mapSymbolOffsets[name] = offset + 1;\n          data.setItemLayout(idx, {\n            point: point,\n            offset: offset\n          });\n        });\n      }\n    }); // Show label of those region not has legendSymbol(which is offset 0)\n\n    var data = mapSeries.getData();\n    data.each(function (idx) {\n      var name = data.getName(idx);\n      var layout = data.getItemLayout(idx) || {};\n      layout.showLabel = !mapSymbolOffsets[name];\n      data.setItemLayout(idx, layout);\n    });\n    processedMapType[mapType] = true;\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var colorList = seriesModel.get('color');\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var areaColor = itemStyleModel.get('areaColor');\n    var color = itemStyleModel.get('color') || colorList[seriesModel.seriesIndex % colorList.length];\n    seriesModel.getData().setVisual({\n      'areaColor': areaColor,\n      'color': color\n    });\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME 公用？\n\n/**\n * @param {Array.<module:echarts/data/List>} datas\n * @param {string} statisticType 'average' 'sum'\n * @inner\n */\n\n\nfunction dataStatistics(datas, statisticType) {\n  var dataNameMap = {};\n  zrUtil.each(datas, function (data) {\n    data.each(data.mapDimension('value'), function (value, idx) {\n      // Add prefix to avoid conflict with Object.prototype.\n      var mapKey = 'ec-' + data.getName(idx);\n      dataNameMap[mapKey] = dataNameMap[mapKey] || [];\n\n      if (!isNaN(value)) {\n        dataNameMap[mapKey].push(value);\n      }\n    });\n  });\n  return datas[0].map(datas[0].mapDimension('value'), function (value, idx) {\n    var mapKey = 'ec-' + datas[0].getName(idx);\n    var sum = 0;\n    var min = Infinity;\n    var max = -Infinity;\n    var len = dataNameMap[mapKey].length;\n\n    for (var i = 0; i < len; i++) {\n      min = Math.min(min, dataNameMap[mapKey][i]);\n      max = Math.max(max, dataNameMap[mapKey][i]);\n      sum += dataNameMap[mapKey][i];\n    }\n\n    var result;\n\n    if (statisticType === 'min') {\n      result = min;\n    } else if (statisticType === 'max') {\n      result = max;\n    } else if (statisticType === 'average') {\n      result = sum / len;\n    } else {\n      result = sum;\n    }\n\n    return len === 0 ? NaN : result;\n  });\n}\n\nfunction _default(ecModel) {\n  var seriesGroups = {};\n  ecModel.eachSeriesByType('map', function (seriesModel) {\n    var hostGeoModel = seriesModel.getHostGeoModel();\n    var key = hostGeoModel ? 'o' + hostGeoModel.id : 'i' + seriesModel.getMapType();\n    (seriesGroups[key] = seriesGroups[key] || []).push(seriesModel);\n  });\n  zrUtil.each(seriesGroups, function (seriesList, key) {\n    var data = dataStatistics(zrUtil.map(seriesList, function (seriesModel) {\n      return seriesModel.getData();\n    }), seriesList[0].get('mapValueCalculation'));\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].originalData = seriesList[i].getData();\n    } // FIXME Put where?\n\n\n    for (var i = 0; i < seriesList.length; i++) {\n      seriesList[i].seriesGroup = seriesList;\n      seriesList[i].needsDrawMap = i === 0 && !seriesList[i].getHostGeoModel();\n      seriesList[i].setData(data.cloneShallow());\n      seriesList[i].mainSeries = seriesList[0];\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  // Save geoCoord\n  var mapSeries = [];\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'map') {\n      mapSeries.push(seriesOpt);\n      seriesOpt.map = seriesOpt.map || seriesOpt.mapType; // Put x, y, width, height, x2, y2 in the top level\n\n      zrUtil.defaults(seriesOpt, seriesOpt.mapLocation);\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./tree/TreeSeries\");\n\nrequire(\"./tree/TreeView\");\n\nrequire(\"./tree/treeAction\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar treeLayout = require(\"./tree/treeLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(visualSymbol('tree', 'circle'));\necharts.registerLayout(treeLayout);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar Model = require(\"../../model/Model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.tree',\n  layoutInfo: null,\n  // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n  layoutMode: 'box',\n\n  /**\n   * Init a tree data structure from data in option series\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var leavesModel = new Model(leaves, this, this.ecModel);\n    var tree = Tree.createTree(root, this, {}, beforeLink);\n\n    function beforeLink(nodeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var node = tree.getNodeByDataIndex(idx);\n\n        if (!node.children.length || !node.isExpand) {\n          model.parentModel = leavesModel;\n        }\n\n        return model;\n      });\n    }\n\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  },\n\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n  getOrient: function getOrient() {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  },\n  setZoom: function setZoom(zoom) {\n    this.option.zoom = zoom;\n  },\n  setCenter: function setCenter(center) {\n    this.option.center = center;\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return encodeHTML(name + (isNaN(value) || value == null ? '' : ' : ' + value));\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // value can be 'polyline'\n    edgeShape: 'curve',\n    edgeForkPosition: '50%',\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\n    roam: false,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.4,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    // The orient of orthoginal layout, can be setted to 'LR', 'TB', 'RL', 'BT'.\n    // and the backward compatibility configuration 'horizontal = LR', 'vertical = TB'.\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true,\n      color: '#555'\n    },\n    leaves: {\n      label: {\n        show: true\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 1000\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar SymbolClz = require(\"../helper/Symbol\");\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar radialCoordinate = _layoutHelper.radialCoordinate;\n\nvar echarts = require(\"../../echarts\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar View = require(\"../../coord/View\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar TreeShape = graphic.extendShape({\n  shape: {\n    parentPoint: [],\n    childPoints: [],\n    orient: '',\n    forkPosition: ''\n  },\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'tree',\n\n  /**\n   * Init the chart\n   * @override\n   * @param  {module:echarts/model/Global} ecModel\n   * @param  {module:echarts/ExtensionAPI} api\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup = new graphic.Group();\n    /**\n     * @private\n     * @type {module:echarts/componet/helper/RoamController}\n     */\n\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  },\n  render: function render(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.attr('position', [layoutInfo.x + layoutInfo.width / 2, layoutInfo.y + layoutInfo.height / 2]);\n    } else {\n      group.attr('position', [layoutInfo.x, layoutInfo.y]);\n    }\n\n    this._updateViewCoordSys(seriesModel, layoutInfo, layout);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    var seriesScope = {\n      expandAndCollapse: seriesModel.get('expandAndCollapse'),\n      layout: layout,\n      edgeShape: seriesModel.get('edgeShape'),\n      edgeForkPosition: seriesModel.get('edgeForkPosition'),\n      orient: seriesModel.getOrient(),\n      curvature: seriesModel.get('lineStyle.curveness'),\n      symbolRotate: seriesModel.get('symbolRotate'),\n      symbolOffset: seriesModel.get('symbolOffset'),\n      hoverAnimation: seriesModel.get('hoverAnimation'),\n      useNameLabel: true,\n      fadeIn: true\n    };\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel, seriesScope);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel, seriesScope);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel, seriesScope);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesScope.expandAndCollapse === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  },\n  _updateViewCoordSys: function _updateViewCoordSys(seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      position: viewCoordSys.position,\n      scale: viewCoordSys.scale\n    });\n    this._viewCoordSys = viewCoordSys;\n    this._min = min;\n    this._max = max;\n  },\n  _updateController: function _updateController(seriesModel, ecModel, api) {\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }, this).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      this._updateNodeAndLinkScale(seriesModel);\n    }, this);\n  },\n  _updateNodeAndLinkScale: function _updateNodeAndLinkScale(seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    var invScale = [nodeScale, nodeScale];\n    data.eachItemGraphicEl(function (el, idx) {\n      el.attr('scale', invScale);\n    });\n  },\n  _getNodeGlobalScale: function _getNodeGlobalScale(seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupScale = coordSys.scale;\n    var groupZoom = groupScale && groupScale[0] || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  },\n  dispose: function dispose() {\n    this._controller && this._controller.dispose();\n    this._controllerHost = {};\n  },\n  remove: function remove() {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  }\n});\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y) && data.getItemVisual(dataIndex, 'symbol') !== 'none';\n}\n\nfunction getTreeNodeStyle(node, itemModel, seriesScope) {\n  seriesScope.itemModel = itemModel;\n  seriesScope.itemStyle = itemModel.getModel('itemStyle').getItemStyle();\n  seriesScope.hoverItemStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n  seriesScope.lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  seriesScope.labelModel = itemModel.getModel('label');\n  seriesScope.hoverLabelModel = itemModel.getModel('emphasis.label');\n\n  if (node.isExpand === false && node.children.length !== 0) {\n    seriesScope.symbolInnerColor = seriesScope.itemStyle.fill;\n  } else {\n    seriesScope.symbolInnerColor = '#fff';\n  }\n\n  return seriesScope;\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.position[0],\n    y: sourceSymbolEl.position[1],\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, seriesScope);\n    symbolEl.attr('position', [sourceOldLayout.x, sourceOldLayout.y]);\n  } else {\n    symbolEl.updateData(data, dataIndex, seriesScope);\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  graphic.updateProps(symbolEl, {\n    position: [targetLayout.x, targetLayout.y]\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesScope.layout === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length = realRoot.children.length;\n    var rad;\n    var isLeft;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {};\n      center.x = (realRoot.children[0].getLayout().x + realRoot.children[length - 1].getLayout().x) / 2;\n      center.y = (realRoot.children[0].getLayout().y + realRoot.children[length - 1].getLayout().y) / 2;\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var rotate = seriesScope.labelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    symbolPath.setStyle({\n      textPosition: seriesScope.labelModel.get('position') || textPosition,\n      textRotation: rotate == null ? -rad : labelRotateRadian,\n      textOrigin: 'center',\n      verticalAlign: 'middle'\n    });\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope);\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group, seriesScope) {\n  var edgeShape = seriesScope.edgeShape;\n  var edge = symbolEl.__edge;\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(seriesScope, sourceOldLayout, sourceOldLayout),\n          style: zrUtil.defaults({\n            opacity: 0,\n            strokeNoScale: true\n          }, seriesScope.lineStyle)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, targetLayout),\n        style: {\n          opacity: 1\n        }\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (seriesScope.layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreeShape({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: seriesScope.orient,\n              forkPosition: seriesScope.edgeForkPosition\n            },\n            style: zrUtil.defaults({\n              opacity: 0,\n              strokeNoScale: true\n            }, seriesScope.lineStyle)\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          },\n          style: {\n            opacity: 1\n          }\n        }, seriesModel);\n      }\n    } else {}\n  }\n\n  group.add(edge);\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel, seriesScope) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var itemModel = node.getModel();\n  var seriesScope = getTreeNodeStyle(node, itemModel, seriesScope);\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var edgeShape = seriesScope.edgeShape;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  graphic.updateProps(symbolEl, {\n    position: [sourceLayout.x + 1, sourceLayout.y + 1]\n  }, seriesModel, function () {\n    group.remove(symbolEl);\n    data.setItemGraphicEl(dataIndex, null);\n  });\n  symbolEl.fadeOut(null, {\n    keepLabel: true\n  });\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesScope.edgeShape;\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(seriesScope, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    } else if (edgeShape === 'polyline' && seriesScope.layout === 'orthogonal') {\n      graphic.updateProps(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, function () {\n        group.remove(edge);\n      });\n    }\n  }\n}\n\nfunction getEdgeShape(seriesScope, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var orient = seriesScope.orient;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (seriesScope.layout === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * seriesScope.curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * seriesScope.curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x,\n      y1: radialCoor1.y,\n      x2: radialCoor4.x,\n      y2: radialCoor4.y,\n      cpx1: radialCoor2.x,\n      cpy1: radialCoor2.y,\n      cpx2: radialCoor3.x,\n      cpy2: radialCoor3.y\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * seriesScope.curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * seriesScope.curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * seriesScope.curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * seriesScope.curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar _roamHelper = require(\"../../action/roamHelper\");\n\nvar updateCenterAndZoom = _roamHelper.updateCenterAndZoom;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\necharts.registerAction({\n  type: 'treeExpandAndCollapse',\n  event: 'treeExpandAndCollapse',\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var dataIndex = payload.dataIndex;\n    var tree = seriesModel.getData().tree;\n    var node = tree.getNodeByDataIndex(dataIndex);\n    node.isExpand = !node.isExpand;\n  });\n});\necharts.registerAction({\n  type: 'treeRoam',\n  event: 'treeRoam',\n  // Here we set 'none' instead of 'update', because roam action\n  // just need to update the transform matrix without having to recalculate\n  // the layout. So don't need to go through the whole update process, such\n  // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n  update: 'none'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'tree',\n    query: payload\n  }, function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n    var res = updateCenterAndZoom(coordSys, payload);\n    seriesModel.setCenter && seriesModel.setCenter(res.center);\n    seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _traversalHelper = require(\"./traversalHelper\");\n\nvar eachAfter = _traversalHelper.eachAfter;\nvar eachBefore = _traversalHelper.eachBefore;\n\nvar _layoutHelper = require(\"./layoutHelper\");\n\nvar init = _layoutHelper.init;\nvar firstWalk = _layoutHelper.firstWalk;\nvar secondWalk = _layoutHelper.secondWalk;\nvar sep = _layoutHelper.separation;\nvar radialCoordinate = _layoutHelper.radialCoordinate;\nvar getViewRect = _layoutHelper.getViewRect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left = realRoot;\n    var right = realRoot;\n    var bottom = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left.getLayout().x) {\n        left = node;\n      }\n\n      if (x > right.getLayout().x) {\n        right = node;\n      }\n\n      if (node.depth > bottom.depth) {\n        bottom = node;\n      }\n    });\n    var delta = left === right ? 1 : separation(left, right) / 2;\n    var tx = delta - left.getLayout().x;\n    var kx = 0;\n    var ky = 0;\n    var coorX = 0;\n    var coorY = 0;\n\n    if (layout === 'radial') {\n      kx = width / (right.getLayout().x + delta + tx); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky = height / (bottom.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX = (node.getLayout().x + tx) * kx;\n        coorY = (node.depth - 1) * ky;\n        var finalCoor = radialCoordinate(coorX, coorY);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX,\n          rawY: coorY\n        }, true);\n      });\n    } else {\n      var orient = seriesModel.getOrient();\n\n      if (orient === 'RL' || orient === 'LR') {\n        ky = height / (right.getLayout().x + delta + tx);\n        kx = width / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY = (node.getLayout().x + tx) * ky;\n          coorX = orient === 'LR' ? (node.depth - 1) * kx : width - (node.depth - 1) * kx;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      } else if (orient === 'TB' || orient === 'BT') {\n        kx = width / (right.getLayout().x + delta + tx);\n        ky = height / (bottom.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX = (node.getLayout().x + tx) * kx;\n          coorY = orient === 'TB' ? (node.depth - 1) * ky : height - (node.depth - 1) * ky;\n          node.setLayout({\n            x: coorX,\n            y: coorY\n          }, true);\n        });\n      }\n    }\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n * @param  {module:echarts/data/Tree~TreeNode} root  The real root of the tree\n * @param  {Function} callback\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexports.eachAfter = eachAfter;\nexports.eachBefore = eachBefore;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./treemap/TreemapSeries\");\n\nrequire(\"./treemap/TreemapView\");\n\nrequire(\"./treemap/treemapAction\");\n\nvar treemapVisual = require(\"./treemap/treemapVisual\");\n\nvar treemapLayout = require(\"./treemap/treemapLayout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(treemapVisual);\necharts.registerLayout(treemapLayout);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\nvar addCommas = _format.addCommas;\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = SeriesModel.extend({\n  type: 'series.treemap',\n  layoutMode: 'box',\n  dependencies: ['grid', 'polar'],\n  preventUsingHoverLayer: true,\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  defaultOption: {\n    // Disable progressive rendering\n    progressive: 0,\n    // center: ['50%', '50%'],          // not supported in ec3.\n    // size: ['80%', '80%'],            // deprecated, compatible with ec2.\n    left: 'center',\n    top: 'middle',\n    right: null,\n    bottom: null,\n    width: '80%',\n    height: '80%',\n    sort: true,\n    // Can be null or false or true\n    // (order by desc default, asc not supported yet (strange effect))\n    clipWindow: 'origin',\n    // Size of clipped window when zooming. 'origin' or 'fullscreen'\n    squareRatio: 0.5 * (1 + Math.sqrt(5)),\n    // golden ratio\n    leafDepth: null,\n    // Nodes on depth from root are regarded as leaves.\n    // Count from zero (zero represents only view root).\n    drillDownIcon: '▶',\n    // Use html character temporarily because it is complicated\n    // to align specialized icon. ▷▶❒❐▼✚\n    zoomToNodeRatio: 0.32 * 0.32,\n    // Be effective when using zoomToNode. Specify the proportion of the\n    // target node area in the view area.\n    roam: true,\n    // true, false, 'scale' or 'zoom', 'move'.\n    nodeClick: 'zoomToNode',\n    // Leaf node click behaviour: 'zoomToNode', 'link', false.\n    // If leafDepth is set and clicking a node which has children but\n    // be on left depth, the behaviour would be changing root. Otherwise\n    // use behavious defined above.\n    animation: true,\n    animationDurationUpdate: 900,\n    animationEasing: 'quinticInOut',\n    breadcrumb: {\n      show: true,\n      height: 22,\n      left: 'center',\n      top: 'bottom',\n      // right\n      // bottom\n      emptyItemWidth: 25,\n      // Width of empty node.\n      itemStyle: {\n        color: 'rgba(0,0,0,0.7)',\n        //'#5793f3',\n        borderColor: 'rgba(255,255,255,0.7)',\n        borderWidth: 1,\n        shadowColor: 'rgba(150,150,150,1)',\n        shadowBlur: 3,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        textStyle: {\n          color: '#fff'\n        }\n      },\n      emphasis: {\n        textStyle: {}\n      }\n    },\n    label: {\n      show: true,\n      // Do not use textDistance, for ellipsis rect just the same as treemap node rect.\n      distance: 0,\n      padding: 5,\n      position: 'inside',\n      // Can be [5, '5%'] or position stirng like 'insideTopLeft', ...\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true // align\n      // verticalAlign\n\n    },\n    upperLabel: {\n      // Label when node is parent.\n      show: false,\n      position: [0, '50%'],\n      height: 20,\n      // formatter: null,\n      color: '#fff',\n      ellipsis: true,\n      // align: null,\n      verticalAlign: 'middle'\n    },\n    itemStyle: {\n      color: null,\n      // Can be 'none' if not necessary.\n      colorAlpha: null,\n      // Can be 'none' if not necessary.\n      colorSaturation: null,\n      // Can be 'none' if not necessary.\n      borderWidth: 0,\n      gapWidth: 0,\n      borderColor: '#fff',\n      borderColorSaturation: null // If specified, borderColor will be ineffective, and the\n      // border color is evaluated by color of current node and\n      // borderColorSaturation.\n\n    },\n    emphasis: {\n      upperLabel: {\n        show: true,\n        position: [0, '50%'],\n        color: '#fff',\n        ellipsis: true,\n        verticalAlign: 'middle'\n      }\n    },\n    visualDimension: 0,\n    // Can be 0, 1, 2, 3.\n    visualMin: null,\n    visualMax: null,\n    color: [],\n    // + treemapSeries.color should not be modified. Please only modified\n    // level[n].color (if necessary).\n    // + Specify color list of each level. level[0].color would be global\n    // color list if not specified. (see method `setDefault`).\n    // + But set as a empty array to forbid fetch color from global palette\n    // when using nodeModel.get('color'), otherwise nodes on deep level\n    // will always has color palette set and are not able to inherit color\n    // from parent node.\n    // + TreemapSeries.color can not be set as 'none', otherwise effect\n    // legend color fetching (see seriesColor.js).\n    colorAlpha: null,\n    // Array. Specify color alpha range of each level, like [0.2, 0.8]\n    colorSaturation: null,\n    // Array. Specify color saturation of each level, like [0.2, 0.5]\n    colorMappingBy: 'index',\n    // 'value' or 'index' or 'id'.\n    visibleMin: 10,\n    // If area less than this threshold (unit: pixel^2), node will not\n    // be rendered. Only works when sort is 'asc' or 'desc'.\n    childrenVisibleMin: null,\n    // If area of a node less than this threshold (unit: pixel^2),\n    // grandchildren will not show.\n    // Why grandchildren? If not grandchildren but children,\n    // some siblings show children and some not,\n    // the appearance may be mess and not consistent,\n    levels: [] // Each item: {\n    //     visibleMin, itemStyle, visualDimension, label\n    // }\n    // data: {\n    //      value: [],\n    //      children: [],\n    //      link: 'http://xxx.xxx.xxx',\n    //      target: 'blank' or 'self'\n    // }\n\n  },\n\n  /**\n   * @override\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || [];\n    levels = option.levels = setDefault(levels, ecModel);\n    var levelModels = zrUtil.map(levels || [], function (levelDefine) {\n      return new Model(levelDefine, this, ecModel);\n    }, this); // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    var tree = Tree.createTree(root, this, null, beforeLink);\n\n    function beforeLink(nodeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var node = tree.getNodeByDataIndex(idx);\n        var levelModel = levelModels[node.depth];\n        levelModel && (model.parentModel = levelModel);\n        return model;\n      });\n    }\n\n    return tree.data;\n  },\n  optionUpdated: function optionUpdated() {\n    this.resetViewRoot();\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex\n   * @param {boolean} [mutipleSeries=false]\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? addCommas(value[0]) : addCommas(value);\n    var name = data.getName(dataIndex);\n    return encodeHTML(name + ': ' + formattedValue);\n  },\n\n  /**\n   * Add tree path to tooltip param\n   *\n   * @override\n   * @param {number} dataIndex\n   * @return {Object}\n   */\n  getDataParams: function getDataParams(dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n\n  /**\n   * @public\n   * @param {Object} layoutInfo {\n   *                                x: containerGroup x\n   *                                y: containerGroup y\n   *                                width: containerGroup width\n   *                                height: containerGroup height\n   *                            }\n   */\n  setLayoutInfo: function setLayoutInfo(layoutInfo) {\n    /**\n     * @readOnly\n     * @type {Object}\n     */\n    this.layoutInfo = this.layoutInfo || {};\n    zrUtil.extend(this.layoutInfo, layoutInfo);\n  },\n\n  /**\n   * @param  {string} id\n   * @return {number} index\n   */\n  mapIdToIndex: function mapIdToIndex(id) {\n    // A feature is implemented:\n    // index is monotone increasing with the sequence of\n    // input id at the first time.\n    // This feature can make sure that each data item and its\n    // mapped color have the same index between data list and\n    // color list at the beginning, which is useful for user\n    // to adjust data-color mapping.\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    var idIndexMap = this._idIndexMap;\n\n    if (!idIndexMap) {\n      idIndexMap = this._idIndexMap = zrUtil.createHashMap();\n      /**\n       * @private\n       * @type {number}\n       */\n\n      this._idIndexMapCount = 0;\n    }\n\n    var index = idIndexMap.get(id);\n\n    if (index == null) {\n      idIndexMap.set(id, index = this._idIndexMapCount++);\n    }\n\n    return index;\n  },\n  getViewRoot: function getViewRoot() {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function resetViewRoot(viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n/**\n * set default to level configuration\n */\n\n\nfunction setDefault(levels, ecModel) {\n  var globalColorList = ecModel.get('color');\n\n  if (!globalColorList) {\n    return;\n  }\n\n  levels = levels || [];\n  var hasColorDefine;\n  zrUtil.each(levels, function (levelDefine) {\n    var model = new Model(levelDefine);\n    var modelColor = model.get('color');\n\n    if (model.get('itemStyle.color') || modelColor && modelColor !== 'none') {\n      hasColorDefine = true;\n    }\n  });\n\n  if (!hasColorDefine) {\n    var level0 = levels[0] || (levels[0] = {});\n    level0.color = globalColorList.slice();\n  }\n\n  return levels;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar helper = require(\"../helper/treeHelper\");\n\nvar Breadcrumb = require(\"./Breadcrumb\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar animationUtil = require(\"../../util/animation\");\n\nvar makeStyleMapper = require(\"../../model/mixin/makeStyleMapper\");\n\nvar _format = require(\"../../util/format\");\n\nvar windowOpen = _format.windowOpen;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar Group = graphic.Group;\nvar Rect = graphic.Rect;\nvar each = zrUtil.each;\nvar DRAG_THRESHOLD = 3;\nvar PATH_LABEL_NOAMAL = ['label'];\nvar PATH_LABEL_EMPHASIS = ['emphasis', 'label'];\nvar PATH_UPPERLABEL_NORMAL = ['upperLabel'];\nvar PATH_UPPERLABEL_EMPHASIS = ['emphasis', 'upperLabel'];\nvar Z_BASE = 10; // Should bigger than every z.\n\nvar Z_BG = 1;\nvar Z_CONTENT = 2;\nvar getItemStyleEmphasis = makeStyleMapper([['fill', 'color'], // `borderColor` and `borderWidth` has been occupied,\n// so use `stroke` to indicate the stroke of the rect.\n['stroke', 'strokeColor'], ['lineWidth', 'strokeWidth'], ['shadowBlur'], ['shadowOffsetX'], ['shadowOffsetY'], ['shadowColor']]);\n\nvar getItemStyleNormal = function getItemStyleNormal(model) {\n  // Normal style props should include emphasis style props.\n  var itemStyle = getItemStyleEmphasis(model); // Clear styles set by emphasis.\n\n  itemStyle.stroke = itemStyle.fill = itemStyle.lineWidth = null;\n  return itemStyle;\n};\n\nvar _default = echarts.extendChartView({\n  type: 'treemap',\n\n  /**\n   * @override\n   */\n  init: function init(o, api) {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this._containerGroup;\n    /**\n     * @private\n     * @type {Object.<string, Array.<module:zrender/container/Group>>}\n     */\n\n    this._storage = createStorage();\n    /**\n     * @private\n     * @type {module:echarts/data/Tree}\n     */\n\n    this._oldTree;\n    /**\n     * @private\n     * @type {module:echarts/chart/treemap/Breadcrumb}\n     */\n\n    this._breadcrumb;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/RoamController}\n     */\n\n    this._controller;\n    /**\n     * 'ready', 'animating'\n     * @private\n     */\n\n    this._state = 'ready';\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var models = ecModel.findComponents({\n      mainType: 'series',\n      subType: 'treemap',\n      query: payload\n    });\n\n    if (zrUtil.indexOf(models, seriesModel) < 0) {\n      return;\n    }\n\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var payloadType = payload && payload.type;\n    var layoutInfo = seriesModel.layoutInfo;\n    var isInit = !this._oldTree;\n    var thisStorage = this._storage; // Mark new root when action is treemapRootToNode.\n\n    var reRoot = payloadType === 'treemapRootToNode' && targetInfo && thisStorage ? {\n      rootNodeGroup: thisStorage.nodeGroup[targetInfo.node.getRawIndex()],\n      direction: payload.direction\n    } : null;\n\n    var containerGroup = this._giveContainerGroup(layoutInfo);\n\n    var renderResult = this._doRender(containerGroup, seriesModel, reRoot);\n\n    !isInit && (!payloadType || payloadType === 'treemapZoomToNode' || payloadType === 'treemapRootToNode') ? this._doAnimation(containerGroup, renderResult, seriesModel, reRoot) : renderResult.renderFinally();\n\n    this._resetController(api);\n\n    this._renderBreadcrumb(seriesModel, api, targetInfo);\n  },\n\n  /**\n   * @private\n   */\n  _giveContainerGroup: function _giveContainerGroup(layoutInfo) {\n    var containerGroup = this._containerGroup;\n\n    if (!containerGroup) {\n      // FIXME\n      // 加一层containerGroup是为了clip，但是现在clip功能并没有实现。\n      containerGroup = this._containerGroup = new Group();\n\n      this._initEvents(containerGroup);\n\n      this.group.add(containerGroup);\n    }\n\n    containerGroup.attr('position', [layoutInfo.x, layoutInfo.y]);\n    return containerGroup;\n  },\n\n  /**\n   * @private\n   */\n  _doRender: function _doRender(containerGroup, seriesModel, reRoot) {\n    var thisTree = seriesModel.getData().tree;\n    var oldTree = this._oldTree; // Clear last shape records.\n\n    var lastsForAnimation = createStorage();\n    var thisStorage = createStorage();\n    var oldStorage = this._storage;\n    var willInvisibleEls = [];\n    var doRenderNode = zrUtil.curry(renderNode, seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls); // Notice: when thisTree and oldTree are the same tree (see list.cloneShallow),\n    // the oldTree is actually losted, so we can not find all of the old graphic\n    // elements from tree. So we use this stragegy: make element storage, move\n    // from old storage to new storage, clear old storage.\n\n    dualTravel(thisTree.root ? [thisTree.root] : [], oldTree && oldTree.root ? [oldTree.root] : [], containerGroup, thisTree === oldTree || !oldTree, 0); // Process all removing.\n\n    var willDeleteEls = clearStorage(oldStorage);\n    this._oldTree = thisTree;\n    this._storage = thisStorage;\n    return {\n      lastsForAnimation: lastsForAnimation,\n      willDeleteEls: willDeleteEls,\n      renderFinally: renderFinally\n    };\n\n    function dualTravel(thisViewChildren, oldViewChildren, parentGroup, sameTree, depth) {\n      // When 'render' is triggered by action,\n      // 'this' and 'old' may be the same tree,\n      // we use rawIndex in that case.\n      if (sameTree) {\n        oldViewChildren = thisViewChildren;\n        each(thisViewChildren, function (child, index) {\n          !child.isRemoved() && processNode(index, index);\n        });\n      } // Diff hierarchically (diff only in each subtree, but not whole).\n      // because, consistency of view is important.\n      else {\n          new DataDiffer(oldViewChildren, thisViewChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n        }\n\n      function getKey(node) {\n        // Identify by name or raw index.\n        return node.getId();\n      }\n\n      function processNode(newIndex, oldIndex) {\n        var thisNode = newIndex != null ? thisViewChildren[newIndex] : null;\n        var oldNode = oldIndex != null ? oldViewChildren[oldIndex] : null;\n        var group = doRenderNode(thisNode, oldNode, parentGroup, depth);\n        group && dualTravel(thisNode && thisNode.viewChildren || [], oldNode && oldNode.viewChildren || [], group, sameTree, depth + 1);\n      }\n    }\n\n    function clearStorage(storage) {\n      var willDeleteEls = createStorage();\n      storage && each(storage, function (store, storageName) {\n        var delEls = willDeleteEls[storageName];\n        each(store, function (el) {\n          el && (delEls.push(el), el.__tmWillDelete = 1);\n        });\n      });\n      return willDeleteEls;\n    }\n\n    function renderFinally() {\n      each(willDeleteEls, function (els) {\n        each(els, function (el) {\n          el.parent && el.parent.remove(el);\n        });\n      });\n      each(willInvisibleEls, function (el) {\n        el.invisible = true; // Setting invisible is for optimizing, so no need to set dirty,\n        // just mark as invisible.\n\n        el.dirty();\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _doAnimation: function _doAnimation(containerGroup, renderResult, seriesModel, reRoot) {\n    if (!seriesModel.get('animation')) {\n      return;\n    }\n\n    var duration = seriesModel.get('animationDurationUpdate');\n    var easing = seriesModel.get('animationEasing');\n    var animationWrap = animationUtil.createWrap(); // Make delete animations.\n\n    each(renderResult.willDeleteEls, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        if (el.invisible) {\n          return;\n        }\n\n        var parent = el.parent; // Always has parent, and parent is nodeGroup.\n\n        var target;\n\n        if (reRoot && reRoot.direction === 'drillDown') {\n          target = parent === reRoot.rootNodeGroup // This is the content element of view root.\n          // Only `content` will enter this branch, because\n          // `background` and `nodeGroup` will not be deleted.\n          ? {\n            shape: {\n              x: 0,\n              y: 0,\n              width: parent.__tmNodeWidth,\n              height: parent.__tmNodeHeight\n            },\n            style: {\n              opacity: 0\n            } // Others.\n\n          } : {\n            style: {\n              opacity: 0\n            }\n          };\n        } else {\n          var targetX = 0;\n          var targetY = 0;\n\n          if (!parent.__tmWillDelete) {\n            // Let node animate to right-bottom corner, cooperating with fadeout,\n            // which is appropriate for user understanding.\n            // Divided by 2 for reRoot rolling up effect.\n            targetX = parent.__tmNodeWidth / 2;\n            targetY = parent.__tmNodeHeight / 2;\n          }\n\n          target = storageName === 'nodeGroup' ? {\n            position: [targetX, targetY],\n            style: {\n              opacity: 0\n            }\n          } : {\n            shape: {\n              x: targetX,\n              y: targetY,\n              width: 0,\n              height: 0\n            },\n            style: {\n              opacity: 0\n            }\n          };\n        }\n\n        target && animationWrap.add(el, target, duration, easing);\n      });\n    }); // Make other animations\n\n    each(this._storage, function (store, storageName) {\n      each(store, function (el, rawIndex) {\n        var last = renderResult.lastsForAnimation[storageName][rawIndex];\n        var target = {};\n\n        if (!last) {\n          return;\n        }\n\n        if (storageName === 'nodeGroup') {\n          if (last.old) {\n            target.position = el.position.slice();\n            el.attr('position', last.old);\n          }\n        } else {\n          if (last.old) {\n            target.shape = zrUtil.extend({}, el.shape);\n            el.setShape(last.old);\n          }\n\n          if (last.fadein) {\n            el.setStyle('opacity', 0);\n            target.style = {\n              opacity: 1\n            };\n          } // When animation is stopped for succedent animation starting,\n          // el.style.opacity might not be 1\n          else if (el.style.opacity !== 1) {\n              target.style = {\n                opacity: 1\n              };\n            }\n        }\n\n        animationWrap.add(el, target, duration, easing);\n      });\n    }, this);\n    this._state = 'animating';\n    animationWrap.done(bind(function () {\n      this._state = 'ready';\n      renderResult.renderFinally();\n    }, this)).start();\n  },\n\n  /**\n   * @private\n   */\n  _resetController: function _resetController(api) {\n    var controller = this._controller; // Init controller.\n\n    if (!controller) {\n      controller = this._controller = new RoamController(api.getZr());\n      controller.enable(this.seriesModel.get('roam'));\n      controller.on('pan', bind(this._onPan, this));\n      controller.on('zoom', bind(this._onZoom, this));\n    }\n\n    var rect = new BoundingRect(0, 0, api.getWidth(), api.getHeight());\n    controller.setPointerChecker(function (e, x, y) {\n      return rect.contain(x, y);\n    });\n  },\n\n  /**\n   * @private\n   */\n  _clearController: function _clearController() {\n    var controller = this._controller;\n\n    if (controller) {\n      controller.dispose();\n      controller = null;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onPan: function _onPan(e) {\n    if (this._state !== 'animating' && (Math.abs(e.dx) > DRAG_THRESHOLD || Math.abs(e.dy) > DRAG_THRESHOLD)) {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      this.api.dispatchAction({\n        type: 'treemapMove',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rootLayout.x + e.dx,\n          y: rootLayout.y + e.dy,\n          width: rootLayout.width,\n          height: rootLayout.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _onZoom: function _onZoom(e) {\n    var mouseX = e.originX;\n    var mouseY = e.originY;\n\n    if (this._state !== 'animating') {\n      // These param must not be cached.\n      var root = this.seriesModel.getData().tree.root;\n\n      if (!root) {\n        return;\n      }\n\n      var rootLayout = root.getLayout();\n\n      if (!rootLayout) {\n        return;\n      }\n\n      var rect = new BoundingRect(rootLayout.x, rootLayout.y, rootLayout.width, rootLayout.height);\n      var layoutInfo = this.seriesModel.layoutInfo; // Transform mouse coord from global to containerGroup.\n\n      mouseX -= layoutInfo.x;\n      mouseY -= layoutInfo.y; // Scale root bounding rect.\n\n      var m = matrix.create();\n      matrix.translate(m, m, [-mouseX, -mouseY]);\n      matrix.scale(m, m, [e.scale, e.scale]);\n      matrix.translate(m, m, [mouseX, mouseY]);\n      rect.applyTransform(m);\n      this.api.dispatchAction({\n        type: 'treemapRender',\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        rootRect: {\n          x: rect.x,\n          y: rect.y,\n          width: rect.width,\n          height: rect.height\n        }\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _initEvents: function _initEvents(containerGroup) {\n    containerGroup.on('click', function (e) {\n      if (this._state !== 'ready') {\n        return;\n      }\n\n      var nodeClick = this.seriesModel.get('nodeClick', true);\n\n      if (!nodeClick) {\n        return;\n      }\n\n      var targetInfo = this.findTarget(e.offsetX, e.offsetY);\n\n      if (!targetInfo) {\n        return;\n      }\n\n      var node = targetInfo.node;\n\n      if (node.getLayout().isLeafRoot) {\n        this._rootToNode(targetInfo);\n      } else {\n        if (nodeClick === 'zoomToNode') {\n          this._zoomToNode(targetInfo);\n        } else if (nodeClick === 'link') {\n          var itemModel = node.hostTree.data.getItemModel(node.dataIndex);\n          var link = itemModel.get('link', true);\n          var linkTarget = itemModel.get('target', true) || 'blank';\n          link && windowOpen(link, linkTarget);\n        }\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderBreadcrumb: function _renderBreadcrumb(seriesModel, api, targetInfo) {\n    if (!targetInfo) {\n      targetInfo = seriesModel.get('leafDepth', true) != null ? {\n        node: seriesModel.getViewRoot() // FIXME\n        // better way?\n        // Find breadcrumb tail on center of containerGroup.\n\n      } : this.findTarget(api.getWidth() / 2, api.getHeight() / 2);\n\n      if (!targetInfo) {\n        targetInfo = {\n          node: seriesModel.getData().tree.root\n        };\n      }\n    }\n\n    (this._breadcrumb || (this._breadcrumb = new Breadcrumb(this.group))).render(seriesModel, api, targetInfo.node, bind(onSelect, this));\n\n    function onSelect(node) {\n      if (this._state !== 'animating') {\n        helper.aboveViewRoot(seriesModel.getViewRoot(), node) ? this._rootToNode({\n          node: node\n        }) : this._zoomToNode({\n          node: node\n        });\n      }\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearController();\n\n    this._containerGroup && this._containerGroup.removeAll();\n    this._storage = createStorage();\n    this._state = 'ready';\n    this._breadcrumb && this._breadcrumb.remove();\n  },\n  dispose: function dispose() {\n    this._clearController();\n  },\n\n  /**\n   * @private\n   */\n  _zoomToNode: function _zoomToNode(targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapZoomToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function _rootToNode(targetInfo) {\n    this.api.dispatchAction({\n      type: 'treemapRootToNode',\n      from: this.uid,\n      seriesId: this.seriesModel.id,\n      targetNode: targetInfo.node\n    });\n  },\n\n  /**\n   * @public\n   * @param {number} x Global coord x.\n   * @param {number} y Global coord y.\n   * @return {Object} info If not found, return undefined;\n   * @return {number} info.node Target node.\n   * @return {number} info.offsetX x refer to target node.\n   * @return {number} info.offsetY y refer to target node.\n   */\n  findTarget: function findTarget(x, y) {\n    var targetInfo;\n    var viewRoot = this.seriesModel.getViewRoot();\n    viewRoot.eachNode({\n      attr: 'viewChildren',\n      order: 'preorder'\n    }, function (node) {\n      var bgEl = this._storage.background[node.getRawIndex()]; // If invisible, there might be no element.\n\n\n      if (bgEl) {\n        var point = bgEl.transformCoordToLocal(x, y);\n        var shape = bgEl.shape; // For performance consideration, dont use 'getBoundingRect'.\n\n        if (shape.x <= point[0] && point[0] <= shape.x + shape.width && shape.y <= point[1] && point[1] <= shape.y + shape.height) {\n          targetInfo = {\n            node: node,\n            offsetX: point[0],\n            offsetY: point[1]\n          };\n        } else {\n          return false; // Suppress visit subtree.\n        }\n      }\n    }, this);\n    return targetInfo;\n  }\n});\n/**\n * @inner\n */\n\n\nfunction createStorage() {\n  return {\n    nodeGroup: [],\n    background: [],\n    content: []\n  };\n}\n/**\n * @inner\n * @return Return undefined means do not travel further.\n */\n\n\nfunction renderNode(seriesModel, thisStorage, oldStorage, reRoot, lastsForAnimation, willInvisibleEls, thisNode, oldNode, parentGroup, depth) {\n  // Whether under viewRoot.\n  if (!thisNode) {\n    // Deleting nodes will be performed finally. This method just find\n    // element from old storage, or create new element, set them to new\n    // storage, and set styles.\n    return;\n  } // -------------------------------------------------------------------\n  // Start of closure variables available in \"Procedures in renderNode\".\n\n\n  var thisLayout = thisNode.getLayout();\n  var data = seriesModel.getData(); // Only for enabling highlight/downplay. Clear firstly.\n  // Because some node will not be rendered.\n\n  data.setItemGraphicEl(thisNode.dataIndex, null);\n\n  if (!thisLayout || !thisLayout.isInView) {\n    return;\n  }\n\n  var thisWidth = thisLayout.width;\n  var thisHeight = thisLayout.height;\n  var borderWidth = thisLayout.borderWidth;\n  var thisInvisible = thisLayout.invisible;\n  var thisRawIndex = thisNode.getRawIndex();\n  var oldRawIndex = oldNode && oldNode.getRawIndex();\n  var thisViewChildren = thisNode.viewChildren;\n  var upperHeight = thisLayout.upperHeight;\n  var isParent = thisViewChildren && thisViewChildren.length;\n  var itemStyleNormalModel = thisNode.getModel('itemStyle');\n  var itemStyleEmphasisModel = thisNode.getModel('emphasis.itemStyle'); // End of closure ariables available in \"Procedures in renderNode\".\n  // -----------------------------------------------------------------\n  // Node group\n\n  var group = giveGraphic('nodeGroup', Group);\n\n  if (!group) {\n    return;\n  }\n\n  parentGroup.add(group); // x,y are not set when el is above view root.\n\n  group.attr('position', [thisLayout.x || 0, thisLayout.y || 0]);\n  group.__tmNodeWidth = thisWidth;\n  group.__tmNodeHeight = thisHeight;\n\n  if (thisLayout.isAboveViewRoot) {\n    return group;\n  }\n\n  var nodeModel = thisNode.getModel(); // Background\n\n  var bg = giveGraphic('background', Rect, depth, Z_BG);\n  bg && renderBackground(group, bg, isParent && thisLayout.upperLabelHeight); // No children, render content.\n\n  if (isParent) {\n    // Because of the implementation about \"traverse\" in graphic hover style, we\n    // can not set hover listener on the \"group\" of non-leaf node. Otherwise the\n    // hover event from the descendents will be listenered.\n    if (graphic.isHighDownDispatcher(group)) {\n      graphic.setAsHighDownDispatcher(group, false);\n    }\n\n    if (bg) {\n      graphic.setAsHighDownDispatcher(bg, true); // Only for enabling highlight/downplay.\n\n      data.setItemGraphicEl(thisNode.dataIndex, bg);\n    }\n  } else {\n    var content = giveGraphic('content', Rect, depth, Z_CONTENT);\n    content && renderContent(group, content);\n\n    if (bg && graphic.isHighDownDispatcher(bg)) {\n      graphic.setAsHighDownDispatcher(bg, false);\n    }\n\n    graphic.setAsHighDownDispatcher(group, true); // Only for enabling highlight/downplay.\n\n    data.setItemGraphicEl(thisNode.dataIndex, group);\n  }\n\n  return group; // ----------------------------\n  // | Procedures in renderNode |\n  // ----------------------------\n\n  function renderBackground(group, bg, useUpperLabel) {\n    // For tooltip.\n    bg.dataIndex = thisNode.dataIndex;\n    bg.seriesIndex = seriesModel.seriesIndex;\n    bg.setShape({\n      x: 0,\n      y: 0,\n      width: thisWidth,\n      height: thisHeight\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(bg);\n    } else {\n      bg.invisible = false;\n      var visualBorderColor = thisNode.getVisual('borderColor', true);\n      var emphasisBorderColor = itemStyleEmphasisModel.get('borderColor');\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualBorderColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      emphasisStyle.fill = emphasisBorderColor;\n\n      if (useUpperLabel) {\n        var upperLabelWidth = thisWidth - 2 * borderWidth;\n        prepareText(normalStyle, emphasisStyle, visualBorderColor, upperLabelWidth, upperHeight, {\n          x: borderWidth,\n          y: 0,\n          width: upperLabelWidth,\n          height: upperHeight\n        });\n      } // For old bg.\n      else {\n          normalStyle.text = emphasisStyle.text = null;\n        }\n\n      bg.setStyle(normalStyle);\n      graphic.setElementHoverStyle(bg, emphasisStyle);\n    }\n\n    group.add(bg);\n  }\n\n  function renderContent(group, content) {\n    // For tooltip.\n    content.dataIndex = thisNode.dataIndex;\n    content.seriesIndex = seriesModel.seriesIndex;\n    var contentWidth = Math.max(thisWidth - 2 * borderWidth, 0);\n    var contentHeight = Math.max(thisHeight - 2 * borderWidth, 0);\n    content.culling = true;\n    content.setShape({\n      x: borderWidth,\n      y: borderWidth,\n      width: contentWidth,\n      height: contentHeight\n    });\n\n    if (thisInvisible) {\n      // If invisible, do not set visual, otherwise the element will\n      // change immediately before animation. We think it is OK to\n      // remain its origin color when moving out of the view window.\n      processInvisible(content);\n    } else {\n      content.invisible = false;\n      var visualColor = thisNode.getVisual('color', true);\n      var normalStyle = getItemStyleNormal(itemStyleNormalModel);\n      normalStyle.fill = visualColor;\n      var emphasisStyle = getItemStyleEmphasis(itemStyleEmphasisModel);\n      prepareText(normalStyle, emphasisStyle, visualColor, contentWidth, contentHeight);\n      content.setStyle(normalStyle);\n      graphic.setElementHoverStyle(content, emphasisStyle);\n    }\n\n    group.add(content);\n  }\n\n  function processInvisible(element) {\n    // Delay invisible setting utill animation finished,\n    // avoid element vanish suddenly before animation.\n    !element.invisible && willInvisibleEls.push(element);\n  }\n\n  function prepareText(normalStyle, emphasisStyle, visualColor, width, height, upperLabelRect) {\n    var defaultText = nodeModel.get('name');\n    var normalLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_NORMAL : PATH_LABEL_NOAMAL);\n    var emphasisLabelModel = nodeModel.getModel(upperLabelRect ? PATH_UPPERLABEL_EMPHASIS : PATH_LABEL_EMPHASIS);\n    var isShow = normalLabelModel.getShallow('show');\n    graphic.setLabelStyle(normalStyle, emphasisStyle, normalLabelModel, emphasisLabelModel, {\n      defaultText: isShow ? defaultText : null,\n      autoColor: visualColor,\n      isRectText: true,\n      labelFetcher: seriesModel,\n      labelDataIndex: thisNode.dataIndex,\n      labelProp: upperLabelRect ? 'upperLabel' : 'label'\n    });\n    addDrillDownIcon(normalStyle, upperLabelRect, thisLayout);\n    addDrillDownIcon(emphasisStyle, upperLabelRect, thisLayout);\n    upperLabelRect && (normalStyle.textRect = zrUtil.clone(upperLabelRect));\n    normalStyle.truncate = isShow && normalLabelModel.get('ellipsis') ? {\n      outerWidth: width,\n      outerHeight: height,\n      minChar: 2\n    } : null;\n  }\n\n  function addDrillDownIcon(style, upperLabelRect, thisLayout) {\n    var text = style.text;\n\n    if (!upperLabelRect && thisLayout.isLeafRoot && text != null) {\n      var iconChar = seriesModel.get('drillDownIcon', true);\n      style.text = iconChar ? iconChar + ' ' + text : text;\n    }\n  }\n\n  function giveGraphic(storageName, Ctor, depth, z) {\n    var element = oldRawIndex != null && oldStorage[storageName][oldRawIndex];\n    var lasts = lastsForAnimation[storageName];\n\n    if (element) {\n      // Remove from oldStorage\n      oldStorage[storageName][oldRawIndex] = null;\n      prepareAnimationWhenHasOld(lasts, element, storageName);\n    } // If invisible and no old element, do not create new element (for optimizing).\n    else if (!thisInvisible) {\n        element = new Ctor({\n          z: calculateZ(depth, z)\n        });\n        element.__tmDepth = depth;\n        element.__tmStorageName = storageName;\n        prepareAnimationWhenNoOld(lasts, element, storageName);\n      } // Set to thisStorage\n\n\n    return thisStorage[storageName][thisRawIndex] = element;\n  }\n\n  function prepareAnimationWhenHasOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    lastCfg.old = storageName === 'nodeGroup' ? element.position.slice() : zrUtil.extend({}, element.shape);\n  } // If a element is new, we need to find the animation start point carefully,\n  // otherwise it will looks strange when 'zoomToNode'.\n\n\n  function prepareAnimationWhenNoOld(lasts, element, storageName) {\n    var lastCfg = lasts[thisRawIndex] = {};\n    var parentNode = thisNode.parentNode;\n\n    if (parentNode && (!reRoot || reRoot.direction === 'drillDown')) {\n      var parentOldX = 0;\n      var parentOldY = 0; // New nodes appear from right-bottom corner in 'zoomToNode' animation.\n      // For convenience, get old bounding rect from background.\n\n      var parentOldBg = lastsForAnimation.background[parentNode.getRawIndex()];\n\n      if (!reRoot && parentOldBg && parentOldBg.old) {\n        parentOldX = parentOldBg.old.width;\n        parentOldY = parentOldBg.old.height;\n      } // When no parent old shape found, its parent is new too,\n      // so we can just use {x:0, y:0}.\n\n\n      lastCfg.old = storageName === 'nodeGroup' ? [0, parentOldY] : {\n        x: parentOldX,\n        y: parentOldY,\n        width: 0,\n        height: 0\n      };\n    } // Fade in, user can be aware that these nodes are new.\n\n\n    lastCfg.fadein = storageName !== 'nodeGroup';\n  }\n} // We can not set all backgroud with the same z, Because the behaviour of\n// drill down and roll up differ background creation sequence from tree\n// hierarchy sequence, which cause that lowser background element overlap\n// upper ones. So we calculate z based on depth.\n// Moreover, we try to shrink down z interval to [0, 1] to avoid that\n// treemap with large z overlaps other components.\n\n\nfunction calculateZ(depth, zInLevel) {\n  var zb = depth * Z_BASE + zInLevel;\n  return (zb - 1) / zb;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar TEXT_PADDING = 8;\nvar ITEM_GAP = 8;\nvar ARRAY_LENGTH = 5;\n\nfunction Breadcrumb(containerGroup) {\n  /**\n   * @private\n   * @type {module:zrender/container/Group}\n   */\n  this.group = new graphic.Group();\n  containerGroup.add(this.group);\n}\n\nBreadcrumb.prototype = {\n  constructor: Breadcrumb,\n  render: function render(seriesModel, api, targetNode, onSelect) {\n    var model = seriesModel.getModel('breadcrumb');\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    if (!model.get('show') || !targetNode) {\n      return;\n    }\n\n    var normalStyleModel = model.getModel('itemStyle'); // var emphasisStyleModel = model.getModel('emphasis.itemStyle');\n\n    var textStyleModel = normalStyleModel.getModel('textStyle');\n    var layoutParam = {\n      pos: {\n        left: model.get('left'),\n        right: model.get('right'),\n        top: model.get('top'),\n        bottom: model.get('bottom')\n      },\n      box: {\n        width: api.getWidth(),\n        height: api.getHeight()\n      },\n      emptyItemWidth: model.get('emptyItemWidth'),\n      totalWidth: 0,\n      renderList: []\n    };\n\n    this._prepare(targetNode, layoutParam, textStyleModel);\n\n    this._renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect);\n\n    layout.positionElement(thisGroup, layoutParam.pos, layoutParam.box);\n  },\n\n  /**\n   * Prepare render list and total width\n   * @private\n   */\n  _prepare: function _prepare(targetNode, layoutParam, textStyleModel) {\n    for (var node = targetNode; node; node = node.parentNode) {\n      var text = node.getModel().get('name');\n      var textRect = textStyleModel.getTextRect(text);\n      var itemWidth = Math.max(textRect.width + TEXT_PADDING * 2, layoutParam.emptyItemWidth);\n      layoutParam.totalWidth += itemWidth + ITEM_GAP;\n      layoutParam.renderList.push({\n        node: node,\n        text: text,\n        width: itemWidth\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderContent: function _renderContent(seriesModel, layoutParam, normalStyleModel, textStyleModel, onSelect) {\n    // Start rendering.\n    var lastX = 0;\n    var emptyItemWidth = layoutParam.emptyItemWidth;\n    var height = seriesModel.get('breadcrumb.height');\n    var availableSize = layout.getAvailableSize(layoutParam.pos, layoutParam.box);\n    var totalWidth = layoutParam.totalWidth;\n    var renderList = layoutParam.renderList;\n\n    for (var i = renderList.length - 1; i >= 0; i--) {\n      var item = renderList[i];\n      var itemNode = item.node;\n      var itemWidth = item.width;\n      var text = item.text; // Hdie text and shorten width if necessary.\n\n      if (totalWidth > availableSize.width) {\n        totalWidth -= itemWidth - emptyItemWidth;\n        itemWidth = emptyItemWidth;\n        text = null;\n      }\n\n      var el = new graphic.Polygon({\n        shape: {\n          points: makeItemPoints(lastX, 0, itemWidth, height, i === renderList.length - 1, i === 0)\n        },\n        style: zrUtil.defaults(normalStyleModel.getItemStyle(), {\n          lineJoin: 'bevel',\n          text: text,\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        }),\n        z: 10,\n        onclick: zrUtil.curry(onSelect, itemNode)\n      });\n      this.group.add(el);\n      packEventData(el, seriesModel, itemNode);\n      lastX += itemWidth + ITEM_GAP;\n    }\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this.group.removeAll();\n  }\n};\n\nfunction makeItemPoints(x, y, itemWidth, itemHeight, head, tail) {\n  var points = [[head ? x : x - ARRAY_LENGTH, y], [x + itemWidth, y], [x + itemWidth, y + itemHeight], [head ? x : x - ARRAY_LENGTH, y + itemHeight]];\n  !tail && points.splice(2, 0, [x + itemWidth + ARRAY_LENGTH, y + itemHeight / 2]);\n  !head && points.push([x, y + itemHeight / 2]);\n  return points;\n} // Package custom mouse event.\n\n\nfunction packEventData(el, seriesModel, itemNode) {\n  el.eventData = {\n    componentType: 'series',\n    componentSubType: 'treemap',\n    componentIndex: seriesModel.componentIndex,\n    seriesIndex: seriesModel.componentIndex,\n    seriesName: seriesModel.name,\n    seriesType: 'treemap',\n    selfType: 'breadcrumb',\n    // Distinguish with click event on treemap node.\n    nodeData: {\n      dataIndex: itemNode && itemNode.dataIndex,\n      name: itemNode && itemNode.name\n    },\n    treePathInfo: itemNode && wrapTreePathInfo(itemNode, seriesModel)\n  };\n}\n\nvar _default = Breadcrumb;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Treemap action\n */\n\n\nvar noop = function noop() {};\n\nvar actionTypes = ['treemapZoomToNode', 'treemapRender', 'treemapMove'];\n\nfor (var i = 0; i < actionTypes.length; i++) {\n  echarts.registerAction({\n    type: actionTypes[i],\n    update: 'updateView'\n  }, noop);\n}\n\necharts.registerAction({\n  type: 'treemapRootToNode',\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'treemap',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrColor = require(\"zrender/lib/tool/color\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar isArray = zrUtil.isArray;\nvar ITEM_STYLE_NORMAL = 'itemStyle';\nvar _default = {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    var tree = seriesModel.getData().tree;\n    var root = tree.root;\n    var seriesItemStyleModel = seriesModel.getModel(ITEM_STYLE_NORMAL);\n\n    if (root.isRemoved()) {\n      return;\n    }\n\n    var levelItemStyles = zrUtil.map(tree.levelModels, function (levelModel) {\n      return levelModel ? levelModel.get(ITEM_STYLE_NORMAL) : null;\n    });\n    travelTree(root, // Visual should calculate from tree root but not view root.\n    {}, levelItemStyles, seriesItemStyleModel, seriesModel.getViewRoot().getAncestors(), seriesModel);\n  }\n};\n\nfunction travelTree(node, designatedVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel) {\n  var nodeModel = node.getModel();\n  var nodeLayout = node.getLayout(); // Optimize\n\n  if (!nodeLayout || nodeLayout.invisible || !nodeLayout.isInView) {\n    return;\n  }\n\n  var nodeItemStyleModel = node.getModel(ITEM_STYLE_NORMAL);\n  var levelItemStyle = levelItemStyles[node.depth];\n  var visuals = buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel); // calculate border color\n\n  var borderColor = nodeItemStyleModel.get('borderColor');\n  var borderColorSaturation = nodeItemStyleModel.get('borderColorSaturation');\n  var thisNodeColor;\n\n  if (borderColorSaturation != null) {\n    // For performance, do not always execute 'calculateColor'.\n    thisNodeColor = calculateColor(visuals, node);\n    borderColor = calculateBorderColor(borderColorSaturation, thisNodeColor);\n  }\n\n  node.setVisual('borderColor', borderColor);\n  var viewChildren = node.viewChildren;\n\n  if (!viewChildren || !viewChildren.length) {\n    thisNodeColor = calculateColor(visuals, node); // Apply visual to this node.\n\n    node.setVisual('color', thisNodeColor);\n  } else {\n    var mapping = buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren); // Designate visual to children.\n\n    zrUtil.each(viewChildren, function (child, index) {\n      // If higher than viewRoot, only ancestors of viewRoot is needed to visit.\n      if (child.depth >= viewRootAncestors.length || child === viewRootAncestors[child.depth]) {\n        var childVisual = mapVisual(nodeModel, visuals, child, index, mapping, seriesModel);\n        travelTree(child, childVisual, levelItemStyles, seriesItemStyleModel, viewRootAncestors, seriesModel);\n      }\n    });\n  }\n}\n\nfunction buildVisuals(nodeItemStyleModel, designatedVisual, levelItemStyle, seriesItemStyleModel) {\n  var visuals = zrUtil.extend({}, designatedVisual);\n  zrUtil.each(['color', 'colorAlpha', 'colorSaturation'], function (visualName) {\n    // Priority: thisNode > thisLevel > parentNodeDesignated > seriesModel\n    var val = nodeItemStyleModel.get(visualName, true); // Ignore parent\n\n    val == null && levelItemStyle && (val = levelItemStyle[visualName]);\n    val == null && (val = designatedVisual[visualName]);\n    val == null && (val = seriesItemStyleModel.get(visualName));\n    val != null && (visuals[visualName] = val);\n  });\n  return visuals;\n}\n\nfunction calculateColor(visuals) {\n  var color = getValueVisualDefine(visuals, 'color');\n\n  if (color) {\n    var colorAlpha = getValueVisualDefine(visuals, 'colorAlpha');\n    var colorSaturation = getValueVisualDefine(visuals, 'colorSaturation');\n\n    if (colorSaturation) {\n      color = zrColor.modifyHSL(color, null, null, colorSaturation);\n    }\n\n    if (colorAlpha) {\n      color = zrColor.modifyAlpha(color, colorAlpha);\n    }\n\n    return color;\n  }\n}\n\nfunction calculateBorderColor(borderColorSaturation, thisNodeColor) {\n  return thisNodeColor != null ? zrColor.modifyHSL(thisNodeColor, null, null, borderColorSaturation) : null;\n}\n\nfunction getValueVisualDefine(visuals, name) {\n  var value = visuals[name];\n\n  if (value != null && value !== 'none') {\n    return value;\n  }\n}\n\nfunction buildVisualMapping(node, nodeModel, nodeLayout, nodeItemStyleModel, visuals, viewChildren) {\n  if (!viewChildren || !viewChildren.length) {\n    return;\n  }\n\n  var rangeVisual = getRangeVisual(nodeModel, 'color') || visuals.color != null && visuals.color !== 'none' && (getRangeVisual(nodeModel, 'colorAlpha') || getRangeVisual(nodeModel, 'colorSaturation'));\n\n  if (!rangeVisual) {\n    return;\n  }\n\n  var visualMin = nodeModel.get('visualMin');\n  var visualMax = nodeModel.get('visualMax');\n  var dataExtent = nodeLayout.dataExtent.slice();\n  visualMin != null && visualMin < dataExtent[0] && (dataExtent[0] = visualMin);\n  visualMax != null && visualMax > dataExtent[1] && (dataExtent[1] = visualMax);\n  var colorMappingBy = nodeModel.get('colorMappingBy');\n  var opt = {\n    type: rangeVisual.name,\n    dataExtent: dataExtent,\n    visual: rangeVisual.range\n  };\n\n  if (opt.type === 'color' && (colorMappingBy === 'index' || colorMappingBy === 'id')) {\n    opt.mappingMethod = 'category';\n    opt.loop = true; // categories is ordinal, so do not set opt.categories.\n  } else {\n    opt.mappingMethod = 'linear';\n  }\n\n  var mapping = new VisualMapping(opt);\n  mapping.__drColorMappingBy = colorMappingBy;\n  return mapping;\n} // Notice: If we dont have the attribute 'colorRange', but only use\n// attribute 'color' to represent both concepts of 'colorRange' and 'color',\n// (It means 'colorRange' when 'color' is Array, means 'color' when not array),\n// this problem will be encountered:\n// If a level-1 node dont have children, and its siblings has children,\n// and colorRange is set on level-1, then the node can not be colored.\n// So we separate 'colorRange' and 'color' to different attributes.\n\n\nfunction getRangeVisual(nodeModel, name) {\n  // 'colorRange', 'colorARange', 'colorSRange'.\n  // If not exsits on this node, fetch from levels and series.\n  var range = nodeModel.get(name);\n  return isArray(range) && range.length ? {\n    name: name,\n    range: range\n  } : null;\n}\n\nfunction mapVisual(nodeModel, visuals, child, index, mapping, seriesModel) {\n  var childVisuals = zrUtil.extend({}, visuals);\n\n  if (mapping) {\n    var mappingType = mapping.type;\n    var colorMappingBy = mappingType === 'color' && mapping.__drColorMappingBy;\n    var value = colorMappingBy === 'index' ? index : colorMappingBy === 'id' ? seriesModel.mapIdToIndex(child.getId()) : child.getValue(nodeModel.get('visualDimension'));\n    childVisuals[mappingType] = mapping.mapValueToVisual(value);\n  }\n\n  return childVisuals;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\nvar MAX_SAFE_INTEGER = _number.MAX_SAFE_INTEGER;\n\nvar layout = require(\"../../util/layout\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The treemap layout implementation was originally copied from\n* \"d3.js\" with some modifications made for this project.\n* (See more details in the comment of the method \"squarify\" below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the license of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n\nvar mathMax = Math.max;\nvar mathMin = Math.min;\nvar retrieveValue = zrUtil.retrieve;\nvar each = zrUtil.each;\nvar PATH_BORDER_WIDTH = ['itemStyle', 'borderWidth'];\nvar PATH_GAP_WIDTH = ['itemStyle', 'gapWidth'];\nvar PATH_UPPER_LABEL_SHOW = ['upperLabel', 'show'];\nvar PATH_UPPER_LABEL_HEIGHT = ['upperLabel', 'height'];\n/**\n * @public\n */\n\nvar _default = {\n  seriesType: 'treemap',\n  reset: function reset(seriesModel, ecModel, api, payload) {\n    // Layout result in each node:\n    // {x, y, width, height, area, borderWidth}\n    var ecWidth = api.getWidth();\n    var ecHeight = api.getHeight();\n    var seriesOption = seriesModel.option;\n    var layoutInfo = layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n      width: api.getWidth(),\n      height: api.getHeight()\n    });\n    var size = seriesOption.size || []; // Compatible with ec2.\n\n    var containerWidth = parsePercent(retrieveValue(layoutInfo.width, size[0]), ecWidth);\n    var containerHeight = parsePercent(retrieveValue(layoutInfo.height, size[1]), ecHeight); // Fetch payload info.\n\n    var payloadType = payload && payload.type;\n    var types = ['treemapZoomToNode', 'treemapRootToNode'];\n    var targetInfo = helper.retrieveTargetInfo(payload, types, seriesModel);\n    var rootRect = payloadType === 'treemapRender' || payloadType === 'treemapMove' ? payload.rootRect : null;\n    var viewRoot = seriesModel.getViewRoot();\n    var viewAbovePath = helper.getPathToRoot(viewRoot);\n\n    if (payloadType !== 'treemapMove') {\n      var rootSize = payloadType === 'treemapZoomToNode' ? estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) : rootRect ? [rootRect.width, rootRect.height] : [containerWidth, containerHeight];\n      var sort = seriesOption.sort;\n\n      if (sort && sort !== 'asc' && sort !== 'desc') {\n        sort = 'desc';\n      }\n\n      var options = {\n        squareRatio: seriesOption.squareRatio,\n        sort: sort,\n        leafDepth: seriesOption.leafDepth\n      }; // layout should be cleared because using updateView but not update.\n\n      viewRoot.hostTree.clearLayouts(); // TODO\n      // optimize: if out of view clip, do not layout.\n      // But take care that if do not render node out of view clip,\n      // how to calculate start po\n\n      var viewRootLayout = {\n        x: 0,\n        y: 0,\n        width: rootSize[0],\n        height: rootSize[1],\n        area: rootSize[0] * rootSize[1]\n      };\n      viewRoot.setLayout(viewRootLayout);\n      squarify(viewRoot, options, false, 0); // Supplement layout.\n\n      var viewRootLayout = viewRoot.getLayout();\n      each(viewAbovePath, function (node, index) {\n        var childValue = (viewAbovePath[index + 1] || viewRoot).getValue();\n        node.setLayout(zrUtil.extend({\n          dataExtent: [childValue, childValue],\n          borderWidth: 0,\n          upperHeight: 0\n        }, viewRootLayout));\n      });\n    }\n\n    var treeRoot = seriesModel.getData().tree.root;\n    treeRoot.setLayout(calculateRootPosition(layoutInfo, rootRect, targetInfo), true);\n    seriesModel.setLayoutInfo(layoutInfo); // FIXME\n    // 现在没有clip功能，暂时取ec高宽。\n\n    prunning(treeRoot, // Transform to base element coordinate system.\n    new BoundingRect(-layoutInfo.x, -layoutInfo.y, ecWidth, ecHeight), viewAbovePath, viewRoot, 0);\n  }\n};\n/**\n * Layout treemap with squarify algorithm.\n * The original presentation of this algorithm\n * was made by Mark Bruls, Kees Huizing, and Jarke J. van Wijk\n * <https://graphics.ethz.ch/teaching/scivis_common/Literature/squarifiedTreeMaps.pdf>.\n * The implementation of this algorithm was originally copied from \"d3.js\"\n * <https://github.com/d3/d3/blob/9cc9a875e636a1dcf36cc1e07bdf77e1ad6e2c74/src/layout/treemap.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * @protected\n * @param {module:echarts/data/Tree~TreeNode} node\n * @param {Object} options\n * @param {string} options.sort 'asc' or 'desc'\n * @param {number} options.squareRatio\n * @param {boolean} hideChildren\n * @param {number} depth\n */\n\nfunction squarify(node, options, hideChildren, depth) {\n  var width;\n  var height;\n\n  if (node.isRemoved()) {\n    return;\n  }\n\n  var thisLayout = node.getLayout();\n  width = thisLayout.width;\n  height = thisLayout.height; // Considering border and gap\n\n  var nodeModel = node.getModel();\n  var borderWidth = nodeModel.get(PATH_BORDER_WIDTH);\n  var halfGapWidth = nodeModel.get(PATH_GAP_WIDTH) / 2;\n  var upperLabelHeight = getUpperLabelHeight(nodeModel);\n  var upperHeight = Math.max(borderWidth, upperLabelHeight);\n  var layoutOffset = borderWidth - halfGapWidth;\n  var layoutOffsetUpper = upperHeight - halfGapWidth;\n  var nodeModel = node.getModel();\n  node.setLayout({\n    borderWidth: borderWidth,\n    upperHeight: upperHeight,\n    upperLabelHeight: upperLabelHeight\n  }, true);\n  width = mathMax(width - 2 * layoutOffset, 0);\n  height = mathMax(height - layoutOffset - layoutOffsetUpper, 0);\n  var totalArea = width * height;\n  var viewChildren = initChildren(node, nodeModel, totalArea, options, hideChildren, depth);\n\n  if (!viewChildren.length) {\n    return;\n  }\n\n  var rect = {\n    x: layoutOffset,\n    y: layoutOffsetUpper,\n    width: width,\n    height: height\n  };\n  var rowFixedLength = mathMin(width, height);\n  var best = Infinity; // the best row score so far\n\n  var row = [];\n  row.area = 0;\n\n  for (var i = 0, len = viewChildren.length; i < len;) {\n    var child = viewChildren[i];\n    row.push(child);\n    row.area += child.getLayout().area;\n    var score = worst(row, rowFixedLength, options.squareRatio); // continue with this orientation\n\n    if (score <= best) {\n      i++;\n      best = score;\n    } // abort, and try a different orientation\n    else {\n        row.area -= row.pop().getLayout().area;\n        position(row, rowFixedLength, rect, halfGapWidth, false);\n        rowFixedLength = mathMin(rect.width, rect.height);\n        row.length = row.area = 0;\n        best = Infinity;\n      }\n  }\n\n  if (row.length) {\n    position(row, rowFixedLength, rect, halfGapWidth, true);\n  }\n\n  if (!hideChildren) {\n    var childrenVisibleMin = nodeModel.get('childrenVisibleMin');\n\n    if (childrenVisibleMin != null && totalArea < childrenVisibleMin) {\n      hideChildren = true;\n    }\n  }\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    squarify(viewChildren[i], options, hideChildren, depth + 1);\n  }\n}\n/**\n * Set area to each child, and calculate data extent for visual coding.\n */\n\n\nfunction initChildren(node, nodeModel, totalArea, options, hideChildren, depth) {\n  var viewChildren = node.children || [];\n  var orderBy = options.sort;\n  orderBy !== 'asc' && orderBy !== 'desc' && (orderBy = null);\n  var overLeafDepth = options.leafDepth != null && options.leafDepth <= depth; // leafDepth has higher priority.\n\n  if (hideChildren && !overLeafDepth) {\n    return node.viewChildren = [];\n  } // Sort children, order by desc.\n\n\n  viewChildren = zrUtil.filter(viewChildren, function (child) {\n    return !child.isRemoved();\n  });\n  sort(viewChildren, orderBy);\n  var info = statistic(nodeModel, viewChildren, orderBy);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  }\n\n  info.sum = filterByThreshold(nodeModel, totalArea, info.sum, orderBy, viewChildren);\n\n  if (info.sum === 0) {\n    return node.viewChildren = [];\n  } // Set area to each child.\n\n\n  for (var i = 0, len = viewChildren.length; i < len; i++) {\n    var area = viewChildren[i].getValue() / info.sum * totalArea; // Do not use setLayout({...}, true), because it is needed to clear last layout.\n\n    viewChildren[i].setLayout({\n      area: area\n    });\n  }\n\n  if (overLeafDepth) {\n    viewChildren.length && node.setLayout({\n      isLeafRoot: true\n    }, true);\n    viewChildren.length = 0;\n  }\n\n  node.viewChildren = viewChildren;\n  node.setLayout({\n    dataExtent: info.dataExtent\n  }, true);\n  return viewChildren;\n}\n/**\n * Consider 'visibleMin'. Modify viewChildren and get new sum.\n */\n\n\nfunction filterByThreshold(nodeModel, totalArea, sum, orderBy, orderedChildren) {\n  // visibleMin is not supported yet when no option.sort.\n  if (!orderBy) {\n    return sum;\n  }\n\n  var visibleMin = nodeModel.get('visibleMin');\n  var len = orderedChildren.length;\n  var deletePoint = len; // Always travel from little value to big value.\n\n  for (var i = len - 1; i >= 0; i--) {\n    var value = orderedChildren[orderBy === 'asc' ? len - i - 1 : i].getValue();\n\n    if (value / sum * totalArea < visibleMin) {\n      deletePoint = i;\n      sum -= value;\n    }\n  }\n\n  orderBy === 'asc' ? orderedChildren.splice(0, len - deletePoint) : orderedChildren.splice(deletePoint, len - deletePoint);\n  return sum;\n}\n/**\n * Sort\n */\n\n\nfunction sort(viewChildren, orderBy) {\n  if (orderBy) {\n    viewChildren.sort(function (a, b) {\n      var diff = orderBy === 'asc' ? a.getValue() - b.getValue() : b.getValue() - a.getValue();\n      return diff === 0 ? orderBy === 'asc' ? a.dataIndex - b.dataIndex : b.dataIndex - a.dataIndex : diff;\n    });\n  }\n\n  return viewChildren;\n}\n/**\n * Statistic\n */\n\n\nfunction statistic(nodeModel, children, orderBy) {\n  // Calculate sum.\n  var sum = 0;\n\n  for (var i = 0, len = children.length; i < len; i++) {\n    sum += children[i].getValue();\n  } // Statistic data extent for latter visual coding.\n  // Notice: data extent should be calculate based on raw children\n  // but not filtered view children, otherwise visual mapping will not\n  // be stable when zoom (where children is filtered by visibleMin).\n\n\n  var dimension = nodeModel.get('visualDimension');\n  var dataExtent; // The same as area dimension.\n\n  if (!children || !children.length) {\n    dataExtent = [NaN, NaN];\n  } else if (dimension === 'value' && orderBy) {\n    dataExtent = [children[children.length - 1].getValue(), children[0].getValue()];\n    orderBy === 'asc' && dataExtent.reverse();\n  } // Other dimension.\n  else {\n      var dataExtent = [Infinity, -Infinity];\n      each(children, function (child) {\n        var value = child.getValue(dimension);\n        value < dataExtent[0] && (dataExtent[0] = value);\n        value > dataExtent[1] && (dataExtent[1] = value);\n      });\n    }\n\n  return {\n    sum: sum,\n    dataExtent: dataExtent\n  };\n}\n/**\n * Computes the score for the specified row,\n * as the worst aspect ratio.\n */\n\n\nfunction worst(row, rowFixedLength, ratio) {\n  var areaMax = 0;\n  var areaMin = Infinity;\n\n  for (var i = 0, area, len = row.length; i < len; i++) {\n    area = row[i].getLayout().area;\n\n    if (area) {\n      area < areaMin && (areaMin = area);\n      area > areaMax && (areaMax = area);\n    }\n  }\n\n  var squareArea = row.area * row.area;\n  var f = rowFixedLength * rowFixedLength * ratio;\n  return squareArea ? mathMax(f * areaMax / squareArea, squareArea / (f * areaMin)) : Infinity;\n}\n/**\n * Positions the specified row of nodes. Modifies `rect`.\n */\n\n\nfunction position(row, rowFixedLength, rect, halfGapWidth, flush) {\n  // When rowFixedLength === rect.width,\n  // it is horizontal subdivision,\n  // rowFixedLength is the width of the subdivision,\n  // rowOtherLength is the height of the subdivision,\n  // and nodes will be positioned from left to right.\n  // wh[idx0WhenH] means: when horizontal,\n  //      wh[idx0WhenH] => wh[0] => 'width'.\n  //      xy[idx1WhenH] => xy[1] => 'y'.\n  var idx0WhenH = rowFixedLength === rect.width ? 0 : 1;\n  var idx1WhenH = 1 - idx0WhenH;\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  var last = rect[xy[idx0WhenH]];\n  var rowOtherLength = rowFixedLength ? row.area / rowFixedLength : 0;\n\n  if (flush || rowOtherLength > rect[wh[idx1WhenH]]) {\n    rowOtherLength = rect[wh[idx1WhenH]]; // over+underflow\n  }\n\n  for (var i = 0, rowLen = row.length; i < rowLen; i++) {\n    var node = row[i];\n    var nodeLayout = {};\n    var step = rowOtherLength ? node.getLayout().area / rowOtherLength : 0;\n    var wh1 = nodeLayout[wh[idx1WhenH]] = mathMax(rowOtherLength - 2 * halfGapWidth, 0); // We use Math.max/min to avoid negative width/height when considering gap width.\n\n    var remain = rect[xy[idx0WhenH]] + rect[wh[idx0WhenH]] - last;\n    var modWH = i === rowLen - 1 || remain < step ? remain : step;\n    var wh0 = nodeLayout[wh[idx0WhenH]] = mathMax(modWH - 2 * halfGapWidth, 0);\n    nodeLayout[xy[idx1WhenH]] = rect[xy[idx1WhenH]] + mathMin(halfGapWidth, wh1 / 2);\n    nodeLayout[xy[idx0WhenH]] = last + mathMin(halfGapWidth, wh0 / 2);\n    last += modWH;\n    node.setLayout(nodeLayout, true);\n  }\n\n  rect[xy[idx1WhenH]] += rowOtherLength;\n  rect[wh[idx1WhenH]] -= rowOtherLength;\n} // Return [containerWidth, containerHeight] as defualt.\n\n\nfunction estimateRootSize(seriesModel, targetInfo, viewRoot, containerWidth, containerHeight) {\n  // If targetInfo.node exists, we zoom to the node,\n  // so estimate whold width and heigth by target node.\n  var currNode = (targetInfo || {}).node;\n  var defaultSize = [containerWidth, containerHeight];\n\n  if (!currNode || currNode === viewRoot) {\n    return defaultSize;\n  }\n\n  var parent;\n  var viewArea = containerWidth * containerHeight;\n  var area = viewArea * seriesModel.option.zoomToNodeRatio;\n\n  while (parent = currNode.parentNode) {\n    // jshint ignore:line\n    var sum = 0;\n    var siblings = parent.children;\n\n    for (var i = 0, len = siblings.length; i < len; i++) {\n      sum += siblings[i].getValue();\n    }\n\n    var currNodeValue = currNode.getValue();\n\n    if (currNodeValue === 0) {\n      return defaultSize;\n    }\n\n    area *= sum / currNodeValue; // Considering border, suppose aspect ratio is 1.\n\n    var parentModel = parent.getModel();\n    var borderWidth = parentModel.get(PATH_BORDER_WIDTH);\n    var upperHeight = Math.max(borderWidth, getUpperLabelHeight(parentModel, borderWidth));\n    area += 4 * borderWidth * borderWidth + (3 * borderWidth + upperHeight) * Math.pow(area, 0.5);\n    area > MAX_SAFE_INTEGER && (area = MAX_SAFE_INTEGER);\n    currNode = parent;\n  }\n\n  area < viewArea && (area = viewArea);\n  var scale = Math.pow(area / viewArea, 0.5);\n  return [containerWidth * scale, containerHeight * scale];\n} // Root postion base on coord of containerGroup\n\n\nfunction calculateRootPosition(layoutInfo, rootRect, targetInfo) {\n  if (rootRect) {\n    return {\n      x: rootRect.x,\n      y: rootRect.y\n    };\n  }\n\n  var defaultPosition = {\n    x: 0,\n    y: 0\n  };\n\n  if (!targetInfo) {\n    return defaultPosition;\n  } // If targetInfo is fetched by 'retrieveTargetInfo',\n  // old tree and new tree are the same tree,\n  // so the node still exists and we can visit it.\n\n\n  var targetNode = targetInfo.node;\n  var layout = targetNode.getLayout();\n\n  if (!layout) {\n    return defaultPosition;\n  } // Transform coord from local to container.\n\n\n  var targetCenter = [layout.width / 2, layout.height / 2];\n  var node = targetNode;\n\n  while (node) {\n    var nodeLayout = node.getLayout();\n    targetCenter[0] += nodeLayout.x;\n    targetCenter[1] += nodeLayout.y;\n    node = node.parentNode;\n  }\n\n  return {\n    x: layoutInfo.width / 2 - targetCenter[0],\n    y: layoutInfo.height / 2 - targetCenter[1]\n  };\n} // Mark nodes visible for prunning when visual coding and rendering.\n// Prunning depends on layout and root position, so we have to do it after layout.\n\n\nfunction prunning(node, clipRect, viewAbovePath, viewRoot, depth) {\n  var nodeLayout = node.getLayout();\n  var nodeInViewAbovePath = viewAbovePath[depth];\n  var isAboveViewRoot = nodeInViewAbovePath && nodeInViewAbovePath === node;\n\n  if (nodeInViewAbovePath && !isAboveViewRoot || depth === viewAbovePath.length && node !== viewRoot) {\n    return;\n  }\n\n  node.setLayout({\n    // isInView means: viewRoot sub tree + viewAbovePath\n    isInView: true,\n    // invisible only means: outside view clip so that the node can not\n    // see but still layout for animation preparation but not render.\n    invisible: !isAboveViewRoot && !clipRect.intersect(nodeLayout),\n    isAboveViewRoot: isAboveViewRoot\n  }, true); // Transform to child coordinate.\n\n  var childClipRect = new BoundingRect(clipRect.x - nodeLayout.x, clipRect.y - nodeLayout.y, clipRect.width, clipRect.height);\n  each(node.viewChildren || [], function (child) {\n    prunning(child, childClipRect, viewAbovePath, viewRoot, depth + 1);\n  });\n}\n\nfunction getUpperLabelHeight(model) {\n  return model.get(PATH_UPPER_LABEL_SHOW) ? model.get(PATH_UPPER_LABEL_HEIGHT) : 0;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Line path for bezier and straight line draw\n */\n\n\nvar straightLineProto = graphic.Line.prototype;\nvar bezierCurveProto = graphic.BezierCurve.prototype;\n\nfunction isLine(shape) {\n  return isNaN(+shape.cpx1) || isNaN(+shape.cpy1);\n}\n\nvar _default = graphic.extendShape({\n  type: 'ec-line',\n  style: {\n    stroke: '#000',\n    fill: null\n  },\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    percent: 1,\n    cpx1: null,\n    cpy1: null\n  },\n  buildPath: function buildPath(ctx, shape) {\n    this[isLine(shape) ? '_buildPathLine' : '_buildPathCurve'](ctx, shape);\n  },\n  _buildPathLine: straightLineProto.buildPath,\n  _buildPathCurve: bezierCurveProto.buildPath,\n  pointAt: function pointAt(t) {\n    return this[isLine(this.shape) ? '_pointAtLine' : '_pointAtCurve'](t);\n  },\n  _pointAtLine: straightLineProto.pointAt,\n  _pointAtCurve: bezierCurveProto.pointAt,\n  tangentAt: function tangentAt(t) {\n    var shape = this.shape;\n    var p = isLine(shape) ? [shape.x2 - shape.x1, shape.y2 - shape.y1] : this._tangentAtCurve(t);\n    return vec2.normalize(p, p);\n  },\n  _tangentAtCurve: bezierCurveProto.tangentAt\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/parallel\");\n\nrequire(\"./parallel/ParallelSeries\");\n\nrequire(\"./parallel/ParallelView\");\n\nvar parallelVisual = require(\"./parallel/parallelVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(parallelVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.parallel',\n  dependencies: ['parallel'],\n  visualColorAccessPath: 'lineStyle.color',\n  getInitialData: function getInitialData(option, ecModel) {\n    var source = this.getSource();\n    setEncodeAndDimensions(source, this);\n    return createListFromArray(source, this);\n  },\n\n  /**\n   * User can get data raw indices on 'axisAreaSelected' event received.\n   *\n   * @public\n   * @param {string} activeState 'active' or 'inactive' or 'normal'\n   * @return {Array.<number>} Raw indices\n   */\n  getRawIndicesByActiveState: function getRawIndicesByActiveState(activeState) {\n    var coordSys = this.coordinateSystem;\n    var data = this.getData();\n    var indices = [];\n    coordSys.eachActiveState(data, function (theActiveState, dataIndex) {\n      if (activeState === theActiveState) {\n        indices.push(data.getRawIndex(dataIndex));\n      }\n    });\n    return indices;\n  },\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 2,\n    // 二级层叠\n    coordinateSystem: 'parallel',\n    parallelIndex: 0,\n    label: {\n      show: false\n    },\n    inactiveOpacity: 0.05,\n    activeOpacity: 1,\n    lineStyle: {\n      width: 1,\n      opacity: 0.45,\n      type: 'solid'\n    },\n    emphasis: {\n      label: {\n        show: false\n      }\n    },\n    progressive: 500,\n    smooth: false,\n    // true | false | number\n    animationEasing: 'linear'\n  }\n});\n\nfunction setEncodeAndDimensions(source, seriesModel) {\n  // The mapping of parallelAxis dimension to data dimension can\n  // be specified in parallelAxis.option.dim. For example, if\n  // parallelAxis.option.dim is 'dim3', it mapping to the third\n  // dimension of data. But `data.encode` has higher priority.\n  // Moreover, parallelModel.dimension should not be regarded as data\n  // dimensions. Consider dimensions = ['dim4', 'dim2', 'dim6'];\n  if (source.encodeDefine) {\n    return;\n  }\n\n  var parallelModel = seriesModel.ecModel.getComponent('parallel', seriesModel.get('parallelIndex'));\n\n  if (!parallelModel) {\n    return;\n  }\n\n  var encodeDefine = source.encodeDefine = createHashMap();\n  each(parallelModel.dimensions, function (axisDim) {\n    var dataDimIndex = convertDimNameToNumber(axisDim);\n    encodeDefine.set(axisDim, dataDimIndex);\n  });\n}\n\nfunction convertDimNameToNumber(dimName) {\n  return +dimName.replace('dim', '');\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar ChartView = require(\"../../view/Chart\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_SMOOTH = 0.3;\nvar ParallelView = ChartView.extend({\n  type: 'parallel',\n  init: function init() {\n    /**\n     * @type {module:zrender/container/Group}\n     * @private\n     */\n    this._dataGroup = new graphic.Group();\n    this.group.add(this._dataGroup);\n    /**\n     * @type {module:echarts/data/List}\n     */\n\n    this._data;\n    /**\n     * @type {boolean}\n     */\n\n    this._initialized;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(seriesModel, ecModel, api, payload) {\n    var dataGroup = this._dataGroup;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n    data.diff(oldData).add(add).update(update).remove(remove).execute();\n\n    function add(newDataIndex) {\n      var line = addEl(data, dataGroup, newDataIndex, dimensions, coordSys);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function update(newDataIndex, oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      var points = createLinePoints(data, newDataIndex, dimensions, coordSys);\n      data.setItemGraphicEl(newDataIndex, line);\n      var animationModel = payload && payload.animation === false ? null : seriesModel;\n      graphic.updateProps(line, {\n        shape: {\n          points: points\n        }\n      }, animationModel, newDataIndex);\n      updateElCommon(line, data, newDataIndex, seriesScope);\n    }\n\n    function remove(oldDataIndex) {\n      var line = oldData.getItemGraphicEl(oldDataIndex);\n      dataGroup.remove(line);\n    } // First create\n\n\n    if (!this._initialized) {\n      this._initialized = true;\n      var clipPath = createGridClipShape(coordSys, seriesModel, function () {\n        // Callback will be invoked immediately if there is no animation\n        setTimeout(function () {\n          dataGroup.removeClipPath();\n        });\n      });\n      dataGroup.setClipPath(clipPath);\n    }\n\n    this._data = data;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this._initialized = true;\n    this._data = null;\n\n    this._dataGroup.removeAll();\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    var data = seriesModel.getData();\n    var coordSys = seriesModel.coordinateSystem;\n    var dimensions = coordSys.dimensions;\n    var seriesScope = makeSeriesScope(seriesModel);\n\n    for (var dataIndex = taskParams.start; dataIndex < taskParams.end; dataIndex++) {\n      var line = addEl(data, this._dataGroup, dataIndex, dimensions, coordSys);\n      line.incremental = true;\n      updateElCommon(line, data, dataIndex, seriesScope);\n    }\n  },\n  dispose: function dispose() {},\n  // _renderForProgressive: function (seriesModel) {\n  //     var dataGroup = this._dataGroup;\n  //     var data = seriesModel.getData();\n  //     var oldData = this._data;\n  //     var coordSys = seriesModel.coordinateSystem;\n  //     var dimensions = coordSys.dimensions;\n  //     var option = seriesModel.option;\n  //     var progressive = option.progressive;\n  //     var smooth = option.smooth ? SMOOTH : null;\n  //     // In progressive animation is disabled, so use simple data diff,\n  //     // which effects performance less.\n  //     // (Typically performance for data with length 7000+ like:\n  //     // simpleDiff: 60ms, addEl: 184ms,\n  //     // in RMBP 2.4GHz intel i7, OSX 10.9 chrome 50.0.2661.102 (64-bit))\n  //     if (simpleDiff(oldData, data, dimensions)) {\n  //         dataGroup.removeAll();\n  //         data.each(function (dataIndex) {\n  //             addEl(data, dataGroup, dataIndex, dimensions, coordSys);\n  //         });\n  //     }\n  //     updateElCommon(data, progressive, smooth);\n  //     // Consider switch between progressive and not.\n  //     data.__plProgressive = true;\n  //     this._data = data;\n  // },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._dataGroup && this._dataGroup.removeAll();\n    this._data = null;\n  }\n});\n\nfunction createGridClipShape(coordSys, seriesModel, cb) {\n  var parallelModel = coordSys.model;\n  var rect = coordSys.getRect();\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x,\n      y: rect.y,\n      width: rect.width,\n      height: rect.height\n    }\n  });\n  var dim = parallelModel.get('layout') === 'horizontal' ? 'width' : 'height';\n  rectEl.setShape(dim, 0);\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width,\n      height: rect.height\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nfunction createLinePoints(data, dataIndex, dimensions, coordSys) {\n  var points = [];\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimName = dimensions[i];\n    var value = data.get(data.mapDimension(dimName), dataIndex);\n\n    if (!isEmptyValue(value, coordSys.getAxis(dimName).type)) {\n      points.push(coordSys.dataToPoint(value, dimName));\n    }\n  }\n\n  return points;\n}\n\nfunction addEl(data, dataGroup, dataIndex, dimensions, coordSys) {\n  var points = createLinePoints(data, dataIndex, dimensions, coordSys);\n  var line = new graphic.Polyline({\n    shape: {\n      points: points\n    },\n    silent: true,\n    z2: 10\n  });\n  dataGroup.add(line);\n  data.setItemGraphicEl(dataIndex, line);\n  return line;\n}\n\nfunction makeSeriesScope(seriesModel) {\n  var smooth = seriesModel.get('smooth', true);\n  smooth === true && (smooth = DEFAULT_SMOOTH);\n  return {\n    lineStyle: seriesModel.getModel('lineStyle').getLineStyle(),\n    smooth: smooth != null ? smooth : DEFAULT_SMOOTH\n  };\n}\n\nfunction updateElCommon(el, data, dataIndex, seriesScope) {\n  var lineStyle = seriesScope.lineStyle;\n\n  if (data.hasItemOption) {\n    var lineStyleModel = data.getItemModel(dataIndex).getModel('lineStyle');\n    lineStyle = lineStyleModel.getLineStyle();\n  }\n\n  el.useStyle(lineStyle);\n  var elStyle = el.style;\n  elStyle.fill = null; // lineStyle.color have been set to itemVisual in module:echarts/visual/seriesColor.\n\n  elStyle.stroke = data.getItemVisual(dataIndex, 'color'); // lineStyle.opacity have been set to itemVisual in parallelVisual.\n\n  elStyle.opacity = data.getItemVisual(dataIndex, 'opacity');\n  seriesScope.smooth && (el.shape.smooth = seriesScope.smooth);\n} // function simpleDiff(oldData, newData, dimensions) {\n//     var oldLen;\n//     if (!oldData\n//         || !oldData.__plProgressive\n//         || (oldLen = oldData.count()) !== newData.count()\n//     ) {\n//         return true;\n//     }\n//     var dimLen = dimensions.length;\n//     for (var i = 0; i < oldLen; i++) {\n//         for (var j = 0; j < dimLen; j++) {\n//             if (oldData.get(dimensions[j], i) !== newData.get(dimensions[j], i)) {\n//                 return true;\n//             }\n//         }\n//     }\n//     return false;\n// }\n// FIXME\n// 公用方法?\n\n\nfunction isEmptyValue(val, axisType) {\n  return axisType === 'category' ? val == null : val == null || isNaN(val); // axisType === 'value'\n}\n\nvar _default = ParallelView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar opacityAccessPath = ['lineStyle', 'normal', 'opacity'];\nvar _default = {\n  seriesType: 'parallel',\n  reset: function reset(seriesModel, ecModel, api) {\n    var itemStyleModel = seriesModel.getModel('itemStyle');\n    var lineStyleModel = seriesModel.getModel('lineStyle');\n    var globalColors = ecModel.get('color');\n    var color = lineStyleModel.get('color') || itemStyleModel.get('color') || globalColors[seriesModel.seriesIndex % globalColors.length];\n    var inactiveOpacity = seriesModel.get('inactiveOpacity');\n    var activeOpacity = seriesModel.get('activeOpacity');\n    var lineStyle = seriesModel.getModel('lineStyle').getLineStyle();\n    var coordSys = seriesModel.coordinateSystem;\n    var data = seriesModel.getData();\n    var opacityMap = {\n      normal: lineStyle.opacity,\n      active: activeOpacity,\n      inactive: inactiveOpacity\n    };\n    data.setVisual('color', color);\n\n    function progress(params, data) {\n      coordSys.eachActiveState(data, function (activeState, dataIndex) {\n        var opacity = opacityMap[activeState];\n\n        if (activeState === 'normal' && data.hasItemOption) {\n          var itemOpacity = data.getItemModel(dataIndex).get(opacityAccessPath, true);\n          itemOpacity != null && (opacity = itemOpacity);\n        }\n\n        data.setItemVisual(dataIndex, 'opacity', opacity);\n      }, params.start, params.end);\n    }\n\n    return {\n      progress: progress\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./sankey/SankeySeries\");\n\nrequire(\"./sankey/SankeyView\");\n\nrequire(\"./sankey/sankeyAction\");\n\nvar sankeyLayout = require(\"./sankey/sankeyLayout\");\n\nvar sankeyVisual = require(\"./sankey/sankeyVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(sankeyLayout);\necharts.registerVisual(sankeyVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createGraphFromNodeEdge = require(\"../helper/createGraphFromNodeEdge\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar Model = require(\"../../model/Model\");\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar SankeySeries = SeriesModel.extend({\n  type: 'series.sankey',\n  layoutInfo: null,\n  levelModels: null,\n\n  /**\n   * Init a graph data structure from data in option series\n   *\n   * @param  {Object} option  the object used to config echarts view\n   * @return {module:echarts/data/List} storage initial data\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    var links = option.edges || option.links;\n    var nodes = option.data || option.nodes;\n    var levels = option.levels;\n    var levelModels = this.levelModels = {};\n\n    for (var i = 0; i < levels.length; i++) {\n      if (levels[i].depth != null && levels[i].depth >= 0) {\n        levelModels[levels[i].depth] = new Model(levels[i], this, ecModel);\n      } else {}\n    }\n\n    if (nodes && links) {\n      var graph = createGraphFromNodeEdge(nodes, links, this, true, beforeLink);\n      return graph.data;\n    }\n\n    function beforeLink(nodeData, edgeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        model.customizeGetParent(function (path) {\n          var parentModel = this.parentModel;\n          var nodeDepth = parentModel.getData().getItemLayout(idx).depth;\n          var levelModel = parentModel.levelModels[nodeDepth];\n          return levelModel || this.parentModel;\n        });\n        return model;\n      });\n      edgeData.wrapMethod('getItemModel', function (model, idx) {\n        model.customizeGetParent(function (path) {\n          var parentModel = this.parentModel;\n          var edge = parentModel.getGraph().getEdgeByIndex(idx);\n          var depth = edge.node1.getLayout().depth;\n          var levelModel = parentModel.levelModels[depth];\n          return levelModel || this.parentModel;\n        });\n        return model;\n      });\n    }\n  },\n  setNodePosition: function setNodePosition(dataIndex, localPosition) {\n    var dataItem = this.option.data[dataIndex];\n    dataItem.localX = localPosition[0];\n    dataItem.localY = localPosition[1];\n  },\n\n  /**\n   * Return the graphic data structure\n   *\n   * @return {module:echarts/data/Graph} graphic data structure\n   */\n  getGraph: function getGraph() {\n    return this.getData().graph;\n  },\n\n  /**\n   * Get edge data of graphic data structure\n   *\n   * @return {module:echarts/data/List} data structure of list\n   */\n  getEdgeData: function getEdgeData() {\n    return this.getGraph().edgeData;\n  },\n\n  /**\n   * @override\n   */\n  formatTooltip: function formatTooltip(dataIndex, multipleSeries, dataType) {\n    // dataType === 'node' or empty do not show tooltip by default\n    if (dataType === 'edge') {\n      var params = this.getDataParams(dataIndex, dataType);\n      var rawDataOpt = params.data;\n      var html = rawDataOpt.source + ' -- ' + rawDataOpt.target;\n\n      if (params.value) {\n        html += ' : ' + params.value;\n      }\n\n      return encodeHTML(html);\n    } else if (dataType === 'node') {\n      var node = this.getGraph().getNodeByIndex(dataIndex);\n      var value = node.getLayout().value;\n      var name = this.getDataParams(dataIndex, dataType).data.name;\n\n      if (value) {\n        var html = name + ' : ' + value;\n      }\n\n      return encodeHTML(html);\n    }\n\n    return SankeySeries.superCall(this, 'formatTooltip', dataIndex, multipleSeries);\n  },\n  optionUpdated: function optionUpdated() {\n    var option = this.option;\n\n    if (option.focusNodeAdjacency === true) {\n      option.focusNodeAdjacency = 'allEdges';\n    }\n  },\n  // Override Series.getDataParams()\n  getDataParams: function getDataParams(dataIndex, dataType) {\n    var params = SankeySeries.superCall(this, 'getDataParams', dataIndex, dataType);\n\n    if (params.value == null && dataType === 'node') {\n      var node = this.getGraph().getNodeByIndex(dataIndex);\n      var nodeValue = node.getLayout().value;\n      params.value = nodeValue;\n    }\n\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    layout: null,\n    // The position of the whole view\n    left: '5%',\n    top: '5%',\n    right: '20%',\n    bottom: '5%',\n    // Value can be 'vertical'\n    orient: 'horizontal',\n    // The dx of the node\n    nodeWidth: 20,\n    // The vertical distance between two nodes\n    nodeGap: 8,\n    // Control if the node can move or not\n    draggable: true,\n    // Value can be 'inEdges', 'outEdges', 'allEdges', true (the same as 'allEdges').\n    focusNodeAdjacency: false,\n    // The number of iterations to change the position of the node\n    layoutIterations: 32,\n    label: {\n      show: true,\n      position: 'right',\n      color: '#000',\n      fontSize: 12\n    },\n    levels: [],\n    // Value can be 'left' or 'right'\n    nodeAlign: 'justify',\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: '#333'\n    },\n    lineStyle: {\n      color: '#314656',\n      opacity: 0.2,\n      curveness: 0.5\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        opacity: 0.5\n      }\n    },\n    animationEasing: 'linear',\n    animationDuration: 1000\n  }\n});\nvar _default = SankeySeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar nodeOpacityPath = ['itemStyle', 'opacity'];\nvar hoverNodeOpacityPath = ['emphasis', 'itemStyle', 'opacity'];\nvar lineOpacityPath = ['lineStyle', 'opacity'];\nvar hoverLineOpacityPath = ['emphasis', 'lineStyle', 'opacity'];\n\nfunction getItemOpacity(item, opacityPath) {\n  return item.getVisual('opacity') || item.getModel().get(opacityPath);\n}\n\nfunction fadeOutItem(item, opacityPath, opacityRatio) {\n  var el = item.getGraphicEl();\n  var opacity = getItemOpacity(item, opacityPath);\n\n  if (opacityRatio != null) {\n    opacity == null && (opacity = 1);\n    opacity *= opacityRatio;\n  }\n\n  el.downplay && el.downplay();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  });\n}\n\nfunction fadeInItem(item, opacityPath) {\n  var opacity = getItemOpacity(item, opacityPath);\n  var el = item.getGraphicEl();\n  el.traverse(function (child) {\n    if (child.type !== 'group') {\n      child.setStyle('opacity', opacity);\n    }\n  }); // Support emphasis here.\n\n  el.highlight && el.highlight();\n}\n\nvar SankeyShape = graphic.extendShape({\n  shape: {\n    x1: 0,\n    y1: 0,\n    x2: 0,\n    y2: 0,\n    cpx1: 0,\n    cpy1: 0,\n    cpx2: 0,\n    cpy2: 0,\n    extent: 0,\n    orient: ''\n  },\n  buildPath: function buildPath(ctx, shape) {\n    var extent = shape.extent;\n    ctx.moveTo(shape.x1, shape.y1);\n    ctx.bezierCurveTo(shape.cpx1, shape.cpy1, shape.cpx2, shape.cpy2, shape.x2, shape.y2);\n\n    if (shape.orient === 'vertical') {\n      ctx.lineTo(shape.x2 + extent, shape.y2);\n      ctx.bezierCurveTo(shape.cpx2 + extent, shape.cpy2, shape.cpx1 + extent, shape.cpy1, shape.x1 + extent, shape.y1);\n    } else {\n      ctx.lineTo(shape.x2, shape.y2 + extent);\n      ctx.bezierCurveTo(shape.cpx2, shape.cpy2 + extent, shape.cpx1, shape.cpy1 + extent, shape.x1, shape.y1 + extent);\n    }\n\n    ctx.closePath();\n  },\n  highlight: function highlight() {\n    this.trigger('emphasis');\n  },\n  downplay: function downplay() {\n    this.trigger('normal');\n  }\n});\n\nvar _default = echarts.extendChartView({\n  type: 'sankey',\n\n  /**\n   * @private\n   * @type {module:echarts/chart/sankey/SankeySeries}\n   */\n  _model: null,\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  _focusAdjacencyDisabled: false,\n  render: function render(seriesModel, ecModel, api) {\n    var sankeyView = this;\n    var graph = seriesModel.getGraph();\n    var group = this.group;\n    var layoutInfo = seriesModel.layoutInfo; // view width\n\n    var width = layoutInfo.width; // view height\n\n    var height = layoutInfo.height;\n    var nodeData = seriesModel.getData();\n    var edgeData = seriesModel.getData('edge');\n    var orient = seriesModel.get('orient');\n    this._model = seriesModel;\n    group.removeAll();\n    group.attr('position', [layoutInfo.x, layoutInfo.y]); // generate a bezire Curve for each edge\n\n    graph.eachEdge(function (edge) {\n      var curve = new SankeyShape();\n      curve.dataIndex = edge.dataIndex;\n      curve.seriesIndex = seriesModel.seriesIndex;\n      curve.dataType = 'edge';\n      var lineStyleModel = edge.getModel('lineStyle');\n      var curvature = lineStyleModel.get('curveness');\n      var n1Layout = edge.node1.getLayout();\n      var node1Model = edge.node1.getModel();\n      var dragX1 = node1Model.get('localX');\n      var dragY1 = node1Model.get('localY');\n      var n2Layout = edge.node2.getLayout();\n      var node2Model = edge.node2.getModel();\n      var dragX2 = node2Model.get('localX');\n      var dragY2 = node2Model.get('localY');\n      var edgeLayout = edge.getLayout();\n      var x1;\n      var y1;\n      var x2;\n      var y2;\n      var cpx1;\n      var cpy1;\n      var cpx2;\n      var cpy2;\n      curve.shape.extent = Math.max(1, edgeLayout.dy);\n      curve.shape.orient = orient;\n\n      if (orient === 'vertical') {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + edgeLayout.sy;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + n1Layout.dy;\n        x2 = (dragX2 != null ? dragX2 * width : n2Layout.x) + edgeLayout.ty;\n        y2 = dragY2 != null ? dragY2 * height : n2Layout.y;\n        cpx1 = x1;\n        cpy1 = y1 * (1 - curvature) + y2 * curvature;\n        cpx2 = x2;\n        cpy2 = y1 * curvature + y2 * (1 - curvature);\n      } else {\n        x1 = (dragX1 != null ? dragX1 * width : n1Layout.x) + n1Layout.dx;\n        y1 = (dragY1 != null ? dragY1 * height : n1Layout.y) + edgeLayout.sy;\n        x2 = dragX2 != null ? dragX2 * width : n2Layout.x;\n        y2 = (dragY2 != null ? dragY2 * height : n2Layout.y) + edgeLayout.ty;\n        cpx1 = x1 * (1 - curvature) + x2 * curvature;\n        cpy1 = y1;\n        cpx2 = x1 * curvature + x2 * (1 - curvature);\n        cpy2 = y2;\n      }\n\n      curve.setShape({\n        x1: x1,\n        y1: y1,\n        x2: x2,\n        y2: y2,\n        cpx1: cpx1,\n        cpy1: cpy1,\n        cpx2: cpx2,\n        cpy2: cpy2\n      });\n      curve.setStyle(lineStyleModel.getItemStyle()); // Special color, use source node color or target node color\n\n      switch (curve.style.fill) {\n        case 'source':\n          curve.style.fill = edge.node1.getVisual('color');\n          break;\n\n        case 'target':\n          curve.style.fill = edge.node2.getVisual('color');\n          break;\n      }\n\n      graphic.setHoverStyle(curve, edge.getModel('emphasis.lineStyle').getItemStyle());\n      group.add(curve);\n      edgeData.setItemGraphicEl(edge.dataIndex, curve);\n    }); // Generate a rect for each node\n\n    graph.eachNode(function (node) {\n      var layout = node.getLayout();\n      var itemModel = node.getModel();\n      var dragX = itemModel.get('localX');\n      var dragY = itemModel.get('localY');\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var rect = new graphic.Rect({\n        shape: {\n          x: dragX != null ? dragX * width : layout.x,\n          y: dragY != null ? dragY * height : layout.y,\n          width: layout.dx,\n          height: layout.dy\n        },\n        style: itemModel.getModel('itemStyle').getItemStyle()\n      });\n      var hoverStyle = node.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(rect.style, hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: node.dataIndex,\n        defaultText: node.id,\n        isRectText: true\n      });\n      rect.setStyle('fill', node.getVisual('color'));\n      graphic.setHoverStyle(rect, hoverStyle);\n      group.add(rect);\n      nodeData.setItemGraphicEl(node.dataIndex, rect);\n      rect.dataType = 'node';\n    });\n    nodeData.eachItemGraphicEl(function (el, dataIndex) {\n      var itemModel = nodeData.getItemModel(dataIndex);\n\n      if (itemModel.get('draggable')) {\n        el.drift = function (dx, dy) {\n          sankeyView._focusAdjacencyDisabled = true;\n          this.shape.x += dx;\n          this.shape.y += dy;\n          this.dirty();\n          api.dispatchAction({\n            type: 'dragNode',\n            seriesId: seriesModel.id,\n            dataIndex: nodeData.getRawIndex(dataIndex),\n            localX: this.shape.x / width,\n            localY: this.shape.y / height\n          });\n        };\n\n        el.ondragend = function () {\n          sankeyView._focusAdjacencyDisabled = false;\n        };\n\n        el.draggable = true;\n        el.cursor = 'move';\n      }\n\n      el.highlight = function () {\n        this.trigger('emphasis');\n      };\n\n      el.downplay = function () {\n        this.trigger('normal');\n      };\n\n      el.focusNodeAdjHandler && el.off('mouseover', el.focusNodeAdjHandler);\n      el.unfocusNodeAdjHandler && el.off('mouseout', el.unfocusNodeAdjHandler);\n\n      if (itemModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.focusNodeAdjHandler = function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            sankeyView._clearTimer();\n\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              dataIndex: el.dataIndex\n            });\n          }\n        });\n        el.on('mouseout', el.unfocusNodeAdjHandler = function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            sankeyView._dispatchUnfocus(api);\n          }\n        });\n      }\n    });\n    edgeData.eachItemGraphicEl(function (el, dataIndex) {\n      var edgeModel = edgeData.getItemModel(dataIndex);\n      el.focusNodeAdjHandler && el.off('mouseover', el.focusNodeAdjHandler);\n      el.unfocusNodeAdjHandler && el.off('mouseout', el.unfocusNodeAdjHandler);\n\n      if (edgeModel.get('focusNodeAdjacency')) {\n        el.on('mouseover', el.focusNodeAdjHandler = function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            sankeyView._clearTimer();\n\n            api.dispatchAction({\n              type: 'focusNodeAdjacency',\n              seriesId: seriesModel.id,\n              edgeDataIndex: el.dataIndex\n            });\n          }\n        });\n        el.on('mouseout', el.unfocusNodeAdjHandler = function () {\n          if (!sankeyView._focusAdjacencyDisabled) {\n            sankeyView._dispatchUnfocus(api);\n          }\n        });\n      }\n    });\n\n    if (!this._data && seriesModel.get('animation')) {\n      group.setClipPath(createGridClipShape(group.getBoundingRect(), seriesModel, function () {\n        group.removeClipPath();\n      }));\n    }\n\n    this._data = seriesModel.getData();\n  },\n  dispose: function dispose() {\n    this._clearTimer();\n  },\n  _dispatchUnfocus: function _dispatchUnfocus(api) {\n    var self = this;\n\n    this._clearTimer();\n\n    this._unfocusDelayTimer = setTimeout(function () {\n      self._unfocusDelayTimer = null;\n      api.dispatchAction({\n        type: 'unfocusNodeAdjacency',\n        seriesId: self._model.id\n      });\n    }, 500);\n  },\n  _clearTimer: function _clearTimer() {\n    if (this._unfocusDelayTimer) {\n      clearTimeout(this._unfocusDelayTimer);\n      this._unfocusDelayTimer = null;\n    }\n  },\n  focusNodeAdjacency: function focusNodeAdjacency(seriesModel, ecModel, api, payload) {\n    var data = seriesModel.getData();\n    var graph = data.graph;\n    var dataIndex = payload.dataIndex;\n    var itemModel = data.getItemModel(dataIndex);\n    var edgeDataIndex = payload.edgeDataIndex;\n\n    if (dataIndex == null && edgeDataIndex == null) {\n      return;\n    }\n\n    var node = graph.getNodeByIndex(dataIndex);\n    var edge = graph.getEdgeByIndex(edgeDataIndex);\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath, 0.1);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath, 0.1);\n    });\n\n    if (node) {\n      fadeInItem(node, hoverNodeOpacityPath);\n      var focusNodeAdj = itemModel.get('focusNodeAdjacency');\n\n      if (focusNodeAdj === 'outEdges') {\n        zrUtil.each(node.outEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, hoverLineOpacityPath);\n          fadeInItem(edge.node2, hoverNodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'inEdges') {\n        zrUtil.each(node.inEdges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, hoverLineOpacityPath);\n          fadeInItem(edge.node1, hoverNodeOpacityPath);\n        });\n      } else if (focusNodeAdj === 'allEdges') {\n        zrUtil.each(node.edges, function (edge) {\n          if (edge.dataIndex < 0) {\n            return;\n          }\n\n          fadeInItem(edge, hoverLineOpacityPath);\n          edge.node1 !== node && fadeInItem(edge.node1, hoverNodeOpacityPath);\n          edge.node2 !== node && fadeInItem(edge.node2, hoverNodeOpacityPath);\n        });\n      }\n    }\n\n    if (edge) {\n      fadeInItem(edge, hoverLineOpacityPath);\n      fadeInItem(edge.node1, hoverNodeOpacityPath);\n      fadeInItem(edge.node2, hoverNodeOpacityPath);\n    }\n  },\n  unfocusNodeAdjacency: function unfocusNodeAdjacency(seriesModel, ecModel, api, payload) {\n    var graph = seriesModel.getGraph();\n    graph.eachNode(function (node) {\n      fadeOutItem(node, nodeOpacityPath);\n    });\n    graph.eachEdge(function (edge) {\n      fadeOutItem(edge, lineOpacityPath);\n    });\n  }\n}); // Add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nrequire(\"../helper/focusNodeAdjacencyAction\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'dragNode',\n  event: 'dragnode',\n  // here can only use 'update' now, other value is not support in echarts.\n  update: 'update'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sankey',\n    query: payload\n  }, function (seriesModel) {\n    seriesModel.setNodePosition(payload.dataIndex, [payload.localX, payload.localY]);\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar layout = require(\"../../util/layout\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel, api, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var nodeWidth = seriesModel.get('nodeWidth');\n    var nodeGap = seriesModel.get('nodeGap');\n    var layoutInfo = getViewRect(seriesModel, api);\n    seriesModel.layoutInfo = layoutInfo;\n    var width = layoutInfo.width;\n    var height = layoutInfo.height;\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n    var edges = graph.edges;\n    computeNodeValues(nodes);\n    var filteredNodes = zrUtil.filter(nodes, function (node) {\n      return node.getLayout().value === 0;\n    });\n    var iterations = filteredNodes.length !== 0 ? 0 : seriesModel.get('layoutIterations');\n    var orient = seriesModel.get('orient');\n    var nodeAlign = seriesModel.get('nodeAlign');\n    layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign);\n  });\n}\n/**\n * Get the layout position of the whole view\n *\n * @param {module:echarts/model/Series} seriesModel  the model object of sankey series\n * @param {module:echarts/ExtensionAPI} api  provide the API list that the developer can call\n * @return {module:zrender/core/BoundingRect}  size of rect to draw the sankey view\n */\n\n\nfunction getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n\nfunction layoutSankey(nodes, edges, nodeWidth, nodeGap, width, height, iterations, orient, nodeAlign) {\n  computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign);\n  computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient);\n  computeEdgeDepths(nodes, orient);\n}\n/**\n * Compute the value of each node by summing the associated edge's value\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeNodeValues(nodes) {\n  zrUtil.each(nodes, function (node) {\n    var value1 = sum(node.outEdges, getEdgeValue);\n    var value2 = sum(node.inEdges, getEdgeValue);\n    var nodeRawValue = node.getValue() || 0;\n    var value = Math.max(value1, value2, nodeRawValue);\n    node.setLayout({\n      value: value\n    }, true);\n  });\n}\n/**\n * Compute the x-position for each node.\n *\n * Here we use Kahn algorithm to detect cycle when we traverse\n * the node to computer the initial x position.\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param  {number} nodeWidth  the dx of the node\n * @param  {number} width  the whole width of the area to draw the view\n */\n\n\nfunction computeNodeBreadths(nodes, edges, nodeWidth, width, height, orient, nodeAlign) {\n  // Used to mark whether the edge is deleted. if it is deleted,\n  // the value is 0, otherwise it is 1.\n  var remainEdges = []; // Storage each node's indegree.\n\n  var indegreeArr = []; //Used to storage the node with indegree is equal to 0.\n\n  var zeroIndegrees = [];\n  var nextTargetNode = [];\n  var x = 0;\n  var kx = 0;\n\n  for (var i = 0; i < edges.length; i++) {\n    remainEdges[i] = 1;\n  }\n\n  for (i = 0; i < nodes.length; i++) {\n    indegreeArr[i] = nodes[i].inEdges.length;\n\n    if (indegreeArr[i] === 0) {\n      zeroIndegrees.push(nodes[i]);\n    }\n  }\n\n  var maxNodeDepth = -1; // Traversing nodes using topological sorting to calculate the\n  // horizontal(if orient === 'horizontal') or vertical(if orient === 'vertical')\n  // position of the nodes.\n\n  while (zeroIndegrees.length) {\n    for (var idx = 0; idx < zeroIndegrees.length; idx++) {\n      var node = zeroIndegrees[idx];\n      var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n      var isItemDepth = item.depth != null && item.depth >= 0;\n\n      if (isItemDepth && item.depth > maxNodeDepth) {\n        maxNodeDepth = item.depth;\n      }\n\n      node.setLayout({\n        depth: isItemDepth ? item.depth : x\n      }, true);\n      orient === 'vertical' ? node.setLayout({\n        dy: nodeWidth\n      }, true) : node.setLayout({\n        dx: nodeWidth\n      }, true);\n\n      for (var edgeIdx = 0; edgeIdx < node.outEdges.length; edgeIdx++) {\n        var edge = node.outEdges[edgeIdx];\n        var indexEdge = edges.indexOf(edge);\n        remainEdges[indexEdge] = 0;\n        var targetNode = edge.node2;\n        var nodeIndex = nodes.indexOf(targetNode);\n\n        if (--indegreeArr[nodeIndex] === 0 && nextTargetNode.indexOf(targetNode) < 0) {\n          nextTargetNode.push(targetNode);\n        }\n      }\n    }\n\n    ++x;\n    zeroIndegrees = nextTargetNode;\n    nextTargetNode = [];\n  }\n\n  for (i = 0; i < remainEdges.length; i++) {\n    if (remainEdges[i] === 1) {\n      throw new Error('Sankey is a DAG, the original data has cycle!');\n    }\n  }\n\n  var maxDepth = maxNodeDepth > x - 1 ? maxNodeDepth : x - 1;\n\n  if (nodeAlign && nodeAlign !== 'left') {\n    adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth);\n  }\n\n  var kx = orient === 'vertical' ? (height - nodeWidth) / maxDepth : (width - nodeWidth) / maxDepth;\n  scaleNodeBreadths(nodes, kx, orient);\n}\n\nfunction isNodeDepth(node) {\n  var item = node.hostGraph.data.getRawDataItem(node.dataIndex);\n  return item.depth != null && item.depth >= 0;\n}\n\nfunction adjustNodeWithNodeAlign(nodes, nodeAlign, orient, maxDepth) {\n  if (nodeAlign === 'right') {\n    var nextSourceNode = [];\n    var remainNodes = nodes;\n    var nodeHeight = 0;\n\n    while (remainNodes.length) {\n      for (var i = 0; i < remainNodes.length; i++) {\n        var node = remainNodes[i];\n        node.setLayout({\n          skNodeHeight: nodeHeight\n        }, true);\n\n        for (var j = 0; j < node.inEdges.length; j++) {\n          var edge = node.inEdges[j];\n\n          if (nextSourceNode.indexOf(edge.node1) < 0) {\n            nextSourceNode.push(edge.node1);\n          }\n        }\n      }\n\n      remainNodes = nextSourceNode;\n      nextSourceNode = [];\n      ++nodeHeight;\n    }\n\n    zrUtil.each(nodes, function (node) {\n      if (!isNodeDepth(node)) {\n        node.setLayout({\n          depth: Math.max(0, maxDepth - node.getLayout().skNodeHeight)\n        }, true);\n      }\n    });\n  } else if (nodeAlign === 'justify') {\n    moveSinksRight(nodes, maxDepth);\n  }\n}\n/**\n * All the node without outEgdes are assigned maximum x-position and\n *     be aligned in the last column.\n *\n * @param {module:echarts/data/Graph~Node} nodes.  node of sankey view.\n * @param {number} maxDepth.  use to assign to node without outEdges as x-position.\n */\n\n\nfunction moveSinksRight(nodes, maxDepth) {\n  zrUtil.each(nodes, function (node) {\n    if (!isNodeDepth(node) && !node.outEdges.length) {\n      node.setLayout({\n        depth: maxDepth\n      }, true);\n    }\n  });\n}\n/**\n * Scale node x-position to the width\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {number} kx   multiple used to scale nodes\n */\n\n\nfunction scaleNodeBreadths(nodes, kx, orient) {\n  zrUtil.each(nodes, function (node) {\n    var nodeDepth = node.getLayout().depth * kx;\n    orient === 'vertical' ? node.setLayout({\n      y: nodeDepth\n    }, true) : node.setLayout({\n      x: nodeDepth\n    }, true);\n  });\n}\n/**\n * Using Gauss-Seidel iterations method to compute the node depth(y-position)\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n *     in the same column.\n * @param {number} iterations  the number of iterations for the algorithm\n */\n\n\nfunction computeNodeDepths(nodes, edges, height, width, nodeGap, iterations, orient) {\n  var nodesByBreadth = prepareNodesByBreadth(nodes, orient);\n  initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient);\n  resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n\n  for (var alpha = 1; iterations > 0; iterations--) {\n    // 0.99 is a experience parameter, ensure that each iterations of\n    // changes as small as possible.\n    alpha *= 0.99;\n    relaxRightToLeft(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n    relaxLeftToRight(nodesByBreadth, alpha, orient);\n    resolveCollisions(nodesByBreadth, nodeGap, height, width, orient);\n  }\n}\n\nfunction prepareNodesByBreadth(nodes, orient) {\n  var nodesByBreadth = [];\n  var keyAttr = orient === 'vertical' ? 'y' : 'x';\n  var groupResult = groupData(nodes, function (node) {\n    return node.getLayout()[keyAttr];\n  });\n  groupResult.keys.sort(function (a, b) {\n    return a - b;\n  });\n  zrUtil.each(groupResult.keys, function (key) {\n    nodesByBreadth.push(groupResult.buckets.get(key));\n  });\n  return nodesByBreadth;\n}\n/**\n * Compute the original y-position for each node\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {module:echarts/data/Graph~Edge} edges  edge of sankey view\n * @param {number} height  the whole height of the area to draw the view\n * @param {number} nodeGap  the vertical distance between two nodes\n */\n\n\nfunction initializeNodeDepth(nodesByBreadth, edges, height, width, nodeGap, orient) {\n  var minKy = Infinity;\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    var n = nodes.length;\n    var sum = 0;\n    zrUtil.each(nodes, function (node) {\n      sum += node.getLayout().value;\n    });\n    var ky = orient === 'vertical' ? (width - (n - 1) * nodeGap) / sum : (height - (n - 1) * nodeGap) / sum;\n\n    if (ky < minKy) {\n      minKy = ky;\n    }\n  });\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node, i) {\n      var nodeDy = node.getLayout().value * minKy;\n\n      if (orient === 'vertical') {\n        node.setLayout({\n          x: i\n        }, true);\n        node.setLayout({\n          dx: nodeDy\n        }, true);\n      } else {\n        node.setLayout({\n          y: i\n        }, true);\n        node.setLayout({\n          dy: nodeDy\n        }, true);\n      }\n    });\n  });\n  zrUtil.each(edges, function (edge) {\n    var edgeDy = +edge.getValue() * minKy;\n    edge.setLayout({\n      dy: edgeDy\n    }, true);\n  });\n}\n/**\n * Resolve the collision of initialized depth (y-position)\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the nodes x-position.\n * @param {number} nodeGap  the vertical distance between two nodes\n * @param {number} height  the whole height of the area to draw the view\n */\n\n\nfunction resolveCollisions(nodesByBreadth, nodeGap, height, width, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    nodes.sort(function (a, b) {\n      return a.getLayout()[keyAttr] - b.getLayout()[keyAttr];\n    });\n    var nodeX;\n    var node;\n    var dy;\n    var y0 = 0;\n    var n = nodes.length;\n    var nodeDyAttr = orient === 'vertical' ? 'dx' : 'dy';\n\n    for (var i = 0; i < n; i++) {\n      node = nodes[i];\n      dy = y0 - node.getLayout()[keyAttr];\n\n      if (dy > 0) {\n        nodeX = node.getLayout()[keyAttr] + dy;\n        orient === 'vertical' ? node.setLayout({\n          x: nodeX\n        }, true) : node.setLayout({\n          y: nodeX\n        }, true);\n      }\n\n      y0 = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap;\n    }\n\n    var viewWidth = orient === 'vertical' ? width : height; // If the bottommost node goes outside the bounds, push it back up\n\n    dy = y0 - nodeGap - viewWidth;\n\n    if (dy > 0) {\n      nodeX = node.getLayout()[keyAttr] - dy;\n      orient === 'vertical' ? node.setLayout({\n        x: nodeX\n      }, true) : node.setLayout({\n        y: nodeX\n      }, true);\n      y0 = nodeX;\n\n      for (i = n - 2; i >= 0; --i) {\n        node = nodes[i];\n        dy = node.getLayout()[keyAttr] + node.getLayout()[nodeDyAttr] + nodeGap - y0;\n\n        if (dy > 0) {\n          nodeX = node.getLayout()[keyAttr] - dy;\n          orient === 'vertical' ? node.setLayout({\n            x: nodeX\n          }, true) : node.setLayout({\n            y: nodeX\n          }, true);\n        }\n\n        y0 = node.getLayout()[keyAttr];\n      }\n    }\n  });\n}\n/**\n * Change the y-position of the nodes, except most the right side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxRightToLeft(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth.slice().reverse(), function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.outEdges.length) {\n        var y = sum(node.outEdges, weightedTarget, orient) / sum(node.outEdges, getEdgeValue, orient);\n\n        if (isNaN(y)) {\n          var len = node.outEdges.length;\n          y = len ? sum(node.outEdges, centerTarget, orient) / len : 0;\n        }\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n\nfunction weightedTarget(edge, orient) {\n  return center(edge.node2, orient) * edge.getValue();\n}\n\nfunction centerTarget(edge, orient) {\n  return center(edge.node2, orient);\n}\n\nfunction weightedSource(edge, orient) {\n  return center(edge.node1, orient) * edge.getValue();\n}\n\nfunction centerSource(edge, orient) {\n  return center(edge.node1, orient);\n}\n\nfunction center(node, orient) {\n  return orient === 'vertical' ? node.getLayout().x + node.getLayout().dx / 2 : node.getLayout().y + node.getLayout().dy / 2;\n}\n\nfunction getEdgeValue(edge) {\n  return edge.getValue();\n}\n\nfunction sum(array, cb, orient) {\n  var sum = 0;\n  var len = array.length;\n  var i = -1;\n\n  while (++i < len) {\n    var value = +cb.call(array, array[i], orient);\n\n    if (!isNaN(value)) {\n      sum += value;\n    }\n  }\n\n  return sum;\n}\n/**\n * Change the y-position of the nodes, except most the left side nodes\n *\n * @param {Array.<Array.<module:echarts/data/Graph~Node>>} nodesByBreadth\n *     group by the array of all sankey nodes based on the node x-position.\n * @param {number} alpha  parameter used to adjust the nodes y-position\n */\n\n\nfunction relaxLeftToRight(nodesByBreadth, alpha, orient) {\n  zrUtil.each(nodesByBreadth, function (nodes) {\n    zrUtil.each(nodes, function (node) {\n      if (node.inEdges.length) {\n        var y = sum(node.inEdges, weightedSource, orient) / sum(node.inEdges, getEdgeValue, orient);\n\n        if (isNaN(y)) {\n          var len = node.inEdges.length;\n          y = len ? sum(node.inEdges, centerSource, orient) / len : 0;\n        }\n\n        if (orient === 'vertical') {\n          var nodeX = node.getLayout().x + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            x: nodeX\n          }, true);\n        } else {\n          var nodeY = node.getLayout().y + (y - center(node, orient)) * alpha;\n          node.setLayout({\n            y: nodeY\n          }, true);\n        }\n      }\n    });\n  });\n}\n/**\n * Compute the depth(y-position) of each edge\n *\n * @param {module:echarts/data/Graph~Node} nodes  node of sankey view\n */\n\n\nfunction computeEdgeDepths(nodes, orient) {\n  var keyAttr = orient === 'vertical' ? 'x' : 'y';\n  zrUtil.each(nodes, function (node) {\n    node.outEdges.sort(function (a, b) {\n      return a.node2.getLayout()[keyAttr] - b.node2.getLayout()[keyAttr];\n    });\n    node.inEdges.sort(function (a, b) {\n      return a.node1.getLayout()[keyAttr] - b.node1.getLayout()[keyAttr];\n    });\n  });\n  zrUtil.each(nodes, function (node) {\n    var sy = 0;\n    var ty = 0;\n    zrUtil.each(node.outEdges, function (edge) {\n      edge.setLayout({\n        sy: sy\n      }, true);\n      sy += edge.getLayout().dy;\n    });\n    zrUtil.each(node.inEdges, function (edge) {\n      edge.setLayout({\n        ty: ty\n      }, true);\n      ty += edge.getLayout().dy;\n    });\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar VisualMapping = require(\"../../visual/VisualMapping\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel, payload) {\n  ecModel.eachSeriesByType('sankey', function (seriesModel) {\n    var graph = seriesModel.getGraph();\n    var nodes = graph.nodes;\n\n    if (nodes.length) {\n      var minValue = Infinity;\n      var maxValue = -Infinity;\n      zrUtil.each(nodes, function (node) {\n        var nodeValue = node.getLayout().value;\n\n        if (nodeValue < minValue) {\n          minValue = nodeValue;\n        }\n\n        if (nodeValue > maxValue) {\n          maxValue = nodeValue;\n        }\n      });\n      zrUtil.each(nodes, function (node) {\n        var mapping = new VisualMapping({\n          type: 'color',\n          mappingMethod: 'linear',\n          dataExtent: [minValue, maxValue],\n          visual: seriesModel.get('color')\n        });\n        var mapValueToColor = mapping.mapValueToVisual(node.getLayout().value);\n        var customColor = node.getModel().get('itemStyle.color');\n        customColor != null ? node.setVisual('color', customColor) : node.setVisual('color', mapValueToColor);\n      });\n    }\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar Group = _graphic.Group;\n\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar SymbolClz = require(\"./Symbol\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Symbol with ripple effect\n * @module echarts/chart/helper/EffectSymbol\n */\n\n\nvar EFFECT_RIPPLE_NUMBER = 3;\n\nfunction normalizeSymbolSize(symbolSize) {\n  if (!zrUtil.isArray(symbolSize)) {\n    symbolSize = [+symbolSize, +symbolSize];\n  }\n\n  return symbolSize;\n}\n\nfunction updateRipplePath(rippleGroup, effectCfg) {\n  var color = effectCfg.rippleEffectColor || effectCfg.color;\n  rippleGroup.eachChild(function (ripplePath) {\n    ripplePath.attr({\n      z: effectCfg.z,\n      zlevel: effectCfg.zlevel,\n      style: {\n        stroke: effectCfg.brushType === 'stroke' ? color : null,\n        fill: effectCfg.brushType === 'fill' ? color : null\n      }\n    });\n  });\n}\n/**\n * @constructor\n * @param {module:echarts/data/List} data\n * @param {number} idx\n * @extends {module:zrender/graphic/Group}\n */\n\n\nfunction EffectSymbol(data, idx) {\n  Group.call(this);\n  var symbol = new SymbolClz(data, idx);\n  var rippleGroup = new Group();\n  this.add(symbol);\n  this.add(rippleGroup);\n\n  rippleGroup.beforeUpdate = function () {\n    this.attr(symbol.getScale());\n  };\n\n  this.updateData(data, idx);\n}\n\nvar effectSymbolProto = EffectSymbol.prototype;\n\neffectSymbolProto.stopEffectAnimation = function () {\n  this.childAt(1).removeAll();\n};\n\neffectSymbolProto.startEffectAnimation = function (effectCfg) {\n  var symbolType = effectCfg.symbolType;\n  var color = effectCfg.color;\n  var rippleGroup = this.childAt(1);\n\n  for (var i = 0; i < EFFECT_RIPPLE_NUMBER; i++) {\n    // If width/height are set too small (e.g., set to 1) on ios10\n    // and macOS Sierra, a circle stroke become a rect, no matter what\n    // the scale is set. So we set width/height as 2. See #4136.\n    var ripplePath = createSymbol(symbolType, -1, -1, 2, 2, color);\n    ripplePath.attr({\n      style: {\n        strokeNoScale: true\n      },\n      z2: 99,\n      silent: true,\n      scale: [0.5, 0.5]\n    });\n    var delay = -i / EFFECT_RIPPLE_NUMBER * effectCfg.period + effectCfg.effectOffset; // TODO Configurable effectCfg.period\n\n    ripplePath.animate('', true).when(effectCfg.period, {\n      scale: [effectCfg.rippleScale / 2, effectCfg.rippleScale / 2]\n    }).delay(delay).start();\n    ripplePath.animateStyle(true).when(effectCfg.period, {\n      opacity: 0\n    }).delay(delay).start();\n    rippleGroup.add(ripplePath);\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Update effect symbol\n */\n\n\neffectSymbolProto.updateEffectAnimation = function (effectCfg) {\n  var oldEffectCfg = this._effectCfg;\n  var rippleGroup = this.childAt(1); // Must reinitialize effect if following configuration changed\n\n  var DIFFICULT_PROPS = ['symbolType', 'period', 'rippleScale'];\n\n  for (var i = 0; i < DIFFICULT_PROPS.length; i++) {\n    var propName = DIFFICULT_PROPS[i];\n\n    if (oldEffectCfg[propName] !== effectCfg[propName]) {\n      this.stopEffectAnimation();\n      this.startEffectAnimation(effectCfg);\n      return;\n    }\n  }\n\n  updateRipplePath(rippleGroup, effectCfg);\n};\n/**\n * Highlight symbol\n */\n\n\neffectSymbolProto.highlight = function () {\n  this.trigger('emphasis');\n};\n/**\n * Downplay symbol\n */\n\n\neffectSymbolProto.downplay = function () {\n  this.trigger('normal');\n};\n/**\n * Update symbol properties\n * @param  {module:echarts/data/List} data\n * @param  {number} idx\n */\n\n\neffectSymbolProto.updateData = function (data, idx) {\n  var seriesModel = data.hostModel;\n  this.childAt(0).updateData(data, idx);\n  var rippleGroup = this.childAt(1);\n  var itemModel = data.getItemModel(idx);\n  var symbolType = data.getItemVisual(idx, 'symbol');\n  var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n  var color = data.getItemVisual(idx, 'color');\n  rippleGroup.attr('scale', symbolSize);\n  rippleGroup.traverse(function (ripplePath) {\n    ripplePath.attr({\n      fill: color\n    });\n  });\n  var symbolOffset = itemModel.getShallow('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = rippleGroup.position;\n    pos[0] = parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] = parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = data.getItemVisual(idx, 'symbolRotate');\n  rippleGroup.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  var effectCfg = {};\n  effectCfg.showEffectOn = seriesModel.get('showEffectOn');\n  effectCfg.rippleScale = itemModel.get('rippleEffect.scale');\n  effectCfg.brushType = itemModel.get('rippleEffect.brushType');\n  effectCfg.period = itemModel.get('rippleEffect.period') * 1000;\n  effectCfg.effectOffset = idx / data.count();\n  effectCfg.z = itemModel.getShallow('z') || 0;\n  effectCfg.zlevel = itemModel.getShallow('zlevel') || 0;\n  effectCfg.symbolType = symbolType;\n  effectCfg.color = color;\n  effectCfg.rippleEffectColor = itemModel.get('rippleEffect.color');\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n\n  if (effectCfg.showEffectOn === 'render') {\n    this._effectCfg ? this.updateEffectAnimation(effectCfg) : this.startEffectAnimation(effectCfg);\n    this._effectCfg = effectCfg;\n  } else {\n    // Not keep old effect config\n    this._effectCfg = null;\n    this.stopEffectAnimation();\n    var symbol = this.childAt(0);\n\n    var onEmphasis = function onEmphasis() {\n      symbol.highlight();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.startEffectAnimation(effectCfg);\n      }\n    };\n\n    var onNormal = function onNormal() {\n      symbol.downplay();\n\n      if (effectCfg.showEffectOn !== 'render') {\n        this.stopEffectAnimation();\n      }\n    };\n\n    this.on('mouseover', onEmphasis, this).on('mouseout', onNormal, this).on('emphasis', onEmphasis, this).on('normal', onNormal, this);\n  }\n\n  this._effectCfg = effectCfg;\n};\n\neffectSymbolProto.fadeOut = function (cb) {\n  this.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  cb && cb();\n};\n\nzrUtil.inherits(EffectSymbol, Group);\nvar _default = EffectSymbol;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./lines/LinesSeries\");\n\nrequire(\"./lines/LinesView\");\n\nvar linesLayout = require(\"./lines/linesLayout\");\n\nvar linesVisual = require(\"./lines/linesVisual\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(linesLayout);\necharts.registerVisual(linesVisual);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar List = require(\"../../data/List\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar concatArray = _util.concatArray;\nvar mergeAll = _util.mergeAll;\nvar map = _util.map;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint32Array, Float64Array, Float32Array */\n\n\nvar Uint32Arr = typeof Uint32Array === 'undefined' ? Array : Uint32Array;\nvar Float64Arr = typeof Float64Array === 'undefined' ? Array : Float64Array;\n\nfunction compatEc2(seriesOpt) {\n  var data = seriesOpt.data;\n\n  if (data && data[0] && data[0][0] && data[0][0].coord) {\n    seriesOpt.data = map(data, function (itemOpt) {\n      var coords = [itemOpt[0].coord, itemOpt[1].coord];\n      var target = {\n        coords: coords\n      };\n\n      if (itemOpt[0].name) {\n        target.fromName = itemOpt[0].name;\n      }\n\n      if (itemOpt[1].name) {\n        target.toName = itemOpt[1].name;\n      }\n\n      return mergeAll([target, itemOpt[0], itemOpt[1]]);\n    });\n  }\n}\n\nvar LinesSeries = SeriesModel.extend({\n  type: 'series.lines',\n  dependencies: ['grid', 'polar'],\n  visualColorAccessPath: 'lineStyle.color',\n  init: function init(option) {\n    // The input data may be null/undefined.\n    option.data = option.data || []; // Not using preprocessor because mergeOption may not have series.type\n\n    compatEc2(option);\n\n    var result = this._processFlatCoordsArray(option.data);\n\n    this._flatCoords = result.flatCoords;\n    this._flatCoordsOffset = result.flatCoordsOffset;\n\n    if (result.flatCoords) {\n      option.data = new Float32Array(result.count);\n    }\n\n    LinesSeries.superApply(this, 'init', arguments);\n  },\n  mergeOption: function mergeOption(option) {\n    // The input data may be null/undefined.\n    option.data = option.data || [];\n    compatEc2(option);\n\n    if (option.data) {\n      // Only update when have option data to merge.\n      var result = this._processFlatCoordsArray(option.data);\n\n      this._flatCoords = result.flatCoords;\n      this._flatCoordsOffset = result.flatCoordsOffset;\n\n      if (result.flatCoords) {\n        option.data = new Float32Array(result.count);\n      }\n    }\n\n    LinesSeries.superApply(this, 'mergeOption', arguments);\n  },\n  appendData: function appendData(params) {\n    var result = this._processFlatCoordsArray(params.data);\n\n    if (result.flatCoords) {\n      if (!this._flatCoords) {\n        this._flatCoords = result.flatCoords;\n        this._flatCoordsOffset = result.flatCoordsOffset;\n      } else {\n        this._flatCoords = concatArray(this._flatCoords, result.flatCoords);\n        this._flatCoordsOffset = concatArray(this._flatCoordsOffset, result.flatCoordsOffset);\n      }\n\n      params.data = new Float32Array(result.count);\n    }\n\n    this.getRawData().appendData(params.data);\n  },\n  _getCoordsFromItemModel: function _getCoordsFromItemModel(idx) {\n    var itemModel = this.getData().getItemModel(idx);\n    var coords = itemModel.option instanceof Array ? itemModel.option : itemModel.getShallow('coords');\n    return coords;\n  },\n  getLineCoordsCount: function getLineCoordsCount(idx) {\n    if (this._flatCoordsOffset) {\n      return this._flatCoordsOffset[idx * 2 + 1];\n    } else {\n      return this._getCoordsFromItemModel(idx).length;\n    }\n  },\n  getLineCoords: function getLineCoords(idx, out) {\n    if (this._flatCoordsOffset) {\n      var offset = this._flatCoordsOffset[idx * 2];\n      var len = this._flatCoordsOffset[idx * 2 + 1];\n\n      for (var i = 0; i < len; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = this._flatCoords[offset + i * 2];\n        out[i][1] = this._flatCoords[offset + i * 2 + 1];\n      }\n\n      return len;\n    } else {\n      var coords = this._getCoordsFromItemModel(idx);\n\n      for (var i = 0; i < coords.length; i++) {\n        out[i] = out[i] || [];\n        out[i][0] = coords[i][0];\n        out[i][1] = coords[i][1];\n      }\n\n      return coords.length;\n    }\n  },\n  _processFlatCoordsArray: function _processFlatCoordsArray(data) {\n    var startOffset = 0;\n\n    if (this._flatCoords) {\n      startOffset = this._flatCoords.length;\n    } // Stored as a typed array. In format\n    // Points Count(2) | x | y | x | y | Points Count(3) | x |  y | x | y | x | y |\n\n\n    if (typeof data[0] === 'number') {\n      var len = data.length; // Store offset and len of each segment\n\n      var coordsOffsetAndLenStorage = new Uint32Arr(len);\n      var coordsStorage = new Float64Arr(len);\n      var coordsCursor = 0;\n      var offsetCursor = 0;\n      var dataCount = 0;\n\n      for (var i = 0; i < len;) {\n        dataCount++;\n        var count = data[i++]; // Offset\n\n        coordsOffsetAndLenStorage[offsetCursor++] = coordsCursor + startOffset; // Len\n\n        coordsOffsetAndLenStorage[offsetCursor++] = count;\n\n        for (var k = 0; k < count; k++) {\n          var x = data[i++];\n          var y = data[i++];\n          coordsStorage[coordsCursor++] = x;\n          coordsStorage[coordsCursor++] = y;\n\n          if (i > len) {}\n        }\n      }\n\n      return {\n        flatCoordsOffset: new Uint32Array(coordsOffsetAndLenStorage.buffer, 0, offsetCursor),\n        flatCoords: coordsStorage,\n        count: dataCount\n      };\n    }\n\n    return {\n      flatCoordsOffset: null,\n      flatCoords: null,\n      count: data.length\n    };\n  },\n  getInitialData: function getInitialData(option, ecModel) {\n    var lineData = new List(['value'], this);\n    lineData.hasItemOption = false;\n    lineData.initData(option.data, [], function (dataItem, dimName, dataIndex, dimIndex) {\n      // dataItem is simply coords\n      if (dataItem instanceof Array) {\n        return NaN;\n      } else {\n        lineData.hasItemOption = true;\n        var value = dataItem.value;\n\n        if (value != null) {\n          return value instanceof Array ? value[dimIndex] : value;\n        }\n      }\n    });\n    return lineData;\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var itemModel = data.getItemModel(dataIndex);\n    var name = itemModel.get('name');\n\n    if (name) {\n      return name;\n    }\n\n    var fromName = itemModel.get('fromName');\n    var toName = itemModel.get('toName');\n    var html = [];\n    fromName != null && html.push(fromName);\n    toName != null && html.push(toName);\n    return encodeHTML(html.join(' > '));\n  },\n  preventIncremental: function preventIncremental() {\n    return !!this.get('effect.show');\n  },\n  getProgressive: function getProgressive() {\n    var progressive = this.option.progressive;\n\n    if (progressive == null) {\n      return this.option.large ? 1e4 : this.get('progressive');\n    }\n\n    return progressive;\n  },\n  getProgressiveThreshold: function getProgressiveThreshold() {\n    var progressiveThreshold = this.option.progressiveThreshold;\n\n    if (progressiveThreshold == null) {\n      return this.option.large ? 2e4 : this.get('progressiveThreshold');\n    }\n\n    return progressiveThreshold;\n  },\n  defaultOption: {\n    coordinateSystem: 'geo',\n    zlevel: 0,\n    z: 2,\n    legendHoverLink: true,\n    hoverAnimation: true,\n    // Cartesian coordinate system\n    xAxisIndex: 0,\n    yAxisIndex: 0,\n    symbol: ['none', 'none'],\n    symbolSize: [10, 10],\n    // Geo coordinate system\n    geoIndex: 0,\n    effect: {\n      show: false,\n      period: 4,\n      // Animation delay. support callback\n      // delay: 0,\n      // If move with constant speed px/sec\n      // period will be ignored if this property is > 0,\n      constantSpeed: 0,\n      symbol: 'circle',\n      symbolSize: 3,\n      loop: true,\n      // Length of trail, 0 - 1\n      trailLength: 0.2 // Same with lineStyle.color\n      // color\n\n    },\n    large: false,\n    // Available when large is true\n    largeThreshold: 2000,\n    // If lines are polyline\n    // polyline not support curveness, label, animation\n    polyline: false,\n    // If clip the overflow.\n    // Available when coordinateSystem is cartesian or polar.\n    clip: true,\n    label: {\n      show: false,\n      position: 'end' // distance: 5,\n      // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n\n    },\n    lineStyle: {\n      opacity: 0.5\n    }\n  }\n});\nvar _default = LinesSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar LineDraw = require(\"../helper/LineDraw\");\n\nvar EffectLine = require(\"../helper/EffectLine\");\n\nvar Line = require(\"../helper/Line\");\n\nvar Polyline = require(\"../helper/Polyline\");\n\nvar EffectPolyline = require(\"../helper/EffectPolyline\");\n\nvar LargeLineDraw = require(\"../helper/LargeLineDraw\");\n\nvar linesLayout = require(\"./linesLayout\");\n\nvar _createClipPathFromCoordSys = require(\"../helper/createClipPathFromCoordSys\");\n\nvar createClipPath = _createClipPathFromCoordSys.createClipPath;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = echarts.extendChartView({\n  type: 'lines',\n  init: function init() {},\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    var zlevel = seriesModel.get('zlevel');\n    var trailLength = seriesModel.get('effect.trailLength');\n    var zr = api.getZr(); // Avoid the drag cause ghost shadow\n    // FIXME Better way ?\n    // SVG doesn't support\n\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg) {\n      zr.painter.getLayer(zlevel).clear(true);\n    } // Config layer with motion blur\n\n\n    if (this._lastZlevel != null && !isSvg) {\n      zr.configLayer(this._lastZlevel, {\n        motionBlur: false\n      });\n    }\n\n    if (this._showEffect(seriesModel) && trailLength) {\n      if (!isSvg) {\n        zr.configLayer(zlevel, {\n          motionBlur: true,\n          lastFrameAlpha: Math.max(Math.min(trailLength / 10 + 0.9, 1), 0)\n        });\n      }\n    }\n\n    lineDraw.updateData(data);\n    var clipPath = seriesModel.get('clip', true) && createClipPath(seriesModel.coordinateSystem, false, seriesModel);\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n\n    this._lastZlevel = zlevel;\n    this._finished = true;\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n\n    var lineDraw = this._updateLineDraw(data, seriesModel);\n\n    lineDraw.incrementalPrepareUpdate(data);\n\n    this._clearLayer(api);\n\n    this._finished = false;\n  },\n  incrementalRender: function incrementalRender(taskParams, seriesModel, ecModel) {\n    this._lineDraw.incrementalUpdate(taskParams, seriesModel.getData());\n\n    this._finished = taskParams.end === seriesModel.getData().count();\n  },\n  updateTransform: function updateTransform(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var pipelineContext = seriesModel.pipelineContext;\n\n    if (!this._finished || pipelineContext.large || pipelineContext.progressiveRender) {\n      // TODO Don't have to do update in large mode. Only do it when there are millions of data.\n      return {\n        update: true\n      };\n    } else {\n      // TODO Use same logic with ScatterView.\n      // Manually update layout\n      var res = linesLayout.reset(seriesModel);\n\n      if (res.progress) {\n        res.progress({\n          start: 0,\n          end: data.count()\n        }, data);\n      }\n\n      this._lineDraw.updateLayout();\n\n      this._clearLayer(api);\n    }\n  },\n  _updateLineDraw: function _updateLineDraw(data, seriesModel) {\n    var lineDraw = this._lineDraw;\n\n    var hasEffect = this._showEffect(seriesModel);\n\n    var isPolyline = !!seriesModel.get('polyline');\n    var pipelineContext = seriesModel.pipelineContext;\n    var isLargeDraw = pipelineContext.large;\n\n    if (!lineDraw || hasEffect !== this._hasEffet || isPolyline !== this._isPolyline || isLargeDraw !== this._isLargeDraw) {\n      if (lineDraw) {\n        lineDraw.remove();\n      }\n\n      lineDraw = this._lineDraw = isLargeDraw ? new LargeLineDraw() : new LineDraw(isPolyline ? hasEffect ? EffectPolyline : Polyline : hasEffect ? EffectLine : Line);\n      this._hasEffet = hasEffect;\n      this._isPolyline = isPolyline;\n      this._isLargeDraw = isLargeDraw;\n      this.group.removeAll();\n    }\n\n    this.group.add(lineDraw.group);\n    return lineDraw;\n  },\n  _showEffect: function _showEffect(seriesModel) {\n    return !!seriesModel.get('effect.show');\n  },\n  _clearLayer: function _clearLayer(api) {\n    // Not use motion when dragging or zooming\n    var zr = api.getZr();\n    var isSvg = zr.painter.getType() === 'svg';\n\n    if (!isSvg && this._lastZlevel != null) {\n      zr.painter.getLayer(this._lastZlevel).clear(true);\n    }\n  },\n  remove: function remove(ecModel, api) {\n    this._lineDraw && this._lineDraw.remove();\n    this._lineDraw = null; // Clear motion when lineDraw is removed\n\n    this._clearLayer(api);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Polyline = require(\"./Polyline\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar EffectLine = require(\"./EffectLine\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Provide effect for line\n * @module echarts/chart/helper/EffectLine\n */\n\n/**\n * @constructor\n * @extends {module:echarts/chart/helper/EffectLine}\n * @alias {module:echarts/chart/helper/Polyline}\n */\n\n\nfunction EffectPolyline(lineData, idx, seriesScope) {\n  EffectLine.call(this, lineData, idx, seriesScope);\n  this._lastFrame = 0;\n  this._lastFramePercent = 0;\n}\n\nvar effectPolylineProto = EffectPolyline.prototype; // Overwrite\n\neffectPolylineProto.createLine = function (lineData, idx, seriesScope) {\n  return new Polyline(lineData, idx, seriesScope);\n}; // Overwrite\n\n\neffectPolylineProto.updateAnimationPoints = function (symbol, points) {\n  this._points = points;\n  var accLenArr = [0];\n  var len = 0;\n\n  for (var i = 1; i < points.length; i++) {\n    var p1 = points[i - 1];\n    var p2 = points[i];\n    len += vec2.dist(p1, p2);\n    accLenArr.push(len);\n  }\n\n  if (len === 0) {\n    return;\n  }\n\n  for (var i = 0; i < accLenArr.length; i++) {\n    accLenArr[i] /= len;\n  }\n\n  this._offsets = accLenArr;\n  this._length = len;\n}; // Overwrite\n\n\neffectPolylineProto.getLineLength = function (symbol) {\n  return this._length;\n}; // Overwrite\n\n\neffectPolylineProto.updateSymbolPosition = function (symbol) {\n  var t = symbol.__t;\n  var points = this._points;\n  var offsets = this._offsets;\n  var len = points.length;\n\n  if (!offsets) {\n    // Has length 0\n    return;\n  }\n\n  var lastFrame = this._lastFrame;\n  var frame;\n\n  if (t < this._lastFramePercent) {\n    // Start from the next frame\n    // PENDING start from lastFrame ?\n    var start = Math.min(lastFrame + 1, len - 1);\n\n    for (frame = start; frame >= 0; frame--) {\n      if (offsets[frame] <= t) {\n        break;\n      }\n    } // PENDING really need to do this ?\n\n\n    frame = Math.min(frame, len - 2);\n  } else {\n    for (var frame = lastFrame; frame < len; frame++) {\n      if (offsets[frame] > t) {\n        break;\n      }\n    }\n\n    frame = Math.min(frame - 1, len - 2);\n  }\n\n  vec2.lerp(symbol.position, points[frame], points[frame + 1], (t - offsets[frame]) / (offsets[frame + 1] - offsets[frame]));\n  var tx = points[frame + 1][0] - points[frame][0];\n  var ty = points[frame + 1][1] - points[frame][1];\n  symbol.rotation = -Math.atan2(ty, tx) - Math.PI / 2;\n  this._lastFrame = frame;\n  this._lastFramePercent = t;\n  symbol.ignore = false;\n};\n\nzrUtil.inherits(EffectPolyline, EffectLine);\nvar _default = EffectPolyline;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar graphic = require(\"../../util/graphic\");\n\nvar IncrementalDisplayable = require(\"zrender/lib/graphic/IncrementalDisplayable\");\n\nvar lineContain = require(\"zrender/lib/contain/line\");\n\nvar quadraticContain = require(\"zrender/lib/contain/quadratic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Batch by color\n\n\nvar LargeLineShape = graphic.extendShape({\n  shape: {\n    polyline: false,\n    curveness: 0,\n    segs: []\n  },\n  buildPath: function buildPath(path, shape) {\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          path.moveTo(segs[i++], segs[i++]);\n\n          for (var k = 1; k < count; k++) {\n            path.lineTo(segs[i++], segs[i++]);\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n        path.moveTo(x0, y0);\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n          path.quadraticCurveTo(x2, y2, x1, y1);\n        } else {\n          path.lineTo(x1, y1);\n        }\n      }\n    }\n  },\n  findDataIndex: function findDataIndex(x, y) {\n    var shape = this.shape;\n    var segs = shape.segs;\n    var curveness = shape.curveness;\n\n    if (shape.polyline) {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var count = segs[i++];\n\n        if (count > 0) {\n          var x0 = segs[i++];\n          var y0 = segs[i++];\n\n          for (var k = 1; k < count; k++) {\n            var x1 = segs[i++];\n            var y1 = segs[i++];\n\n            if (lineContain.containStroke(x0, y0, x1, y1)) {\n              return dataIndex;\n            }\n          }\n        }\n\n        dataIndex++;\n      }\n    } else {\n      var dataIndex = 0;\n\n      for (var i = 0; i < segs.length;) {\n        var x0 = segs[i++];\n        var y0 = segs[i++];\n        var x1 = segs[i++];\n        var y1 = segs[i++];\n\n        if (curveness > 0) {\n          var x2 = (x0 + x1) / 2 - (y0 - y1) * curveness;\n          var y2 = (y0 + y1) / 2 - (x1 - x0) * curveness;\n\n          if (quadraticContain.containStroke(x0, y0, x2, y2, x1, y1)) {\n            return dataIndex;\n          }\n        } else {\n          if (lineContain.containStroke(x0, y0, x1, y1)) {\n            return dataIndex;\n          }\n        }\n\n        dataIndex++;\n      }\n    }\n\n    return -1;\n  }\n});\n\nfunction LargeLineDraw() {\n  this.group = new graphic.Group();\n}\n\nvar largeLineProto = LargeLineDraw.prototype;\n\nlargeLineProto.isPersistent = function () {\n  return !this._incremental;\n};\n/**\n * Update symbols draw by new data\n * @param {module:echarts/data/List} data\n */\n\n\nlargeLineProto.updateData = function (data) {\n  this.group.removeAll();\n  var lineEl = new LargeLineShape({\n    rectHover: true,\n    cursor: 'default'\n  });\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data); // Add back\n\n\n  this.group.add(lineEl);\n  this._incremental = null;\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalPrepareUpdate = function (data) {\n  this.group.removeAll();\n\n  this._clearIncremental();\n\n  if (data.count() > 5e5) {\n    if (!this._incremental) {\n      this._incremental = new IncrementalDisplayable({\n        silent: true\n      });\n    }\n\n    this.group.add(this._incremental);\n  } else {\n    this._incremental = null;\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.incrementalUpdate = function (taskParams, data) {\n  var lineEl = new LargeLineShape();\n  lineEl.setShape({\n    segs: data.getLayout('linesPoints')\n  });\n\n  this._setCommon(lineEl, data, !!this._incremental);\n\n  if (!this._incremental) {\n    lineEl.rectHover = true;\n    lineEl.cursor = 'default';\n    lineEl.__startIndex = taskParams.start;\n    this.group.add(lineEl);\n  } else {\n    this._incremental.addDisplayable(lineEl, true);\n  }\n};\n/**\n * @override\n */\n\n\nlargeLineProto.remove = function () {\n  this._clearIncremental();\n\n  this._incremental = null;\n  this.group.removeAll();\n};\n\nlargeLineProto._setCommon = function (lineEl, data, isIncremental) {\n  var hostModel = data.hostModel;\n  lineEl.setShape({\n    polyline: hostModel.get('polyline'),\n    curveness: hostModel.get('lineStyle.curveness')\n  });\n  lineEl.useStyle(hostModel.getModel('lineStyle').getLineStyle());\n  lineEl.style.strokeNoScale = true;\n  var visualColor = data.getVisual('color');\n\n  if (visualColor) {\n    lineEl.setStyle('stroke', visualColor);\n  }\n\n  lineEl.setStyle('fill');\n\n  if (!isIncremental) {\n    // Enable tooltip\n    // PENDING May have performance issue when path is extremely large\n    lineEl.seriesIndex = hostModel.seriesIndex;\n    lineEl.on('mousemove', function (e) {\n      lineEl.dataIndex = null;\n      var dataIndex = lineEl.findDataIndex(e.offsetX, e.offsetY);\n\n      if (dataIndex > 0) {\n        // Provide dataIndex for tooltip\n        lineEl.dataIndex = dataIndex + lineEl.__startIndex;\n      }\n    });\n  }\n};\n\nlargeLineProto._clearIncremental = function () {\n  var incremental = this._incremental;\n\n  if (incremental) {\n    incremental.clearDisplaybles();\n  }\n};\n\nvar _default = LargeLineDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction normalize(a) {\n  if (!(a instanceof Array)) {\n    a = [a, a];\n  }\n\n  return a;\n}\n\nvar opacityQuery = 'lineStyle.opacity'.split('.');\nvar _default = {\n  seriesType: 'lines',\n  reset: function reset(seriesModel, ecModel, api) {\n    var symbolType = normalize(seriesModel.get('symbol'));\n    var symbolSize = normalize(seriesModel.get('symbolSize'));\n    var data = seriesModel.getData();\n    data.setVisual('fromSymbol', symbolType && symbolType[0]);\n    data.setVisual('toSymbol', symbolType && symbolType[1]);\n    data.setVisual('fromSymbolSize', symbolSize && symbolSize[0]);\n    data.setVisual('toSymbolSize', symbolSize && symbolSize[1]);\n    data.setVisual('opacity', seriesModel.get(opacityQuery));\n\n    function dataEach(data, idx) {\n      var itemModel = data.getItemModel(idx);\n      var symbolType = normalize(itemModel.getShallow('symbol', true));\n      var symbolSize = normalize(itemModel.getShallow('symbolSize', true));\n      var opacity = itemModel.get(opacityQuery);\n      symbolType[0] && data.setItemVisual(idx, 'fromSymbol', symbolType[0]);\n      symbolType[1] && data.setItemVisual(idx, 'toSymbol', symbolType[1]);\n      symbolSize[0] && data.setItemVisual(idx, 'fromSymbolSize', symbolSize[0]);\n      symbolSize[1] && data.setItemVisual(idx, 'toSymbolSize', symbolSize[1]);\n      data.setItemVisual(idx, 'opacity', opacity);\n    }\n\n    return {\n      dataEach: data.hasItemOption ? dataEach : null\n    };\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./heatmap/HeatmapSeries\");\n\nrequire(\"./heatmap/HeatmapView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createListFromArray = require(\"../helper/createListFromArray\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = SeriesModel.extend({\n  type: 'series.heatmap',\n  getInitialData: function getInitialData(option, ecModel) {\n    return createListFromArray(this.getSource(), this, {\n      generateCoord: 'value'\n    });\n  },\n  preventIncremental: function preventIncremental() {\n    var coordSysCreator = CoordinateSystem.get(this.get('coordinateSystem'));\n\n    if (coordSysCreator && coordSysCreator.dimensions) {\n      return coordSysCreator.dimensions[0] === 'lng' && coordSysCreator.dimensions[1] === 'lat';\n    }\n  },\n  defaultOption: {\n    // Cartesian2D or geo\n    coordinateSystem: 'cartesian2d',\n    zlevel: 0,\n    z: 2,\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    // Geo coordinate system\n    geoIndex: 0,\n    blurSize: 30,\n    pointSize: 20,\n    maxOpacity: 1,\n    minOpacity: 0\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar HeatmapLayer = require(\"./HeatmapLayer\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getIsInPiecewiseRange(dataExtent, pieceList, selected) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  pieceList = zrUtil.map(pieceList, function (piece) {\n    return {\n      interval: [(piece.interval[0] - dataExtent[0]) / dataSpan, (piece.interval[1] - dataExtent[0]) / dataSpan]\n    };\n  });\n  var len = pieceList.length;\n  var lastIndex = 0;\n  return function (val) {\n    // Try to find in the location of the last found\n    for (var i = lastIndex; i < len; i++) {\n      var interval = pieceList[i].interval;\n\n      if (interval[0] <= val && val <= interval[1]) {\n        lastIndex = i;\n        break;\n      }\n    }\n\n    if (i === len) {\n      // Not found, back interation\n      for (var i = lastIndex - 1; i >= 0; i--) {\n        var interval = pieceList[i].interval;\n\n        if (interval[0] <= val && val <= interval[1]) {\n          lastIndex = i;\n          break;\n        }\n      }\n    }\n\n    return i >= 0 && i < len && selected[i];\n  };\n}\n\nfunction getIsInContinuousRange(dataExtent, range) {\n  var dataSpan = dataExtent[1] - dataExtent[0];\n  range = [(range[0] - dataExtent[0]) / dataSpan, (range[1] - dataExtent[0]) / dataSpan];\n  return function (val) {\n    return val >= range[0] && val <= range[1];\n  };\n}\n\nfunction isGeoCoordSys(coordSys) {\n  var dimensions = coordSys.dimensions; // Not use coorSys.type === 'geo' because coordSys maybe extended\n\n  return dimensions[0] === 'lng' && dimensions[1] === 'lat';\n}\n\nvar _default = echarts.extendChartView({\n  type: 'heatmap',\n  render: function render(seriesModel, ecModel, api) {\n    var visualMapOfThisSeries;\n    ecModel.eachComponent('visualMap', function (visualMap) {\n      visualMap.eachTargetSeries(function (targetSeries) {\n        if (targetSeries === seriesModel) {\n          visualMapOfThisSeries = visualMap;\n        }\n      });\n    });\n    this.group.removeAll();\n    this._incrementalDisplayable = null;\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type === 'cartesian2d' || coordSys.type === 'calendar') {\n      this._renderOnCartesianAndCalendar(seriesModel, api, 0, seriesModel.getData().count());\n    } else if (isGeoCoordSys(coordSys)) {\n      this._renderOnGeo(coordSys, seriesModel, visualMapOfThisSeries, api);\n    }\n  },\n  incrementalPrepareRender: function incrementalPrepareRender(seriesModel, ecModel, api) {\n    this.group.removeAll();\n  },\n  incrementalRender: function incrementalRender(params, seriesModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys) {\n      this._renderOnCartesianAndCalendar(seriesModel, api, params.start, params.end, true);\n    }\n  },\n  _renderOnCartesianAndCalendar: function _renderOnCartesianAndCalendar(seriesModel, api, start, end, incremental) {\n    var coordSys = seriesModel.coordinateSystem;\n    var width;\n    var height;\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      width = xAxis.getBandWidth();\n      height = yAxis.getBandWidth();\n    }\n\n    var group = this.group;\n    var data = seriesModel.getData();\n    var itemStyleQuery = 'itemStyle';\n    var hoverItemStyleQuery = 'emphasis.itemStyle';\n    var labelQuery = 'label';\n    var hoverLabelQuery = 'emphasis.label';\n    var style = seriesModel.getModel(itemStyleQuery).getItemStyle(['color']);\n    var hoverStl = seriesModel.getModel(hoverItemStyleQuery).getItemStyle();\n    var labelModel = seriesModel.getModel(labelQuery);\n    var hoverLabelModel = seriesModel.getModel(hoverLabelQuery);\n    var coordSysType = coordSys.type;\n    var dataDims = coordSysType === 'cartesian2d' ? [data.mapDimension('x'), data.mapDimension('y'), data.mapDimension('value')] : [data.mapDimension('time'), data.mapDimension('value')];\n\n    for (var idx = start; idx < end; idx++) {\n      var rect;\n\n      if (coordSysType === 'cartesian2d') {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[2], idx))) {\n          continue;\n        }\n\n        var point = coordSys.dataToPoint([data.get(dataDims[0], idx), data.get(dataDims[1], idx)]);\n        rect = new graphic.Rect({\n          shape: {\n            x: Math.floor(Math.round(point[0]) - width / 2),\n            y: Math.floor(Math.round(point[1]) - height / 2),\n            width: Math.ceil(width),\n            height: Math.ceil(height)\n          },\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      } else {\n        // Ignore empty data\n        if (isNaN(data.get(dataDims[1], idx))) {\n          continue;\n        }\n\n        rect = new graphic.Rect({\n          z2: 1,\n          shape: coordSys.dataToRect([data.get(dataDims[0], idx)]).contentShape,\n          style: {\n            fill: data.getItemVisual(idx, 'color'),\n            opacity: data.getItemVisual(idx, 'opacity')\n          }\n        });\n      }\n\n      var itemModel = data.getItemModel(idx); // Optimization for large datset\n\n      if (data.hasItemOption) {\n        style = itemModel.getModel(itemStyleQuery).getItemStyle(['color']);\n        hoverStl = itemModel.getModel(hoverItemStyleQuery).getItemStyle();\n        labelModel = itemModel.getModel(labelQuery);\n        hoverLabelModel = itemModel.getModel(hoverLabelQuery);\n      }\n\n      var rawValue = seriesModel.getRawValue(idx);\n      var defaultText = '-';\n\n      if (rawValue && rawValue[2] != null) {\n        defaultText = rawValue[2];\n      }\n\n      graphic.setLabelStyle(style, hoverStl, labelModel, hoverLabelModel, {\n        labelFetcher: seriesModel,\n        labelDataIndex: idx,\n        defaultText: defaultText,\n        isRectText: true\n      });\n      rect.setStyle(style);\n      graphic.setHoverStyle(rect, data.hasItemOption ? hoverStl : zrUtil.extend({}, hoverStl));\n      rect.incremental = incremental; // PENDING\n\n      if (incremental) {\n        // Rect must use hover layer if it's incremental.\n        rect.useHoverLayer = true;\n      }\n\n      group.add(rect);\n      data.setItemGraphicEl(idx, rect);\n    }\n  },\n  _renderOnGeo: function _renderOnGeo(geo, seriesModel, visualMapModel, api) {\n    var inRangeVisuals = visualMapModel.targetVisuals.inRange;\n    var outOfRangeVisuals = visualMapModel.targetVisuals.outOfRange; // if (!visualMapping) {\n    //     throw new Error('Data range must have color visuals');\n    // }\n\n    var data = seriesModel.getData();\n    var hmLayer = this._hmLayer || this._hmLayer || new HeatmapLayer();\n    hmLayer.blurSize = seriesModel.get('blurSize');\n    hmLayer.pointSize = seriesModel.get('pointSize');\n    hmLayer.minOpacity = seriesModel.get('minOpacity');\n    hmLayer.maxOpacity = seriesModel.get('maxOpacity');\n    var rect = geo.getViewRect().clone();\n    var roamTransform = geo.getRoamTransform();\n    rect.applyTransform(roamTransform); // Clamp on viewport\n\n    var x = Math.max(rect.x, 0);\n    var y = Math.max(rect.y, 0);\n    var x2 = Math.min(rect.width + rect.x, api.getWidth());\n    var y2 = Math.min(rect.height + rect.y, api.getHeight());\n    var width = x2 - x;\n    var height = y2 - y;\n    var dims = [data.mapDimension('lng'), data.mapDimension('lat'), data.mapDimension('value')];\n    var points = data.mapArray(dims, function (lng, lat, value) {\n      var pt = geo.dataToPoint([lng, lat]);\n      pt[0] -= x;\n      pt[1] -= y;\n      pt.push(value);\n      return pt;\n    });\n    var dataExtent = visualMapModel.getExtent();\n    var isInRange = visualMapModel.type === 'visualMap.continuous' ? getIsInContinuousRange(dataExtent, visualMapModel.option.range) : getIsInPiecewiseRange(dataExtent, visualMapModel.getPieceList(), visualMapModel.option.selected);\n    hmLayer.update(points, width, height, inRangeVisuals.color.getNormalizer(), {\n      inRange: inRangeVisuals.color.getColorMapper(),\n      outOfRange: outOfRangeVisuals.color.getColorMapper()\n    }, isInRange);\n    var img = new graphic.Image({\n      style: {\n        width: width,\n        height: height,\n        x: x,\n        y: y,\n        image: hmLayer.canvas\n      },\n      silent: true\n    });\n    this.group.add(img);\n  },\n  dispose: function dispose() {}\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Uint8ClampedArray */\n\n\nvar GRADIENT_LEVELS = 256;\n/**\n * Heatmap Chart\n *\n * @class\n */\n\nfunction Heatmap() {\n  var canvas = zrUtil.createCanvas();\n  this.canvas = canvas;\n  this.blurSize = 30;\n  this.pointSize = 20;\n  this.maxOpacity = 1;\n  this.minOpacity = 0;\n  this._gradientPixels = {};\n}\n\nHeatmap.prototype = {\n  /**\n   * Renders Heatmap and returns the rendered canvas\n   * @param {Array} data array of data, each has x, y, value\n   * @param {number} width canvas width\n   * @param {number} height canvas height\n   */\n  update: function update(data, width, height, normalize, colorFunc, isInRange) {\n    var brush = this._getBrush();\n\n    var gradientInRange = this._getGradient(data, colorFunc, 'inRange');\n\n    var gradientOutOfRange = this._getGradient(data, colorFunc, 'outOfRange');\n\n    var r = this.pointSize + this.blurSize;\n    var canvas = this.canvas;\n    var ctx = canvas.getContext('2d');\n    var len = data.length;\n    canvas.width = width;\n    canvas.height = height;\n\n    for (var i = 0; i < len; ++i) {\n      var p = data[i];\n      var x = p[0];\n      var y = p[1];\n      var value = p[2]; // calculate alpha using value\n\n      var alpha = normalize(value); // draw with the circle brush with alpha\n\n      ctx.globalAlpha = alpha;\n      ctx.drawImage(brush, x - r, y - r);\n    }\n\n    if (!canvas.width || !canvas.height) {\n      // Avoid \"Uncaught DOMException: Failed to execute 'getImageData' on\n      // 'CanvasRenderingContext2D': The source height is 0.\"\n      return canvas;\n    } // colorize the canvas using alpha value and set with gradient\n\n\n    var imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n    var pixels = imageData.data;\n    var offset = 0;\n    var pixelLen = pixels.length;\n    var minOpacity = this.minOpacity;\n    var maxOpacity = this.maxOpacity;\n    var diffOpacity = maxOpacity - minOpacity;\n\n    while (offset < pixelLen) {\n      var alpha = pixels[offset + 3] / 256;\n      var gradientOffset = Math.floor(alpha * (GRADIENT_LEVELS - 1)) * 4; // Simple optimize to ignore the empty data\n\n      if (alpha > 0) {\n        var gradient = isInRange(alpha) ? gradientInRange : gradientOutOfRange; // Any alpha > 0 will be mapped to [minOpacity, maxOpacity]\n\n        alpha > 0 && (alpha = alpha * diffOpacity + minOpacity);\n        pixels[offset++] = gradient[gradientOffset];\n        pixels[offset++] = gradient[gradientOffset + 1];\n        pixels[offset++] = gradient[gradientOffset + 2];\n        pixels[offset++] = gradient[gradientOffset + 3] * alpha * 256;\n      } else {\n        offset += 4;\n      }\n    }\n\n    ctx.putImageData(imageData, 0, 0);\n    return canvas;\n  },\n\n  /**\n   * get canvas of a black circle brush used for canvas to draw later\n   * @private\n   * @returns {Object} circle brush canvas\n   */\n  _getBrush: function _getBrush() {\n    var brushCanvas = this._brushCanvas || (this._brushCanvas = zrUtil.createCanvas()); // set brush size\n\n    var r = this.pointSize + this.blurSize;\n    var d = r * 2;\n    brushCanvas.width = d;\n    brushCanvas.height = d;\n    var ctx = brushCanvas.getContext('2d');\n    ctx.clearRect(0, 0, d, d); // in order to render shadow without the distinct circle,\n    // draw the distinct circle in an invisible place,\n    // and use shadowOffset to draw shadow in the center of the canvas\n\n    ctx.shadowOffsetX = d;\n    ctx.shadowBlur = this.blurSize; // draw the shadow in black, and use alpha and shadow blur to generate\n    // color in color map\n\n    ctx.shadowColor = '#000'; // draw circle in the left to the canvas\n\n    ctx.beginPath();\n    ctx.arc(-r, r, this.pointSize, 0, Math.PI * 2, true);\n    ctx.closePath();\n    ctx.fill();\n    return brushCanvas;\n  },\n\n  /**\n   * get gradient color map\n   * @private\n   */\n  _getGradient: function _getGradient(data, colorFunc, state) {\n    var gradientPixels = this._gradientPixels;\n    var pixelsSingleState = gradientPixels[state] || (gradientPixels[state] = new Uint8ClampedArray(256 * 4));\n    var color = [0, 0, 0, 0];\n    var off = 0;\n\n    for (var i = 0; i < 256; i++) {\n      colorFunc[state](i / 255, true, color);\n      pixelsSingleState[off++] = color[0];\n      pixelsSingleState[off++] = color[1];\n      pixelsSingleState[off++] = color[2];\n      pixelsSingleState[off++] = color[3];\n    }\n\n    return pixelsSingleState;\n  }\n};\nvar _default = Heatmap;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./bar/PictorialBarSeries\");\n\nrequire(\"./bar/PictorialBarView\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar layout = _barGrid.layout;\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nrequire(\"../component/gridSimple\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// In case developer forget to include grid component\n\n\necharts.registerLayout(zrUtil.curry(layout, 'pictorialBar'));\necharts.registerVisual(visualSymbol('pictorialBar', 'roundRect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"../component/singleAxis\");\n\nrequire(\"./themeRiver/ThemeRiverSeries\");\n\nrequire(\"./themeRiver/ThemeRiverView\");\n\nvar themeRiverLayout = require(\"./themeRiver/themeRiverLayout\");\n\nvar themeRiverVisual = require(\"./themeRiver/themeRiverVisual\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerLayout(themeRiverLayout);\necharts.registerVisual(themeRiverVisual);\necharts.registerProcessor(dataFilter('themeRiver'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar SeriesModel = require(\"../../model/Series\");\n\nvar createDimensions = require(\"../../data/helper/createDimensions\");\n\nvar _dimensionHelper = require(\"../../data/helper/dimensionHelper\");\n\nvar getDimensionTypeByAxis = _dimensionHelper.getDimensionTypeByAxis;\n\nvar List = require(\"../../data/List\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar groupData = _model.groupData;\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n\nvar LegendVisualProvider = require(\"../../visual/LegendVisualProvider\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DATA_NAME_INDEX = 2;\nvar ThemeRiverSeries = SeriesModel.extend({\n  type: 'series.themeRiver',\n  dependencies: ['singleAxis'],\n\n  /**\n   * @readOnly\n   * @type {module:zrender/core/util#HashMap}\n   */\n  nameMap: null,\n\n  /**\n   * @override\n   */\n  init: function init(option) {\n    // eslint-disable-next-line\n    ThemeRiverSeries.superApply(this, 'init', arguments); // Put this function here is for the sake of consistency of code style.\n    // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  },\n\n  /**\n   * If there is no value of a certain point in the time for some event,set it value to 0.\n   *\n   * @param {Array} data  initial data in the option\n   * @return {Array}\n   */\n  fixData: function fixData(data) {\n    var rawDataLength = data.length; // grouped data by name\n\n    var groupResult = groupData(data, function (item) {\n      return item[2];\n    });\n    var layData = [];\n    groupResult.buckets.each(function (items, key) {\n      layData.push({\n        name: key,\n        dataList: items\n      });\n    });\n    var layerNum = layData.length;\n    var largestLayer = -1;\n    var index = -1;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var len = layData[i].dataList.length;\n\n      if (len > largestLayer) {\n        largestLayer = len;\n        index = i;\n      }\n    }\n\n    for (var k = 0; k < layerNum; ++k) {\n      if (k === index) {\n        continue;\n      }\n\n      var name = layData[k].name;\n\n      for (var j = 0; j < largestLayer; ++j) {\n        var timeValue = layData[index].dataList[j][0];\n        var length = layData[k].dataList.length;\n        var keyIndex = -1;\n\n        for (var l = 0; l < length; ++l) {\n          var value = layData[k].dataList[l][0];\n\n          if (value === timeValue) {\n            keyIndex = l;\n            break;\n          }\n        }\n\n        if (keyIndex === -1) {\n          data[rawDataLength] = [];\n          data[rawDataLength][0] = timeValue;\n          data[rawDataLength][1] = 0;\n          data[rawDataLength][2] = name;\n          rawDataLength++;\n        }\n      }\n    }\n\n    return data;\n  },\n\n  /**\n   * @override\n   * @param  {Object} option  the initial option that user gived\n   * @param  {module:echarts/model/Model} ecModel  the model object for themeRiver option\n   * @return {module:echarts/data/List}\n   */\n  getInitialData: function getInitialData(option, ecModel) {\n    var singleAxisModel = ecModel.queryComponents({\n      mainType: 'singleAxis',\n      index: this.get('singleAxisIndex'),\n      id: this.get('singleAxisId')\n    })[0];\n    var axisType = singleAxisModel.get('type'); // filter the data item with the value of label is undefined\n\n    var filterData = zrUtil.filter(option.data, function (dataItem) {\n      return dataItem[2] !== undefined;\n    }); // ??? TODO design a stage to transfer data for themeRiver and lines?\n\n    var data = this.fixData(filterData || []);\n    var nameList = [];\n    var nameMap = this.nameMap = zrUtil.createHashMap();\n    var count = 0;\n\n    for (var i = 0; i < data.length; ++i) {\n      nameList.push(data[i][DATA_NAME_INDEX]);\n\n      if (!nameMap.get(data[i][DATA_NAME_INDEX])) {\n        nameMap.set(data[i][DATA_NAME_INDEX], count);\n        count++;\n      }\n    }\n\n    var dimensionsInfo = createDimensions(data, {\n      coordDimensions: ['single'],\n      dimensionsDefine: [{\n        name: 'time',\n        type: getDimensionTypeByAxis(axisType)\n      }, {\n        name: 'value',\n        type: 'float'\n      }, {\n        name: 'name',\n        type: 'ordinal'\n      }],\n      encodeDefine: {\n        single: 0,\n        value: 1,\n        itemName: 2\n      }\n    });\n    var list = new List(dimensionsInfo, this);\n    list.initData(data);\n    return list;\n  },\n\n  /**\n   * The raw data is divided into multiple layers and each layer\n   *     has same name.\n   *\n   * @return {Array.<Array.<number>>}\n   */\n  getLayerSeries: function getLayerSeries() {\n    var data = this.getData();\n    var lenCount = data.count();\n    var indexArr = [];\n\n    for (var i = 0; i < lenCount; ++i) {\n      indexArr[i] = i;\n    }\n\n    var timeDim = data.mapDimension('single'); // data group by name\n\n    var groupResult = groupData(indexArr, function (index) {\n      return data.get('name', index);\n    });\n    var layerSeries = [];\n    groupResult.buckets.each(function (items, key) {\n      items.sort(function (index1, index2) {\n        return data.get(timeDim, index1) - data.get(timeDim, index2);\n      });\n      layerSeries.push({\n        name: key,\n        indices: items\n      });\n    });\n    return layerSeries;\n  },\n\n  /**\n   * Get data indices for show tooltip content\n    * @param {Array.<string>|string} dim  single coordinate dimension\n   * @param {number} value axis value\n   * @param {module:echarts/coord/single/SingleAxis} baseAxis  single Axis used\n   *     the themeRiver.\n   * @return {Object} {dataIndices, nestestValue}\n   */\n  getAxisTooltipData: function getAxisTooltipData(dim, value, baseAxis) {\n    if (!zrUtil.isArray(dim)) {\n      dim = dim ? [dim] : [];\n    }\n\n    var data = this.getData();\n    var layerSeries = this.getLayerSeries();\n    var indices = [];\n    var layerNum = layerSeries.length;\n    var nestestValue;\n\n    for (var i = 0; i < layerNum; ++i) {\n      var minDist = Number.MAX_VALUE;\n      var nearestIdx = -1;\n      var pointNum = layerSeries[i].indices.length;\n\n      for (var j = 0; j < pointNum; ++j) {\n        var theValue = data.get(dim[0], layerSeries[i].indices[j]);\n        var dist = Math.abs(theValue - value);\n\n        if (dist <= minDist) {\n          nestestValue = theValue;\n          minDist = dist;\n          nearestIdx = layerSeries[i].indices[j];\n        }\n      }\n\n      indices.push(nearestIdx);\n    }\n\n    return {\n      dataIndices: indices,\n      nestestValue: nestestValue\n    };\n  },\n\n  /**\n   * @override\n   * @param {number} dataIndex  index of data\n   */\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var htmlName = data.getName(dataIndex);\n    var htmlValue = data.get(data.mapDimension('value'), dataIndex);\n\n    if (isNaN(htmlValue) || htmlValue == null) {\n      htmlValue = '-';\n    }\n\n    return encodeHTML(htmlName + ' : ' + htmlValue);\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'singleAxis',\n    // gap in axis's orthogonal orientation\n    boundaryGap: ['10%', '10%'],\n    // legendHoverLink: true,\n    singleAxisIndex: 0,\n    animationEasing: 'linear',\n    label: {\n      margin: 4,\n      show: true,\n      position: 'left',\n      color: '#000',\n      fontSize: 11\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\nvar _default = ThemeRiverSeries;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar _poly = require(\"../line/poly\");\n\nvar Polygon = _poly.Polygon;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar bind = _util.bind;\nvar extend = _util.extend;\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendChartView({\n  type: 'themeRiver',\n  init: function init() {\n    this._layers = [];\n  },\n  render: function render(seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var group = this.group;\n    var layerSeries = seriesModel.getLayerSeries();\n    var layoutInfo = data.getLayout('layoutInfo');\n    var rect = layoutInfo.rect;\n    var boundaryGap = layoutInfo.boundaryGap;\n    group.attr('position', [0, rect.y + boundaryGap[0]]);\n\n    function keyGetter(item) {\n      return item.name;\n    }\n\n    var dataDiffer = new DataDiffer(this._layersSeries || [], layerSeries, keyGetter, keyGetter);\n    var newLayersGroups = {};\n    dataDiffer.add(bind(process, this, 'add')).update(bind(process, this, 'update')).remove(bind(process, this, 'remove')).execute();\n\n    function process(status, idx, oldIdx) {\n      var oldLayersGroups = this._layers;\n\n      if (status === 'remove') {\n        group.remove(oldLayersGroups[idx]);\n        return;\n      }\n\n      var points0 = [];\n      var points1 = [];\n      var color;\n      var indices = layerSeries[idx].indices;\n\n      for (var j = 0; j < indices.length; j++) {\n        var layout = data.getItemLayout(indices[j]);\n        var x = layout.x;\n        var y0 = layout.y0;\n        var y = layout.y;\n        points0.push([x, y0]);\n        points1.push([x, y0 + y]);\n        color = data.getItemVisual(indices[j], 'color');\n      }\n\n      var polygon;\n      var text;\n      var textLayout = data.getItemLayout(indices[0]);\n      var itemModel = data.getItemModel(indices[j - 1]);\n      var labelModel = itemModel.getModel('label');\n      var margin = labelModel.get('margin');\n\n      if (status === 'add') {\n        var layerGroup = newLayersGroups[idx] = new graphic.Group();\n        polygon = new Polygon({\n          shape: {\n            points: points0,\n            stackedOnPoints: points1,\n            smooth: 0.4,\n            stackedOnSmooth: 0.4,\n            smoothConstraint: false\n          },\n          z2: 0\n        });\n        text = new graphic.Text({\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        });\n        layerGroup.add(polygon);\n        layerGroup.add(text);\n        group.add(layerGroup);\n        polygon.setClipPath(createGridClipShape(polygon.getBoundingRect(), seriesModel, function () {\n          polygon.removeClipPath();\n        }));\n      } else {\n        var layerGroup = oldLayersGroups[oldIdx];\n        polygon = layerGroup.childAt(0);\n        text = layerGroup.childAt(1);\n        group.add(layerGroup);\n        newLayersGroups[idx] = layerGroup;\n        graphic.updateProps(polygon, {\n          shape: {\n            points: points0,\n            stackedOnPoints: points1\n          }\n        }, seriesModel);\n        graphic.updateProps(text, {\n          style: {\n            x: textLayout.x - margin,\n            y: textLayout.y0 + textLayout.y / 2\n          }\n        }, seriesModel);\n      }\n\n      var hoverItemStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      graphic.setTextStyle(text.style, labelModel, {\n        text: labelModel.get('show') ? seriesModel.getFormattedLabel(indices[j - 1], 'normal') || data.getName(indices[j - 1]) : null,\n        textVerticalAlign: 'middle'\n      });\n      polygon.setStyle(extend({\n        fill: color\n      }, itemStyleModel.getItemStyle(['color'])));\n      graphic.setHoverStyle(polygon, hoverItemStyleModel.getItemStyle());\n    }\n\n    this._layersSeries = layerSeries;\n    this._layers = newLayersGroups;\n  },\n  dispose: function dispose() {}\n}); // add animation to the view\n\n\nfunction createGridClipShape(rect, seriesModel, cb) {\n  var rectEl = new graphic.Rect({\n    shape: {\n      x: rect.x - 10,\n      y: rect.y - 10,\n      width: 0,\n      height: rect.height + 20\n    }\n  });\n  graphic.initProps(rectEl, {\n    shape: {\n      width: rect.width + 20,\n      height: rect.height + 20\n    }\n  }, seriesModel, cb);\n  return rectEl;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(ecModel, api) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var single = seriesModel.coordinateSystem;\n    var layoutInfo = {}; // use the axis boundingRect for view\n\n    var rect = single.getRect();\n    layoutInfo.rect = rect;\n    var boundaryGap = seriesModel.get('boundaryGap');\n    var axis = single.getAxis();\n    layoutInfo.boundaryGap = boundaryGap;\n\n    if (axis.orient === 'horizontal') {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.height);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.height);\n      var height = rect.height - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, height);\n    } else {\n      boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], rect.width);\n      boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], rect.width);\n      var width = rect.width - boundaryGap[0] - boundaryGap[1];\n      themeRiverLayout(data, seriesModel, width);\n    }\n\n    data.setLayout('layoutInfo', layoutInfo);\n  });\n}\n/**\n * The layout information about themeriver\n *\n * @param {module:echarts/data/List} data  data in the series\n * @param {module:echarts/model/Series} seriesModel  the model object of themeRiver series\n * @param {number} height  value used to compute every series height\n */\n\n\nfunction themeRiverLayout(data, seriesModel, height) {\n  if (!data.count()) {\n    return;\n  }\n\n  var coordSys = seriesModel.coordinateSystem; // the data in each layer are organized into a series.\n\n  var layerSeries = seriesModel.getLayerSeries(); // the points in each layer.\n\n  var timeDim = data.mapDimension('single');\n  var valueDim = data.mapDimension('value');\n  var layerPoints = zrUtil.map(layerSeries, function (singleLayer) {\n    return zrUtil.map(singleLayer.indices, function (idx) {\n      var pt = coordSys.dataToPoint(data.get(timeDim, idx));\n      pt[1] = data.get(valueDim, idx);\n      return pt;\n    });\n  });\n  var base = computeBaseline(layerPoints);\n  var baseLine = base.y0;\n  var ky = height / base.max; // set layout information for each item.\n\n  var n = layerSeries.length;\n  var m = layerSeries[0].indices.length;\n  var baseY0;\n\n  for (var j = 0; j < m; ++j) {\n    baseY0 = baseLine[j] * ky;\n    data.setItemLayout(layerSeries[0].indices[j], {\n      layerIndex: 0,\n      x: layerPoints[0][j][0],\n      y0: baseY0,\n      y: layerPoints[0][j][1] * ky\n    });\n\n    for (var i = 1; i < n; ++i) {\n      baseY0 += layerPoints[i - 1][j][1] * ky;\n      data.setItemLayout(layerSeries[i].indices[j], {\n        layerIndex: i,\n        x: layerPoints[i][j][0],\n        y0: baseY0,\n        y: layerPoints[i][j][1] * ky\n      });\n    }\n  }\n}\n/**\n * Compute the baseLine of the rawdata\n * Inspired by Lee Byron's paper Stacked Graphs - Geometry & Aesthetics\n *\n * @param  {Array.<Array>} data  the points in each layer\n * @return {Object}\n */\n\n\nfunction computeBaseline(data) {\n  var layerNum = data.length;\n  var pointNum = data[0].length;\n  var sums = [];\n  var y0 = [];\n  var max = 0;\n  var temp;\n  var base = {};\n\n  for (var i = 0; i < pointNum; ++i) {\n    for (var j = 0, temp = 0; j < layerNum; ++j) {\n      temp += data[j][i][1];\n    }\n\n    if (temp > max) {\n      max = temp;\n    }\n\n    sums.push(temp);\n  }\n\n  for (var k = 0; k < pointNum; ++k) {\n    y0[k] = (max - sums[k]) / 2;\n  }\n\n  max = 0;\n\n  for (var l = 0; l < pointNum; ++l) {\n    var sum = sums[l] + y0[l];\n\n    if (sum > max) {\n      max = sum;\n    }\n  }\n\n  base.y0 = y0;\n  base.max = max;\n  return base;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nfunction _default(ecModel) {\n  ecModel.eachSeriesByType('themeRiver', function (seriesModel) {\n    var data = seriesModel.getData();\n    var rawData = seriesModel.getRawData();\n    var colorList = seriesModel.get('color');\n    var idxMap = createHashMap();\n    data.each(function (idx) {\n      idxMap.set(data.getRawIndex(idx), idx);\n    });\n    rawData.each(function (rawIndex) {\n      var name = rawData.getName(rawIndex);\n      var color = colorList[(seriesModel.nameMap.get(name) - 1) % colorList.length];\n      rawData.setItemVisual(rawIndex, 'color', color);\n      var idx = idxMap.get(rawIndex);\n\n      if (idx != null) {\n        data.setItemVisual(idx, 'color', color);\n      }\n    });\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"./sunburst/SunburstSeries\");\n\nrequire(\"./sunburst/SunburstView\");\n\nrequire(\"./sunburst/sunburstAction\");\n\nvar dataColor = require(\"../visual/dataColor\");\n\nvar sunburstLayout = require(\"./sunburst/sunburstLayout\");\n\nvar dataFilter = require(\"../processor/dataFilter\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerVisual(zrUtil.curry(dataColor, 'sunburst'));\necharts.registerLayout(zrUtil.curry(sunburstLayout, 'sunburst'));\necharts.registerProcessor(zrUtil.curry(dataFilter, 'sunburst'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SeriesModel = require(\"../../model/Series\");\n\nvar Tree = require(\"../../data/Tree\");\n\nvar _treeHelper = require(\"../helper/treeHelper\");\n\nvar wrapTreePathInfo = _treeHelper.wrapTreePathInfo;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = SeriesModel.extend({\n  type: 'series.sunburst',\n\n  /**\n   * @type {module:echarts/data/Tree~Node}\n   */\n  _viewRoot: null,\n  getInitialData: function getInitialData(option, ecModel) {\n    // Create a virtual root.\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    completeTreeValue(root);\n    var levels = option.levels || []; // levels = option.levels = setDefault(levels, ecModel);\n\n    var treeOption = {};\n    treeOption.levels = levels; // Make sure always a new tree is created when setOption,\n    // in TreemapView, we check whether oldTree === newTree\n    // to choose mappings approach among old shapes and new shapes.\n\n    return Tree.createTree(root, this, treeOption).data;\n  },\n  optionUpdated: function optionUpdated() {\n    this.resetViewRoot();\n  },\n\n  /*\n   * @override\n   */\n  getDataParams: function getDataParams(dataIndex) {\n    var params = SeriesModel.prototype.getDataParams.apply(this, arguments);\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treePathInfo = wrapTreePathInfo(node, this);\n    return params;\n  },\n  defaultOption: {\n    zlevel: 0,\n    z: 2,\n    // 默认全局居中\n    center: ['50%', '50%'],\n    radius: [0, '75%'],\n    // 默认顺时针\n    clockwise: true,\n    startAngle: 90,\n    // 最小角度改为0\n    minAngle: 0,\n    percentPrecision: 2,\n    // If still show when all data zero.\n    stillShowZeroSum: true,\n    // Policy of highlighting pieces when hover on one\n    // Valid values: 'none' (for not downplay others), 'descendant',\n    // 'ancestor', 'self'\n    highlightPolicy: 'descendant',\n    // 'rootToNode', 'link', or false\n    nodeClick: 'rootToNode',\n    renderLabelForZeroData: false,\n    label: {\n      // could be: 'radial', 'tangential', or 'none'\n      rotate: 'radial',\n      show: true,\n      opacity: 1,\n      // 'left' is for inner side of inside, and 'right' is for outter\n      // side for inside\n      align: 'center',\n      position: 'inside',\n      distance: 5,\n      silent: true\n    },\n    itemStyle: {\n      borderWidth: 1,\n      borderColor: 'white',\n      borderType: 'solid',\n      shadowBlur: 0,\n      shadowColor: 'rgba(0, 0, 0, 0.2)',\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    highlight: {\n      itemStyle: {\n        opacity: 1\n      }\n    },\n    downplay: {\n      itemStyle: {\n        opacity: 0.5\n      },\n      label: {\n        opacity: 0.6\n      }\n    },\n    // Animation type canbe expansion, scale\n    animationType: 'expansion',\n    animationDuration: 1000,\n    animationDurationUpdate: 500,\n    animationEasing: 'cubicOut',\n    data: [],\n    levels: [],\n\n    /**\n     * Sort order.\n     *\n     * Valid values: 'desc', 'asc', null, or callback function.\n     * 'desc' and 'asc' for descend and ascendant order;\n     * null for not sorting;\n     * example of callback function:\n     * function(nodeA, nodeB) {\n     *     return nodeA.getValue() - nodeB.getValue();\n     * }\n     */\n    sort: 'desc'\n  },\n  getViewRoot: function getViewRoot() {\n    return this._viewRoot;\n  },\n\n  /**\n   * @param {module:echarts/data/Tree~Node} [viewRoot]\n   */\n  resetViewRoot: function resetViewRoot(viewRoot) {\n    viewRoot ? this._viewRoot = viewRoot : viewRoot = this._viewRoot;\n    var root = this.getRawData().tree.root;\n\n    if (!viewRoot || viewRoot !== root && !root.contains(viewRoot)) {\n      this._viewRoot = root;\n    }\n  }\n});\n/**\n * @param {Object} dataNode\n */\n\n\nfunction completeTreeValue(dataNode) {\n  // Postorder travel tree.\n  // If value of none-leaf node is not set,\n  // calculate it by suming up the value of all children.\n  var sum = 0;\n  zrUtil.each(dataNode.children, function (child) {\n    completeTreeValue(child);\n    var childValue = child.value;\n    zrUtil.isArray(childValue) && (childValue = childValue[0]);\n    sum += childValue;\n  });\n  var thisValue = dataNode.value;\n\n  if (zrUtil.isArray(thisValue)) {\n    thisValue = thisValue[0];\n  }\n\n  if (thisValue == null || isNaN(thisValue)) {\n    thisValue = sum;\n  } // Value should not less than 0.\n\n\n  if (thisValue < 0) {\n    thisValue = 0;\n  }\n\n  zrUtil.isArray(dataNode.value) ? dataNode.value[0] = thisValue : dataNode.value = thisValue;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ChartView = require(\"../../view/Chart\");\n\nvar SunburstPiece = require(\"./SunburstPiece\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n\nvar _format = require(\"../../util/format\");\n\nvar windowOpen = _format.windowOpen;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\nvar SunburstView = ChartView.extend({\n  type: 'sunburst',\n  init: function init() {},\n  render: function render(seriesModel, ecModel, api, payload) {\n    var that = this;\n    this.seriesModel = seriesModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    var data = seriesModel.getData();\n    var virtualRoot = data.tree.root;\n    var newRoot = seriesModel.getViewRoot();\n    var group = this.group;\n    var renderLabelForZeroData = seriesModel.get('renderLabelForZeroData');\n    var newChildren = [];\n    newRoot.eachNode(function (node) {\n      newChildren.push(node);\n    });\n    var oldChildren = this._oldChildren || [];\n    dualTravel(newChildren, oldChildren);\n    renderRollUp(virtualRoot, newRoot);\n\n    if (payload && payload.highlight && payload.highlight.piece) {\n      var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n      payload.highlight.piece.onEmphasis(highlightPolicy);\n    } else if (payload && payload.unhighlight) {\n      var piece = this.virtualPiece;\n\n      if (!piece && virtualRoot.children.length) {\n        piece = virtualRoot.children[0].piece;\n      }\n\n      if (piece) {\n        piece.onNormal();\n      }\n    }\n\n    this._initEvents();\n\n    this._oldChildren = newChildren;\n\n    function dualTravel(newChildren, oldChildren) {\n      if (newChildren.length === 0 && oldChildren.length === 0) {\n        return;\n      }\n\n      new DataDiffer(oldChildren, newChildren, getKey, getKey).add(processNode).update(processNode).remove(zrUtil.curry(processNode, null)).execute();\n\n      function getKey(node) {\n        return node.getId();\n      }\n\n      function processNode(newId, oldId) {\n        var newNode = newId == null ? null : newChildren[newId];\n        var oldNode = oldId == null ? null : oldChildren[oldId];\n        doRenderNode(newNode, oldNode);\n      }\n    }\n\n    function doRenderNode(newNode, oldNode) {\n      if (!renderLabelForZeroData && newNode && !newNode.getValue()) {\n        // Not render data with value 0\n        newNode = null;\n      }\n\n      if (newNode !== virtualRoot && oldNode !== virtualRoot) {\n        if (oldNode && oldNode.piece) {\n          if (newNode) {\n            // Update\n            oldNode.piece.updateData(false, newNode, 'normal', seriesModel, ecModel); // For tooltip\n\n            data.setItemGraphicEl(newNode.dataIndex, oldNode.piece);\n          } else {\n            // Remove\n            removeNode(oldNode);\n          }\n        } else if (newNode) {\n          // Add\n          var piece = new SunburstPiece(newNode, seriesModel, ecModel);\n          group.add(piece); // For tooltip\n\n          data.setItemGraphicEl(newNode.dataIndex, piece);\n        }\n      }\n    }\n\n    function removeNode(node) {\n      if (!node) {\n        return;\n      }\n\n      if (node.piece) {\n        group.remove(node.piece);\n        node.piece = null;\n      }\n    }\n\n    function renderRollUp(virtualRoot, viewRoot) {\n      if (viewRoot.depth > 0) {\n        // Render\n        if (that.virtualPiece) {\n          // Update\n          that.virtualPiece.updateData(false, virtualRoot, 'normal', seriesModel, ecModel);\n        } else {\n          // Add\n          that.virtualPiece = new SunburstPiece(virtualRoot, seriesModel, ecModel);\n          group.add(that.virtualPiece);\n        }\n\n        if (viewRoot.piece._onclickEvent) {\n          viewRoot.piece.off('click', viewRoot.piece._onclickEvent);\n        }\n\n        var event = function event(e) {\n          that._rootToNode(viewRoot.parentNode);\n        };\n\n        viewRoot.piece._onclickEvent = event;\n        that.virtualPiece.on('click', event);\n      } else if (that.virtualPiece) {\n        // Remove\n        group.remove(that.virtualPiece);\n        that.virtualPiece = null;\n      }\n    }\n  },\n  dispose: function dispose() {},\n\n  /**\n   * @private\n   */\n  _initEvents: function _initEvents() {\n    var that = this;\n\n    var event = function event(e) {\n      var targetFound = false;\n      var viewRoot = that.seriesModel.getViewRoot();\n      viewRoot.eachNode(function (node) {\n        if (!targetFound && node.piece && node.piece.childAt(0) === e.target) {\n          var nodeClick = node.getModel().get('nodeClick');\n\n          if (nodeClick === 'rootToNode') {\n            that._rootToNode(node);\n          } else if (nodeClick === 'link') {\n            var itemModel = node.getModel();\n            var link = itemModel.get('link');\n\n            if (link) {\n              var linkTarget = itemModel.get('target', true) || '_blank';\n              windowOpen(link, linkTarget);\n            }\n          }\n\n          targetFound = true;\n        }\n      });\n    };\n\n    if (this.group._onclickEvent) {\n      this.group.off('click', this.group._onclickEvent);\n    }\n\n    this.group.on('click', event);\n    this.group._onclickEvent = event;\n  },\n\n  /**\n   * @private\n   */\n  _rootToNode: function _rootToNode(node) {\n    if (node !== this.seriesModel.getViewRoot()) {\n      this.api.dispatchAction({\n        type: ROOT_TO_NODE_ACTION,\n        from: this.uid,\n        seriesId: this.seriesModel.id,\n        targetNode: node\n      });\n    }\n  },\n\n  /**\n   * @implement\n   */\n  containPoint: function containPoint(point, seriesModel) {\n    var treeRoot = seriesModel.getData();\n    var itemLayout = treeRoot.getItemLayout(0);\n\n    if (itemLayout) {\n      var dx = point[0] - itemLayout.cx;\n      var dy = point[1] - itemLayout.cy;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return radius <= itemLayout.r && radius >= itemLayout.r0;\n    }\n  }\n});\nvar _default = SunburstView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar NodeHighlightPolicy = {\n  NONE: 'none',\n  // not downplay others\n  DESCENDANT: 'descendant',\n  ANCESTOR: 'ancestor',\n  SELF: 'self'\n};\nvar DEFAULT_SECTOR_Z = 2;\nvar DEFAULT_TEXT_Z = 4;\n/**\n * Sunburstce of Sunburst including Sector, Label, LabelLine\n * @constructor\n * @extends {module:zrender/graphic/Group}\n */\n\nfunction SunburstPiece(node, seriesModel, ecModel) {\n  graphic.Group.call(this);\n  var sector = new graphic.Sector({\n    z2: DEFAULT_SECTOR_Z\n  });\n  sector.seriesIndex = seriesModel.seriesIndex;\n  var text = new graphic.Text({\n    z2: DEFAULT_TEXT_Z,\n    silent: node.getModel('label').get('silent')\n  });\n  this.add(sector);\n  this.add(text);\n  this.updateData(true, node, 'normal', seriesModel, ecModel); // Hover to change label and labelLine\n\n  function onEmphasis() {\n    text.ignore = text.hoverIgnore;\n  }\n\n  function onNormal() {\n    text.ignore = text.normalIgnore;\n  }\n\n  this.on('emphasis', onEmphasis).on('normal', onNormal).on('mouseover', onEmphasis).on('mouseout', onNormal);\n}\n\nvar SunburstPieceProto = SunburstPiece.prototype;\n\nSunburstPieceProto.updateData = function (firstCreate, node, state, seriesModel, ecModel) {\n  this.node = node;\n  node.piece = this;\n  seriesModel = seriesModel || this._seriesModel;\n  ecModel = ecModel || this._ecModel;\n  var sector = this.childAt(0);\n  sector.dataIndex = node.dataIndex;\n  var itemModel = node.getModel();\n  var layout = node.getLayout(); // if (!layout) {\n  //     console.log(node.getLayout());\n  // }\n\n  var sectorShape = zrUtil.extend({}, layout);\n  sectorShape.label = null;\n  var visualColor = getNodeColor(node, seriesModel, ecModel);\n  fillDefaultColor(node, seriesModel, visualColor);\n  var normalStyle = itemModel.getModel('itemStyle').getItemStyle();\n  var style;\n\n  if (state === 'normal') {\n    style = normalStyle;\n  } else {\n    var stateStyle = itemModel.getModel(state + '.itemStyle').getItemStyle();\n    style = zrUtil.merge(stateStyle, normalStyle);\n  }\n\n  style = zrUtil.defaults({\n    lineJoin: 'bevel',\n    fill: style.fill || visualColor\n  }, style);\n\n  if (firstCreate) {\n    sector.setShape(sectorShape);\n    sector.shape.r = layout.r0;\n    graphic.updateProps(sector, {\n      shape: {\n        r: layout.r\n      }\n    }, seriesModel, node.dataIndex);\n    sector.useStyle(style);\n  } else if (typeof style.fill === 'object' && style.fill.type || typeof sector.style.fill === 'object' && sector.style.fill.type) {\n    // Disable animation for gradient since no interpolation method\n    // is supported for gradient\n    graphic.updateProps(sector, {\n      shape: sectorShape\n    }, seriesModel);\n    sector.useStyle(style);\n  } else {\n    graphic.updateProps(sector, {\n      shape: sectorShape,\n      style: style\n    }, seriesModel);\n  }\n\n  this._updateLabel(seriesModel, visualColor, state);\n\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && sector.attr('cursor', cursorStyle);\n\n  if (firstCreate) {\n    var highlightPolicy = seriesModel.getShallow('highlightPolicy');\n\n    this._initEvents(sector, node, seriesModel, highlightPolicy);\n  }\n\n  this._seriesModel = seriesModel || this._seriesModel;\n  this._ecModel = ecModel || this._ecModel;\n  graphic.setHoverStyle(this);\n};\n\nSunburstPieceProto.onEmphasis = function (highlightPolicy) {\n  var that = this;\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      if (that.node === n) {\n        n.piece.updateData(false, n, 'emphasis');\n      } else if (isNodeHighlighted(n, that.node, highlightPolicy)) {\n        n.piece.childAt(0).trigger('highlight');\n      } else if (highlightPolicy !== NodeHighlightPolicy.NONE) {\n        n.piece.childAt(0).trigger('downplay');\n      }\n    }\n  });\n};\n\nSunburstPieceProto.onNormal = function () {\n  this.node.hostTree.root.eachNode(function (n) {\n    if (n.piece) {\n      n.piece.updateData(false, n, 'normal');\n    }\n  });\n};\n\nSunburstPieceProto.onHighlight = function () {\n  this.updateData(false, this.node, 'highlight');\n};\n\nSunburstPieceProto.onDownplay = function () {\n  this.updateData(false, this.node, 'downplay');\n};\n\nSunburstPieceProto._updateLabel = function (seriesModel, visualColor, state) {\n  var itemModel = this.node.getModel();\n  var normalModel = itemModel.getModel('label');\n  var labelModel = state === 'normal' || state === 'emphasis' ? normalModel : itemModel.getModel(state + '.label');\n  var labelHoverModel = itemModel.getModel('emphasis.label');\n  var text = zrUtil.retrieve(seriesModel.getFormattedLabel(this.node.dataIndex, state, null, null, 'label'), this.node.name);\n\n  if (getLabelAttr('show') === false) {\n    text = '';\n  }\n\n  var layout = this.node.getLayout();\n  var labelMinAngle = labelModel.get('minAngle');\n\n  if (labelMinAngle == null) {\n    labelMinAngle = normalModel.get('minAngle');\n  }\n\n  labelMinAngle = labelMinAngle / 180 * Math.PI;\n  var angle = layout.endAngle - layout.startAngle;\n\n  if (labelMinAngle != null && Math.abs(angle) < labelMinAngle) {\n    // Not displaying text when angle is too small\n    text = '';\n  }\n\n  var label = this.childAt(1);\n  graphic.setLabelStyle(label.style, label.hoverStyle || {}, normalModel, labelHoverModel, {\n    defaultText: labelModel.getShallow('show') ? text : null,\n    autoColor: visualColor,\n    useInsideStyle: true\n  });\n  var midAngle = (layout.startAngle + layout.endAngle) / 2;\n  var dx = Math.cos(midAngle);\n  var dy = Math.sin(midAngle);\n  var r;\n  var labelPosition = getLabelAttr('position');\n  var labelPadding = getLabelAttr('distance') || 0;\n  var textAlign = getLabelAttr('align');\n\n  if (labelPosition === 'outside') {\n    r = layout.r + labelPadding;\n    textAlign = midAngle > Math.PI / 2 ? 'right' : 'left';\n  } else {\n    if (!textAlign || textAlign === 'center') {\n      r = (layout.r + layout.r0) / 2;\n      textAlign = 'center';\n    } else if (textAlign === 'left') {\n      r = layout.r0 + labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'right';\n      }\n    } else if (textAlign === 'right') {\n      r = layout.r - labelPadding;\n\n      if (midAngle > Math.PI / 2) {\n        textAlign = 'left';\n      }\n    }\n  }\n\n  label.attr('style', {\n    text: text,\n    textAlign: textAlign,\n    textVerticalAlign: getLabelAttr('verticalAlign') || 'middle',\n    opacity: getLabelAttr('opacity')\n  });\n  var textX = r * dx + layout.cx;\n  var textY = r * dy + layout.cy;\n  label.attr('position', [textX, textY]);\n  var rotateType = getLabelAttr('rotate');\n  var rotate = 0;\n\n  if (rotateType === 'radial') {\n    rotate = -midAngle;\n\n    if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (rotateType === 'tangential') {\n    rotate = Math.PI / 2 - midAngle;\n\n    if (rotate > Math.PI / 2) {\n      rotate -= Math.PI;\n    } else if (rotate < -Math.PI / 2) {\n      rotate += Math.PI;\n    }\n  } else if (typeof rotateType === 'number') {\n    rotate = rotateType * Math.PI / 180;\n  }\n\n  label.attr('rotation', rotate);\n\n  function getLabelAttr(name) {\n    var stateAttr = labelModel.get(name);\n\n    if (stateAttr == null) {\n      return normalModel.get(name);\n    } else {\n      return stateAttr;\n    }\n  }\n};\n\nSunburstPieceProto._initEvents = function (sector, node, seriesModel, highlightPolicy) {\n  sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n  var that = this;\n\n  var onEmphasis = function onEmphasis() {\n    that.onEmphasis(highlightPolicy);\n  };\n\n  var onNormal = function onNormal() {\n    that.onNormal();\n  };\n\n  var onDownplay = function onDownplay() {\n    that.onDownplay();\n  };\n\n  var onHighlight = function onHighlight() {\n    that.onHighlight();\n  };\n\n  if (seriesModel.isAnimationEnabled()) {\n    sector.on('mouseover', onEmphasis).on('mouseout', onNormal).on('emphasis', onEmphasis).on('normal', onNormal).on('downplay', onDownplay).on('highlight', onHighlight);\n  }\n};\n\nzrUtil.inherits(SunburstPiece, graphic.Group);\nvar _default = SunburstPiece;\n/**\n * Get node color\n *\n * @param {TreeNode} node the node to get color\n * @param {module:echarts/model/Series} seriesModel series\n * @param {module:echarts/model/Global} ecModel echarts defaults\n */\n\nfunction getNodeColor(node, seriesModel, ecModel) {\n  // Color from visualMap\n  var visualColor = node.getVisual('color');\n  var visualMetaList = node.getVisual('visualMeta');\n\n  if (!visualMetaList || visualMetaList.length === 0) {\n    // Use first-generation color if has no visualMap\n    visualColor = null;\n  } // Self color or level color\n\n\n  var color = node.getModel('itemStyle').get('color');\n\n  if (color) {\n    return color;\n  } else if (visualColor) {\n    // Color mapping\n    return visualColor;\n  } else if (node.depth === 0) {\n    // Virtual root node\n    return ecModel.option.color[0];\n  } else {\n    // First-generation color\n    var length = ecModel.option.color.length;\n    color = ecModel.option.color[getRootId(node) % length];\n  }\n\n  return color;\n}\n/**\n * Get index of root in sorted order\n *\n * @param {TreeNode} node current node\n * @return {number} index in root\n */\n\n\nfunction getRootId(node) {\n  var ancestor = node;\n\n  while (ancestor.depth > 1) {\n    ancestor = ancestor.parentNode;\n  }\n\n  var virtualRoot = node.getAncestors()[0];\n  return zrUtil.indexOf(virtualRoot.children, ancestor);\n}\n\nfunction isNodeHighlighted(node, activeNode, policy) {\n  if (policy === NodeHighlightPolicy.NONE) {\n    return false;\n  } else if (policy === NodeHighlightPolicy.SELF) {\n    return node === activeNode;\n  } else if (policy === NodeHighlightPolicy.ANCESTOR) {\n    return node === activeNode || node.isAncestorOf(activeNode);\n  } else {\n    return node === activeNode || node.isDescendantOf(activeNode);\n  }\n} // Fix tooltip callback function params.color incorrect when pick a default color\n\n\nfunction fillDefaultColor(node, seriesModel, color) {\n  var data = seriesModel.getData();\n  data.setItemVisual(node.dataIndex, 'color', color);\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar helper = require(\"../helper/treeHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @file Sunburst action\n */\n\n\nvar ROOT_TO_NODE_ACTION = 'sunburstRootToNode';\necharts.registerAction({\n  type: ROOT_TO_NODE_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleRootToNode);\n\n  function handleRootToNode(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [ROOT_TO_NODE_ACTION], model);\n\n    if (targetInfo) {\n      var originViewRoot = model.getViewRoot();\n\n      if (originViewRoot) {\n        payload.direction = helper.aboveViewRoot(originViewRoot, targetInfo.node) ? 'rollUp' : 'drillDown';\n      }\n\n      model.resetViewRoot(targetInfo.node);\n    }\n  }\n});\nvar HIGHLIGHT_ACTION = 'sunburstHighlight';\necharts.registerAction({\n  type: HIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleHighlight);\n\n  function handleHighlight(model, index) {\n    var targetInfo = helper.retrieveTargetInfo(payload, [HIGHLIGHT_ACTION], model);\n\n    if (targetInfo) {\n      payload.highlight = targetInfo.node;\n    }\n  }\n});\nvar UNHIGHLIGHT_ACTION = 'sunburstUnhighlight';\necharts.registerAction({\n  type: UNHIGHLIGHT_ACTION,\n  update: 'updateView'\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'series',\n    subType: 'sunburst',\n    query: payload\n  }, handleUnhighlight);\n\n  function handleUnhighlight(model, index) {\n    payload.unhighlight = true;\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _number = require(\"../../util/number\");\n\nvar parsePercent = _number.parsePercent;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// var PI2 = Math.PI * 2;\n\n\nvar RADIAN = Math.PI / 180;\n\nfunction _default(seriesType, ecModel, api, payload) {\n  ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n    var center = seriesModel.get('center');\n    var radius = seriesModel.get('radius');\n\n    if (!zrUtil.isArray(radius)) {\n      radius = [0, radius];\n    }\n\n    if (!zrUtil.isArray(center)) {\n      center = [center, center];\n    }\n\n    var width = api.getWidth();\n    var height = api.getHeight();\n    var size = Math.min(width, height);\n    var cx = parsePercent(center[0], width);\n    var cy = parsePercent(center[1], height);\n    var r0 = parsePercent(radius[0], size / 2);\n    var r = parsePercent(radius[1], size / 2);\n    var startAngle = -seriesModel.get('startAngle') * RADIAN;\n    var minAngle = seriesModel.get('minAngle') * RADIAN;\n    var virtualRoot = seriesModel.getData().tree.root;\n    var treeRoot = seriesModel.getViewRoot();\n    var rootDepth = treeRoot.depth;\n    var sort = seriesModel.get('sort');\n\n    if (sort != null) {\n      initChildren(treeRoot, sort);\n    }\n\n    var validDataCount = 0;\n    zrUtil.each(treeRoot.children, function (child) {\n      !isNaN(child.getValue()) && validDataCount++;\n    });\n    var sum = treeRoot.getValue(); // Sum may be 0\n\n    var unitRadian = Math.PI / (sum || validDataCount) * 2;\n    var renderRollupNode = treeRoot.depth > 0;\n    var levels = treeRoot.height - (renderRollupNode ? -1 : 1);\n    var rPerLevel = (r - r0) / (levels || 1);\n    var clockwise = seriesModel.get('clockwise');\n    var stillShowZeroSum = seriesModel.get('stillShowZeroSum'); // In the case some sector angle is smaller than minAngle\n    // var restAngle = PI2;\n    // var valueSumLargerThanMinAngle = 0;\n\n    var dir = clockwise ? 1 : -1;\n    /**\n     * Render a tree\n     * @return increased angle\n     */\n\n    var renderNode = function renderNode(node, startAngle) {\n      if (!node) {\n        return;\n      }\n\n      var endAngle = startAngle; // Render self\n\n      if (node !== virtualRoot) {\n        // Tree node is virtual, so it doesn't need to be drawn\n        var value = node.getValue();\n        var angle = sum === 0 && stillShowZeroSum ? unitRadian : value * unitRadian;\n\n        if (angle < minAngle) {\n          angle = minAngle; // restAngle -= minAngle;\n        } // else {\n        //     valueSumLargerThanMinAngle += value;\n        // }\n\n\n        endAngle = startAngle + dir * angle;\n        var depth = node.depth - rootDepth - (renderRollupNode ? -1 : 1);\n        var rStart = r0 + rPerLevel * depth;\n        var rEnd = r0 + rPerLevel * (depth + 1);\n        var itemModel = node.getModel();\n\n        if (itemModel.get('r0') != null) {\n          rStart = parsePercent(itemModel.get('r0'), size / 2);\n        }\n\n        if (itemModel.get('r') != null) {\n          rEnd = parsePercent(itemModel.get('r'), size / 2);\n        }\n\n        node.setLayout({\n          angle: angle,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          clockwise: clockwise,\n          cx: cx,\n          cy: cy,\n          r0: rStart,\n          r: rEnd\n        });\n      } // Render children\n\n\n      if (node.children && node.children.length) {\n        // currentAngle = startAngle;\n        var siblingAngle = 0;\n        zrUtil.each(node.children, function (node) {\n          siblingAngle += renderNode(node, startAngle + siblingAngle);\n        });\n      }\n\n      return endAngle - startAngle;\n    }; // Virtual root node for roll up\n\n\n    if (renderRollupNode) {\n      var rStart = r0;\n      var rEnd = r0 + rPerLevel;\n      var angle = Math.PI * 2;\n      virtualRoot.setLayout({\n        angle: angle,\n        startAngle: startAngle,\n        endAngle: startAngle + angle,\n        clockwise: clockwise,\n        cx: cx,\n        cy: cy,\n        r0: rStart,\n        r: rEnd\n      });\n    }\n\n    renderNode(treeRoot, startAngle);\n  });\n}\n/**\n * Init node children by order and update visual\n *\n * @param {TreeNode} node  root node\n * @param {boolean}  isAsc if is in ascendant order\n */\n\n\nfunction initChildren(node, isAsc) {\n  var children = node.children || [];\n  node.children = sort(children, isAsc); // Init children recursively\n\n  if (children.length) {\n    zrUtil.each(node.children, function (child) {\n      initChildren(child, isAsc);\n    });\n  }\n}\n/**\n * Sort children nodes\n *\n * @param {TreeNode[]}               children children of node to be sorted\n * @param {string | function | null} sort sort method\n *                                   See SunburstSeries.js for details.\n */\n\n\nfunction sort(children, sortOrder) {\n  if (typeof sortOrder === 'function') {\n    return children.sort(sortOrder);\n  } else {\n    var isAsc = sortOrder === 'asc';\n    return children.sort(function (a, b) {\n      var diff = (a.getValue() - b.getValue()) * (isAsc ? 1 : -1);\n      return diff === 0 ? (a.dataIndex - b.dataIndex) * (isAsc ? -1 : 1) : diff;\n    });\n  }\n}\n\nmodule.exports = _default;"],"sourceRoot":""}