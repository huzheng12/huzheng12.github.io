{"version":3,"sources":["../node_modules/_echarts@4.8.0@echarts/lib/component/grid.js","../node_modules/_echarts@4.8.0@echarts/lib/component/polar.js","../node_modules/_echarts@4.8.0@echarts/lib/component/angleAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/AngleAxisView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/radiusAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/RadiusAxisView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/PolarAxisPointer.js","../node_modules/_echarts@4.8.0@echarts/lib/component/geo.js","../node_modules/_echarts@4.8.0@echarts/lib/component/geo/GeoView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/calendar.js","../node_modules/_echarts@4.8.0@echarts/lib/component/calendar/CalendarView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/graphic.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoomSelect.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/AxisProxy.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/SelectZoomModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/SelectZoomView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush/preprocessor.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush/selector.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush/BrushModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush/BrushView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush/brushAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/preprocessor.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/typeDefaulter.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/timelineAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/SliderTimelineModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/TimelineModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/SliderTimelineView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/TimelineView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/timeline/TimelineAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/markPoint.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkPointModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkPointView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/markLine.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkLineModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkLineView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/markArea.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkAreaModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkAreaView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legendScroll.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/legendAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/legendFilter.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/ScrollableLegendModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/ScrollableLegendView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/scrollableLegendAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/SliderZoomModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/SliderZoomView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/InsideZoomModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/InsideZoomView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/roams.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/AxisBuilder.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/AxisView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/sliderMove.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/DataZoomModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/DataZoomView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/gridSimple.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/RoamController.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/modelHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/cursorHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/viewHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/selectableMixin.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/roamHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/BrushController.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/BaseAxisPointer.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/typeDefaulter.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/helper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/dataZoomProcessor.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/dataZoomAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkerModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/markerHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/marker/MarkerView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataset.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/axisSplitHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/MapDraw.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/interactionMutex.js","../node_modules/_echarts@4.8.0@echarts/lib/component/parallel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/brushHelper.js","../node_modules/_echarts@4.8.0@echarts/lib/component/singleAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/findPointFromSeries.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/globalListener.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/CartesianAxisPointer.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/listComponent.js","../node_modules/_echarts@4.8.0@echarts/lib/component/helper/BrushTargetManager.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoom/history.js","../node_modules/_echarts@4.8.0@echarts/lib/component/brush/visualEncoding.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/LegendModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/legend/LegendView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoomSlider.js","../node_modules/_echarts@4.8.0@echarts/lib/component/dataZoomInside.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/CartesianAxisView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/radar.js","../node_modules/_echarts@4.8.0@echarts/lib/component/radar/RadarView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/parallelAxis.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/parallelAxisAction.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/ParallelAxisView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axis/SingleAxisView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/axisTrigger.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/AxisPointerModel.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/AxisPointerView.js","../node_modules/_echarts@4.8.0@echarts/lib/component/axisPointer/SingleAxisPointer.js"],"names":["__webpack_require__","echarts","zrUtil","barPolar","registerLayout","curry","extendComponentView","type","graphic","Model","AxisView","AxisBuilder","elementList","getAxisLineShape","polar","rExtent","angle","slice","reverse","start","coordToPoint","end","x1","y1","x2","y2","getRadiusIdx","getRadiusAxis","inverse","fixAngleOverlap","list","firstItem","lastItem","length","Math","abs","coord","pop","_default","extend","axisPointerClass","render","angleAxisModel","ecModel","this","group","removeAll","get","angleAxis","axis","radiusExtent","getExtent","ticksAngles","getTicksCoords","minorTickAngles","getMinorTicksCoords","labels","map","getViewLabels","labelItem","clone","dataToCoord","tickValue","each","name","scale","isBlank","_axisLine","shape","lineStyleModel","getModel","rId","r0Id","Circle","cx","cy","r","style","getLineStyle","z2","silent","Ring","r0","fill","add","_axisTick","tickModel","tickLen","radius","lines","tickAngleItem","Line","mergePath","defaults","stroke","_minorTick","tickAngles","minorTickModel","i","k","push","_axisLabel","rawCategoryData","getCategories","commonLabelModel","labelMargin","triggerEvent","idx","labelModel","p","labelTextAlign","labelTextVerticalAlign","textStyle","textEl","Text","isLabelSilent","setTextStyle","x","y","textFill","getTextColor","text","formattedLabel","textAlign","textVerticalAlign","eventData","makeAxisEventDataBase","targetType","value","rawLabel","_splitLine","lineColors","lineCount","Array","splitLines","colorIndex","z","_minorSplitLine","_splitArea","areaStyleModel","areaColors","splitAreas","RADIAN","PI","prevAngle","min","r1","max","clockwise","Sector","startAngle","endAngle","getAreaStyle","module","exports","axisBuilderAttrs","selfBuilderAttrs","radiusAxisModel","radiusAxis","getAngleAxis","ticksCoords","minorTicksCoords","axisAngle","layout","position","rotation","labelDirection","tickDirection","nameDirection","labelRotate","layoutAxis","axisBuilder","getGroup","prevRadius","formatUtil","BaseAxisPointer","viewHelper","matrix","PolarAxisPointer","makeElOption","elOption","axisModel","axisPointerModel","api","dim","animationThreshold","coordValue","otherExtent","getOtherAxis","capitalFirst","axisPointerType","elStyle","buildElStyle","pointerOption","pointerShapeBuilder","graphicKey","pointer","labelPos","align","verticalAlign","transform","create","rotate","translate","applyTransform","labelRotation","labelLayout","innerTextLayout","getLabelPosition","buildLabelElOption","line","makeLineShape","shadow","bandWidth","getBandWidth","radian","makeSectorShape","registerAxisPointerClass","makeAction","method","actionInfo","update","registerAction","payload","selected","eachComponent","mainType","query","geoModel","geo","coordinateSystem","regions","region","isSelected","event","MapDraw","init","mapDraw","_mapDraw","from","uid","draw","dispose","remove","numberUtil","MONTH_TEXT","EN","CN","WEEK_TEXT","_tlpoints","_blpoints","_firstDayOfMonth","_firstDayPoints","calendarModel","coordSys","rangeData","getRangeInfo","orient","getOrient","_renderDayRect","_renderLines","_renderYearText","_renderMonthText","_renderWeekText","itemRectStyleModel","getItemStyle","sw","getCellWidth","sh","getCellHeight","time","getNextNDay","point","dataToRect","tl","rect","Rect","width","height","cursor","self","show","lineWidth","firstDay","addPoints","formatedDate","getDateInfo","m","date","setMonth","getMonth","points","_getLinePointsOfOneWeek","_drawSplitline","_getEdgesPoints","rs","poyline","Polyline","tmpD","day","_formatterLabel","formatter","params","formatTplSimple","nameMap","_yearTextPositionControl","margin","aligns","yearLabel","pos","xc","yc","posPoints","top","bottom","left","right","content","yearText","attr","_monthTextPositionControl","isCenter","vAlign","monthLabel","termPoints","isString","toUpperCase","tmp","firstDayPoints","yyyy","yy","MM","M","monthText","_weekTextPositionControl","cellSize","isStart","dayLabel","firstDayOfWeek","getFirstDayOfWeek","lweek","parsePercent","fweek","center","weekText","__DEV__","modelUtil","graphicUtil","layoutUtil","_nonShapeGraphicElements","path","compoundPath","Group","image","Image","registerPreprocessor","option","graphicOption","isArray","elements","GraphicModel","extendComponentModel","defaultOption","parentId","_elOptionsToUpdate","mergeOption","superApply","arguments","optionUpdated","newOption","isInit","thisOption","newList","existList","flattenedList","_flatten","mappingResult","mappingToExists","makeIdAndName","elOptionsToUpdate","resultItem","index","newElOption","existElOption","exist","id","keyInfo","newElParentOption","parentOption","setKeyInfoToNewElOption","newElOptCopy","$action","merge","mergeLayoutParam","ignoreSize","copyLayoutParams","mergeNewElOptionToExist","existItem","hv","isSetLoc","setLayoutInfoToExist","splice","optionList","result","children","useElOptionsToUpdate","els","createEl","targetElParent","elMap","graphicType","el","hasOwnProperty","getShapeClass","set","__ecGraphicId","removeEl","existEl","existElParent","parent","traverse","removeKey","obj","props","isSet","prop","_elMap","createHashMap","_lastGraphicModel","graphicModel","_clear","_updateElements","_relocate","rootGroup","elOptionStyle","textBaseline","textStroke","elOptionCleaned","concat","LOCATION_PARAMS","getCleanedElOption","__ecGraphicWidthOption","__ecGraphicHeightOption","ignore","componentType","componentIndex","info","setEventData","elOptions","apiWidth","getWidth","apiHeight","getHeight","isGroup","isParentRoot","parentEl","__ecGraphicWidth","__ecGraphicHeight","containerInfo","positionElement","boundingMode","bounding","helper","sliderMove","asc","AxisProxy","dimName","axisIndex","dataZoomModel","_dimName","_axisIndex","_valueWindow","_percentWindow","_dataExtent","_minMaxSpan","_dataZoomModel","setAxisModel","axisProxy","isRestore","getAxisModel","percentWindow","valueWindow","precision","getPixelPrecision","useOrigin","setRange","toFixed","prototype","constructor","hostedBy","getDataValueWindow","getDataPercentWindow","getTargetSeriesModels","seriesModels","eachSeries","seriesModel","isCoordSupported","queryComponents","getComponent","getOtherAxisModel","otherAxisDim","coordSysIndexName","foundOtherAxisModel","axisDim","otherAxisModel","getMinMaxSpan","calculateDataWindow","opt","hasPropModeValue","dataExtent","rangePropMode","getRangePropMode","percentExtent","boundPercent","boundValue","parse","linearMap","spans","restrictSet","fromWindow","toWindow","fromExtent","toExtent","toValue","suffix","reset","targetSeries","Infinity","seriesData","getData","mapDimension","seriesExtent","getApproximateExtent","NaN","getMin","isCategoryAxis","axisDataLen","getMax","fixExtentByAxis","calculateDataExtent","minMaxSpan","minMax","percentSpan","valueSpan","setMinMaxSpan","dataWindow","settledOption","restore","filterData","filterMode","dataDims","filterSelf","dataIndex","leftOut","rightOut","hasValue","thisHasValue","isNaN","thisLeftOut","thisRightOut","setData","isInWindow","range","selectRange","setApproximateExtent","preprocessor","DEFAULT_TOOLBOX_BTNS","isNew","brushComponents","brush","brushComponentSpecifiedBtns","brushOpt","tbs","toolbox","feature","toolboxFeature","toolboxBrush","brushTypes","apply","arr","val","flag","removeDuplicate","polygonContain","BoundingRect","linePolygonIntersect","getLineSelectors","xyIndex","xy","wh","itemLayout","selectors","area","inLineRange","layoutRange","lineX","lineY","boundingRect","contain","intersect","polygon","visualSolution","DEFAULT_OUT_OF_BRUSH_COLOR","generateBrushOption","brushOption","brushType","brushMode","transformable","brushStyle","removeOnClick","dependencies","brushLink","seriesIndex","geoIndex","xAxisIndex","yAxisIndex","borderWidth","color","borderColor","throttleType","throttleDelay","areas","coordInfoList","replaceVisualOption","inBrush","outOfBrush","liftZ","setAreas","setBrushOption","BrushController","layoutCovers","model","_brushController","getZr","on","bind","_onBrush","mount","brushModel","updateController","updateTransform","updateView","modelId","brushTargetManager","setOutputRanges","isEnd","dispatchAction","brushId","$from","setPanels","makePanelOpts","enableBrush","updateCovers","transferItem","itemStyle","itemStyleEmphasis","emphasis","label","labelNormal","normal","excludeLabelAttr","has","timelineOpt","timeline","ec2Types","number","axisType","controlStyle","controlPosition","data","dataItem","isObject","compatibleEC2","registerSubTypeDefaulter","timelineModel","currentIndex","setCurrentIndex","isIndexMax","setPlayState","resetOption","playState","TimelineModel","dataFormatMixin","SliderTimelineModel","backgroundColor","tooltip","trigger","symbol","symbolSize","lineStyle","interval","checkpointStyle","animation","animationDuration","animationEasing","showPlayBtn","showPrevBtn","showNextBtn","itemSize","itemGap","playIcon","stopIcon","nextIcon","prevIcon","mixin","ComponentModel","List","layoutMode","zlevel","realtime","padding","autoPlay","rewind","loop","playInterval","parentModel","_data","_names","mergeDefaultAndTheme","_initData","count","getCurrentIndex","state","getPlayState","dataArr","names","idxArr","item","newItem","getDataItemValue","dimType","category","initData","TimelineView","TimelineAxis","createSymbol","axisHelper","encodeHTML","_axis","_viewRect","_timer","_currentPointer","_mainGroup","_labelGroup","layoutInfo","_layout","mainGroup","_createGroup","labelGroup","_createAxis","formatTooltip","getLabel","_renderAxisLabel","_position","_doPlayStop","_clearTimer","labelPosOpt","viewRect","getLayoutRect","getBoxLayoutParams","getViewRect","horizontal","vertical","playPosition","prevBtnPosition","nextBtnPosition","axisExtent","labelAlignMap","labelBaselineMap","rotationMap","mainLength","controlModel","showControl","controlSize","controlGap","sizePlusGap","xLeft","xRight","labelAlign","labelBaseline","rotateOriginX","rotateOriginY","viewBound","getBound","mainBound","getBoundingRect","labelBound","mainPosition","labelsPosition","mainBoundIdx","toBound","setOrigin","targetGroup","origin","fromPos","to","dimIdx","boundIdx","createScaleByModel","getTicks","mapArray","getDataExtent","setExtent","niceTicks","newGroup","_renderAxisLine","lineCap","_renderAxisTick","ticks","tickCoord","itemModel","getItemModel","itemStyleModel","hoverStyleModel","symbolOpt","onclick","_changeTimeline","giveSymbol","setHoverStyle","dataModel","getLabelModel","normalLabelModel","hoverLabelModel","_renderControl","hoverStyle","makeBtn","iconPath","willRotate","btn","objPath","opts","makePath","replace","makeIcon","rectHover","_handlePlayClick","_renderCurrentPointer","pointerModel","me","callback","onCreate","draggable","drift","_handlePointerDrag","ondragend","_handlePointerDragend","pointerMoveTo","onUpdate","nextState","dx","dy","e","_pointerChangeTimeline","offsetX","offsetY","mousePos","toCoord","_toAxisCoord","dirty","targetDataIndex","_findNearestTick","setTimeout","vertex","trans","getLocalTransform","axisCoord","dist","d","clearTimeout","nextIndex","hostModel","setColor","symbolType","setStyle","symbolOffset","symbolRotate","noAnimation","dragging","stopAnimation","animateTo","Axis","coordExtent","call","isHorizontal","inherits","markPoint","SymbolDraw","markerHelper","updateMarkerLayout","mpData","xPx","yPx","getMarkerPosition","getValues","dimensions","dataToPoint","setItemLayout","markPointModel","mpModel","markerGroupMap","updateLayout","renderSeries","seriesId","symbolDrawMap","symbolDraw","coordDimsInfos","coordDim","getDimensionInfo","dataOpt","dataTransform","filter","dataFilter","dimValueGetter","createList","getShallow","isFnSymbol","isFunction","isFnSymbolSize","rawIdx","getRawValue","dataParams","getDataParams","setItemVisual","getVisual","updateData","eachItemGraphicEl","child","__keep","markLine","distance","LineDraw","MarkerView","getStackedDimension","markLineTransform","mlModel","mlType","xAxis","yAxis","valueAxis","getAxis","retrieve","axisInfo","getAxisInfo","valueDataDim","numCalculate","valueIndex","baseIndex","mlFrom","mlTo","isInifinity","isFinite","ifMarkLineHasOnlyDim","dimIndex","fromCoord","otherDimIndex","containData","markLineFilter","updateSingleMarkerEndLayout","isFrom","dims","toGlobalCoord","markLineModel","mlData","fromData","__from","toData","__to","getItemLayout","lineDrawMap","lineDraw","lineData","optData","hasItemOption","updateDataVisualAndLayout","lineColor","getItemVisual","fromSymbolSize","fromSymbol","toSymbolSize","toSymbol","markArea","colorUtil","markAreaTransform","maModel","lt","rb","ltCoord","rbCoord","mergeAll","x0","y0","markAreaFilter","getSingleMarkerEndPoint","pt","clampData","dimPermutations","markAreaModel","areaData","getItemGraphicEl","setShape","areaGroupMap","polygonGroup","floor","diff","__data","Polygon","setItemGraphicEl","newIdx","oldIdx","updateProps","execute","labelHoverModel","useStyle","modifyAlpha","setLabelStyle","labelFetcher","labelDataIndex","defaultText","getName","isRectText","autoColor","legendSelectActionHandler","methodName","selectedMap","isToggleSelect","legendModel","legendData","isItemSelected","legendModels","findComponents","filterSeries","series","LegendModel","getLayoutParams","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","extraOpt","inputPositionParams","superCall","mergeAndNormalizeLayoutParams","target","raw","LegendView","WH","XY","ScrollableLegendView","newlineDisabled","_currentIndex","_containerGroup","getContentGroup","_controllerGroup","_showController","resetInner","removeClipPath","__rectSize","renderInner","itemAlign","selector","selectorPosition","controllerGroup","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","icon","createIcon","_pageGo","font","getFont","layoutInner","maxSize","isFirstRender","selectorGroup","getSelectorGroup","orientIdx","hw","yx","box","selectorButtonGap","selectorRect","selectorPos","processMaxSize","mainRect","_layoutContentAndController","offset","contentGroup","containerGroup","contentRect","controllerRect","showController","contentPos","containerPos","controllerPos","retrieve2","clipShape","setClipPath","eachChild","invisible","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","legendId","canJump","childOfName","pageText","current","total","pageCount","containerRectSize","targetItemIndex","_findTargetItemIndex","targetItem","itemCount","pCount","pagePrevDataIndex","pageNextDataIndex","targetItemInfo","getItemInfo","s","winStartItemInfo","winEndItemInfo","currItemInfo","itemRect","__legendDataIndex","itemInfo","winStart","legendDataIdx","defaultIndex","subType","dataBackground","opacity","areaStyle","fillerColor","handleIcon","handleSize","handleStyle","labelPrecision","labelFormatter","showDetail","showDataShadow","zoomLock","eventTool","throttle","DataZoomView","HORIZONTAL","LABEL_GAP","SHOW_DATA_SHADOW_SERIES_TYPE","SliderZoomView","_displayables","_orient","_range","_handleEnds","_size","_handleWidth","_handleHeight","_location","_dragging","_dataShadowInfo","createOrUpdate","_buildView","_updateView","clear","thisGroup","_resetLocation","_resetInterval","barGroup","_renderBackground","_renderHandle","_renderDataShadow","_positionGroup","coordRect","_findCoordRect","ecSize","positionInfo","layoutParams","layoutRect","location","targetAxisModel","getFirstTargetAxisModel","otherAxisInverse","_getViewExtent","size","_onClickPanelClick","_prepareDataShadowInfo","getRawData","otherDim","getShadowDim","otherDataExtent","otherOffset","lastIsEmpty","otherShadowExtent","thisShadowExtent","areaPoints","linePoints","step","thisCoord","stride","round","isEmpty","otherCoord","eachTargetAxis","dimNames","getAxisProxy","indexOf","thisAxis","thisDim","displaybles","handles","handleLabels","filler","getCursor","_onDragMove","ondragstart","_showDataInfo","_onDragEnd","onmouseover","onmouseout","textPosition","subPixelOptimize","handleIndex","bRect","handleColor","textStyleModel","textFont","getPercentRange","viewExtent","_updateInterval","delta","handleEnds","viewExtend","findRepresentativeAxisProxy","minSpan","maxSpan","lastRange","nonRealtime","handleInterval","handle","handleHeight","_updateDataInfo","labelTexts","dataInterval","_formatLabel","orderedHandleEnds","setLabel","barTransform","getTransform","direction","transformDirection","textPoint","valueStr","showOrHide","stop","changed","_dispatchZoomAction","localPoint","transformCoordToLocal","dataZoomId","getTargetCoordInfo","getRect","disabled","zoomOnMouseWheel","moveOnMouseMove","moveOnMouseWheel","preventDefaultMouseMove","roams","InsideZoomView","coordSysName","allCoordIds","coordInfo","generateCoordId","coordModel","getRange","eventName","roamHandlers","register","coordId","containsPoint","containPoint","unregister","zoom","controller","axisModels","directionInfo","getDirectionInfo","originX","originY","percentPoint","signal","pixelStart","pixelLength","pixel","pan","makeMover","oldX","oldY","newX","newY","scrollMove","scrollDelta","getPercentDelta","percentDelta","grid","oldPoint","newPoint","ret","angleExtent","pointToCoord","singleAxis","RoamController","throttleUtil","ATTR","giveStore","zr","cleanStore","store","record","batch","dataZoomInfo","theDataZoomId","theCoordId","dataZoomInfos","newRecord","isAvailableBehavior","createController","controllerParams","controlType","typePriority","type_true","type_move","type_false","type_undefined","oneType","mergeControllerParams","enable","setPointerChecker","_util","_number","isRadianAroundZero","remRadian","matrixUtil","v2ApplyTransform","shouldShowAllLabels","labelOffset","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","axisLine","extent","pt1","pt2","anid","strokeContainThreshold","arrows","arrowSize","arrowOffset","symbolWidth","symbolHeight","sqrt","cos","sin","axisTickLabel","ticksEls","tickEndCoord","createTicks","buildAxisMajorTicks","labelEls","axisLabelShow","itemLabelModel","textColor","decomposeTransform","buildAxisLabel","tickEls","showMinLabel","showMaxLabel","firstLabel","nextLabel","lastLabel","prevLabel","firstTick","nextTick","lastTick","prevTick","ignoreEl","isTwoLabelOverlapped","fixMinMaxLabelShow","minorTickLineStyle","minorTicksEls","buildAxisMinorTicks","axisName","axisNameAvailableWidth","nameLocation","gap","gapSignal","isNameLocationCenter","nameRotation","textRotate","rotationDiff","onLeft","endTextLayout","truncateOpt","ellipsis","maxWidth","nameTruncateMaxWidth","truncatedText","truncateText","minChar","placeholder","tooltipOpt","formatterParams","$vars","__fullText","__truncatedText","axisRotation","textRotation","next","firstRect","nextRect","mRotationBack","identity","mul","tickTransform","tickLineStyle","aniid","tickEl","axisPointerModelHelper","_axisPointer","fixValue","_updateAxisPointer","updateAxisPointer","force","axisPointer","disposeAxisPointer","axisView","forceRender","Clazz","getAxisPointerClass","getAxisPointerModel","axisPointerClazz","clazz","getSpanSign","span","sign","restrict","extentSpan","handleSpan","originalDistSign","extentMinSpan","realExtent","currDistSign","env","eachAxisDim","retrieveRawOption","updateRangeUse","inputRawOption","_rangePropMode","rangeModeInOption","percentSpecified","valueSpecified","startValue","endValue","minValueSpan","maxValueSpan","rangeMode","_dataIntervalByAxis","_dataInfo","_axisProxies","_autoThrottle","doInit","canvasSupported","_setDefaultThrottle","_resetTarget","_giveAxisProxies","axisProxies","dependentModels","__dzAxisProxy","autoMode","_judgeAutoMode","axisIndexName","normalizeToArray","_autoSetAxisIndex","_autoSetOrient","hasIndexSpecified","autoAxisIndex","singleAxisModel","singleAxisIndex","axisIndices","len","_isSeriesHasAllAxesTypeOf","axisId","is","seriesAxisIndex","globalOption","firstAxisModel","indices","context","setRawRange","setCalculatedRange","getValueRange","axisDimName","key","coordSysLists","getCoordSysModel","coordIndex","save","gridModel","Eventful","interactionMutex","pointerChecker","_zr","_opt","mousedownHandler","mousedown","mousemoveHandler","mousemove","mouseupHandler","mouseup","mousewheelHandler","mousewheel","pinchHandler","pinch","disable","off","isDragging","isPinching","_pinching","isMiddleOrRightButtonOnMouseUpDown","_x","_y","gestureEvent","isTaken","shouldZoom","shouldMove","wheelDelta","absWheelDeltaDelta","factor","checkPointerAndTrigger","absDelta","pinchScale","pinchX","pinchY","behaviorToCheck","contollerEvent","settings","setting","axisTrigger","link","registerProcessor","PRIORITY","PROCESSOR","STATISTIC","coordSysAxesInfo","collect","checkPropInLink","linkPropValue","axisPropValue","axesInfo","makeKey","isHandleTrigger","seriesInvolved","coordSysMap","globalTooltipModel","globalAxisPointerModel","linksOption","linkGroups","getCoordinateSystems","axisPointerEnabled","coordSysKey","axesInfoInCoordSys","coordSysModel","baseTooltipModel","getAxes","saveTooltipAxisInfo","getTooltipAxes","triggerAxis","cross","tooltipAxes","baseAxes","otherAxes","fromTooltip","triggerTooltip","axisPointerShow","snap","tooltipAxisPointerModel","volatileOption","field","labelOption","tooltipAxisPointerLabelShow","crossStyle","makeAxisPointerModel","involveSeries","useHandle","groupIndex","linkOption","getLinkGroupIndex","linkGroup","mapper","collectAxesInfo","seriesTooltipTrigger","seriesTooltipShow","seriesDataCount","collectSeriesInfo","status","IRRELEVANT_EXCLUDES","onIrrelevantElement","targetCoordSysModel","getComponentByElement","topTarget","textContain","getValueLabel","paddings","normalizeCssArray","textRect","viewWidth","viewHeight","confineInContainer","bgColor","textPadding","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","seriesDataIndices","getAxisRawValue","axisDimension","idxItem","getSeriesByIndex","dataIndexInside","getTransformedPosition","styleModel","buildCartesianSingleLabelElOption","textLayout","p1","p2","xDimIndex","makeRectShape","updateSelectedMap","targetList","_targetList","_selectTargetMap","reduce","targetMap","select","unSelect","toggleSelected","updateViewOnPan","controllerHost","updateViewOnZoom","zoomDelta","zoomX","zoomY","zoomLimit","newZoom","zoomMin","zoomMax","zoomScale","DataDiffer","mathMin","mathMax","mathPow","pow","COVER_Z","UNSELECT_THRESHOLD","MIN_RESIZE_LINE_WIDTH","MUTEX_RESOURCE_KEY","DIRECTION_MAP","w","n","CURSOR_MAP","ne","nw","se","DEFAULT_BRUSH_OPT","baseUID","_brushType","_brushOption","_panels","_track","_covers","_creatingCover","_creatingPanel","_enableGlobalPan","_uid","_handlers","pointerHandlers","handler","createCover","cover","coverRenderers","__brushOption","updateZ","endCreating","creatingCover","coverRenderer","getCoverRenderer","updateCoverShape","updateCoverAfterCreation","updateCommon","getPanelByPoint","localCursorPoint","panel","panels","pn","isTargetByCursor","getPanelByCover","panelId","clearCovers","covers","originalLength","getTrackEnds","track","tail","createBaseRectCover","doDrift","edgeNames","makeStyle","updateBaseRect","localRange","xa","ya","x2a","y2a","widtha","heighta","updateRectShape","mainEl","childAt","globalDir","getGlobalDirection","localDirection","split","join","h","xmin","ymin","xmax","ymax","pointsToRect","clipByPanel","strokeNoScale","formatRectRange","driftRect","toRectRange","fromRectRange","rectRange","localDelta","toLocalDelta","namePart","ind","driftPolygon","localD","localZero","clipPath","preventDefault","rawE","mainShapeContain","updateCoverByMouse","eventParams","thisBrushOption","shouldShowCover","determineBrushType","getCreatingRange","defaultBrushType","release","handlers","unmountHandlers","doDisableBrush","take","mountHandlers","doEnableBrush","panelOpts","enableGlobalPan","eachCover","cb","brushOptionList","tmpIdPrefix","oldCovers","newCovers","getKey","addOrUpdate","oldIndex","newIndex","newBrushOption","unmount","handleDragEnd","isOutsideZrArea","currPanel","setCursorStyle","resetCursor","getLineRenderer","localTrack","ends","getLinearBrushOtherExtent","clazzUtil","inner","makeInner","animationModel","moveAnimation","propsEqual","lastProps","newProps","equals","lastProp","updateLabelShowHide","labelEl","getHandleTransProps","updateMandatoryProps","_group","_lastGraphicKey","_handle","_lastValue","_lastStatus","_payloadInfo","_axisModel","_axisPointerModel","_api","hide","_moveAnimation","determineAnimation","doUpdateProps","updatePointerEl","updateLabelEl","createPointerEl","createLabelEl","useSnap","pointerEl","updateHandleTransform","handleModel","onmousemove","onmousedown","_onHandleDragMove","_onHandleDragEnd","_moveHandleToValue","getHandleTransform","_doDispatchAxisPointer","payloadInfo","cursorPoint","tooltipOption","doClear","buildLabel","enableClassExtend","COORDS","createNameEach","attrs","capitalNames","capitalAttrs","nameObj","capital","j","coordType","createLinkedNodesFinder","forEachNode","forEachEdgeType","edgeIdGetter","sourceNode","existsLink","nodes","records","edgeType","absorb","processSingleNode","node","isNodeAbsorded","hasLink","edgeId","isLinked","getTargetSeries","seriesModelMap","modifyOutputEnd","overallReset","percentRange","valueRange","linkedNodesFinder","effectedModels","addCommas","fillLabel","defaultEmphasis","MarkerModel","_mergeOption","isAnimationEnabled","hostSeries","__hostSeries","newOpt","createdBySelf","modelPropName","markerOpt","markerModel","formattedValue","html","isDimensionStacked","markerTypeCalculatorWithExtent","otherDataDim","targetDataDim","otherCoordIndex","targetCoordIndex","coordArr","calcDataDim","getCalculationInfo","indicesOfNearest","coordArrValue","getPrecision","markerTypeCalculator","average","valueDim","getDimension","dataDim","dimItem","dataDimToCoordDim","baseAxis","baseDataDim","getBaseAxis","sum","getMedian","parseFloat","hasXAndY","hasXOrY","markerModelKey","ComponentView","detectSourceFormat","SERIES_LAYOUT_BY_COLUMN","seriesLayoutBy","sourceHeader","source","rectCoordAxisBuildSplitArea","axisGroup","splitAreaModel","gridRect","clamp","areaColorsLen","lastSplitAreaColors","__splitAreaColors","newSplitAreaColors","cIndex","prev","rectCoordAxisHandleRemove","roamHelper","geoSourceManager","getUID","Transformable","getFixedItemStyle","areaColor","updateMapSelected","mapOrGeoModel","regionsGroup","otherRegionEl","__regions","updateGroup","_controller","_controllerHost","_updateGroup","_mouseDownFlag","_mapName","_initialized","_regionsGroup","_backgroundGroup","fromView","isGeo","mapSeries","getHostGeoModel","_updateBackground","targetScale","transformInfo","getTransformInfo","isFirstDraw","roamTransform","rawScale","rawPosition","itemStyleAccessPath","hoverItemStyleAccessPath","labelAccessPath","hoverLabelAccessPath","regionGroup","CompoundPath","segmentIgnoreThreshold","paths","dataIdx","regionModel","getRegionModel","hoverItemStyleModel","hoverItemStyle","indexOfName","visualColor","transformPoint","geometries","geometry","exterior","interiors","interior","culling","showLabel","hoverShowLabel","isDataNaN","useInsideStyle","textScale","highDownSilentOnTouch","_updateController","action","updateMapSelectHandler","removeGraphic","mapName","makeGraphic","root","getZoom","makeActionBase","getViewRectAfterRoam","getStore","resourceKey","userKey","parallelPreprocessor","parallelModel","_model","_throttledDispatchExpand","_dispatchExpand","checkTrigger","_mouseDownPoint","mouseDownPoint","getSlidedAxisExpandWindow","behavior","axisExpandWindow","debounceNextCall","view","triggerOn","normalizeRect","makeRectPanelClipPath","localPoints","clipPointsByRect","makeLinearBrushOtherExtent","specifiedXYIndex","brushWidth","base","makeRectIsTargetByCursor","targetModel","finder","queryDataIndex","getTooltipPosition","onLeave","doEnter","currTrigger","useHandler","eventType","dis","pendings","showTip","hideTip","pendingList","makeDispatchAction","actuallyPayload","showLen","hideLen","dispatchTooltipFinally","initialized","initGlobalListeners","cartesianAxisHelper","CartesianAxisPointer","getCartesian","getGlobalExtent","pixelValue","labelInside","currPosition","cursorOtherValue","getAxisDimIndex","layoutBox","componentModel","boxLayoutParams","viewportSize","makeBackground","brushHelper","COORD_CONVERTS","INCLUDE_FINDER_MAIN_TYPES","BrushTargetManager","targetInfoList","_targetInfoList","foundCpts","parseFinder","targetInfoBuilders","builder","include","proto","formatMinMax","includeMainTypes","matchOutputRanges","coordRange","coordRanges","coordConvert","__rangeOffset","diffProcessor","values","xyMinMax","targetInfo","findTargetInfo","coordSyses","setInputRanges","rangeOffset","xyMinMaxCurr","xyMinMaxOrigin","sizeCurr","getSize","sizeOrigin","scales","getScales","getDefaultBrushType","getPanelRect","controlSeries","areaPanelId","targetInfoMatchers","xAxisModels","yAxisModels","gridModels","gridModelMap","xAxesHas","yAxesHas","cartesians","getCartesians","cartesian","panelRectBuilder","xAxisDeclared","yAxisDeclared","geoModels","xAxisModel","yAxisModel","axisConvert","rangeOrCoordRange","xminymin","xmaxymax","axisNameIndex","coordToData","toLocalCoord","axisDiffProcessor","refer","newSnapshot","batchItem","head","snapshot","STATE_LIST","DISPATCH_METHOD","DISPATCH_FLAG","PRIORITY_BRUSH","VISUAL","BRUSH","doDispatch","brushSelected","isDisposed","checkInRange","selectorsByBrushType","rangeInfoList","getSelectorsByBrushType","brushSelector","sels","selectorsByElementType","bSelector","sel","registerVisual","brushIndex","thisBrushSelected","brushName","linkedSeriesMap","selectedDataIndexForLink","rangeInfoBySeries","hasBrushExists","selFn","elType","bindSelector","boundingRectBuilders","visualMappings","createVisualMappings","mappingOption","mappingMethod","linkOthers","brushed","hasAxisBrushed","eachActiveState","activeState","stepAParallel","seriesIndices","brushModelNotControll","stepAOthers","seriesBrushSelected","seriesName","getValueState","getRawIndex","applyVisual","fn","noop","getBoundingRectFromMinMax","rg","legendFilter","Component","SERIES_FILTER","isNameSpecified","langSelector","legend","defaultSelectorOption","all","title","_updateSelector","_updateData","hasSelected","potentialData","availableNames","eachRawSeries","isPotential","legendVisualProvider","getAllNames","isSeriesFiltered","_availableNames","rawData","allSelect","inverseSelect","borderRadius","itemWidth","itemHeight","inactiveColor","inactiveBorderColor","selectedMode","selectorLabel","fontSize","fontFamily","selectorItemGap","_contentGroup","_backgroundEl","_selectorGroup","_isFirstRender","legendDrawnMap","selectMode","excludeSeriesId","getSeriesByName","legendSymbolType","_createItem","dispatchSelectAction","dispatchHighlightAction","dispatchDownplayAction","provider","containName","newline","_createSelector","selectorItem","labelText","emphasisLabelModel","createSelectorButton","symbolKeepAspect","legendModelItemStyle","itemGroup","itemIcon","tooltipModel","legendGlobalTooltipModel","legendSymbol","setSymbolStyle","legendSymbolCenter","textX","hitRect","legendIndex","dataName","storage","getDisplayList","useHoverLayer","_axisSplitHelper","CartesianAxisView","oldAxisGroup","_axisGroup","groupTransition","splitLineModel","radarModel","_buildAxes","_buildSplitLineAndArea","radar","indicatorAxes","getIndicatorAxes","axisBuilders","indicatorAxis","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","ticksRadius","getColorIndex","realSplitNumber","axesTicksPoints","prevPoints","areaOrLine","areaOrLineColorList","parallelAxisModel","setActiveIntervals","intervals","setAxisExpand","fromAxisAreaSelect","areaSelectStyle","getAreaSelectStyle","areaWidth","axisLayout","getAxisLayout","builderOpt","_refreshBrushController","extentLen","extra","activeIntervals","getCoverInfoList","coverInfoList","coverInfo","parallelAxisId","singleAxisHelper","SingleAxisView","lineDash","getLineDash","modelHelper","findPointFromSeries","processOnAxis","newValue","updaters","dontSnap","outputFinder","snapToValue","payloadBatch","minDist","Number","MAX_VALUE","minDiff","seriesNestestValue","dataIndices","getAxisTooltipData","nestestValue","buildPayloadsBySeries","showPointer","showTooltip","showValueMap","dataByCoordSys","coordSysItem","coordSysId","coordSysIndex","coordSysType","coordSysMainType","dataByAxis","valueLabelOpt","makeMapperParam","illegalPoint","isIllegalPoint","inputAxesInfo","shouldHide","coordSysContainsPoint","inputAxisInfo","findInputAxisInfo","pointToData","linkTriggers","tarAxisInfo","tarKey","srcAxisInfo","srcKey","srcValItem","outputAxesInfo","valItem","updateModelActually","sampleItem","escapeConnect","dispatchTooltipActually","lastHighlights","newHighlights","toHighlight","toDownplay","dispatchHighDownActually","shadowStyle","globalListener","AxisPointerView","SingleAxisPointer","getPointDimIndex"],"mappings":"8EAkBAA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,2BCJR,IAAAC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBG,EAAeH,EAAQ,MAEvBA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,KAERA,EAAQ,MAsBRC,EAAAG,eAAAF,EAAAG,MAAAF,EAAA,QAEAF,EAAAK,oBAAA,CACAC,KAAA,gCCvCAP,EAAQ,KAERA,EAAQ,4BCFR,IAAAE,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtBS,EAAYT,EAAQ,IAEpBU,EAAeV,EAAQ,KAEvBW,EAAkBX,EAAQ,KAqB1BY,EAAA,yFAEA,SAAAC,EAAAC,EAAAC,EAAAC,GACAD,EAAA,GAAAA,EAAA,KAAAA,IAAAE,QAAAC,WACA,IAAAC,EAAAL,EAAAM,aAAA,CAAAL,EAAA,GAAAC,IACAK,EAAAP,EAAAM,aAAA,CAAAL,EAAA,GAAAC,IACA,OACAM,GAAAH,EAAA,GACAI,GAAAJ,EAAA,GACAK,GAAAH,EAAA,GACAI,GAAAJ,EAAA,IAIA,SAAAK,EAAAZ,GAEA,OADAA,EAAAa,gBACAC,QAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,IAAAG,OAAA,GAEAF,GAAAC,GAAAE,KAAAC,IAAAD,KAAAC,IAAAJ,EAAAK,MAAAJ,EAAAI,OAAA,WACAN,EAAAO,MAIA,IAAAC,EAAA5B,EAAA6B,OAAA,CACAhC,KAAA,YACAiC,iBAAA,mBACAC,OAAA,SAAAC,EAAAC,GAGA,GAFAC,KAAAC,MAAAC,YAEAJ,EAAAK,IAAA,SAIA,IAAAC,EAAAN,EAAAO,KACAnC,EAAAkC,EAAAlC,MACAoC,EAAApC,EAAAa,gBAAAwB,YACAC,EAAAJ,EAAAK,iBACAC,EAAAN,EAAAO,sBACAC,EAAAtD,EAAAuD,IAAAT,EAAAU,gBAAA,SAAAC,GAGA,OAFAA,EAAAzD,EAAA0D,MAAAD,IACAvB,MAAAY,EAAAa,YAAAF,EAAAG,WACAH,IAEA9B,EAAA2B,GACA3B,EAAAuB,GACAlD,EAAA6D,KAAAnD,EAAA,SAAAoD,IACAtB,EAAAK,IAAAiB,EAAA,UAAAhB,EAAAiB,MAAAC,WAAA,aAAAF,GACApB,KAAA,IAAAoB,GAAAtB,EAAA5B,EAAAsC,EAAAE,EAAAJ,EAAAM,IAEKZ,QAMLuB,UAAA,SAAAzB,EAAA5B,EAAAsC,EAAAE,EAAAJ,GACA,IAIAkB,EAJAC,EAAA3B,EAAA4B,SAAA,sBAEAC,EAAA7C,EAAAZ,GACA0D,EAAAD,EAAA,KAIAH,EADA,IAAAlB,EAAAsB,GACA,IAAAhE,EAAAiE,OAAA,CACAL,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAC,EAAA1B,EAAAqB,IAEAM,MAAAR,EAAAS,eACAC,GAAA,EACAC,QAAA,IAGA,IAAAxE,EAAAyE,KAAA,CACAb,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAC,EAAA1B,EAAAqB,GACAW,GAAAhC,EAAAsB,IAEAK,MAAAR,EAAAS,eACAC,GAAA,EACAC,QAAA,KAIAH,MAAAM,KAAA,KACAvC,KAAAC,MAAAuC,IAAAhB,IAMAiB,UAAA,SAAA3C,EAAA5B,EAAAsC,EAAAE,EAAAJ,GACA,IAAAoC,EAAA5C,EAAA4B,SAAA,YACAiB,GAAAD,EAAAvC,IAAA,gBAAAuC,EAAAvC,IAAA,UACAyC,EAAAtC,EAAAxB,EAAAZ,IACA2E,EAAAvF,EAAAuD,IAAAL,EAAA,SAAAsC,GACA,WAAAlF,EAAAmF,KAAA,CACAvB,MAAAvD,EAAAC,EAAA,CAAA0E,IAAAD,GAAAG,EAAAtD,WAGAQ,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAH,EAAA,CACAZ,MAAA3E,EAAA2F,SAAAP,EAAAhB,SAAA,aAAAQ,eAAA,CACAgB,OAAApD,EAAAK,IAAA,kCAQAgD,WAAA,SAAArD,EAAA5B,EAAAkF,EAAA1C,EAAAJ,GACA,GAAAI,EAAArB,OAAA,CAUA,IANA,IAAAqD,EAAA5C,EAAA4B,SAAA,YACA2B,EAAAvD,EAAA4B,SAAA,aACAiB,GAAAD,EAAAvC,IAAA,gBAAAkD,EAAAlD,IAAA,UACAyC,EAAAtC,EAAAxB,EAAAZ,IACA2E,EAAA,GAEAS,EAAA,EAAmBA,EAAA5C,EAAArB,OAA4BiE,IAC/C,QAAAC,EAAA,EAAqBA,EAAA7C,EAAA4C,GAAAjE,OAA+BkE,IACpDV,EAAAW,KAAA,IAAA5F,EAAAmF,KAAA,CACAvB,MAAAvD,EAAAC,EAAA,CAAA0E,IAAAD,GAAAjC,EAAA4C,GAAAC,GAAA/D,UAKAQ,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAH,EAAA,CACAZ,MAAA3E,EAAA2F,SAAAI,EAAA3B,SAAA,aAAAQ,eAAA5E,EAAA2F,SAAAP,EAAAR,eAAA,CACAgB,OAAApD,EAAAK,IAAA,oCAQAsD,WAAA,SAAA3D,EAAA5B,EAAAsC,EAAAE,EAAAJ,EAAAM,GACA,IAAA8C,EAAA5D,EAAA6D,eAAA,GACAC,EAAA9D,EAAA4B,SAAA,aACAmC,EAAAD,EAAAzD,IAAA,UACA2D,EAAAhE,EAAAK,IAAA,gBAEA7C,EAAA6D,KAAAP,EAAA,SAAAG,EAAAgD,GACA,IAAAC,EAAAJ,EACA1C,EAAAH,EAAAG,UACAc,EAAA1B,EAAAxB,EAAAZ,IACA+F,EAAA/F,EAAAM,aAAA,CAAAwD,EAAA6B,EAAA9C,EAAAvB,QACAsC,EAAA5D,EAAA4D,GACAC,EAAA7D,EAAA6D,GACAmC,EAAA5E,KAAAC,IAAA0E,EAAA,GAAAnC,GAAAE,EAAA,YAAAiC,EAAA,GAAAnC,EAAA,eACAqC,EAAA7E,KAAAC,IAAA0E,EAAA,GAAAlC,GAAAC,EAAA,YAAAiC,EAAA,GAAAlC,EAAA,eAEA2B,KAAAxC,IAAAwC,EAAAxC,GAAAkD,YACAJ,EAAA,IAAAnG,EAAA6F,EAAAxC,GAAAkD,UAAAR,IAAA7D,UAGA,IAAAsE,EAAA,IAAAzG,EAAA0G,KAAA,CACAlC,OAAArE,EAAAwG,cAAAzE,KAEAE,KAAAC,MAAAuC,IAAA6B,GACAzG,EAAA4G,aAAAH,EAAApC,MAAA+B,EAAA,CACAS,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,SAAAX,EAAAY,gBAAA9E,EAAAK,IAAA,4BACA0E,KAAA9D,EAAA+D,eACAC,UAAAb,EACAc,kBAAAb,IAGAL,IACAO,EAAAY,UAAAlH,EAAAmH,sBAAApF,GACAuE,EAAAY,UAAAE,WAAA,YACAd,EAAAY,UAAAG,MAAArE,EAAAsE,WAEKrF,OAMLsF,WAAA,SAAAxF,EAAA5B,EAAAsC,EAAAE,EAAAJ,GACA,IACAmB,EADA3B,EAAA4B,SAAA,aACAA,SAAA,aACA6D,EAAA9D,EAAAtB,IAAA,SACAqF,EAAA,EACAD,eAAAE,MAAAF,EAAA,CAAAA,GAGA,IAFA,IAAAG,EAAA,GAEApC,EAAA,EAAmBA,EAAA9C,EAAAnB,OAAwBiE,IAAA,CAC3C,IAAAqC,EAAAH,IAAAD,EAAAlG,OACAqG,EAAAC,GAAAD,EAAAC,IAAA,GACAD,EAAAC,GAAAnC,KAAA,IAAA5F,EAAAmF,KAAA,CACAvB,MAAAvD,EAAAC,EAAAoC,EAAAE,EAAA8C,GAAA9D,UAMA,IAAA8D,EAAA,EAAmBA,EAAAoC,EAAArG,OAAuBiE,IAC1CtD,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAA0C,EAAApC,GAAA,CACArB,MAAA3E,EAAA2F,SAAA,CACAC,OAAAqC,EAAAjC,EAAAiC,EAAAlG,SACSoC,EAAAS,gBACTE,QAAA,EACAwD,EAAA9F,EAAAK,IAAA,SAQA0F,gBAAA,SAAA/F,EAAA5B,EAAAsC,EAAAE,EAAAJ,GACA,GAAAI,EAAArB,OAAA,CAQA,IAJA,IACAoC,EADA3B,EAAA4B,SAAA,kBACAA,SAAA,aACAmB,EAAA,GAEAS,EAAA,EAAmBA,EAAA5C,EAAArB,OAA4BiE,IAC/C,QAAAC,EAAA,EAAqBA,EAAA7C,EAAA4C,GAAAjE,OAA+BkE,IACpDV,EAAAW,KAAA,IAAA5F,EAAAmF,KAAA,CACAvB,MAAAvD,EAAAC,EAAAoC,EAAAI,EAAA4C,GAAAC,GAAA/D,UAKAQ,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAH,EAAA,CACAZ,MAAAR,EAAAS,eACAE,QAAA,EACAwD,EAAA9F,EAAAK,IAAA,UAOA2F,WAAA,SAAAhG,EAAA5B,EAAAsC,EAAAE,EAAAJ,GACA,GAAAE,EAAAnB,OAAA,CAIA,IACA0G,EADAjG,EAAA4B,SAAA,aACAA,SAAA,aACAsE,EAAAD,EAAA5F,IAAA,SACAqF,EAAA,EACAQ,eAAAP,MAAAO,EAAA,CAAAA,GAQA,IAPA,IAAAC,EAAA,GACAC,EAAA5G,KAAA6G,GAAA,IACAC,GAAA5F,EAAA,GAAAhB,MAAA0G,EACA5D,EAAAhD,KAAA+G,IAAA/F,EAAA,GAAAA,EAAA,IACAgG,EAAAhH,KAAAiH,IAAAjG,EAAA,GAAAA,EAAA,IACAkG,EAAA1G,EAAAK,IAAA,aAEAmD,EAAA,EAAmBA,EAAA9C,EAAAnB,OAAwBiE,IAAA,CAC3C,IAAAqC,EAAAH,IAAAQ,EAAA3G,OACA4G,EAAAN,GAAAM,EAAAN,IAAA,GACAM,EAAAN,GAAAnC,KAAA,IAAA5F,EAAA6I,OAAA,CACAjF,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAO,KACAN,EAAAsE,EACAI,WAAAN,EACAO,UAAAnG,EAAA8C,GAAA9D,MAAA0G,EACAM,aAEApE,QAAA,KAEAgE,GAAA5F,EAAA8C,GAAA9D,MAAA0G,EAKA,IAAA5C,EAAA,EAAmBA,EAAA2C,EAAA5G,OAAuBiE,IAC1CtD,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAiD,EAAA3C,GAAA,CACArB,MAAA3E,EAAA2F,SAAA,CACAV,KAAAyD,EAAA1C,EAAA0C,EAAA3G,SACS0G,EAAAa,gBACTxE,QAAA,SAMAyE,EAAAC,QAAApH,wBCxUAtC,EAAQ,KAERA,EAAQ,4BCFR,IAAAE,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtBW,EAAkBX,EAAQ,KAE1BU,EAAeV,EAAQ,KAqBvB2J,EAAA,wCACAC,EAAA,2CAEAtH,EAAA5B,EAAA6B,OAAA,CACAhC,KAAA,aACAiC,iBAAA,mBACAC,OAAA,SAAAoH,EAAAlH,GAGA,GAFAC,KAAAC,MAAAC,YAEA+G,EAAA9G,IAAA,SAIA,IAAA+G,EAAAD,EAAA5G,KACAnC,EAAAgJ,EAAAhJ,MACAkC,EAAAlC,EAAAiJ,eACAC,EAAAF,EAAAzG,iBACA4G,EAAAH,EAAAvG,sBACA2G,EAAAlH,EAAAG,YAAA,GACAD,EAAA4G,EAAA3G,YACAgH,EAiIA,SAAArJ,EAAA+I,EAAAK,GACA,OACAE,SAAA,CAAAtJ,EAAA4D,GAAA5D,EAAA6D,IACA0F,SAAAH,EAAA,IAAAhI,KAAA6G,GACAuB,gBAAA,EACAC,eAAA,EACAC,cAAA,EACAC,YAAAZ,EAAAvF,SAAA,aAAAvB,IAAA,UAEAgC,GAAA,GA1IA2F,CAAA5J,EAAA+I,EAAAK,GACAS,EAAA,IAAAhK,EAAAkJ,EAAAM,GACAjK,EAAA6D,KAAA4F,EAAAgB,EAAAvF,IAAAuF,GACA/H,KAAAC,MAAAuC,IAAAuF,EAAAC,YACA1K,EAAA6D,KAAA6F,EAAA,SAAA5F,GACA6F,EAAA9G,IAAAiB,EAAA,WAAA8F,EAAA7F,MAAAC,WACAtB,KAAA,IAAAoB,GAAA6F,EAAA/I,EAAAoJ,EAAAhH,EAAA8G,EAAAC,IAEKrH,QAMLsF,WAAA,SAAA2B,EAAA/I,EAAAoJ,EAAAhH,EAAA8G,GACA,IACA3F,EADAwF,EAAAvF,SAAA,aACAA,SAAA,aACA6D,EAAA9D,EAAAtB,IAAA,SACAqF,EAAA,EACAD,eAAAE,MAAAF,EAAA,CAAAA,GAGA,IAFA,IAAAG,EAAA,GAEApC,EAAA,EAAmBA,EAAA8D,EAAA/H,OAAwBiE,IAAA,CAC3C,IAAAqC,EAAAH,IAAAD,EAAAlG,OACAqG,EAAAC,GAAAD,EAAAC,IAAA,GACAD,EAAAC,GAAAnC,KAAA,IAAA5F,EAAAiE,OAAA,CACAL,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAC,EAAAoF,EAAA9D,GAAA9D,UAOA,IAAA8D,EAAA,EAAmBA,EAAAoC,EAAArG,OAAuBiE,IAC1CtD,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAA0C,EAAApC,GAAA,CACArB,MAAA3E,EAAA2F,SAAA,CACAC,OAAAqC,EAAAjC,EAAAiC,EAAAlG,QACAkD,KAAA,MACSd,EAAAS,gBACTE,QAAA,MAQAyD,gBAAA,SAAAoB,EAAA/I,EAAAoJ,EAAAhH,EAAA8G,EAAAC,GACA,GAAAA,EAAAhI,OAAA,CAQA,IAJA,IACAoC,EADAwF,EAAAvF,SAAA,kBACAA,SAAA,aACAmB,EAAA,GAEAS,EAAA,EAAmBA,EAAA+D,EAAAhI,OAA6BiE,IAChD,QAAAC,EAAA,EAAqBA,EAAA8D,EAAA/D,GAAAjE,OAAgCkE,IACrDV,EAAAW,KAAA,IAAA5F,EAAAiE,OAAA,CACAL,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAC,EAAAqF,EAAA/D,GAAAC,GAAA/D,UAMAQ,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAH,EAAA,CACAZ,MAAA3E,EAAA2F,SAAA,CACAV,KAAA,MACOd,EAAAS,gBACPE,QAAA,OAOA0D,WAAA,SAAAmB,EAAA/I,EAAAoJ,EAAAhH,EAAA8G,GACA,GAAAA,EAAA/H,OAAA,CAIA,IACA0G,EADAkB,EAAAvF,SAAA,aACAA,SAAA,aACAsE,EAAAD,EAAA5F,IAAA,SACAqF,EAAA,EACAQ,eAAAP,MAAAO,EAAA,CAAAA,GAIA,IAHA,IAAAC,EAAA,GACAgC,EAAAb,EAAA,GAAA5H,MAEA8D,EAAA,EAAmBA,EAAA8D,EAAA/H,OAAwBiE,IAAA,CAC3C,IAAAqC,EAAAH,IAAAQ,EAAA3G,OACA4G,EAAAN,GAAAM,EAAAN,IAAA,GACAM,EAAAN,GAAAnC,KAAA,IAAA5F,EAAA6I,OAAA,CACAjF,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAO,GAAA2F,EACAjG,EAAAoF,EAAA9D,GAAA9D,MACAkH,WAAA,EACAC,SAAA,EAAArH,KAAA6G,IAEA/D,QAAA,KAEA6F,EAAAb,EAAA9D,GAAA9D,MAKA,IAAA8D,EAAA,EAAmBA,EAAA2C,EAAA5G,OAAuBiE,IAC1CtD,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAiD,EAAA3C,GAAA,CACArB,MAAA3E,EAAA2F,SAAA,CACAV,KAAAyD,EAAA1C,EAAA0C,EAAA3G,SACS0G,EAAAa,gBACTxE,QAAA,SAuBAyE,EAAAC,QAAApH,wBC7LA,IAAAwI,EAAiB9K,EAAQ,IAEzB+K,EAAsB/K,EAAQ,KAE9BQ,EAAcR,EAAQ,IAEtBgL,EAAiBhL,EAAQ,KAEzBiL,EAAajL,EAAQ,IAErBW,EAAkBX,EAAQ,KAE1BU,EAAeV,EAAQ,KAqBvBkL,EAAAH,EAAAxI,OAAA,CAIA4I,aAAA,SAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,GACA,IAAAtI,EAAAoI,EAAApI,KAEA,UAAAA,EAAAuI,MACA5I,KAAA6I,mBAAAvJ,KAAA6G,GAAA,IAGA,IAGA2C,EAHA5K,EAAAmC,EAAAnC,MAEA6K,EADA7K,EAAA8K,aAAA3I,GACAE,YAEAuI,EAAAzI,EAAA,SAAA6H,EAAAe,aAAA5I,EAAAuI,MAAAxD,GACA,IAAA8D,EAAAR,EAAAvI,IAAA,QAEA,GAAA+I,GAAA,SAAAA,EAAA,CACA,IAAAC,EAAAf,EAAAgB,aAAAV,GACAW,EAAAC,EAAAJ,GAAA7I,EAAAnC,EAAA4K,EAAAC,EAAAI,GACAE,EAAApH,MAAAkH,EACAX,EAAAe,WAAAF,EAAA1L,KACA6K,EAAAgB,QAAAH,EAGA,IACAI,EAMA,SAAArE,EAAAqD,EAAAC,EAAAxK,EAAA2F,GACA,IAAAxD,EAAAoI,EAAApI,KACAb,EAAAa,EAAAY,YAAAmE,GACAkC,EAAApJ,EAAAiJ,eAAA5G,YAAA,GACA+G,IAAA,IAAAhI,KAAA6G,GACA,IACAqB,EACAkC,EACAC,EAHArJ,EAAApC,EAAAa,gBAAAwB,YAKA,cAAAF,EAAAuI,IAAA,CACA,IAAAgB,EAAAvB,EAAAwB,SACAxB,EAAAyB,OAAAF,IAAAtC,GACAe,EAAA0B,UAAAH,IAAA,CAAA1L,EAAA4D,GAAA5D,EAAA6D,KACAyF,EAAA5J,EAAAoM,eAAA,CAAAxK,GAAAqE,GAAA+F,GACA,IAAAK,EAAAxB,EAAA/G,SAAA,aAAAvB,IAAA,aACA+J,EAAAnM,EAAAoM,gBAAA7C,EAAA2C,EAAA3K,KAAA6G,GAAA,QACAuD,EAAAQ,EAAAnF,UACA4E,EAAAO,EAAAlF,sBACG,CAEH,IAAAhD,EAAA1B,EAAA,GACAkH,EAAAtJ,EAAAM,aAAA,CAAAwD,EAAA6B,EAAArE,IACA,IAAAsC,EAAA5D,EAAA4D,GACAC,EAAA7D,EAAA6D,GACA2H,EAAApK,KAAAC,IAAAiI,EAAA,GAAA1F,GAAAE,EAAA,YAAAwF,EAAA,GAAA1F,EAAA,eACA6H,EAAArK,KAAAC,IAAAiI,EAAA,GAAAzF,GAAAC,EAAA,YAAAwF,EAAA,GAAAzF,EAAA,eAGA,OACAyF,WACAkC,QACAC,iBAtCAS,CAAAhF,EAAAqD,EAAAC,EAAAxK,EADAwK,EAAAvI,IAAA,iBAEAiI,EAAAiC,mBAAA7B,EAAAC,EAAAC,EAAAC,EAAAc,MAyCA,IAAAH,EAAA,CACAgB,KAAA,SAAAjK,EAAAnC,EAAA4K,EAAAC,EAAAI,GACA,gBAAA9I,EAAAuI,IAAA,CACAjL,KAAA,OACA6D,MAAA4G,EAAAmC,cAAArM,EAAAM,aAAA,CAAAuK,EAAA,GAAAD,IAAA5K,EAAAM,aAAA,CAAAuK,EAAA,GAAAD,MACK,CACLnL,KAAA,SACA6D,MAAA,CACAM,GAAA5D,EAAA4D,GACAC,GAAA7D,EAAA6D,GACAC,EAAA8G,KAIA0B,OAAA,SAAAnK,EAAAnC,EAAA4K,EAAAC,EAAAI,GACA,IAAAsB,EAAAnL,KAAAiH,IAAA,EAAAlG,EAAAqK,gBACAC,EAAArL,KAAA6G,GAAA,IACA,gBAAA9F,EAAAuI,IAAA,CACAjL,KAAA,SACA6D,MAAA4G,EAAAwC,gBAAA1M,EAAA4D,GAAA5D,EAAA6D,GAAAgH,EAAA,GAAAA,EAAA,KACAD,EAAA2B,EAAA,GAAAE,GAAAF,EAAA,EAAA3B,GAAA6B,IACK,CACLhN,KAAA,SACA6D,MAAA4G,EAAAwC,gBAAA1M,EAAA4D,GAAA5D,EAAA6D,GAAA+G,EAAA2B,EAAA,EAAA3B,EAAA2B,EAAA,MAAAnL,KAAA6G,OAIArI,EAAA+M,yBAAA,mBAAAvC,GACA,IAAA5I,EAAA4I,EACAzB,EAAAC,QAAApH,wBCnIA,IAAArC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GA6BrB,SAAA0N,EAAAC,EAAAC,GACAA,EAAAC,OAAA,aACA5N,EAAA6N,eAAAF,EAAA,SAAAG,EAAApL,GACA,IAAAqL,EAAA,GAWA,OAVArL,EAAAsL,cAAA,CACAC,SAAA,MACAC,MAAAJ,GACK,SAAAK,GACLA,EAAAT,GAAAI,EAAA/J,MACA,IAAAqK,EAAAD,EAAAE,iBACApO,EAAA6D,KAAAsK,EAAAE,QAAA,SAAAC,GACAR,EAAAQ,EAAAxK,MAAAoK,EAAAK,WAAAD,EAAAxK,QAAA,MAGA,CACAgK,WACAhK,KAAA+J,EAAA/J,QA3CAhE,EAAQ,MAERA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,KA0CR0N,EAAA,kBACAnN,KAAA,kBACAmO,MAAA,qBAEAhB,EAAA,UACAnN,KAAA,YACAmO,MAAA,gBAEAhB,EAAA,YACAnN,KAAA,cACAmO,MAAA,wCC9DA,IAAAC,EAAc3O,EAAQ,KAuBtBsC,EArBctC,EAAQ,IAqBtBM,oBAAA,CACAC,KAAA,MACAqO,KAAA,SAAAjM,EAAA4I,GACA,IAAAsD,EAAA,IAAAF,EAAApD,GAAA,GACA3I,KAAAkM,SAAAD,EACAjM,KAAAC,MAAAuC,IAAAyJ,EAAAhM,QAEAJ,OAAA,SAAA2L,EAAAzL,EAAA4I,EAAAwC,GAEA,IAAAA,GAAA,oBAAAA,EAAAxN,MAAAwN,EAAAgB,OAAAnM,KAAAoM,IAAA,CAIA,IAAAH,EAAAjM,KAAAkM,SAEAV,EAAArL,IAAA,QACA8L,EAAAI,KAAAb,EAAAzL,EAAA4I,EAAA3I,KAAAmL,GAEAnL,KAAAkM,SAAAjM,MAAAC,YAGAF,KAAAC,MAAAmC,OAAAoJ,EAAArL,IAAA,YAEAmM,QAAA,WACAtM,KAAAkM,UAAAlM,KAAAkM,SAAAK,YAIA1F,EAAAC,QAAApH,wBCnDAtC,EAAQ,MAERA,EAAQ,MAERA,EAAQ,4BCJR,IAAAC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtB8K,EAAiB9K,EAAQ,IAEzBoP,EAAiBpP,EAAQ,IAqBzBqP,EAAA,CACAC,GAAA,0EACAC,GAAA,mMAEAC,EAAA,CACAF,GAAA,8BACAC,GAAA,kEAGAjN,EAAArC,EAAAK,oBAAA,CACAC,KAAA,WAMAkP,UAAA,KAMAC,UAAA,KAMAC,iBAAA,KAMAC,gBAAA,KACAnN,OAAA,SAAAoN,EAAAlN,EAAA4I,GACA,IAAA1I,EAAAD,KAAAC,MACAA,EAAAC,YACA,IAAAgN,EAAAD,EAAAvB,iBAEAyB,EAAAD,EAAAE,eACAC,EAAAH,EAAAI,YAEAtN,KAAAuN,eAAAN,EAAAE,EAAAlN,GAGAD,KAAAwN,aAAAP,EAAAE,EAAAE,EAAApN,GAEAD,KAAAyN,gBAAAR,EAAAE,EAAAE,EAAApN,GAEAD,KAAA0N,iBAAAT,EAAAI,EAAApN,GAEAD,KAAA2N,gBAAAV,EAAAE,EAAAE,EAAApN,IAGAsN,eAAA,SAAAN,EAAAE,EAAAlN,GAMA,IALA,IAAAiN,EAAAD,EAAAvB,iBACAkC,EAAAX,EAAAvL,SAAA,aAAAmM,eACAC,EAAAZ,EAAAa,eACAC,EAAAd,EAAAe,gBAEA3K,EAAA6J,EAAA5O,MAAA2P,KAAsC5K,GAAA6J,EAAA1O,IAAAyP,KAAyB5K,EAAA4J,EAAAiB,YAAA7K,EAAA,GAAA4K,KAAA,CAC/D,IAAAE,EAAAlB,EAAAmB,WAAA,CAAA/K,IAAA,GAAAgL,GAEAC,EAAA,IAAA3Q,EAAA4Q,KAAA,CACAhN,MAAA,CACAiD,EAAA2J,EAAA,GACA1J,EAAA0J,EAAA,GACAK,MAAAX,EACAY,OAAAV,GAEAW,OAAA,UACA1M,MAAA2L,IAEA3N,EAAAuC,IAAA+L,KAIAf,aAAA,SAAAP,EAAAE,EAAAE,EAAApN,GACA,IAAA2O,EAAA5O,KACAkN,EAAAD,EAAAvB,iBACAjK,EAAAwL,EAAAvL,SAAA,uBAAAQ,eACA2M,EAAA5B,EAAA9M,IAAA,kBACA2O,EAAArN,EAAAqN,UACA9O,KAAA6M,UAAA,GACA7M,KAAA8M,UAAA,GACA9M,KAAA+M,iBAAA,GACA/M,KAAAgN,gBAAA,GAGA,IAFA,IAAA+B,EAAA5B,EAAA5O,MAEA+E,EAAA,EAAmByL,EAAAb,MAAAf,EAAA1O,IAAAyP,KAAqC5K,IAAA,CACxD0L,EAAAD,EAAAE,cAEA,IAAA3L,IACAyL,EAAA7B,EAAAgC,YAAA/B,EAAA5O,MAAAmG,EAAA,IAAAyI,EAAA5O,MAAA4Q,IAGA,IAAAC,EAAAL,EAAAK,KACAA,EAAAC,SAAAD,EAAAE,WAAA,GACAP,EAAA7B,EAAAgC,YAAAE,GAKA,SAAAJ,EAAAI,GACAR,EAAA7B,iBAAAvJ,KAAA0J,EAAAgC,YAAAE,IAEAR,EAAA5B,gBAAAxJ,KAAA0J,EAAAmB,WAAA,CAAAe,IAAA,GAAAd,IAEA,IAAAiB,EAAAX,EAAAY,wBAAAvC,EAAAmC,EAAA/B,GAEAuB,EAAA/B,UAAArJ,KAAA+L,EAAA,IAEAX,EAAA9B,UAAAtJ,KAAA+L,IAAAlQ,OAAA,IAEAwP,GAAAD,EAAAa,eAAAF,EAAA9N,EAAAxB,GAbA+O,EAAA9B,EAAAiB,YAAAhB,EAAA1O,IAAAyP,KAAA,GAAAe,cAiBAJ,GAAA7O,KAAAyP,eAAAb,EAAAc,gBAAAd,EAAA/B,UAAAiC,EAAAzB,GAAA5L,EAAAxB,GAEA4O,GAAA7O,KAAAyP,eAAAb,EAAAc,gBAAAd,EAAA9B,UAAAgC,EAAAzB,GAAA5L,EAAAxB,IAGAyP,gBAAA,SAAAH,EAAAT,EAAAzB,GACA,IAAAsC,EAAA,CAAAJ,EAAA,GAAAlR,QAAAkR,IAAAlQ,OAAA,GAAAhB,SACA0F,EAAA,eAAAsJ,EAAA,IAIA,OAFAsC,EAAA,GAAA5L,GAAA4L,EAAA,GAAA5L,GAAA+K,EAAA,EACAa,EAAA,GAAA5L,GAAA4L,EAAA,GAAA5L,GAAA+K,EAAA,EACAa,GAGAF,eAAA,SAAAF,EAAA9N,EAAAxB,GACA,IAAA2P,EAAA,IAAAhS,EAAAiS,SAAA,CACA1N,GAAA,GACAX,MAAA,CACA+N,UAEAtN,MAAAR,IAEAxB,EAAAuC,IAAAoN,IAGAJ,wBAAA,SAAAvC,EAAAmC,EAAA/B,GACA,IAAAH,EAAAD,EAAAvB,iBACA0D,EAAAlC,EAAAgC,YAAAE,GAGA,IAFA,IAAAG,EAAA,GAEAjM,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAC1B,IAAAwM,EAAA5C,EAAAiB,YAAAiB,EAAAlB,KAAA5K,GACA8K,EAAAlB,EAAAmB,WAAA,CAAAyB,EAAA5B,OAAA,GACAqB,EAAA,EAAAO,EAAAC,KAAA3B,EAAAE,GACAiB,EAAA,EAAAO,EAAAC,IAAA,GAAA3B,EAAA,eAAAf,EAAA,WAGA,OAAAkC,GAEAS,gBAAA,SAAAC,EAAAC,GACA,wBAAAD,KACA/H,EAAAiI,gBAAAF,EAAAC,GAGA,oBAAAD,EACAA,EAAAC,GAGAA,EAAAE,SAEAC,yBAAA,SAAAhM,EAAA+J,EAAAf,EAAA7F,EAAA8I,GACAlC,IAAA/P,QACA,IAAAkS,EAAA,oBAEA,WAAA/I,GACA4G,EAAA,IAAAkC,EACAC,EAAA,kBACK,SAAA/I,EACL4G,EAAA,IAAAkC,EACK,UAAA9I,GACL4G,EAAA,IAAAkC,EACAC,EAAA,kBAGAnC,EAAA,IAAAkC,EAGA,IAAAxG,EAAA,EAMA,MAJA,SAAAtC,GAAA,UAAAA,IACAsC,EAAAxK,KAAA6G,GAAA,GAGA,CACAsB,SAAAqC,EACAtC,SAAA4G,EACAnM,MAAA,CACA8C,UAAAwL,EAAA,GACAvL,kBAAAuL,EAAA,MAKA9C,gBAAA,SAAAR,EAAAE,EAAAE,EAAApN,GACA,IAAAuQ,EAAAvD,EAAAvL,SAAA,aAEA,GAAA8O,EAAArQ,IAAA,SAIA,IAAAmQ,EAAAE,EAAArQ,IAAA,UACAsQ,EAAAD,EAAArQ,IAAA,YAEAsQ,IACAA,EAAA,eAAApD,EAAA,cAGA,IAAAkC,EAAA,CAAAvP,KAAA6M,UAAA7M,KAAA6M,UAAAxN,OAAA,GAAAW,KAAA8M,UAAA,IACA4D,GAAAnB,EAAA,MAAAA,EAAA,SACAoB,GAAApB,EAAA,MAAAA,EAAA,SACAxL,EAAA,eAAAsJ,EAAA,IACAuD,EAAA,CACAC,IAAA,CAAAH,EAAAnB,EAAAxL,GAAA,IACA+M,OAAA,CAAAJ,EAAAnB,EAAA,EAAAxL,GAAA,IACAgN,KAAA,CAAAxB,EAAA,EAAAxL,GAAA,GAAA4M,GACAK,MAAA,CAAAzB,EAAAxL,GAAA,GAAA4M,IAEAvP,EAAA+L,EAAA5O,MAAAmG,GAEAyI,EAAA1O,IAAAiG,GAAAyI,EAAA5O,MAAAmG,IACAtD,IAAA,IAAA+L,EAAA1O,IAAAiG,GAGA,IAAAuL,EAAAO,EAAArQ,IAAA,aACA+P,EAAA,CACA3R,MAAA4O,EAAA5O,MAAAmG,EACAjG,IAAA0O,EAAA1O,IAAAiG,EACA0L,QAAAhP,GAGA6P,EAAAjR,KAAAgQ,gBAAAC,EAAAC,GAEAgB,EAAA,IAAAtT,EAAA0G,KAAA,CACAnC,GAAA,KAEAvE,EAAA4G,aAAA0M,EAAAjP,MAAAuO,EAAA,CACA3L,KAAAoM,IACKC,EAAAC,KAAAnR,KAAAqQ,yBAAAa,EAAAN,EAAAH,GAAApD,EAAAoD,EAAAH,IACLrQ,EAAAuC,IAAA0O,KAEAE,0BAAA,SAAAhD,EAAAiD,EAAAhE,EAAA7F,EAAA8I,GACA,IAAA5G,EAAA,OACA4H,EAAA,MACA7M,EAAA2J,EAAA,GACA1J,EAAA0J,EAAA,GAwBA,MAtBA,eAAAf,GACA3I,GAAA4L,EAEAe,IACA3H,EAAA,UAGA,UAAAlC,IACA8J,EAAA,YAGA7M,GAAA6L,EAEAe,IACAC,EAAA,UAGA,UAAA9J,IACAkC,EAAA,UAIA,CACAjF,IACAC,IACAK,UAAA2E,EACA1E,kBAAAsM,IAIA5D,iBAAA,SAAAT,EAAAI,EAAApN,GACA,IAAAsR,EAAAtE,EAAAvL,SAAA,cAEA,GAAA6P,EAAApR,IAAA,SAIA,IAAAiQ,EAAAmB,EAAApR,IAAA,WACAmQ,EAAAiB,EAAApR,IAAA,UACAsQ,EAAAc,EAAApR,IAAA,YACAuJ,EAAA6H,EAAApR,IAAA,SACAqR,EAAA,CAAAxR,KAAA6M,UAAA7M,KAAA8M,WAEAxP,EAAAmU,SAAArB,KACAA,EAAA3D,EAAA2D,EAAAsB,gBAAA,IAGA,IAAA3N,EAAA,UAAA0M,EAAA,IACApQ,EAAA,eAAAgN,EAAA,IACAiD,EAAA,UAAAG,GAAAH,IAGA,IAFA,IAAAe,EAAA,WAAA3H,EAEApG,EAAA,EAAmBA,EAAAkO,EAAAzN,GAAA1E,OAAA,EAAgCiE,IAAA,CACnD,IAAAqO,EAAAH,EAAAzN,GAAAT,GAAAjF,QACA0Q,EAAA/O,KAAA+M,iBAAAzJ,GAEA,GAAA+N,EAAA,CACA,IAAAO,EAAA5R,KAAAgN,gBAAA1J,GACAqO,EAAAtR,IAAAuR,EAAAvR,GAAAmR,EAAA,GAAAlO,EAAA,GAAAjD,IAAA,EAGA,IAAA4P,EAAAsB,EAAApR,IAAA,aACAiB,EAAAgP,GAAArB,EAAAI,EAAA,GACAe,EAAA,CACA2B,KAAA9C,EAAArK,EACAoN,IAAA/C,EAAArK,EAAA,IAAArG,MAAA,GACA0T,GAAAhD,EAAAI,EACA6C,GAAAjD,EAAAI,EACAiB,QAAAhP,GAGA6P,EAAAjR,KAAAgQ,gBAAAC,EAAAC,GAEA+B,EAAA,IAAArU,EAAA0G,KAAA,CACAnC,GAAA,KAEA7E,EAAAqC,OAAA/B,EAAA4G,aAAAyN,EAAAhQ,MAAAsP,EAAA,CACA1M,KAAAoM,IACOjR,KAAAoR,0BAAAO,EAAAN,EAAAhE,EAAAoD,EAAAH,IACPrQ,EAAAuC,IAAAyP,MAGAC,yBAAA,SAAA9D,EAAAf,EAAA7F,EAAA8I,EAAA6B,GACA,IAAAzI,EAAA,SACA4H,EAAA,SACA7M,EAAA2J,EAAA,GACA1J,EAAA0J,EAAA,GACAgE,EAAA,UAAA5K,EAUA,MARA,eAAA6F,GACA5I,IAAA6L,GAAA8B,EAAA,MAAAD,EAAA,KACAzI,EAAA0I,EAAA,iBAEA1N,IAAA4L,GAAA8B,EAAA,MAAAD,EAAA,KACAb,EAAAc,EAAA,gBAGA,CACA3N,IACAC,IACAK,UAAA2E,EACA1E,kBAAAsM,IAIA3D,gBAAA,SAAAV,EAAAE,EAAAE,EAAApN,GACA,IAAAoS,EAAApF,EAAAvL,SAAA,YAEA,GAAA2Q,EAAAlS,IAAA,SAIA,IAAA+M,EAAAD,EAAAvB,iBACA+E,EAAA4B,EAAAlS,IAAA,YACAiQ,EAAAiC,EAAAlS,IAAA,WACAmQ,EAAA+B,EAAAlS,IAAA,UACAmS,EAAApF,EAAAqF,oBAEAjV,EAAAmU,SAAArB,KACAA,EAAAxD,EAAAwD,EAAAsB,gBAAA,IAGA,IAAAnT,EAAA2O,EAAAiB,YAAAhB,EAAA1O,IAAAyP,KAAA,EAAAf,EAAAqF,OAAAtE,KACAiE,EAAA,CAAAjF,EAAAa,eAAAb,EAAAe,iBACAqC,EAAA9D,EAAAiG,aAAAnC,EAAA6B,EAAA,eAAA9E,EAAA,MAEA,UAAAoD,IACAlS,EAAA2O,EAAAiB,YAAAhB,EAAA5O,MAAA2P,OAAA,EAAAf,EAAAuF,QAAAxE,KACAoC,MAGA,QAAAhN,EAAA,EAAmBA,EAAA,EAAOA,IAAA,CAC1B,IAEAyM,EAFAD,EAAA5C,EAAAiB,YAAA5P,EAAA+E,GACA8K,EAAAlB,EAAAmB,WAAA,CAAAyB,EAAA5B,OAAA,GAAAyE,OAEA5C,EAAAzQ,KAAAC,KAAA+D,EAAAgP,GAAA,GACA,IAAAM,EAAA,IAAAhV,EAAA0G,KAAA,CACAnC,GAAA,KAEA7E,EAAAqC,OAAA/B,EAAA4G,aAAAoO,EAAA3Q,MAAAoQ,EAAA,CACAxN,KAAAuL,EAAAL,KACO/P,KAAAkS,yBAAA9D,EAAAf,EAAAoD,EAAAH,EAAA6B,IACPlS,EAAAuC,IAAAoQ,QAKA/L,EAAAC,QAAApH,wBC/actC,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErB0V,EAAgB1V,EAAQ,IAExB2V,EAAkB3V,EAAQ,IAE1B4V,EAAiB5V,EAAQ,IAIzBqV,EAFcrV,EAAQ,IAEtBqV,aAoBAQ,EAAA,CAEAC,KAAA,KACAC,aAAA,KAEAlT,MAAA8S,EAAAK,MACAC,MAAAN,EAAAO,MACAzO,KAAAkO,EAAAzO,MAKAjH,EAAAkW,qBAAA,SAAAC,GACA,IAAAC,EAAAD,EAAA5V,QAOAN,EAAAoW,QAAAD,GACAA,EAAA,IAAAA,EAAA,GAAAE,SAOAH,EAAA5V,QAAA,CAAA4V,EAAA5V,QAAA,IANA4V,EAAA5V,QAAA,EACA+V,SAAAF,IAOGA,MAAAE,WACHH,EAAA5V,QAAA,EACA+V,SAAA,CAAAF,QAOA,IAAAG,EAAAvW,EAAAwW,qBAAA,CACAlW,KAAA,UACAmW,cAAA,CA2BAH,SAAA,GACAI,SAAA,MAUAC,mBAAA,KAKAC,YAAA,SAAAT,GAEA,IAAAG,EAAA3T,KAAAwT,OAAAG,SACA3T,KAAAwT,OAAAG,SAAA,KACAC,EAAAM,WAAAlU,KAAA,cAAAmU,WACAnU,KAAAwT,OAAAG,YAMAS,cAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAvU,KAAAwT,OACAgB,GAAAF,EAAAC,EAAAF,GAAAV,SACAc,EAAAF,EAAAZ,SAAAW,EAAA,GAAAC,EAAAZ,SACAe,EAAA,GAEA1U,KAAA2U,SAAAH,EAAAE,GAEA,IAAAE,EAAA9B,EAAA+B,gBAAAJ,EAAAC,GACA5B,EAAAgC,cAAAF,GAEA,IAAAG,EAAA/U,KAAAgU,mBAAA,GACA1W,EAAA6D,KAAAyT,EAAA,SAAAI,EAAAC,GACA,IAAAC,EAAAF,EAAAxB,OAEA0B,IAIAH,EAAAvR,KAAA0R,GAkSA,SAAAF,EAAAE,GACA,IAAAC,EAAAH,EAAAI,MAKA,GAHAF,EAAAG,GAAAL,EAAAM,QAAAD,IACAH,EAAAvX,MAAAwX,IAAAD,EAAAvX,KAAAwX,EAAAxX,MAEA,MAAAuX,EAAAnB,SAAA,CACA,IAAAwB,EAAAL,EAAAM,aAEAD,EACAL,EAAAnB,SAAAwB,EAAAF,GACKF,IACLD,EAAAnB,SAAAoB,EAAApB,UAKAmB,EAAAM,aAAA,KAlTAC,CAAAT,EAAAE,GAqTA,SAAAT,EAAAQ,EAAAC,GAEA,IAAAQ,EAAApY,EAAAqC,OAAA,GAAqCuV,GACrCC,EAAAV,EAAAQ,GACAU,EAAAT,EAAAS,SAAA,QAEA,UAAAA,EACAR,GAGA7X,EAAAsY,MAAAT,EAAAO,GAAA,GAEA1C,EAAA6C,iBAAAV,EAAAO,EAAA,CACAI,YAAA,IAGA9C,EAAA+C,iBAAAb,EAAAC,IAEAV,EAAAQ,GAAAS,EAEG,YAAAC,EACHlB,EAAAQ,GAAAS,EACG,WAAAC,GAEHR,IAAAV,EAAAQ,GAAA,MA5UAe,CAAAvB,EAAAQ,EAAAC,GAgVA,SAAAe,EAAAf,GACA,IAAAe,EACA,OAGAA,EAAAC,GAAAhB,EAAAgB,GAAA,CACAC,EAAAjB,EAAA,kBACAiB,EAAAjB,EAAA,mBAEA,UAAAe,EAAAtY,OACA,MAAAsY,EAAAxH,QAAAwH,EAAAxH,MAAAyG,EAAAzG,MAAA,GACA,MAAAwH,EAAAvH,SAAAuH,EAAAvH,OAAAwG,EAAAxG,OAAA,IA1VA0H,CAAA3B,EAAAQ,GAAAC,KACKlV,MAEL,QAAAsD,EAAAmR,EAAApV,OAAA,EAAsCiE,GAAA,EAAQA,IAC9C,MAAAmR,EAAAnR,GACAmR,EAAA4B,OAAA/S,EAAA,UAIAmR,EAAAnR,GAAAqS,SAwBAhB,SAAA,SAAA2B,EAAAC,EAAAf,GACAlY,EAAA6D,KAAAmV,EAAA,SAAA9C,GACA,GAAAA,EAAA,CAIAgC,IACAhC,EAAAgC,gBAGAe,EAAA/S,KAAAgQ,GACA,IAAAgD,EAAAhD,EAAAgD,SAEA,UAAAhD,EAAA7V,MAAA6Y,GACAxW,KAAA2U,SAAA6B,EAAAD,EAAA/C,UAIAA,EAAAgD,WACKxW,OAILyW,qBAAA,WACA,IAAAC,EAAA1W,KAAAgU,mBAGA,OADAhU,KAAAgU,mBAAA,KACA0C,KA2LA,SAAAC,EAAAtB,EAAAuB,EAAApO,EAAAqO,GACA,IAAAC,EAAAtO,EAAA7K,KAIAoZ,EAAA,IAHA9D,EAAA+D,eAAAF,GAEA7D,EAAA6D,GAAA/D,EAAAkE,cAAAH,IACAtO,GACAoO,EAAApU,IAAAuU,GACAF,EAAAK,IAAA7B,EAAA0B,GACAA,EAAAI,cAAA9B,EAGA,SAAA+B,EAAAC,EAAAR,GACA,IAAAS,EAAAD,KAAAE,OAEAD,IACA,UAAAD,EAAA1Z,MAAA0Z,EAAAG,SAAA,SAAAT,GACAK,EAAAL,EAAAF,KAEAA,EAAAY,UAAAJ,EAAAF,eACAG,EAAA/K,OAAA8K,IAaA,SAAAlB,EAAAuB,EAAAC,GACA,IAAAC,EAIA,OAHAta,EAAA6D,KAAAwW,EAAA,SAAAE,GACA,MAAAH,EAAAG,IAAA,SAAAH,EAAAG,KAAAD,GAAA,KAEAA,EA1NAva,EAAAK,oBAAA,CACAC,KAAA,UAKAqO,KAAA,SAAAjM,EAAA4I,GAKA3I,KAAA8X,OAAAxa,EAAAya,gBAMA/X,KAAAgY,mBAMAnY,OAAA,SAAAoY,EAAAlY,EAAA4I,GAUAsP,IAAAjY,KAAAgY,mBACAhY,KAAAkY,SAGAlY,KAAAgY,kBAAAC,EAEAjY,KAAAmY,gBAAAF,GAEAjY,KAAAoY,UAAAH,EAAAtP,IASAwP,gBAAA,SAAAF,GACA,IAAAlD,EAAAkD,EAAAxB,uBAEA,GAAA1B,EAAA,CAIA,IAAA8B,EAAA7W,KAAA8X,OACAO,EAAArY,KAAAC,MAEA3C,EAAA6D,KAAA4T,EAAA,SAAAvM,GACA,IAAAmN,EAAAnN,EAAAmN,QACAN,EAAA7M,EAAA6M,GACAgC,EAAAR,EAAA1W,IAAAkV,GACAtB,EAAAvL,EAAAuL,SACA6C,EAAA,MAAA7C,EAAA8C,EAAA1W,IAAA4T,GAAAsE,EACAC,EAAA9P,EAAAvG,MAEA,SAAAuG,EAAA7K,MAAA2a,IAGA9P,EAAA0N,IAAA1N,EAAA0N,GAAA,KACAoC,EAAAtT,kBAAAsT,EAAAC,aAAA,OAKAD,EAAAtB,eAAA,aAAAsB,EAAA/V,OAAA+V,EAAA3T,SAAA2T,EAAA/V,OACA+V,EAAAtB,eAAA,eAAAsB,EAAApV,SAAAoV,EAAAE,WAAAF,EAAApV,SAIA,IAAAuV,EA2HA,SAAAjQ,GAKA,OAJAA,EAAAlL,EAAAqC,OAAA,GAA6B6I,GAC7BlL,EAAA6D,KAAA,4CAAAuX,OAAA1F,EAAA2F,iBAAA,SAAAvX,UACAoH,EAAApH,KAEAoH,EAhIAoQ,CAAApQ,GAEAmN,GAAA,UAAAA,EAEO,YAAAA,GACPyB,EAAAC,EAAAR,GACAF,EAAAtB,EAAAuB,EAAA6B,EAAA5B,IACO,WAAAlB,GACPyB,EAAAC,EAAAR,GALAQ,IAAAlG,KAAAsH,GAAA9B,EAAAtB,EAAAuB,EAAA6B,EAAA5B,GAQA,IAAAE,EAAAF,EAAA1W,IAAAkV,GAEA0B,IACAA,EAAA8B,uBAAArQ,EAAAiG,MACAsI,EAAA+B,wBAAAtQ,EAAAkG,OA2LA,SAAAqI,EAAAkB,EAAAzP,GACA,IAAAvD,EAAA8R,EAAA9R,UAEA8R,EAAA3U,QAAA2U,EAAAgC,QAAA9T,IACAA,EAAA8R,EAAA9R,UAAA,CACA+T,cAAA,UACAC,eAAAhB,EAAAgB,eACA7X,KAAA2V,EAAA3V,OAMA6D,IACAA,EAAAiU,KAAAnC,EAAAmC,MAxMAC,CAAApC,EAAAkB,QAYAG,UAAA,SAAAH,EAAAtP,GAOA,IANA,IAAAyQ,EAAAnB,EAAAzE,OAAAG,SACA0E,EAAArY,KAAAC,MACA4W,EAAA7W,KAAA8X,OACAuB,EAAA1Q,EAAA2Q,WACAC,EAAA5Q,EAAA6Q,YAEAlW,EAAA,EAAmBA,EAAA8V,EAAA/Z,OAAsBiE,IAAA,CACzC,IAAAkF,EAAA4Q,EAAA9V,GAGA,IAFAyT,EAAAF,EAAA1W,IAAAqI,EAAA6M,MAEA0B,EAAA0C,QAAA,CAIA,IACAC,GADAC,EAAA5C,EAAAQ,UACAc,EAEAtB,EAAA6C,iBAAAnH,EAAAsE,EAAA8B,uBAAAa,EAAAL,EAAAM,EAAAC,mBAAA,EACA7C,EAAA8C,kBAAApH,EAAAsE,EAAA+B,wBAAAY,EAAAH,EAAAI,EAAAE,oBAAA,GAIA,IAAAvW,EAAA8V,EAAA/Z,OAAA,EAAsCiE,GAAA,EAAQA,IAAA,CAC9C,IACAyT,EADAvO,EAAA4Q,EAAA9V,GAGA,GAFAyT,EAAAF,EAAA1W,IAAAqI,EAAA6M,IAEA,CAIA,IAAAsE,EACAG,GADAH,EAAA5C,EAAAQ,UACAc,EAAA,CACA5J,MAAA4K,EACA3K,OAAA6K,GACO,CACP9K,MAAAkL,EAAAC,iBACAlL,OAAAiL,EAAAE,mBAMA7G,EAAA+G,gBAAAhD,EAAAvO,EAAAsR,EAAA,MACA5D,GAAA1N,EAAA0N,GACA8D,aAAAxR,EAAAyR,cAUA/B,OAAA,WACA,IAAArB,EAAA7W,KAAA8X,OACAjB,EAAA1V,KAAA,SAAA4V,GACAK,EAAAL,EAAAF,KAEA7W,KAAA8X,OAAAxa,EAAAya,iBAMAzL,QAAA,WACAtM,KAAAkY,kCC5YA9a,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,KAERA,EAAQ,2BCZR,IAAAE,EAAaF,EAAQ,GAErBoP,EAAiBpP,EAAQ,IAEzB8c,EAAa9c,EAAQ,KAErB+c,EAAiB/c,EAAQ,KAqBzB+D,EAAA7D,EAAA6D,KACAiZ,EAAA5N,EAAA4N,IAWAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAza,GAKAC,KAAAya,SAAAH,EAKAta,KAAA0a,WAAAH,EAMAva,KAAA2a,aAMA3a,KAAA4a,eAMA5a,KAAA6a,YAOA7a,KAAA8a,YAMA9a,KAAAD,UAMAC,KAAA+a,eAAAP,GAsXA,SAAAQ,EAAAC,EAAAC,GACA,IAAAzS,EAAAwS,EAAAE,eACAC,EAAAH,EAAAL,eACAS,EAAAJ,EAAAN,aAEA,GAAAS,EAAA,CAKA,IAAAE,EAAA9O,EAAA+O,kBAAAF,EAAA,SACAC,EAAAhc,KAAA+G,IAAAiV,EAAA,IAEA,IAAAE,EAAAN,GAAA,IAAAE,EAAA,UAAAA,EAAA,GACA3S,EAAAgT,SAAAD,EAAA,MAAAH,EAAA,GAAAK,QAAAJ,GAAAE,EAAA,MAAAH,EAAA,GAAAK,QAAAJ,KA7XAjB,EAAAsB,UAAA,CACAC,YAAAvB,EASAwB,SAAA,SAAArB,GACA,OAAAxa,KAAA+a,iBAAAP,GAMAsB,mBAAA,WACA,OAAA9b,KAAA2a,aAAAtc,SAMA0d,qBAAA,WACA,OAAA/b,KAAA4a,eAAAvc,SAQA2d,sBAAA,WACA,IAAAC,EAAA,GACAlc,EAAAC,KAAAD,QAeA,OAdAA,EAAAmc,WAAA,SAAAC,GACA,GAAAjC,EAAAkC,iBAAAD,EAAAhc,IAAA,sBACA,IAAAma,EAAAta,KAAAya,SACAhS,EAAA1I,EAAAsc,gBAAA,CACA/Q,SAAAgP,EAAA,OACArF,MAAAkH,EAAAhc,IAAAma,EAAA,aACAjF,GAAA8G,EAAAhc,IAAAma,EAAA,YACS,GAETta,KAAA0a,cAAAjS,KAAAwQ,iBACAgD,EAAAzY,KAAA2Y,KAGKnc,MACLic,GAEAd,aAAA,WACA,OAAAnb,KAAAD,QAAAuc,aAAAtc,KAAAya,SAAA,OAAAza,KAAA0a,aAEA6B,kBAAA,WACA,IAIAC,EACAC,EAUAC,EAfAC,EAAA3c,KAAAya,SACA1a,EAAAC,KAAAD,QACA0I,EAAAzI,KAAAmb,eAmBA,MAlBA,MAAAwB,GAAA,MAAAA,GAKAF,EAAA,YACAD,EAAA,MAAAG,EAAA,UAEAF,EAAA,aACAD,EAAA,UAAAG,EAAA,kBAIA5c,EAAAsL,cAAAmR,EAAA,gBAAAI,IACAA,EAAAzc,IAAAsc,IAAA,MAAAhU,EAAAtI,IAAAsc,IAAA,KACAC,EAAAE,KAGAF,GAEAG,cAAA,WACA,OAAAvf,EAAA0D,MAAAhB,KAAA8a,cAYAgC,oBAAA,SAAAC,GACA,IASAC,EATAC,EAAAjd,KAAA6a,YAEAxZ,EADArB,KAAAmb,eACA9a,KAAAgB,MAEA6b,EAAAld,KAAA+a,eAAAoC,mBAEAC,EAAA,QACAhC,EAAA,GACAC,EAAA,GAEAla,EAAA,yBAAA0W,EAAA9T,GACA,IAAAsZ,EAAAN,EAAAlF,GACAyF,EAAAP,EAAAlF,EAAA,SAcA,YAAAqF,EAAAnZ,IACA,MAAAsZ,MAAAD,EAAArZ,IAEAuZ,EAAAjc,EAAAkc,MAAA/Q,EAAAgR,UAAAH,EAAAD,EAAAH,MAEAD,GAAA,EACAM,EAAA,MAAAA,EAAAL,EAAAlZ,GAAA1C,EAAAkc,MAAAD,GAIAD,EAAA7Q,EAAAgR,UAAAF,EAAAL,EAAAG,IAKA/B,EAAAtX,GAAAuZ,EACAlC,EAAArX,GAAAsZ,IAEAjD,EAAAiB,GACAjB,EAAAgB,GAMA,IAAAqC,EAAAzd,KAAA8a,YAGA,SAAA4C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAA,mBACA5D,EAAA,EAAAwD,EAAAE,EAAA,MAAAJ,EAAA,MAAAO,GAAAP,EAAA,MAAAO,IAEA,QAAA1a,EAAA,EAAqBA,EAAA,EAAOA,IAC5Bsa,EAAAta,GAAAkJ,EAAAgR,UAAAG,EAAAra,GAAAua,EAAAC,GAAA,GACAC,IAAAH,EAAAta,GAAAjC,EAAAkc,MAAAK,EAAAta,KAIA,OAZA0Z,EAAAU,EAAArC,EAAAD,EAAA6B,EAAAG,GAAA,GAAAM,EAAAtC,EAAAC,EAAA+B,EAAAH,GAAA,GAYA,CACA5B,cACAD,kBAWA6C,MAAA,SAAAzD,GACA,GAAAA,IAAAxa,KAAA+a,eAAA,CAIA,IAAAmD,EAAAle,KAAAgc,wBAEAhc,KAAA6a,YA6HA,SAAAI,EAAA0B,EAAAV,GACA,IAAAgB,EAAA,CAAAkB,UACAhd,EAAA8a,EAAA,SAAAE,GACA,IAAAiC,EAAAjC,EAAAkC,UAEAD,GACAjd,EAAAid,EAAAE,aAAA3B,GAAA,YAAA/T,GACA,IAAA2V,EAAAH,EAAAI,qBAAA5V,GACA2V,EAAA,GAAAtB,EAAA,KAAAA,EAAA,GAAAsB,EAAA,IACAA,EAAA,GAAAtB,EAAA,KAAAA,EAAA,GAAAsB,EAAA,QAKAtB,EAAA,GAAAA,EAAA,KACAA,EAAA,CAAAwB,UAaA,OAGA,SAAAxD,EAAAgC,GACA,IAAAxU,EAAAwS,EAAAE,eACA9U,EAAAoC,EAAAiW,QAAA,GAGAC,EAAA,aAAAlW,EAAAtI,IAAA,QACAye,EAAAD,GAAAlW,EAAA9E,gBAAAtE,OAEA,MAAAgH,GAAA,YAAAA,GAAA,oBAAAA,EACA4W,EAAA,GAAA5W,EACGsY,IACH1B,EAAA,GAAA2B,EAAA,IAAAH,KAGA,IAAAlY,EAAAkC,EAAAoW,QAAA,GAEA,MAAAtY,GAAA,YAAAA,GAAA,oBAAAA,EACA0W,EAAA,GAAA1W,EACGoY,IACH1B,EAAA,GAAA2B,EAAA,EAAAA,EAAA,EAAAH,KAGAhW,EAAAtI,IAAA,cACA8c,EAAA,OAAAA,EAAA,MACAA,EAAA,OAAAA,EAAA,OA5BA6B,CAAA7D,EAAAgC,GACAA,EAzJA8B,CAAA/e,UAAAya,SAAAyD,GA+MA,SAAAjD,GACA,IAAA+D,EAAA/D,EAAAH,YAAA,GACAN,EAAAS,EAAAF,eACAkC,EAAAhC,EAAAJ,YACA1Z,EAAA,uBAAA8d,GACA,IAAAC,EAAA1E,EAAAra,IAAA8e,EAAA,QACAE,EAAA3E,EAAAra,IAAA8e,EAAA,aACA,MAAAE,MAAAlE,EAAAE,eAAA9a,KAAAgB,MAAAkc,MAAA4B,IAEA,MAAAA,EACAD,EAAA1S,EAAAgR,UAAAP,EAAA,GAAAkC,EAAAlC,EAAA,YACK,MAAAiC,IACLC,EAAA3S,EAAAgR,UAAA0B,EAAA,QAAAjC,GAAA,GAAAA,EAAA,IAGA+B,EAAAC,EAAA,QAAAC,EACAF,EAAAC,EAAA,aAAAE,IApNAC,CAAApf,MACA,IAAAqf,EAAArf,KAAA8c,oBAAAtC,EAAA8E,eACAtf,KAAA2a,aAAA0E,EAAAhE,YACArb,KAAA4a,eAAAyE,EAAAjE,cAEAJ,EAAAhb,QAMAuf,QAAA,SAAA/E,GACAA,IAAAxa,KAAA+a,iBAIA/a,KAAA2a,aAAA3a,KAAA4a,eAAA,KACAI,EAAAhb,MAAA,KAMAwf,WAAA,SAAAhF,EAAA7R,GACA,GAAA6R,IAAAxa,KAAA+a,eAAA,CAIA,IAAA4B,EAAA3c,KAAAya,SACAwB,EAAAjc,KAAAgc,wBACAyD,EAAAjF,EAAAra,IAAA,cACAkb,EAAArb,KAAA2a,aAEA,SAAA8E,GAuBAte,EAAA8a,EAAA,SAAAE,GACA,IAAAiC,EAAAjC,EAAAkC,UACAqB,EAAAtB,EAAAE,aAAA3B,GAAA,GAEA+C,EAAArgB,SAIA,eAAAogB,EACArB,EAAAuB,WAAA,SAAAC,GAKA,IAJA,IAAAC,EACAC,EACAC,EAEAzc,EAAA,EAAyBA,EAAAoc,EAAArgB,OAAqBiE,IAAA,CAC9C,IAAA8B,EAAAgZ,EAAAje,IAAAuf,EAAApc,GAAAsc,GACAI,GAAAC,MAAA7a,GACA8a,EAAA9a,EAAAiW,EAAA,GACA8E,EAAA/a,EAAAiW,EAAA,GAEA,GAAA2E,IAAAE,IAAAC,EACA,SAGAH,IAAAD,GAAA,GACAG,IAAAL,GAAA,GACAM,IAAAL,GAAA,GAIA,OAAAC,GAAAF,GAAAC,IAGA3e,EAAAue,EAAA,SAAA9W,GACA,aAAA6W,EACAtD,EAAAiE,QAAAhC,IAAAvd,IAAA+H,EAAA,SAAAxD,GACA,OAgBA,SAAAA,GACA,OAAAA,GAAAiW,EAAA,IAAAjW,GAAAiW,EAAA,GAjBAgF,CAAAjb,KAAAqZ,WAEW,CACX,IAAA6B,EAAA,GACAA,EAAA1X,GAAAyS,EAEA+C,EAAAmC,YAAAD,MAKAnf,EAAAue,EAAA,SAAA9W,GACAwV,EAAAoC,qBAAAnF,EAAAzS,WAgHA,IAAAlJ,EAAA2a,EACAxT,EAAAC,QAAApH,wBClfA,IAqBAA,EArBoBtC,EAAQ,KAqB5BuC,OAAA,CACAhC,KAAA,oBAGAkJ,EAAAC,QAAApH,wBCzBA,IAqBAA,EArBmBtC,EAAQ,KAqB3BuC,OAAA,CACAhC,KAAA,oBAGAkJ,EAAAC,QAAApH,wBCzBA,IAAArC,EAAcD,EAAQ,IAEtBqjB,EAAmBrjB,EAAQ,MAE3BA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAyBRC,EAAAkW,qBAAAkN,yBCrCA,IAAAnjB,EAAaF,EAAQ,GAqBrBsjB,EAAA,kCAwDA7Z,EAAAC,QAtDA,SAAA0M,EAAAmN,GACA,IAAAC,EAAApN,KAAAqN,MAMA,GAJAvjB,EAAAoW,QAAAkN,KACAA,IAAA,CAAAA,GAAA,IAGAA,EAAAvhB,OAAA,CAIA,IAAAyhB,EAAA,GACAxjB,EAAA6D,KAAAyf,EAAA,SAAAG,GACA,IAAAC,EAAAD,EAAA/J,eAAA,WAAA+J,EAAAE,QAAA,GAEAD,aAAAvb,QACAqb,IAAApI,OAAAsI,MAGA,IAAAC,EAAAzN,KAAAyN,QAEA3jB,EAAAoW,QAAAuN,KACAA,IAAA,IAGAA,IACAA,EAAA,CACAC,QAAA,IAEA1N,EAAAyN,QAAA,CAAAA,IAGA,IAAAE,EAAAF,EAAAC,UAAAD,EAAAC,QAAA,IACAE,EAAAD,EAAAN,QAAAM,EAAAN,MAAA,IACAQ,EAAAD,EAAAzjB,OAAAyjB,EAAAzjB,KAAA,IACA0jB,EAAA7d,KAAA8d,MAAAD,EAAAP,GAQA,SAAAS,GACA,IAAA1gB,EAAA,GACAvD,EAAA6D,KAAAogB,EAAA,SAAAC,GACA3gB,EAAA2gB,GAAA,IAEAD,EAAAliB,OAAA,EACA/B,EAAA6D,KAAAN,EAAA,SAAA4gB,EAAAD,GACAD,EAAA/d,KAAAge,KAdAE,CAAAL,GAEAV,IAAAU,EAAAhiB,QACAgiB,EAAA7d,KAAA8d,MAAAD,EAAAX,2BC9DA,IAAAiB,EAAqBvkB,EAAQ,KAE7BwkB,EAAmBxkB,EAAQ,IAI3BykB,EAFezkB,EAAQ,IAEvBykB,qBAgEA,SAAAC,EAAAC,GACA,IAAAC,EAAA,UACAC,EAAA,mBACA,OACA7T,MAAA,SAAA8T,EAAAC,EAAAC,GACA,GAAAF,EAAA,CACA,IAAA5B,EAAA8B,EAAA9B,MAEA,OAAA+B,EADAH,EAAAH,GACAzB,KAGA/R,KAAA,SAAA2T,EAAAC,EAAAC,GACA,GAAAF,EAAA,CACA,IAAA5B,EAAA8B,EAAA9B,MACAgC,EAAA,CAAAJ,EAAAF,EAAAD,IAAAG,EAAAF,EAAAD,IAAAG,EAAAD,EAAAF,KAEA,OADAO,EAAA,GAAAA,EAAA,IAAAA,EAAAhkB,UACA+jB,EAAAC,EAAA,GAAAhC,IAAA+B,EAAAC,EAAA,GAAAhC,IAAA+B,EAAA/B,EAAA,GAAAgC,IAAAD,EAAA/B,EAAA,GAAAgC,MAMA,SAAAD,EAAApe,EAAAqc,GACA,OAAAA,EAAA,IAAArc,MAAAqc,EAAA,GAGA,IAAA5gB,EA7DA,CACA6iB,MAAAT,EAAA,GACAU,MAAAV,EAAA,GACAvT,KAAA,CACAH,MAAA,SAAA8T,EAAAC,EAAAC,GACA,OAAAF,GAAAE,EAAAK,aAAAC,QAAAR,EAAA,GAAAA,EAAA,KAEA3T,KAAA,SAAA2T,EAAAC,EAAAC,GACA,OAAAF,GAAAE,EAAAK,aAAAE,UAAAT,KAGAU,QAAA,CACAxU,MAAA,SAAA8T,EAAAC,EAAAC,GACA,OAAAF,GAAAE,EAAAK,aAAAC,QAAAR,EAAA,GAAAA,EAAA,KAAAP,EAAAe,QAAAN,EAAA9B,MAAA4B,EAAA,GAAAA,EAAA,KAEA3T,KAAA,SAAA2T,EAAAC,EAAAC,GACA,IAAA7S,EAAA6S,EAAA9B,MAEA,IAAA4B,GAAA3S,EAAAlQ,QAAA,EACA,SAGA,IAAAoF,EAAAyd,EAAAzd,EACAC,EAAAwd,EAAAxd,EACA+J,EAAAyT,EAAAzT,MACAC,EAAAwT,EAAAxT,OACAzK,EAAAsL,EAAA,GAEA,SAAAoS,EAAAe,QAAAnT,EAAA9K,EAAAC,IAAAid,EAAAe,QAAAnT,EAAA9K,EAAAgK,EAAA/J,IAAAid,EAAAe,QAAAnT,EAAA9K,EAAAC,EAAAgK,IAAAiT,EAAAe,QAAAnT,EAAA9K,EAAAgK,EAAA/J,EAAAgK,IAAAkT,EAAA/X,OAAAqY,GAAAQ,QAAAze,EAAA,GAAAA,EAAA,KAAA4d,EAAApd,EAAAC,EAAAD,EAAAgK,EAAA/J,EAAA6K,IAAAsS,EAAApd,EAAAC,EAAAD,EAAAC,EAAAgK,EAAAa,IAAAsS,EAAApd,EAAAgK,EAAA/J,EAAAD,EAAAgK,EAAA/J,EAAAgK,EAAAa,IAAAsS,EAAApd,EAAAC,EAAAgK,EAAAjK,EAAAgK,EAAA/J,EAAAgK,EAAAa,UAAA,KAkCA1I,EAAAC,QAAApH,wBCjGctC,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBylB,EAAqBzlB,EAAQ,KAE7BS,EAAYT,EAAQ,IAqBpB0lB,EAAA,SAqHA,SAAAC,EAAAvP,EAAAwP,GACA,OAAA1lB,EAAAsY,MAAA,CACAqN,UAAAzP,EAAAyP,UACAC,UAAA1P,EAAA0P,UACAC,cAAA3P,EAAA2P,cACAC,WAAA,IAAAvlB,EAAA2V,EAAA4P,YAAAvV,eACAwV,cAAA7P,EAAA6P,cACAzd,EAAA4N,EAAA5N,GACGod,GAAA,GAGH,IAAAtjB,EA/HArC,EAAAwW,qBAAA,CACAlW,KAAA,QACA2lB,aAAA,mDAKAxP,cAAA,CAGAmN,QAAA,KAEAsC,UAAA,KAGAC,YAAA,MAEAC,SAAA,KAEAC,WAAA,KACAC,WAAA,KACAV,UAAA,OAEAC,UAAA,SAEAC,eAAA,EAEAC,WAAA,CAEAQ,YAAA,EACAC,MAAA,wBACAC,YAAA,yBAEAC,aAAA,UAGAC,cAAA,EAIAX,eAAA,EACAzd,EAAA,KAOAqe,MAAA,GASAhB,UAAA,KAQAD,YAAA,GAMAkB,cAAA,GACA9P,cAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAvU,KAAAwT,QACAc,GAAAuO,EAAAsB,oBAAA5P,EAAAF,EAAA,0BACA,IAAA+P,EAAA7P,EAAA6P,QAAA7P,EAAA6P,SAAA,GAEA7P,EAAA8P,WAAA9P,EAAA8P,YAAA,CACAR,MAAAf,GAGAsB,EAAApN,eAAA,WAGAoN,EAAAE,MAAA,IASAC,SAAA,SAAAN,GAIAA,IAIAjkB,KAAAikB,MAAA3mB,EAAAuD,IAAAojB,EAAA,SAAA7B,GACA,OAAAW,EAAA/iB,KAAAwT,OAAA4O,IACKpiB,QAOLwkB,eAAA,SAAAxB,GACAhjB,KAAAgjB,YAAAD,EAAA/iB,KAAAwT,OAAAwP,GACAhjB,KAAAijB,UAAAjjB,KAAAgjB,YAAAC,aAgBApc,EAAAC,QAAApH,wBChKA,IAAArC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBqnB,EAAsBrnB,EAAQ,KAI9BsnB,EAFsBtnB,EAAQ,KAE9BsnB,aAoBAhlB,EAAArC,EAAAK,oBAAA,CACAC,KAAA,QACAqO,KAAA,SAAAjM,EAAA4I,GAKA3I,KAAAD,UAMAC,KAAA2I,MAMA3I,KAAA2kB,OAMA3kB,KAAA4kB,iBAAA,IAAAH,EAAA9b,EAAAkc,UAAAC,GAAA,QAAAxnB,EAAAynB,KAAA/kB,KAAAglB,SAAAhlB,OAAAilB,SAMAplB,OAAA,SAAAqlB,GAEA,OADAllB,KAAA2kB,MAAAO,EACAC,EAAA7D,MAAAthB,KAAAmU,YAMAiR,gBAAA,SAAAF,EAAAnlB,GAKA,OADA2kB,EAAA3kB,GACAolB,EAAA7D,MAAAthB,KAAAmU,YAMAkR,WAAAF,EAaA7Y,QAAA,WACAtM,KAAA4kB,iBAAAtY,WAMA0Y,SAAA,SAAAf,EAAAlH,GACA,IAAAuI,EAAAtlB,KAAA2kB,MAAAtP,GACArV,KAAA2kB,MAAAY,mBAAAC,gBAAAvB,EAAAjkB,KAAAD,WAKAgd,EAAA0I,OAAA1I,EAAAsG,gBAAArjB,KAAA2I,IAAA+c,eAAA,CACA/nB,KAAA,QACAgoB,QAAAL,EACArB,MAAA3mB,EAAA0D,MAAAijB,GACA2B,MAAAN,IAEAvI,EAAA0I,OAAAzlB,KAAA2I,IAAA+c,eAAA,CACA/nB,KAAA,WACAgoB,QAAAL,EACArB,MAAA3mB,EAAA0D,MAAAijB,GACA2B,MAAAN,OAKA,SAAAH,EAAAD,EAAAnlB,EAAA4I,EAAAwC,KAEAA,KAAAya,QAAAV,EAAA7P,KAAArV,KAAA4kB,iBAAAiB,UAAAX,EAAAK,mBAAAO,cAAAnd,IAAAod,YAAAb,EAAAlC,aAAAgD,aAAAd,EAAAjB,MAAA5lB,SAGAwI,EAAAC,QAAApH,wBC7HA,IAAArC,EAAcD,EAAQ,IA8BtBC,EAAA6N,eAAA,CACAvN,KAAA,QACAmO,MAAA,SAGC,SAAAX,EAAApL,GACDA,EAAAsL,cAAA,CACAC,SAAA,QACAC,MAAAJ,GACG,SAAA+Z,GACHA,EAAAX,SAAApZ,EAAA8Y,WAyBA5mB,EAAA6N,eAAA,CACAvN,KAAA,cACAmO,MAAA,gBACAb,OAAA,QACC,cACD5N,EAAA6N,eAAA,CACAvN,KAAA,WACAmO,MAAA,WACAb,OAAA,QACC,oCC1ED,IAAA5N,EAAcD,EAAQ,IAEtBqjB,EAAmBrjB,EAAQ,MAE3BA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,MAyBRC,EAAAkW,qBAAAkN,yBCnCA,IAAAnjB,EAAaF,EAAQ,GA8ErB,SAAA6oB,EAAAlJ,GACA,IAAAmJ,EAAAnJ,EAAAmJ,YAAAnJ,EAAAmJ,UAAA,IACAC,EAAAD,EAAAE,WAAAF,EAAAE,SAAA,IAEAC,EAAAtJ,EAAAsJ,OAAAtJ,EAAAsJ,OAAA,GACAC,EAAAD,EAAAE,SAAAF,EAAAE,OAAA,IACAC,EAAA,CACAD,OAAA,EACAH,SAAA,GAEA9oB,EAAA6D,KAAAklB,EAAA,SAAAjhB,EAAAhE,GACAolB,EAAAplB,IAAAqlB,EAAAH,EAAAllB,KACAklB,EAAAllB,GAAAgE,KAIA+gB,EAAAE,QAAAI,EAAAJ,EAAA,cACAA,EAAAD,SAAAD,EAAAE,aACAF,EAAAE,OAIA,SAAAI,EAAA/O,EAAAvG,GACA,OAAAuG,EAAAV,eAAA7F,GAGAtK,EAAAC,QAnFA,SAAA0M,GACA,IAAAkT,EAAAlT,KAAAmT,SAEArpB,EAAAoW,QAAAgT,KACAA,IAAA,CAAAA,GAAA,IAGAppB,EAAA6D,KAAAulB,EAAA,SAAA3J,GACAA,GAQA,SAAAA,GACA,IAAApf,EAAAof,EAAApf,KACAipB,EAAA,CACAC,OAAA,QACA3Y,KAAA,QAUA,GAPA0Y,EAAAjpB,KACAof,EAAA+J,SAAAF,EAAAjpB,UACAof,EAAApf,MAGAsoB,EAAAlJ,GAEA0J,EAAA1J,EAAA,oBACA,IAAAgK,EAAAhK,EAAAgK,eAAAhK,EAAAgK,aAAA,IAEAN,EAAAM,EAAA,cACAA,EAAAvf,SAAAuV,EAAAiK,iBAGA,SAAAD,EAAAvf,UAAAif,EAAAM,EAAA,UACAA,EAAAlY,MAAA,SACAkY,EAAAvf,iBAGAuV,EAAAiK,gBAGA1pB,EAAA6D,KAAA4b,EAAAkK,MAAA,YAAAC,GACA5pB,EAAA6pB,SAAAD,KAAA5pB,EAAAoW,QAAAwT,MACAT,EAAAS,EAAA,UAAAT,EAAAS,EAAA,UAEAA,EAAA9hB,MAAA8hB,EAAA9lB,MAGA6kB,EAAAiB,MAxCAE,CAAArK,4BCjCgB3f,EAAQ,IAqBxBiqB,yBAAA,sBAEA,uCCvBA,IAAAhqB,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAqBrBC,EAAA6N,eAAA,CACAvN,KAAA,iBACAmO,MAAA,kBACAb,OAAA,oBACC,SAAAE,EAAApL,GACD,IAAAunB,EAAAvnB,EAAAuc,aAAA,YAYA,OAVAgL,GAAA,MAAAnc,EAAAoc,eACAD,EAAAE,gBAAArc,EAAAoc,eAEAD,EAAAnnB,IAAA,YAAAmnB,EAAAG,cACAH,EAAAI,cAAA,IAKA3nB,EAAA4nB,YAAA,YACArqB,EAAA2F,SAAA,CACAskB,aAAAD,EAAA9T,OAAA+T,cACGpc,KAEH9N,EAAA6N,eAAA,CACAvN,KAAA,qBACAmO,MAAA,sBACAb,OAAA,UACC,SAAAE,EAAApL,GACD,IAAAunB,EAAAvnB,EAAAuc,aAAA,YAEAgL,GAAA,MAAAnc,EAAAyc,WACAN,EAAAI,aAAAvc,EAAAyc,mCCpDA,IAAAtqB,EAAaF,EAAQ,GAErByqB,EAAoBzqB,EAAQ,MAE5B0qB,EAAsB1qB,EAAQ,KAqB9B2qB,EAAAF,EAAAloB,OAAA,CACAhC,KAAA,kBAKAmW,cAAA,CACAkU,gBAAA,gBAEAlE,YAAA,OAEAF,YAAA,EAEAvW,OAAA,aAEArO,SAAA,EACAipB,QAAA,CAEAC,QAAA,QAGAC,OAAA,cACAC,WAAA,GACAC,UAAA,CACAxZ,MAAA,EACAJ,MAAA,EACAoV,MAAA,WAEAwC,MAAA,CAEA7e,SAAA,OAKAqH,MAAA,EACAyZ,SAAA,OACAxe,OAAA,EAGA+Z,MAAA,WAEAqC,UAAA,CACArC,MAAA,UACAD,YAAA,GAEA2E,gBAAA,CACAJ,OAAA,SACAC,WAAA,GACAvE,MAAA,UACAD,YAAA,EACAE,YAAA,uBACA0E,WAAA,EACAC,kBAAA,IACAC,gBAAA,gBAEA3B,aAAA,CACAlY,MAAA,EACA8Z,aAAA,EACAC,aAAA,EACAC,aAAA,EACAC,SAAA,GACAC,QAAA,GACAvhB,SAAA,OAEAwhB,SAAA,4UAEAC,SAAA,idAEAC,SAAA,sTAEAC,SAAA,iTAEAtF,MAAA,UACAC,YAAA,UACAF,YAAA,GAEAwC,SAAA,CACAC,MAAA,CACAxX,MAAA,EAEAgV,MAAA,WAEAqC,UAAA,CACArC,MAAA,WAEAkD,aAAA,CACAlD,MAAA,UACAC,YAAA,UACAF,YAAA,IAGAqD,KAAA,MAGA3pB,EAAA8rB,MAAArB,EAAAD,GACA,IAAApoB,EAAAqoB,EACAlhB,EAAAC,QAAApH,wBC1HA,IAAApC,EAAaF,EAAQ,GAErBisB,EAAqBjsB,EAAQ,IAE7BksB,EAAWlsB,EAAQ,KAEnB0V,EAAgB1V,EAAQ,IAqBxByqB,EAAAwB,EAAA1pB,OAAA,CACAhC,KAAA,WACA4rB,WAAA,MAKAzV,cAAA,CACA0V,OAAA,EAEA5jB,EAAA,EAEAiJ,MAAA,EACAiY,SAAA,OAEA2C,UAAA,EACA1Y,KAAA,MACAF,IAAA,KACAG,MAAA,MACAF,OAAA,EACArC,MAAA,KACAC,OAAA,GACAgb,QAAA,EACA1C,gBAAA,OAEA2C,UAAA,EACAC,QAAA,EAEAC,MAAA,EACAC,aAAA,IAEAvC,aAAA,EACArB,UAAA,GACAG,MAAA,CACAxC,MAAA,QAEAoD,KAAA,IAMAjb,KAAA,SAAAwH,EAAAuW,EAAAhqB,GAKAC,KAAAgqB,MAMAhqB,KAAAiqB,OACAjqB,KAAAkqB,qBAAA1W,EAAAzT,GAEAC,KAAAmqB,aAMAlW,YAAA,SAAAT,GACAqU,EAAA3T,WAAAlU,KAAA,cAAAmU,WAEAnU,KAAAmqB,aAMA3C,gBAAA,SAAAD,GACA,MAAAA,IACAA,EAAAvnB,KAAAwT,OAAA+T,cAGA,IAAA6C,EAAApqB,KAAAgqB,MAAAI,QAEApqB,KAAAwT,OAAAqW,KACAtC,KAAA6C,QAEA7C,GAAA6C,IAAA7C,EAAA6C,EAAA,GACA7C,EAAA,IAAAA,EAAA,IAGAvnB,KAAAwT,OAAA+T,gBAMA8C,gBAAA,WACA,OAAArqB,KAAAwT,OAAA+T,cAMAE,WAAA,WACA,OAAAznB,KAAAqqB,mBAAArqB,KAAAgqB,MAAAI,QAAA,GAMA1C,aAAA,SAAA4C,GACAtqB,KAAAwT,OAAAmW,WAAAW,GAMAC,aAAA,WACA,QAAAvqB,KAAAwT,OAAAmW,UAMAQ,UAAA,WACA,IAAA5V,EAAAvU,KAAAwT,OACAgX,EAAAjW,EAAA0S,MAAA,GACAH,EAAAvS,EAAAuS,SACA2D,EAAAzqB,KAAAiqB,OAAA,GAEA,gBAAAnD,EAAA,CACA,IAAA4D,EAAA,GACAptB,EAAA6D,KAAAqpB,EAAA,SAAAG,EAAA1V,GACA,IACA2V,EADAxlB,EAAA0N,EAAA+X,iBAAAF,GAGArtB,EAAA6pB,SAAAwD,IACAC,EAAAttB,EAAA0D,MAAA2pB,IACAvlB,MAAA6P,EAEA2V,EAAA3V,EAGAyV,EAAAlnB,KAAAonB,GAEAttB,EAAAmU,SAAArM,IAAA,MAAAA,IAAA6a,MAAA7a,KACAA,EAAA,IAGAqlB,EAAAjnB,KAAA4B,EAAA,MAEAolB,EAAAE,EAGA,IAAAI,EAAA,CACAC,SAAA,UACA7c,KAAA,QACK4Y,IAAA,UACL9mB,KAAAgqB,MAAA,IAAAV,EAAA,EACAloB,KAAA,QACAzD,KAAAmtB,IACK9qB,OACLgrB,SAAAR,EAAAC,IAEApM,QAAA,WACA,OAAAre,KAAAgqB,OAOArmB,cAAA,WACA,gBAAA3D,KAAAG,IAAA,YACA,OAAAH,KAAAiqB,OAAA5rB,WAIAqB,EAAAmoB,EACAhhB,EAAAC,QAAApH,wBCzMA,IAAApC,EAAaF,EAAQ,GAErBwkB,EAAmBxkB,EAAQ,IAE3BiL,EAAajL,EAAQ,IAErBQ,EAAcR,EAAQ,IAEtBmK,EAAanK,EAAQ,IAErB6tB,EAAmB7tB,EAAQ,MAE3B8tB,EAAmB9tB,EAAQ,MAI3B+tB,EAFc/tB,EAAQ,KAEtB+tB,aAEAC,EAAiBhuB,EAAQ,KAEzBoP,EAAiBpP,EAAQ,IAIzBiuB,EAFcjuB,EAAQ,IAEtBiuB,WAoBAtG,EAAAznB,EAAAynB,KACA5jB,EAAA7D,EAAA6D,KACAgF,EAAA7G,KAAA6G,GAEAzG,EAAAurB,EAAAtrB,OAAA,CACAhC,KAAA,kBACAqO,KAAA,SAAAjM,EAAA4I,GACA3I,KAAA2I,MAMA3I,KAAAsrB,MAMAtrB,KAAAurB,UAKAvrB,KAAAwrB,OAKAxrB,KAAAyrB,gBAKAzrB,KAAA0rB,WAKA1rB,KAAA2rB,aAMA9rB,OAAA,SAAAynB,EAAAvnB,EAAA4I,EAAAwC,GAMA,GALAnL,KAAA2kB,MAAA2C,EACAtnB,KAAA2I,MACA3I,KAAAD,UACAC,KAAAC,MAAAC,YAEAonB,EAAAnnB,IAAA,YACA,IAAAyrB,EAAA5rB,KAAA6rB,QAAAvE,EAAA3e,GAEAmjB,EAAA9rB,KAAA+rB,aAAA,aAEAC,EAAAhsB,KAAA+rB,aAAA,cAOA1rB,EAAAL,KAAAsrB,MAAAtrB,KAAAisB,YAAAL,EAAAtE,GAEAA,EAAA4E,cAAA,SAAAtM,GACA,OAAAyL,EAAAhrB,EAAAgB,MAAA8qB,SAAAvM,KAGAze,EAAA,4DAAAC,GACApB,KAAA,UAAAoB,GAAAwqB,EAAAE,EAAAzrB,EAAAinB,IACOtnB,MAEPA,KAAAosB,iBAAAR,EAAAI,EAAA3rB,EAAAinB,GAEAtnB,KAAAqsB,UAAAT,EAAAtE,GAGAtnB,KAAAssB,eAMA/f,OAAA,WACAvM,KAAAusB,cAEAvsB,KAAAC,MAAAC,aAMAoM,QAAA,WACAtM,KAAAusB,eAEAV,QAAA,SAAAvE,EAAA3e,GACA,IAAA6jB,EAAAlF,EAAAnnB,IAAA,kBACAkN,EAAAia,EAAAnnB,IAAA,UACAssB,EAkZA,SAAA9H,EAAAhc,GACA,OAAApB,EAAAmlB,cAAA/H,EAAAgI,qBAAA,CACAle,MAAA9F,EAAA2Q,WACA5K,OAAA/F,EAAA6Q,aACGmL,EAAAxkB,IAAA,YAtZHysB,CAAAtF,EAAA3e,GAEA,MAAA6jB,GAAA,SAAAA,EACAA,EAAA,eAAAnf,EAAAof,EAAA/nB,EAAA+nB,EAAA/d,OAAA,EAAA/F,EAAA6Q,YAAA,UAAAiT,EAAAhoB,EAAAgoB,EAAAhe,MAAA,EAAA9F,EAAA2Q,WAAA,UACK2G,MAAAuM,KACLA,EAAA,CACAK,WAAA,CACAhc,IAAA,IACAC,OAAA,KAEAgc,SAAA,CACA/b,KAAA,IACAC,MAAA,MAEO3D,GAAAmf,IAGP,IAuBAO,EACAC,EACAC,EACAC,EA1BAC,EAAA,CACAN,WAAA,SACAC,SAAAN,GAAA,SAAAA,EAAA,gBAEAY,EAAA,CACAP,WAAAL,GAAA,SAAAA,EAAA,eACAM,SAAA,UAEAO,EAAA,CACAR,WAAA,EACAC,SAAA3mB,EAAA,GAGAmnB,EAAA,aAAAjgB,EAAAof,EAAA/d,OAAA+d,EAAAhe,MACA8e,EAAAjG,EAAA5lB,SAAA,gBACA8rB,EAAAD,EAAAptB,IAAA,WACAstB,EAAAD,EAAAD,EAAAptB,IAAA,cACAutB,EAAAF,EAAAD,EAAAptB,IAAA,aACAwtB,EAAAF,EAAAC,EAEAzjB,EAAAqd,EAAAnnB,IAAA,mBACA8J,IAAA9D,EAAA,IAMA,IAAA6gB,EAAAuG,EAAAptB,IAAA,eACAwoB,EAAA6E,GAAAD,EAAAptB,IAAA,kBACAyoB,EAAA4E,GAAAD,EAAAptB,IAAA,kBACA0oB,EAAA2E,GAAAD,EAAAptB,IAAA,kBACAytB,EAAA,EACAC,EAAAP,EAmBA,MAjBA,SAAAtG,GAAA,WAAAA,GACA2B,IAAAoE,EAAA,MAAAa,GAAAD,GACA/E,IAAAoE,EAAA,CAAAY,EAAA,GAAAA,GAAAD,GACA9E,IAAAoE,EAAA,CAAAY,EAAAJ,EAAA,GAAAI,GAAAF,KAGAhF,IAAAoE,EAAA,CAAAc,EAAAJ,EAAA,GAAAI,GAAAF,GACA/E,IAAAoE,EAAA,MAAAY,GAAAD,GACA9E,IAAAoE,EAAA,CAAAY,EAAAJ,EAAA,GAAAI,GAAAF,IAGAT,EAAA,CAAAU,EAAAC,GAEAvG,EAAAnnB,IAAA,YACA+sB,EAAA5uB,UAGA,CACAmuB,WACAa,aACAjgB,SACA5F,SAAA4lB,EAAAhgB,GACApD,gBACAuiB,cACAsB,WAAAxG,EAAAnnB,IAAA,gBAAAgtB,EAAA9f,GACA0gB,cAAAzG,EAAAnnB,IAAA,wBAAAmnB,EAAAnnB,IAAA,mBAAAitB,EAAA/f,GAEA0f,eACAC,kBACAC,kBACAC,aACAO,cACAC,eAGArB,UAAA,SAAAT,EAAAtE,GAMA,IAAAwE,EAAA9rB,KAAA0rB,WACAM,EAAAhsB,KAAA2rB,YACAc,EAAAb,EAAAa,SAEA,gBAAAb,EAAAve,OAAA,CAEA,IAAA8B,EAAA9G,EAAAwB,SACAmkB,EAAAvB,EAAAhoB,EACAwpB,EAAAxB,EAAA/nB,EAAA+nB,EAAA/d,OACArG,EAAA0B,UAAAoF,IAAA,EAAA6e,GAAAC,IACA5lB,EAAAyB,OAAAqF,KAAAhJ,EAAA,GACAkC,EAAA0B,UAAAoF,IAAA,CAAA6e,EAAAC,KACAxB,IAAAzrB,SACAgJ,eAAAmF,GAGA,IAAA+e,EAAAC,EAAA1B,GACA2B,EAAAD,EAAArC,EAAAuC,mBACAC,EAAAH,EAAAnC,EAAAqC,mBACAE,EAAAzC,EAAAtkB,SACAgnB,EAAAxC,EAAAxkB,SACAgnB,EAAA,GAAAD,EAAA,GAAAL,EAAA,MACA,IAQAO,EARAjC,EAAAZ,EAAAY,YAEAvM,MAAAuM,IAGAkC,EAAAH,EAAAH,EAAAF,EAAA,EADAO,EAAA,MAAAjC,EAAA,KAEAkC,EAAAF,EAAAF,EAAAJ,EAAA,IAAAO,KAGAC,EAAAH,EAAAH,EAAAF,EAAA,EADAO,EAAAjC,GAAA,OAEAgC,EAAA,GAAAD,EAAA,GAAA/B,GASA,SAAAmC,EAAAC,GACA,IAAAne,EAAAme,EAAApnB,SACAonB,EAAAC,OAAA,CAAAX,EAAA,MAAAzd,EAAA,GAAAyd,EAAA,MAAAzd,EAAA,IAGA,SAAA0d,EAAA5f,GAEA,QAAAA,EAAA9J,EAAA8J,EAAA9J,EAAA8J,EAAAE,OAAA,CAAAF,EAAA7J,EAAA6J,EAAA7J,EAAA6J,EAAAG,SAGA,SAAAggB,EAAAI,EAAA3iB,EAAA4iB,EAAAC,EAAAC,GACAH,EAAAE,IAAAD,EAAAC,GAAAC,GAAA9iB,EAAA6iB,GAAAC,GAjBAnD,EAAA3a,KAAA,WAAAod,GACAvC,EAAA7a,KAAA,WAAAqd,GACA1C,EAAArkB,SAAAukB,EAAAvkB,SAAAmkB,EAAAnkB,SACAknB,EAAA7C,GACA6C,EAAA3C,IAgBAC,YAAA,SAAAL,EAAAtE,GACA,IAAAL,EAAAK,EAAAjJ,UACAyI,EAAAQ,EAAAnnB,IAAA,YACAkB,EAAA+pB,EAAA8D,mBAAA5H,EAAAR,GAEAzlB,EAAA8tB,SAAA,WACA,OAAAlI,EAAAmI,SAAA,mBAAAhqB,GACA,OAAAA,KAIA,IAAA6X,EAAAgK,EAAAoI,cAAA,SACAhuB,EAAAiuB,UAAArS,EAAA,GAAAA,EAAA,IACA5b,EAAAkuB,YACA,IAAAlvB,EAAA,IAAA6qB,EAAA,QAAA7pB,EAAAuqB,EAAAsB,WAAApG,GAEA,OADAzmB,EAAAskB,MAAA2C,EACAjnB,GAEA0rB,aAAA,SAAA3qB,GACA,IAAAouB,EAAAxvB,KAAA,IAAAoB,GAAA,IAAAxD,EAAAwV,MAEA,OADApT,KAAAC,MAAAuC,IAAAgtB,GACAA,GAEAC,gBAAA,SAAA7D,EAAA3rB,EAAAI,EAAAinB,GACA,IAAA4F,EAAA7sB,EAAAE,YAEA+mB,EAAAnnB,IAAA,mBAIAF,EAAAuC,IAAA,IAAA5E,EAAAmF,KAAA,CACAvB,MAAA,CACA9C,GAAAwuB,EAAA,GACAvuB,GAAA,EACAC,GAAAsuB,EAAA,GACAruB,GAAA,GAEAoD,MAAA3E,EAAAqC,OAAA,CACA+vB,QAAA,SACOpI,EAAA5lB,SAAA,aAAAQ,gBACPE,QAAA,EACAD,GAAA,MAOAwtB,gBAAA,SAAA/D,EAAA3rB,EAAAI,EAAAinB,GACA,IAAAL,EAAAK,EAAAjJ,UAEAuR,EAAAvvB,EAAAgB,MAAA8tB,WAEAhuB,EAAAyuB,EAAA,SAAAxqB,GACA,IAAAyqB,EAAAxvB,EAAAY,YAAAmE,GACA0qB,EAAA7I,EAAA8I,aAAA3qB,GACA4qB,EAAAF,EAAApuB,SAAA,aACAuuB,EAAAH,EAAApuB,SAAA,sBACAwuB,EAAA,CACA1oB,SAAA,CAAAqoB,EAAA,GACAM,QAAApL,EAAA/kB,KAAAowB,gBAAApwB,KAAAoF,IAEA2R,EAAAsZ,EAAAP,EAAAE,EAAA/vB,EAAAiwB,GACAtyB,EAAA0yB,cAAAvZ,EAAAkZ,EAAApiB,gBAEAiiB,EAAA3vB,IAAA,YACA4W,EAAA6I,UAAAxa,EACA2R,EAAAwZ,UAAAjJ,GAEAvQ,EAAA6I,UAAA7I,EAAAwZ,UAAA,MAEKvwB,OAMLosB,iBAAA,SAAAR,EAAA3rB,EAAAI,EAAAinB,GAGA,GAFAjnB,EAAAmwB,gBAEArwB,IAAA,SAIA,IAAA8mB,EAAAK,EAAAjJ,UACAzd,EAAAP,EAAAS,gBACAK,EAAAP,EAAA,SAAAG,GAEA,IAAA6e,EAAA7e,EAAAG,UACA4uB,EAAA7I,EAAA8I,aAAAnQ,GACA6Q,EAAAX,EAAApuB,SAAA,SACAgvB,EAAAZ,EAAApuB,SAAA,kBACAmuB,EAAAxvB,EAAAY,YAAAF,EAAAG,WACAmD,EAAA,IAAAzG,EAAA0G,KAAA,CACAkD,SAAA,CAAAqoB,EAAA,GACApoB,SAAAmkB,EAAA3hB,cAAA2hB,EAAAnkB,SACA0oB,QAAApL,EAAA/kB,KAAAowB,gBAAApwB,KAAA4f,GACAxd,QAAA,IAEAxE,EAAA4G,aAAAH,EAAApC,MAAAwuB,EAAA,CACA5rB,KAAA9D,EAAA+D,eACAC,UAAA6mB,EAAAkC,WACA9oB,kBAAA4mB,EAAAmC,gBAEA9tB,EAAAuC,IAAA6B,GACAzG,EAAA0yB,cAAAjsB,EAAAzG,EAAA4G,aAAA,GAA2DksB,KACtD1wB,QAML2wB,eAAA,SAAA/E,EAAA3rB,EAAAI,EAAAinB,GACA,IAAAmG,EAAA7B,EAAA6B,YACAhmB,EAAAmkB,EAAAnkB,SACAye,EAAAoB,EAAA5lB,SAAA,gBAAAmM,eACA+iB,EAAAtJ,EAAA5lB,SAAA,yBAAAmM,eACAU,EAAA,IAAAkf,EAAA,EAAAA,KACA7F,EAAAN,EAAAiD,eACAvrB,EAAAsoB,EAAAnnB,IAAA,cAKA,SAAA0wB,EAAArpB,EAAAspB,EAAAX,EAAAY,GACA,GAAAvpB,EAAA,CAIA,IAQAwpB,EA6HA,SAAA1J,EAAA2J,EAAA1iB,EAAA2iB,GAEA,OADAtzB,EAAAuzB,SAAA7J,EAAAnnB,IAAA8wB,GAAAG,QAAA,iBAAA9zB,EAAA0D,MAAAkwB,GAAA,IAA2G,IAAAtP,EAAArT,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,cA9H3G8iB,CAAA/J,EAAAwJ,EAAAviB,EARA,CACA/G,WACAqnB,OAAA,CAAApB,EAAA,KACAhmB,SAAAspB,GAAAtpB,EAAA,EACA6pB,WAAA,EACArvB,MAAAikB,EACAiK,YAGAlwB,EAAAuC,IAAAwuB,GACApzB,EAAA0yB,cAAAU,EAAAJ,IAnBAC,EAAAjF,EAAAqB,gBAAA,wBAAAlI,EAAA/kB,KAAAowB,gBAAApwB,KAAAhB,EAAA,UACA6xB,EAAAjF,EAAAoB,gBAAA,wBAAAjI,EAAA/kB,KAAAowB,gBAAApwB,KAAAhB,EAAA,UACA6xB,EAAAjF,EAAAmB,aAAA,iBAAAnF,EAAA,uBAAA7C,EAAA/kB,KAAAuxB,iBAAAvxB,MAAA4nB,IAAA,IAoBA4J,sBAAA,SAAA5F,EAAA3rB,EAAAI,EAAAinB,GACA,IAAAL,EAAAK,EAAAjJ,UACAkJ,EAAAD,EAAA+C,kBACAoH,EAAAxK,EAAA8I,aAAAxI,GAAA7lB,SAAA,mBACAgwB,EAAA1xB,KACA2xB,EAAA,CACAC,SAAA,SAAApoB,GACAA,EAAAqoB,WAAA,EACAroB,EAAAsoB,MAAA/M,EAAA2M,EAAAK,mBAAAL,GACAloB,EAAAwoB,UAAAjN,EAAA2M,EAAAO,sBAAAP,GACAQ,EAAA1oB,EAAA+d,EAAAlnB,EAAAinB,GAAA,IAEA6K,SAAA,SAAA3oB,GACA0oB,EAAA1oB,EAAA+d,EAAAlnB,EAAAinB,KAIAtnB,KAAAyrB,gBAAA4E,EAAAoB,IAAAzxB,KAAA0rB,WAAA,GAAqF1rB,KAAAyrB,gBAAAkG,IAErFJ,iBAAA,SAAAa,GACApyB,KAAAusB,cAEAvsB,KAAA2I,IAAA+c,eAAA,CACA/nB,KAAA,qBACAiqB,UAAAwK,EACAjmB,KAAAnM,KAAAoM,OAGA2lB,mBAAA,SAAAM,EAAAC,EAAAC,GACAvyB,KAAAusB,cAEAvsB,KAAAwyB,uBAAA,CAAAD,EAAAE,QAAAF,EAAAG,WAEAT,sBAAA,SAAAM,GACAvyB,KAAAwyB,uBAAA,CAAAD,EAAAE,QAAAF,EAAAG,UAAA,IAEAF,uBAAA,SAAAG,EAAAzK,GACA,IAAA0K,EAAA5yB,KAAA6yB,aAAAF,GAAA,GAEAtyB,EAAAL,KAAAsrB,MACA4B,EAAA1gB,EAAA4N,IAAA/Z,EAAAE,YAAAlC,SACAu0B,EAAA1F,EAAA,KAAA0F,EAAA1F,EAAA,IACA0F,EAAA1F,EAAA,KAAA0F,EAAA1F,EAAA,IACAltB,KAAAyrB,gBAAAjkB,SAAA,GAAAorB,EAEA5yB,KAAAyrB,gBAAAqH,QAEA,IAAAC,EAAA/yB,KAAAgzB,iBAAAJ,GAEAtL,EAAAtnB,KAAA2kB,OAEAuD,GAAA6K,IAAAzL,EAAA+C,mBAAA/C,EAAAnnB,IAAA,cACAH,KAAAowB,gBAAA2C,IAGAzG,YAAA,WACAtsB,KAAAusB,cAEAvsB,KAAA2kB,MAAA4F,iBACAvqB,KAAAwrB,OAAAyH,WAAAlO,EAGA,WAEA,IAAAuC,EAAAtnB,KAAA2kB,MAEA3kB,KAAAowB,gBAAA9I,EAAA+C,mBAAA/C,EAAAnnB,IAAA,qBAPAH,WAAA2kB,MAAAxkB,IAAA,mBAUA0yB,aAAA,SAAAK,GACA,IAAAC,EAAAnzB,KAAA0rB,WAAA0H,oBAEA,OAAAx1B,EAAAoM,eAAAkpB,EAAAC,GAAA,IAEAH,iBAAA,SAAAK,GACA,IAEAN,EAFA9L,EAAAjnB,KAAA2kB,MAAAtG,UACAiV,EAAAnV,IAEA9d,EAAAL,KAAAsrB,MAUA,OATArE,EAAA9lB,KAAA,mBAAAiE,EAAAwa,GACA,IAAApgB,EAAAa,EAAAY,YAAAmE,GACAmuB,EAAAj0B,KAAAC,IAAAC,EAAA6zB,GAEAE,EAAAD,IACAA,EAAAC,EACAR,EAAAnT,KAGAmT,GAEAxG,YAAA,WACAvsB,KAAAwrB,SACAgI,aAAAxzB,KAAAwrB,QACAxrB,KAAAwrB,OAAA,OAGA4E,gBAAA,SAAAqD,GACA,IAAAlM,EAAAvnB,KAAA2kB,MAAA0F,kBAEA,MAAAoJ,EACAA,EAAAlM,EAAA,EACK,MAAAkM,IACLA,EAAAlM,EAAA,GAGAvnB,KAAA2I,IAAA+c,eAAA,CACA/nB,KAAA,iBACA4pB,aAAAkM,EACAtnB,KAAAnM,KAAAoM,SAsBA,SAAAikB,EAAAqD,EAAA1D,EAAA/vB,EAAA8c,EAAAoL,EAAAwJ,GACA,IAAA9N,EAAAmM,EAAA7vB,IAAA,SAEA,GAAAgoB,EAOAA,EAAAwL,SAAA9P,GACA5jB,EAAAuC,IAAA2lB,GAEAwJ,KAAAQ,SAAAhK,OAVA,CACA,IAAAyL,EAAAF,EAAAvzB,IAAA,WACAgoB,EAAAgD,EAAAyI,GAAA,SAAA/P,IACAgQ,SAAA,oBACA5zB,EAAAuC,IAAA2lB,GACAwJ,KAAAC,SAAAzJ,GASA,IAAAjC,EAAA8J,EAAAniB,aAAA,iCACAsa,EAAA0L,SAAA3N,GAEAnJ,EAAAzf,EAAAsY,MAAA,CACA0b,WAAA,EACAnvB,GAAA,KACG4a,GAAA,GACH,IAAAqL,EAAAsL,EAAAvzB,IAAA,eACAioB,eAAA3iB,MAAA2iB,EAAA/pB,QAAA,EAAA+pB,OACA,MACAA,EAAA,MACArL,EAAA1b,MAAA+mB,EACA,IAAA0L,EAAAJ,EAAAvzB,IAAA,gBAEA,GAAA2zB,EAAA,CACA,IAAArjB,EAAAsM,EAAAvV,SAAAuV,EAAAvV,UAAA,MACAiJ,EAAA,IAAAjE,EAAAiG,aAAAqhB,EAAA,GAAA1L,EAAA,IACA3X,EAAA,IAAAjE,EAAAiG,aAAAqhB,EAAA,GAAA1L,EAAA,IAGA,IAAA2L,EAAAL,EAAAvzB,IAAA,gBAUA,OATA4c,EAAAtV,UAAAssB,GAAA,GAAAz0B,KAAA6G,GAAA,OACAgiB,EAAAhX,KAAA4L,GAOAoL,EAAA/C,kBACA+C,EAGA,SAAA+J,EAAA1oB,EAAAoW,EAAAvf,EAAAinB,EAAA0M,GACA,IAAAxqB,EAAAyqB,SAAA,CAIA,IAAAxC,EAAAnK,EAAA5lB,SAAA,mBACAkxB,EAAAvyB,EAAAY,YAAAqmB,EAAAjJ,UAAAle,IAAA,UAAAyf,IAEAoU,IAAAvC,EAAAtxB,IAAA,gBACAqJ,EAAA2H,KAAA,CACA3J,SAAA,CAAAorB,EAAA,MAGAppB,EAAA0qB,eAAA,GACA1qB,EAAA2qB,UAAA,CACA3sB,SAAA,CAAAorB,EAAA,IACKnB,EAAAtxB,IAAA,wBAAAsxB,EAAAtxB,IAAA,yBAIL0G,EAAAC,QAAApH,wBCxnBA,IAqBAA,EArBoBtC,EAAQ,KAqB5BuC,OAAA,CACAhC,KAAA,aAGAkJ,EAAAC,QAAApH,wBCzBA,IAAApC,EAAaF,EAAQ,GAErBg3B,EAAWh3B,EAAQ,KAgCnB8tB,EAAA,SAAAtiB,EAAAvH,EAAAgzB,EAAAvN,GACAsN,EAAAE,KAAAt0B,KAAA4I,EAAAvH,EAAAgzB,GAUAr0B,KAAArC,KAAAmpB,GAAA,QAMA9mB,KAAA2kB,MAAA,MAGAuG,EAAAvP,UAAA,CACAC,YAAAsP,EAKAsF,cAAA,WACA,OAAAxwB,KAAA2kB,MAAAjjB,SAAA,UAMA6yB,aAAA,WACA,qBAAAv0B,KAAA2kB,MAAAxkB,IAAA,YAGA7C,EAAAk3B,SAAAtJ,EAAAkJ,GACA,IAAA10B,EAAAwrB,EACArkB,EAAAC,QAAApH,wBCzEA,IAAArC,EAAcD,EAAQ,IAEtBA,EAAQ,MAERA,EAAQ,MAsBRC,EAAAkW,qBAAA,SAAAwJ,GAEAA,EAAA0X,UAAA1X,EAAA0X,WAAA,2BC5BA,IAqBA/0B,EArBkBtC,EAAQ,KAqB1BuC,OAAA,CACAhC,KAAA,YACAmW,cAAA,CACA0V,OAAA,EACA5jB,EAAA,EACAuiB,OAAA,MACAC,WAAA,GAGAH,QAAA,CACAC,QAAA,QAEA7B,MAAA,CACAxX,MAAA,EACArH,SAAA,UAEA0e,UAAA,CACAtC,YAAA,GAEAwC,SAAA,CACAC,MAAA,CACAxX,MAAA,OAMAhI,EAAAC,QAAApH,wBChDA,IAAApC,EAAaF,EAAQ,GAErBs3B,EAAiBt3B,EAAQ,KAEzBoP,EAAiBpP,EAAQ,IAEzBksB,EAAWlsB,EAAQ,KAEnBu3B,EAAmBv3B,EAAQ,KAuB3B,SAAAw3B,EAAAC,EAAA1Y,EAAAxT,GACA,IAAAuE,EAAAiP,EAAAzQ,iBACAmpB,EAAA1zB,KAAA,SAAA4C,GACA,IACAqK,EADA0hB,EAAA+E,EAAA9E,aAAAhsB,GAEA+wB,EAAAtoB,EAAAiG,aAAAqd,EAAA3vB,IAAA,KAAAwI,EAAA2Q,YACAyb,EAAAvoB,EAAAiG,aAAAqd,EAAA3vB,IAAA,KAAAwI,EAAA6Q,aAEA,GAAAyG,MAAA6U,IAAA7U,MAAA8U,IAGA,GAAA5Y,EAAA6Y,kBAEA5mB,EAAA+N,EAAA6Y,kBAAAH,EAAAI,UAAAJ,EAAAK,WAAAnxB,SACO,GAAAmJ,EAAA,CACP,IAAAzI,EAAAowB,EAAA10B,IAAA+M,EAAAgoB,WAAA,GAAAnxB,GACAW,EAAAmwB,EAAA10B,IAAA+M,EAAAgoB,WAAA,GAAAnxB,GACAqK,EAAAlB,EAAAioB,YAAA,CAAA1wB,EAAAC,UARA0J,EAAA,CAAA0mB,EAAAC,GAYA9U,MAAA6U,KACA1mB,EAAA,GAAA0mB,GAGA7U,MAAA8U,KACA3mB,EAAA,GAAA2mB,GAGAF,EAAAO,cAAArxB,EAAAqK,KAIA,IAAA1O,EAtDiBtC,EAAQ,KAsDzBuC,OAAA,CACAhC,KAAA,YAUAynB,gBAAA,SAAAiQ,EAAAt1B,EAAA4I,GACA5I,EAAAmc,WAAA,SAAAC,GACA,IAAAmZ,EAAAnZ,EAAAkZ,eAEAC,IACAV,EAAAU,EAAAjX,UAAAlC,EAAAxT,GACA3I,KAAAu1B,eAAAp1B,IAAAgc,EAAA9G,IAAAmgB,aAAAF,KAEKt1B,OAELy1B,aAAA,SAAAtZ,EAAAmZ,EAAAv1B,EAAA4I,GACA,IAAAuE,EAAAiP,EAAAzQ,iBACAgqB,EAAAvZ,EAAA9G,GACA+I,EAAAjC,EAAAkC,UACAsX,EAAA31B,KAAAu1B,eACAK,EAAAD,EAAAx1B,IAAAu1B,IAAAC,EAAAze,IAAAwe,EAAA,IAAAhB,GACAG,EAqDA,SAAA3nB,EAAAiP,EAAAmZ,GACA,IAAAO,EAGAA,EADA3oB,EACA5P,EAAAuD,IAAAqM,KAAAgoB,WAAA,SAAAY,GACA,IAAA5c,EAAAiD,EAAAkC,UAAA0X,iBAAA5Z,EAAAkC,UAAAC,aAAAwX,KAAA,GAEA,OAAAx4B,EAAA2F,SAAA,CACA7B,KAAA00B,GACO5c,KAGP,EACA9X,KAAA,QACAzD,KAAA,UAIA,IAAAk3B,EAAA,IAAAvL,EAAAuM,EAAAP,GACAU,EAAA14B,EAAAuD,IAAAy0B,EAAAn1B,IAAA,QAAA7C,EAAAG,MAAAk3B,EAAAsB,cAAA9Z,IAEAjP,IACA8oB,EAAA14B,EAAA44B,OAAAF,EAAA14B,EAAAG,MAAAk3B,EAAAwB,WAAAjpB,KAMA,OAHA2nB,EAAA7J,SAAAgL,EAAA,KAAA9oB,EAAAynB,EAAAyB,eAAA,SAAAzL,GACA,OAAAA,EAAAvlB,QAEAyvB,EAjFAwB,CAAAnpB,EAAAiP,EAAAmZ,GAEAA,EAAAlV,QAAAyU,GACAD,EAAAU,EAAAjX,UAAAlC,EAAAxT,GACAksB,EAAA1zB,KAAA,SAAA4C,GACA,IAAA+rB,EAAA+E,EAAA9E,aAAAhsB,GACAokB,EAAA2H,EAAAwG,WAAA,UACAlO,EAAA0H,EAAAwG,WAAA,cACAC,EAAAj5B,EAAAk5B,WAAArO,GACAsO,EAAAn5B,EAAAk5B,WAAApO,GAEA,GAAAmO,GAAAE,EAAA,CACA,IAAAC,EAAApB,EAAAqB,YAAA5yB,GACA6yB,EAAAtB,EAAAuB,cAAA9yB,GAEAwyB,IACApO,IAAAuO,EAAAE,IAGAH,IAEArO,IAAAsO,EAAAE,IAIA/B,EAAAiC,cAAA/yB,EAAA,CACAokB,SACAC,aACAvE,MAAAiM,EAAA3vB,IAAA,oBAAAie,EAAA2Y,UAAA,aAIAnB,EAAAoB,WAAAnC,GACA70B,KAAAC,MAAAuC,IAAAozB,EAAA31B,OAGA40B,EAAAoC,kBAAA,SAAAlgB,GACAA,EAAAS,SAAA,SAAA0f,GACAA,EAAA3G,UAAA+E,MAGAM,EAAAuB,QAAA,EACAvB,EAAA31B,MAAAmC,OAAAkzB,EAAAn1B,IAAA,WAAAgc,EAAAhc,IAAA,aA0CA0G,EAAAC,QAAApH,wBC/KA,IAAArC,EAAcD,EAAQ,IAEtBA,EAAQ,MAERA,EAAQ,MAqBRC,EAAAkW,qBAAA,SAAAwJ,GAEAA,EAAAqa,SAAAra,EAAAqa,UAAA,2BC3BA,IAqBA13B,EArBkBtC,EAAQ,KAqB1BuC,OAAA,CACAhC,KAAA,WACAmW,cAAA,CACA0V,OAAA,EACA5jB,EAAA,EACAuiB,OAAA,mBACAC,WAAA,OAEA9M,UAAA,EACA2M,QAAA,CACAC,QAAA,QAEA7B,MAAA,CACAxX,MAAA,EACArH,SAAA,MACA6vB,SAAA,GAEAhP,UAAA,CACA1qB,KAAA,UAEAyoB,SAAA,CACAC,MAAA,CACAxX,MAAA,GAEAwZ,UAAA,CACA5Z,MAAA,IAGAia,gBAAA,YAIA7hB,EAAAC,QAAApH,wBCrDA,IAAApC,EAAaF,EAAQ,GAErBksB,EAAWlsB,EAAQ,KAEnBoP,EAAiBpP,EAAQ,IAEzBu3B,EAAmBv3B,EAAQ,KAE3Bk6B,EAAel6B,EAAQ,KAEvBm6B,EAAiBn6B,EAAQ,KAIzBo6B,EAFuBp6B,EAAQ,KAE/Bo6B,oBAoBAC,EAAA,SAAAtb,EAAAjP,EAAAwqB,EAAA/M,GACA,IAAA1D,EAAA9K,EAAAkC,UAEAsZ,EAAAhN,EAAAhtB,KAEA,IAAAL,EAAAoW,QAAAiX,KAAA,QAAAgN,GAAA,QAAAA,GAAA,YAAAA,GAAA,WAAAA,GAIA,MAAAhN,EAAAiN,OAAA,MAAAjN,EAAAkN,OAAA,CACA,IAAAC,EACA1yB,EAEA,SAAAulB,EAAAkN,OAAA,MAAAlN,EAAAiN,MACAE,EAAA5qB,EAAA6qB,QAAA,MAAApN,EAAAkN,MAAA,SACAzyB,EAAA9H,EAAA06B,SAAArN,EAAAkN,MAAAlN,EAAAiN,WACK,CACL,IAAAK,EAAAtD,EAAAuD,YAAAvN,EAAA1D,EAAA/Z,EAAAiP,GACA2b,EAAAG,EAAAH,UACA,IAAAK,EAAAX,EAAAvQ,EAAAgR,EAAAE,cACA/yB,EAAAuvB,EAAAyD,aAAAnR,EAAAkR,EAAAR,GAGA,IAAAU,EAAA,MAAAP,EAAAlvB,IAAA,IACA0vB,EAAA,EAAAD,EACAE,EAAAj7B,EAAA0D,MAAA2pB,GACA6N,EAAA,GACAD,EAAA56B,KAAA,KACA46B,EAAA/4B,MAAA,GACAg5B,EAAAh5B,MAAA,GACA+4B,EAAA/4B,MAAA84B,IAAAna,IACAqa,EAAAh5B,MAAA84B,GAAAna,IACA,IAAA7C,EAAAoc,EAAAv3B,IAAA,aAEAmb,GAAA,qBAAAlW,IACAA,KAAAsW,QAAApc,KAAA+G,IAAAiV,EAAA,MAGAid,EAAA/4B,MAAA64B,GAAAG,EAAAh5B,MAAA64B,GAAAjzB,EACAulB,EAAA,CAAA4N,EAAAC,EAAA,CAEA76B,KAAAg6B,EACAU,WAAA1N,EAAA0N,WAEAjzB,UAUA,OANAulB,EAAA,CAAAgK,EAAAsB,cAAA9Z,EAAAwO,EAAA,IAAAgK,EAAAsB,cAAA9Z,EAAAwO,EAAA,IAAArtB,EAAAqC,OAAA,GAA8HgrB,EAAA,MAE9H,GAAAhtB,KAAAgtB,EAAA,GAAAhtB,MAAA,GAEAL,EAAAsY,MAAA+U,EAAA,GAAAA,EAAA,IACArtB,EAAAsY,MAAA+U,EAAA,GAAAA,EAAA,IACAA,GAGA,SAAA8N,EAAAjX,GACA,OAAAvB,MAAAuB,KAAAkX,SAAAlX,GAIA,SAAAmX,EAAAC,EAAAC,EAAAjG,EAAA1lB,GACA,IAAA4rB,EAAA,EAAAF,EACAte,EAAApN,EAAAgoB,WAAA0D,GACA,OAAAH,EAAAI,EAAAC,KAAAL,EAAA7F,EAAAkG,KAAAD,EAAAD,KAAAhG,EAAAgG,IAAA1rB,EAAA6qB,QAAAzd,GAAAye,YAAAF,EAAAD,IAGA,SAAAI,EAAA9rB,EAAAyd,GACA,mBAAAzd,EAAAvP,KAAA,CACA,IAAAk7B,EAAAlO,EAAA,GAAAnrB,MACAozB,EAAAjI,EAAA,GAAAnrB,MAOA,GAAAq5B,GAAAjG,IAAA+F,EAAA,EAAAE,EAAAjG,EAAA1lB,IAAAyrB,EAAA,EAAAE,EAAAjG,EAAA1lB,IACA,SAIA,OAAAynB,EAAAwB,WAAAjpB,EAAAyd,EAAA,KAAAgK,EAAAwB,WAAAjpB,EAAAyd,EAAA,IAGA,SAAAsO,EAAAhS,EAAAljB,EAAAm1B,EAAA/c,EAAAxT,GACA,IAEAyF,EAFAlB,EAAAiP,EAAAzQ,iBACAokB,EAAA7I,EAAA8I,aAAAhsB,GAEA+wB,EAAAtoB,EAAAiG,aAAAqd,EAAA3vB,IAAA,KAAAwI,EAAA2Q,YACAyb,EAAAvoB,EAAAiG,aAAAqd,EAAA3vB,IAAA,KAAAwI,EAAA6Q,aAEA,GAAAyG,MAAA6U,IAAA7U,MAAA8U,GAEG,CAEH,GAAA5Y,EAAA6Y,kBAEA5mB,EAAA+N,EAAA6Y,kBAAA/N,EAAAgO,UAAAhO,EAAAiO,WAAAnxB,QACK,CACL,IAAAo1B,EAAAjsB,EAAAgoB,WACAzwB,EAAAwiB,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,GACAW,EAAAuiB,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,GACAqK,EAAAlB,EAAAioB,YAAA,CAAA1wB,EAAAC,IAYA,mBAAAwI,EAAAvP,KAAA,CACA,IAAAi6B,EAAA1qB,EAAA6qB,QAAA,KACAF,EAAA3qB,EAAA6qB,QAAA,KACAoB,EAAAjsB,EAAAgoB,WAEAuD,EAAAxR,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,IACAqK,EAAA,GAAAwpB,EAAAwB,cAAAxB,EAAAr3B,YAAA24B,EAAA,MACOT,EAAAxR,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,MACPqK,EAAA,GAAAypB,EAAAuB,cAAAvB,EAAAt3B,YAAA24B,EAAA,OAKAjZ,MAAA6U,KACA1mB,EAAA,GAAA0mB,GAGA7U,MAAA8U,KACA3mB,EAAA,GAAA2mB,QAxCA3mB,EAAA,CAAA0mB,EAAAC,GA4CA9N,EAAAmO,cAAArxB,EAAAqK,GAGA,IAAA1O,EAAA63B,EAAA53B,OAAA,CACAhC,KAAA,WAwBAynB,gBAAA,SAAAiU,EAAAt5B,EAAA4I,GACA5I,EAAAmc,WAAA,SAAAC,GACA,IAAAub,EAAAvb,EAAAkd,cAEA,GAAA3B,EAAA,CACA,IAAA4B,EAAA5B,EAAArZ,UACAkb,EAAA7B,EAAA8B,OACAC,EAAA/B,EAAAgC,KAEAH,EAAAp4B,KAAA,SAAA4C,GACAk1B,EAAAM,EAAAx1B,GAAA,EAAAoY,EAAAxT,GACAswB,EAAAQ,EAAA11B,GAAA,EAAAoY,EAAAxT,KAGA2wB,EAAAn4B,KAAA,SAAA4C,GACAu1B,EAAAlE,cAAArxB,EAAA,CAAAw1B,EAAAI,cAAA51B,GAAA01B,EAAAE,cAAA51B,OAEA/D,KAAAu1B,eAAAp1B,IAAAgc,EAAA9G,IAAAmgB,iBAEKx1B,OAELy1B,aAAA,SAAAtZ,EAAAub,EAAA33B,EAAA4I,GACA,IAAAuE,EAAAiP,EAAAzQ,iBACAgqB,EAAAvZ,EAAA9G,GACA+I,EAAAjC,EAAAkC,UACAub,EAAA55B,KAAAu1B,eACAsE,EAAAD,EAAAz5B,IAAAu1B,IAAAkE,EAAA1iB,IAAAwe,EAAA,IAAA4B,GACAt3B,KAAAC,MAAAuC,IAAAq3B,EAAA55B,OACA,IAAAq5B,EAqEA,SAAApsB,EAAAiP,EAAAub,GACA,IAAA7B,EAGAA,EADA3oB,EACA5P,EAAAuD,IAAAqM,KAAAgoB,WAAA,SAAAY,GACA,IAAA5c,EAAAiD,EAAAkC,UAAA0X,iBAAA5Z,EAAAkC,UAAAC,aAAAwX,KAAA,GAEA,OAAAx4B,EAAA2F,SAAA,CACA7B,KAAA00B,GACO5c,KAGP,EACA9X,KAAA,QACAzD,KAAA,UAIA,IAAA47B,EAAA,IAAAjQ,EAAAuM,EAAA6B,GACA+B,EAAA,IAAAnQ,EAAAuM,EAAA6B,GAEAoC,EAAA,IAAAxQ,EAAA,GAAAoO,GACAqC,EAAAz8B,EAAAuD,IAAA62B,EAAAv3B,IAAA,QAAA7C,EAAAG,MAAAg6B,EAAAtb,EAAAjP,EAAAwqB,IAEAxqB,IACA6sB,EAAAz8B,EAAA44B,OAAA6D,EAAAz8B,EAAAG,MAAAu7B,EAAA9rB,KAGA,IAAAkpB,EAAAlpB,EAAAynB,EAAAyB,eAAA,SAAAzL,GACA,OAAAA,EAAAvlB,OAYA,OAVAm0B,EAAAvO,SAAA1tB,EAAAuD,IAAAk5B,EAAA,SAAApP,GACA,OAAAA,EAAA,KACG,KAAAyL,GACHqD,EAAAzO,SAAA1tB,EAAAuD,IAAAk5B,EAAA,SAAApP,GACA,OAAAA,EAAA,KACG,KAAAyL,GACH0D,EAAA9O,SAAA1tB,EAAAuD,IAAAk5B,EAAA,SAAApP,GACA,OAAAA,EAAA,MAEAmP,EAAAE,eAAA,EACA,CACA7tB,KAAAotB,EACAxK,GAAA0K,EACAnvB,KAAAwvB,GAjHAzD,CAAAnpB,EAAAiP,EAAAub,GACA6B,EAAAD,EAAAntB,KACAstB,EAAAH,EAAAvK,GACA+K,EAAAR,EAAAhvB,KACAotB,EAAA8B,OAAAD,EACA7B,EAAAgC,KAAAD,EAEA/B,EAAAtX,QAAA0Z,GACA,IAAAlG,EAAA8D,EAAAv3B,IAAA,UACAioB,EAAAsP,EAAAv3B,IAAA,cAsCA,SAAA85B,EAAAhT,EAAAljB,EAAAm1B,GACA,IAAApJ,EAAA7I,EAAA8I,aAAAhsB,GACAk1B,EAAAhS,EAAAljB,EAAAm1B,EAAA/c,EAAAxT,GACAse,EAAA6P,cAAA/yB,EAAA,CACAqkB,WAAA0H,EAAA3vB,IAAA,eAAAioB,EAAA8Q,EAAA,KACA/Q,OAAA2H,EAAA3vB,IAAA,cAAAyzB,EAAAsF,EAAA,KACArV,MAAAiM,EAAA3vB,IAAA,oBAAAie,EAAA2Y,UAAA,WA1CAz5B,EAAAoW,QAAAkgB,KACAA,EAAA,CAAAA,MAGA,kBAAAxL,IACAA,EAAA,CAAAA,MAIAkR,EAAAntB,KAAAhL,KAAA,SAAA4C,GACAk2B,EAAAV,EAAAx1B,GAAA,GACAk2B,EAAAR,EAAA11B,GAAA,KAGA+1B,EAAA34B,KAAA,SAAA4C,GACA,IAAAm2B,EAAAJ,EAAA/J,aAAAhsB,GAAA5D,IAAA,mBACA25B,EAAAhD,cAAA/yB,EAAA,CACA8f,MAAAqW,GAAAX,EAAAY,cAAAp2B,EAAA,WAEA+1B,EAAA1E,cAAArxB,EAAA,CAAAw1B,EAAAI,cAAA51B,GAAA01B,EAAAE,cAAA51B,KACA+1B,EAAAhD,cAAA/yB,EAAA,CACAq2B,eAAAb,EAAAY,cAAAp2B,EAAA,cACAs2B,WAAAd,EAAAY,cAAAp2B,EAAA,UACAu2B,aAAAb,EAAAU,cAAAp2B,EAAA,cACAw2B,SAAAd,EAAAU,cAAAp2B,EAAA,cAGA81B,EAAA7C,WAAA8C,GAGAR,EAAAhvB,KAAA2sB,kBAAA,SAAAlgB,EAAAhT,GACAgT,EAAAS,SAAA,SAAA0f,GACAA,EAAA3G,UAAAmH,MAcAmC,EAAA1C,QAAA,EACA0C,EAAA55B,MAAAmC,OAAAs1B,EAAAv3B,IAAA,WAAAgc,EAAAhc,IAAA,aA2DA0G,EAAAC,QAAApH,wBCzVA,IAAArC,EAAcD,EAAQ,IAEtBA,EAAQ,MAERA,EAAQ,MAqBRC,EAAAkW,qBAAA,SAAAwJ,GAEAA,EAAAyd,SAAAzd,EAAAyd,UAAA,2BC3BA,IAqBA96B,EArBkBtC,EAAQ,KAqB1BuC,OAAA,CACAhC,KAAA,WACAmW,cAAA,CACA0V,OAAA,EAEA5jB,EAAA,EACAqiB,QAAA,CACAC,QAAA,QAGAM,WAAA,EACAnC,MAAA,CACAxX,MAAA,EACArH,SAAA,OAEA0e,UAAA,CAIAtC,YAAA,GAEAwC,SAAA,CACAC,MAAA,CACAxX,MAAA,EACArH,SAAA,WAMAX,EAAAC,QAAApH,wBCnDA,IAAApC,EAAaF,EAAQ,GAErBq9B,EAAgBr9B,EAAQ,KAExBksB,EAAWlsB,EAAQ,KAEnBoP,EAAiBpP,EAAQ,IAEzBQ,EAAcR,EAAQ,IAEtBu3B,EAAmBv3B,EAAQ,KAE3Bm6B,EAAiBn6B,EAAQ,KAsBzBs9B,EAAA,SAAAve,EAAAjP,EAAAytB,EAAAhQ,GACA,IAAAiQ,EAAAjG,EAAAsB,cAAA9Z,EAAAwO,EAAA,IACAkQ,EAAAlG,EAAAsB,cAAA9Z,EAAAwO,EAAA,IACAqN,EAAA16B,EAAA06B,SAEA8C,EAAAF,EAAAp7B,MACAu7B,EAAAF,EAAAr7B,MACAs7B,EAAA,GAAA9C,EAAA8C,EAAA,IAAA3c,KACA2c,EAAA,GAAA9C,EAAA8C,EAAA,IAAA3c,KACA4c,EAAA,GAAA/C,EAAA+C,EAAA,GAAA5c,KACA4c,EAAA,GAAA/C,EAAA+C,EAAA,GAAA5c,KAEA,IAAA5H,EAAAjZ,EAAA09B,SAAA,IAAkCJ,EAAAC,IAMlC,OALAtkB,EAAA/W,MAAA,CAAAo7B,EAAAp7B,MAAAq7B,EAAAr7B,OACA+W,EAAA0kB,GAAAL,EAAAn2B,EACA8R,EAAA2kB,GAAAN,EAAAl2B,EACA6R,EAAA7X,GAAAm8B,EAAAp2B,EACA8R,EAAA5X,GAAAk8B,EAAAn2B,EACA6R,GAGA,SAAAkiB,EAAAjX,GACA,OAAAvB,MAAAuB,KAAAkX,SAAAlX,GAIA,SAAAmX,EAAAC,EAAAC,EAAAjG,EAAA1lB,GACA,IAAA4rB,EAAA,EAAAF,EACA,OAAAH,EAAAI,EAAAC,KAAAL,EAAA7F,EAAAkG,IAGA,SAAAqC,EAAAjuB,EAAAyd,GACA,IAAAkO,EAAAlO,EAAAnrB,MAAA,GACAozB,EAAAjI,EAAAnrB,MAAA,GAEA,wBAAA0N,EAAAvP,OAOAk7B,IAAAjG,IAAA+F,EAAA,EAAAE,EAAAjG,KAAA+F,EAAA,EAAAE,EAAAjG,MAKA+B,EAAAwB,WAAAjpB,EAAA,CACA1N,MAAAq5B,EACAp0B,EAAAkmB,EAAAsQ,GACAv2B,EAAAimB,EAAAuQ,MACGvG,EAAAwB,WAAAjpB,EAAA,CACH1N,MAAAozB,EACAnuB,EAAAkmB,EAAAjsB,GACAgG,EAAAimB,EAAAhsB,MAKA,SAAAy8B,EAAAnU,EAAAljB,EAAAo1B,EAAAhd,EAAAxT,GACA,IAEAyF,EAFAlB,EAAAiP,EAAAzQ,iBACAokB,EAAA7I,EAAA8I,aAAAhsB,GAEA+wB,EAAAtoB,EAAAiG,aAAAqd,EAAA3vB,IAAAg5B,EAAA,IAAAxwB,EAAA2Q,YACAyb,EAAAvoB,EAAAiG,aAAAqd,EAAA3vB,IAAAg5B,EAAA,IAAAxwB,EAAA6Q,aAEA,GAAAyG,MAAA6U,IAAA7U,MAAA8U,GAEG,CAEH,GAAA5Y,EAAA6Y,kBAEA5mB,EAAA+N,EAAA6Y,kBAAA/N,EAAAgO,UAAAkE,EAAAp1B,QACK,CACL,IAEAs3B,EAAA,CAFA52B,EAAAwiB,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,GACAW,EAAAuiB,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,IAEAmJ,EAAAouB,WAAApuB,EAAAouB,UAAAD,KACAjtB,EAAAlB,EAAAioB,YAAAkG,GAAA,GAGA,mBAAAnuB,EAAAvP,KAAA,CACA,IAAAi6B,EAAA1qB,EAAA6qB,QAAA,KACAF,EAAA3qB,EAAA6qB,QAAA,KACAtzB,EAAAwiB,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,GACAW,EAAAuiB,EAAA9mB,IAAAg5B,EAAA,GAAAp1B,GAEA00B,EAAAh0B,GACA2J,EAAA,GAAAwpB,EAAAwB,cAAAxB,EAAAr3B,YAAA,OAAA44B,EAAA,SACOV,EAAA/zB,KACP0J,EAAA,GAAAypB,EAAAuB,cAAAvB,EAAAt3B,YAAA,OAAA44B,EAAA,UAKAlZ,MAAA6U,KACA1mB,EAAA,GAAA0mB,GAGA7U,MAAA8U,KACA3mB,EAAA,GAAA2mB,QAjCA3mB,EAAA,CAAA0mB,EAAAC,GAqCA,OAAA3mB,EAGA,IAAAmtB,EAAA,kDACAhE,EAAA53B,OAAA,CACAhC,KAAA,WAkBAynB,gBAAA,SAAAoW,EAAAz7B,EAAA4I,GACA5I,EAAAmc,WAAA,SAAAC,GACA,IAAAwe,EAAAxe,EAAAqf,cAEA,GAAAb,EAAA,CACA,IAAAc,EAAAd,EAAAtc,UACAod,EAAAt6B,KAAA,SAAA4C,GACA,IAAAwL,EAAAjS,EAAAuD,IAAA06B,EAAA,SAAA3yB,GACA,OAAAwyB,EAAAK,EAAA13B,EAAA6E,EAAAuT,EAAAxT,KAGA8yB,EAAArG,cAAArxB,EAAAwL,GACAksB,EAAAC,iBAAA33B,GACA43B,SAAA,SAAApsB,OAGKvP,OAELy1B,aAAA,SAAAtZ,EAAAwe,EAAA56B,EAAA4I,GACA,IAAAuE,EAAAiP,EAAAzQ,iBACAgqB,EAAAvZ,EAAA9G,GACA+I,EAAAjC,EAAAkC,UACAud,EAAA57B,KAAAu1B,eACAsG,EAAAD,EAAAz7B,IAAAu1B,IAAAkG,EAAA1kB,IAAAwe,EAAA,CACAz1B,MAAA,IAAArC,EAAAwV,QAEApT,KAAAC,MAAAuC,IAAAq5B,EAAA57B,OACA47B,EAAA1E,QAAA,EACA,IAAAsE,EAoEA,SAAAvuB,EAAAiP,EAAAwe,GACA,IAAA9E,EACA4F,EAGAvuB,GACA2oB,EAAAv4B,EAAAuD,IAAAqM,KAAAgoB,WAAA,SAAAY,GACA,IAAA7O,EAAA9K,EAAAkC,UACAnF,EAAA+N,EAAA8O,iBAAA9O,EAAA3I,aAAAwX,KAAA,GAEA,OAAAx4B,EAAA2F,SAAA,CACA7B,KAAA00B,GACO5c,KAEPuiB,EAAA,IAAAnS,EAAAhsB,EAAAuD,IAXA,sBAWA,SAAA+H,EAAA7E,GACA,OACA3C,KAAAwH,EACAjL,KAAAk4B,EAAA9xB,EAAA,GAAApG,QAEKg9B,IAMLc,EAAA,IAAAnS,EAJAuM,EAAA,EACAz0B,KAAA,QACAzD,KAAA,UAEAg9B,GAGA,IAAAZ,EAAAz8B,EAAAuD,IAAA85B,EAAAx6B,IAAA,QAAA7C,EAAAG,MAAAi9B,EAAAve,EAAAjP,EAAAytB,IAEAztB,IACA6sB,EAAAz8B,EAAA44B,OAAA6D,EAAAz8B,EAAAG,MAAA09B,EAAAjuB,KAGA,IAAAkpB,EAAAlpB,EAAA,SAAAyd,EAAArQ,EAAAsF,EAAAgZ,GACA,OAAAjO,EAAAnrB,MAAAF,KAAAw8B,MAAAlD,EAAA,IAAAA,EAAA,IACG,SAAAjO,GACH,OAAAA,EAAAvlB,OAIA,OAFAq2B,EAAAzQ,SAAA+O,EAAA,KAAA3D,GACAqF,EAAAzB,eAAA,EACAyB,EA7GApF,CAAAnpB,EAAAiP,EAAAwe,GAEAA,EAAAva,QAAAqb,GAEAA,EAAAt6B,KAAA,SAAA4C,GAEA03B,EAAArG,cAAArxB,EAAAzG,EAAAuD,IAAA06B,EAAA,SAAA3yB,GACA,OAAAwyB,EAAAK,EAAA13B,EAAA6E,EAAAuT,EAAAxT,MAGA8yB,EAAA3E,cAAA/yB,EAAA,CACA8f,MAAAzF,EAAA2Y,UAAA,aAGA0E,EAAAM,KAAAF,EAAAG,QAAAx5B,IAAA,SAAAuB,GACA,IAAA6e,EAAA,IAAAhlB,EAAAq+B,QAAA,CACAz6B,MAAA,CACA+N,OAAAksB,EAAA9B,cAAA51B,MAGA03B,EAAAS,iBAAAn4B,EAAA6e,GACAiZ,EAAA57B,MAAAuC,IAAAogB,KACK3X,OAAA,SAAAkxB,EAAAC,GACL,IAAAxZ,EAAAiZ,EAAAG,OAAAN,iBAAAU,GAEAx+B,EAAAy+B,YAAAzZ,EAAA,CACAphB,MAAA,CACA+N,OAAAksB,EAAA9B,cAAAwC,KAEOxB,EAAAwB,GACPN,EAAA57B,MAAAuC,IAAAogB,GACA6Y,EAAAS,iBAAAC,EAAAvZ,KACKrW,OAAA,SAAAxI,GACL,IAAA6e,EAAAiZ,EAAAG,OAAAN,iBAAA33B,GAEA83B,EAAA57B,MAAAsM,OAAAqW,KACK0Z,UACLb,EAAAxE,kBAAA,SAAArU,EAAA7e,GACA,IAAA+rB,EAAA2L,EAAA1L,aAAAhsB,GACAC,EAAA8rB,EAAApuB,SAAA,SACA66B,EAAAzM,EAAApuB,SAAA,kBACAmiB,EAAA4X,EAAAtB,cAAAp2B,EAAA,SACA6e,EAAA4Z,SAAAl/B,EAAA2F,SAAA6sB,EAAApuB,SAAA,aAAAmM,eAAA,CACAtL,KAAAk4B,EAAAgC,YAAA5Y,EAAA,IACA3gB,OAAA2gB,KAEAjB,EAAAgO,WAAAd,EAAApuB,SAAA,sBAAAmM,eACAjQ,EAAA8+B,cAAA9Z,EAAA3gB,MAAA2gB,EAAAgO,WAAA5sB,EAAAu4B,EAAA,CACAI,aAAAhC,EACAiC,eAAA74B,EACA84B,YAAApB,EAAAqB,QAAA/4B,IAAA,GACAg5B,YAAA,EACAC,UAAAnZ,IAEAjmB,EAAA0yB,cAAA1N,EAAA,IACAA,EAAA2N,UAAAoK,IAEAkB,EAAAG,OAAAP,EACAI,EAAA57B,MAAAmC,OAAAu4B,EAAAx6B,IAAA,WAAAgc,EAAAhc,IAAA,mCCvPA/C,EAAQ,KAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,4BCNR,IAAAC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAqBrB,SAAA6/B,EAAAC,EAAA/xB,EAAApL,GACA,IAEA8L,EAFAsxB,EAAA,GACAC,EAAA,mBAAAF,EAoCA,OAjCAn9B,EAAAsL,cAAA,kBAAAgyB,GACAD,GAAA,MAAAvxB,EAKAwxB,EAAAxxB,EAAA,qBAAAV,EAAA/J,MACK,cAAA87B,GAAA,kBAAAA,EACLG,EAAAH,MAEAG,EAAAH,GAAA/xB,EAAA/J,MACAyK,EAAAwxB,EAAAxxB,WAAAV,EAAA/J,OAGA,IAAAk8B,EAAAD,EAAAhf,UACA/gB,EAAA6D,KAAAm8B,EAAA,SAAA3Y,GACA,IAAAvjB,EAAAujB,EAAAxkB,IAAA,QAEA,UAAAiB,GAAA,KAAAA,EAAA,CAIA,IAAAm8B,EAAAF,EAAAxxB,WAAAzK,GAEA+7B,EAAAnmB,eAAA5V,GAEA+7B,EAAA/7B,GAAA+7B,EAAA/7B,IAAAm8B,EAEAJ,EAAA/7B,GAAAm8B,OAKA,cAAAL,GAAA,kBAAAA,EAAA,CACA9xB,SAAA+xB,GACG,CACH/7B,KAAA+J,EAAA/J,KACAgK,SAAA+xB,GAYA9/B,EAAA6N,eAAA,2CAAA5N,EAAAG,MAAAw/B,EAAA,mBACA5/B,EAAA6N,eAAA,oCAAA5N,EAAAG,MAAAw/B,EAAA,cACA5/B,EAAA6N,eAAA,4CAAA5N,EAAAG,MAAAw/B,EAAA,kBAQA5/B,EAAA6N,eAAA,gCAAA5N,EAAAG,MAAAw/B,EAAA,WAQA5/B,EAAA6N,eAAA,oCAAA5N,EAAAG,MAAAw/B,EAAA,iCCxDAp2B,EAAAC,QApBA,SAAA/G,GACA,IAAAy9B,EAAAz9B,EAAA09B,eAAA,CACAnyB,SAAA,WAGAkyB,KAAAn+B,QACAU,EAAA29B,aAAA,SAAAC,GAGA,QAAAr6B,EAAA,EAAqBA,EAAAk6B,EAAAn+B,OAAyBiE,IAC9C,IAAAk6B,EAAAl6B,GAAAuI,WAAA8xB,EAAAv8B,MACA,SAIA,kCClCA,IAAAw8B,EAAkBxgC,EAAQ,KAE1ByuB,EAAczuB,EAAQ,IAEtByY,EAAAgW,EAAAhW,iBACAgoB,EAAAhS,EAAAgS,gBAoBAC,EAAAF,EAAAj+B,OAAA,CACAhC,KAAA,gBAKAogC,mBAAA,SAAAC,GACAh+B,KAAAwT,OAAAwqB,mBAEAlqB,cAAA,CACAkqB,gBAAA,EACAC,kBAAA,EACAC,cAAA,KACAC,mBAAA,MAEAC,cAAA,oBAEAC,UAAA,CACAxR,WAAA,8CACAC,SAAA,0CAEAwR,cAAA,UACAC,sBAAA,OACAC,aAAA,GAEAC,cAAA,CACA5a,MAAA,QAEA6a,wBAAA,KAMA1yB,KAAA,SAAAwH,EAAAuW,EAAAhqB,EAAA4+B,GACA,IAAAC,EAAAf,EAAArqB,GACAsqB,EAAAe,UAAA7+B,KAAA,OAAAwT,EAAAuW,EAAAhqB,EAAA4+B,GACAG,EAAA9+B,KAAAwT,EAAAorB,IAMA3qB,YAAA,SAAAT,EAAAmrB,GACAb,EAAAe,UAAA7+B,KAAA,cAAAwT,EAAAmrB,GACAG,EAAA9+B,UAAAwT,aAIA,SAAAsrB,EAAAzB,EAAA0B,EAAAC,GACA,IACAlpB,EAAA,MACAA,EAFAunB,EAAA/vB,YAEA2H,OAAA,EACAY,EAAAkpB,EAAAC,EAAA,CACArhC,KAAA,MACAmY,eAIA,IAAApW,EAAAo+B,EACAj3B,EAAAC,QAAApH,wBCrFA,IAAApC,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtB4V,EAAiB5V,EAAQ,IAEzB6hC,EAAiB7hC,EAAQ,KAyBzBgW,EAAAxV,EAAAwV,MACA8rB,EAAA,mBACAC,EAAA,UACAC,EAAAH,EAAAt/B,OAAA,CACAhC,KAAA,gBACA0hC,iBAAA,EACArzB,KAAA,WACAozB,EAAAP,UAAA7+B,KAAA,QAMAA,KAAAs/B,cAAA,EAMAt/B,KAAAC,MAAAuC,IAAAxC,KAAAu/B,gBAAA,IAAAnsB,GAEApT,KAAAu/B,gBAAA/8B,IAAAxC,KAAAw/B,mBAOAx/B,KAAAC,MAAAuC,IAAAxC,KAAAy/B,iBAAA,IAAArsB,GAMApT,KAAA0/B,iBAMAC,WAAA,WACAP,EAAAP,UAAA7+B,KAAA,cAEAA,KAAAy/B,iBAAAv/B,YAEAF,KAAAu/B,gBAAAK,iBAEA5/B,KAAAu/B,gBAAAM,WAAA,MAMAC,YAAA,SAAAC,EAAA1C,EAAAt9B,EAAA4I,EAAAq3B,EAAA3yB,EAAA4yB,GACA,IAAAvO,EAAA1xB,KAEAo/B,EAAAP,UAAA7+B,KAAA,cAAA+/B,EAAA1C,EAAAt9B,EAAA4I,EAAAq3B,EAAA3yB,EAAA4yB,GACA,IAAAC,EAAAlgC,KAAAy/B,iBAGAjB,EAAAnB,EAAAl9B,IAAA,mBAEA7C,EAAAoW,QAAA8qB,KACAA,EAAA,CAAAA,MAGA2B,EAAA,cACA,IAAAC,EAAA/C,EAAA37B,SAAA,iBAaA,SAAAy+B,EAAA/+B,EAAAi/B,GACA,IAAAC,EAAAl/B,EAAA,YACAm/B,EAAA3iC,EAAA4iC,WAAAnD,EAAAl9B,IAAA,gBAAAk9B,EAAA/vB,YAAAlM,MAAAi/B,GAAA,CAGAlQ,QAAA7yB,EAAAynB,KAAA2M,EAAA+O,QAAA/O,EAAA4O,EAAAjD,EAAA10B,IACO,CACPlE,GAAA+5B,EAAA,KACA95B,GAAA85B,EAAA,KACA/vB,MAAA+vB,EAAA,GACA9vB,OAAA8vB,EAAA,KAEA+B,EAAAn/B,OACA8+B,EAAA19B,IAAA+9B,GAzBAL,EAAA19B,IAAA,IAAA5E,EAAA0G,KAAA,CACAlD,KAAA,WACAa,MAAA,CACA0C,SAAAy7B,EAAAx7B,eACA87B,KAAAN,EAAAO,UACA37B,kBAAA,SACAD,UAAA,UAEA3C,QAAA,KAEA+9B,EAAA,eAsBAS,YAAA,SAAAvD,EAAA0C,EAAAc,EAAAC,EAAAd,EAAAC,GACA,IAAAc,EAAA/gC,KAAAghC,mBACAC,EAAA5D,EAAA/vB,YAAA2H,MACAgN,EAAAid,EAAA+B,GACAjf,EAAAmd,EAAA8B,GACAC,EAAAhC,EAAA,EAAA+B,GACAE,EAAAhC,EAAA,EAAA8B,GACAjB,GAAAhtB,EAAAouB,IACA,aAAAL,EAAA1D,EAAAl9B,IAAA,uBACA,IAAAkhC,EAAAhE,EAAAl9B,IAAA,wBACAmhC,EAAAP,EAAA1S,kBACAkT,EAAA,EAAAD,EAAA78B,GAAA68B,EAAA58B,GACA88B,EAAAlkC,EAAA0D,MAAA6/B,GACAb,IAAAwB,EAAAvf,GAAA4e,EAAA5e,GAAAqf,EAAArf,GAAAof,GAEA,IAAAI,EAAAzhC,KAAA0hC,4BAAArE,EAAAyD,EAAAU,EAAAP,EAAAhf,EAAAif,EAAAC,GAEA,GAAAnB,EAAA,CACA,WAAAC,EACAsB,EAAAN,IAAAQ,EAAAxf,GAAAof,MACO,CACP,IAAAM,EAAAL,EAAArf,GAAAof,EACAE,EAAAN,IAAAU,EACAF,EAAAzf,IAAA2f,EAGAF,EAAAxf,IAAAqf,EAAArf,GAAAof,EACAE,EAAA,EAAAN,IAAAQ,EAAAN,GAAAM,EAAAP,GAAA,EAAAI,EAAAJ,GAAA,EACAO,EAAAP,GAAA5hC,KAAAiH,IAAAk7B,EAAAP,GAAAI,EAAAJ,IACAO,EAAAN,GAAA7hC,KAAA+G,IAAAo7B,EAAAN,GAAAG,EAAAH,GAAAI,EAAA,EAAAN,IACAF,EAAA5vB,KAAA,WAAAowB,GAGA,OAAAE,GAEAC,4BAAA,SAAArE,EAAAyD,EAAAD,EAAAI,EAAAhf,EAAAif,EAAAC,GACA,IAAAS,EAAA5hC,KAAAw/B,kBACAqC,EAAA7hC,KAAAu/B,gBACAW,EAAAlgC,KAAAy/B,iBAEAzsB,EAAAouB,IAAA/D,EAAAl9B,IAAA,UAAAyhC,EAAAvE,EAAAl9B,IAAA,WAAA8gC,EAAAJ,EAAApyB,MAAA,KAAAwyB,EAAA,KAAAJ,EAAAnyB,QACAsE,EAAAouB,IACA,aAAAlB,EAAA7C,EAAAl9B,IAAA,yBACA,IAAA2hC,EAAAF,EAAAvT,kBACA0T,EAAA7B,EAAA7R,kBACA2T,EAAAhiC,KAAA0/B,gBAAAoC,EAAA7f,GAAA4e,EAAA5e,GACAggB,EAAA,EAAAH,EAAAr9B,GAAAq9B,EAAAp9B,GAIAo8B,IACAmB,EAAAhB,GAAAW,EAAAp6B,SAAAy5B,IAIA,IAAAiB,EAAA,MACAC,EAAA,EAAAJ,EAAAt9B,GAAAs9B,EAAAr9B,GACAw5B,EAAA5gC,EAAA8kC,UAAA/E,EAAAl9B,IAAA,oBAAAk9B,EAAAl9B,IAAA,eAEA6hC,IAGA,QAFA3E,EAAAl9B,IAAA,yBAGAgiC,EAAAlB,IAAAJ,EAAA5e,GAAA8f,EAAA9f,GAGAigB,EAAAjB,IAAAc,EAAA9f,GAAAic,GAKAiE,EAAA,EAAAlB,IAAAa,EAAAZ,GAAA,EAAAa,EAAAb,GAAA,EACAU,EAAAzwB,KAAA,WAAA8wB,GACAJ,EAAA1wB,KAAA,WAAA+wB,GACAhC,EAAA/uB,KAAA,WAAAgxB,GAIA,IAAAV,EAAA,CACAh9B,EAAA,EACAC,EAAA,GASA,GANA+8B,EAAAxf,GAAA+f,EAAAnB,EAAA5e,GAAA6f,EAAA7f,GACAwf,EAAAP,GAAA5hC,KAAAiH,IAAAu7B,EAAAZ,GAAAa,EAAAb,IAEAO,EAAAN,GAAA7hC,KAAA+G,IAAA,EAAA07B,EAAAZ,GAAAgB,EAAA,EAAAlB,IACAY,EAAAhC,WAAAgB,EAAA5e,GAEA+f,EAAA,CACA,IAAAK,EAAA,CACA59B,EAAA,EACAC,EAAA,GAEA29B,EAAApgB,GAAA3iB,KAAAiH,IAAAs6B,EAAA5e,GAAA8f,EAAA9f,GAAAic,EAAA,GACAmE,EAAAnB,GAAAO,EAAAP,GACAW,EAAAS,YAAA,IAAA1kC,EAAA4Q,KAAA,CACAhN,MAAA6gC,KAIAR,EAAAhC,WAAAwC,EAAApgB,QAGAie,EAAAqC,UAAA,SAAArL,GACAA,EAAA/lB,KAAA,CACAqxB,WAAA,EACApgC,QAAA,MAMA,IAAAqgC,EAAAziC,KAAA0iC,aAAArF,GAUA,OARA,MAAAoF,EAAAE,WAAA/kC,EAAAy+B,YAAAuF,EAAA,CACAp6B,SAAAi7B,EAAAG,mBAGAZ,GAAA3E,GAEAr9B,KAAA6iC,oBAAAxF,EAAAoF,GAEAhB,GAEAhB,QAAA,SAAA1R,EAAAsO,EAAA10B,GACA,IAAAq1B,EAAAh+B,KAAA0iC,aAAArF,GAAAtO,GAEA,MAAAiP,GAAAr1B,EAAA+c,eAAA,CACA/nB,KAAA,eACAqgC,kBACA8E,SAAAzF,EAAAhoB,MAGAwtB,oBAAA,SAAAxF,EAAAoF,GACA,IAAAvC,EAAAlgC,KAAAy/B,iBACAniC,EAAA6D,KAAA,iCAAAC,GACA,IAAA2hC,EAAA,MAAAN,EAAArhC,EAAA,aACAm/B,EAAAL,EAAA8C,YAAA5hC,GAEAm/B,IACAA,EAAA1M,SAAA,OAAAkP,EAAA1F,EAAAl9B,IAAA,oBAAAk9B,EAAAl9B,IAAA,6BACAogC,EAAA5xB,OAAAo0B,EAAA,uBAGA,IAAAE,EAAA/C,EAAA8C,YAAA,YACA5E,EAAAf,EAAAl9B,IAAA,iBACAwiC,EAAAF,EAAAE,UACAO,EAAA,MAAAP,IAAA,IACAQ,EAAAV,EAAAW,UACAH,GAAA7E,GAAA6E,EAAApP,SAAA,OAAAv2B,EAAAmU,SAAA2sB,KAAAhN,QAAA,YAA4H8R,GAAA9R,QAAA,UAA4B+R,GAAA/E,EAAA,CACxJ8E,UACAC,YAcAT,aAAA,SAAArF,GACA,IAAAW,EAAAX,EAAAl9B,IAAA,sBACAyhC,EAAA5hC,KAAAw/B,kBACA6D,EAAArjC,KAAAu/B,gBAAAM,WACAoB,EAAA5D,EAAA/vB,YAAA2H,MACAgN,EAAAid,EAAA+B,GACAjf,EAAAmd,EAAA8B,GAEAqC,EAAAtjC,KAAAujC,qBAAAvF,GAEAxnB,EAAAorB,EAAAprB,WACAgtB,EAAAhtB,EAAA8sB,GACAG,EAAAjtB,EAAAnX,OACAqkC,EAAAD,EAAA,IACAltB,EAAA,CACAqsB,gBAAAhB,EAAAp6B,SAAAnJ,QACA+kC,UAAAM,EACAf,UAAAe,EAAA,EACAC,kBAAA,KACAC,kBAAA,MAGA,IAAAJ,EACA,OAAAjtB,EAGA,IAAAstB,EAAAC,EAAAN,GACAjtB,EAAAqsB,gBAAA3B,IAAA4C,EAAAE,EAYA,QAAAzgC,EAAAggC,EAAA,EAAAU,EAAAH,EAAAI,EAAAJ,EAAAK,EAAA,KAA8H5gC,GAAAmgC,IAAgBngC,KAC9I4gC,EAAAJ,EAAAttB,EAAAlT,MAGA2gC,EAAA1R,EAAAyR,EAAAD,EAAAV,GAEAa,IAAAvhB,EAAAuhB,EAAAF,EAAAD,MAEAC,EADAC,EAAA3gC,EAAA0gC,EAAA1gC,EACA2gC,EAGAC,KAIA,MAAA3tB,EAAAqtB,oBACArtB,EAAAqtB,kBAAAI,EAAA1gC,KAGAiT,EAAA6sB,WAIAa,EAAAC,EAGA,IAAA5gC,EAAAggC,EAAA,EAAAU,EAAAH,EAAAI,EAAAJ,EAAAK,EAAA,KAA8H5gC,IAAA,IAASA,GACvI4gC,EAAAJ,EAAAttB,EAAAlT,MAIAqf,EAAAshB,EAAAC,EAAAH,MACAC,EAAA1gC,EAAA2gC,EAAA3gC,KACA2gC,EAAAD,EAEA,MAAAztB,EAAAotB,oBACAptB,EAAAotB,kBAAAK,EAAA1gC,KAGAiT,EAAA6sB,YACA7sB,EAAAosB,WAGAqB,EAAAE,EAGA,OAAA3tB,EAEA,SAAAutB,EAAA/sB,GACA,GAAAA,EAAA,CACA,IAAAotB,EAAAptB,EAAAsX,kBACA9vB,EAAA4lC,EAAAniB,GAAAjL,EAAAvP,SAAAy5B,GACA,OACA8C,EAAAxlC,EACAg0B,EAAAh0B,EAAA4lC,EAAAliB,GACA3e,EAAAyT,EAAAqtB,oBAKA,SAAAzhB,EAAA0hB,EAAAC,GACA,OAAAD,EAAA9R,GAAA+R,GAAAD,EAAAN,GAAAO,EAAAjB,IAGAE,qBAAA,SAAAxQ,GACA,OAAA/yB,KAAA0/B,iBAKA1/B,KAAAw/B,kBAEA+C,UAAA,SAAArL,EAAAnzB,GACA,IAAAwgC,EAAArN,EAAAkN,kBAMA,MAAAI,GAAA,MAAAD,IACAC,EAAAzgC,GAGAwgC,IAAAxR,IACA9d,EAAAlR,KAGA,MAAAkR,IAAAuvB,GArBA,EAGA,IAAAvvB,EAEAuvB,KAmBA9kC,EAAA0/B,EACAv4B,EAAAC,QAAApH,wBC3actC,EAAQ,IA4BtB8N,eAAA,uCAAAC,EAAApL,GACA,IAAAi+B,EAAA7yB,EAAA6yB,gBACA,MAAAA,GAAAj+B,EAAAsL,cAAA,CACAC,SAAA,SACAm5B,QAAA,SACAl5B,MAAAJ,GACG,SAAAkyB,GACHA,EAAAU,mBAAAC,6BCnCA5gC,EAAQ,KAERA,EAAQ,2BCFR,IA2FAsC,EA3FoBtC,EAAQ,KAqB5BuC,OAAA,CACAhC,KAAA,kBACA4rB,WAAA,MAKAzV,cAAA,CACAjF,MAAA,EAGAmC,MAAA,KAEAH,IAAA,KAEApC,MAAA,KAEAC,OAAA,KAEAqC,KAAA,KAEAD,OAAA,KAEAkX,gBAAA,mBAKA0c,eAAA,CACArc,UAAA,CACAxE,MAAA,UACApV,MAAA,GACAk2B,QAAA,IAEAC,UAAA,CACA/gB,MAAA,qBACA8gB,QAAA,KAGA7gB,YAAA,OAIA+gB,YAAA,wBAMAC,WAAA,0HAIAC,WAAA,OACAC,YAAA,CACAnhB,MAAA,WAEAohB,eAAA,KACAC,eAAA,KACAC,YAAA,EACAC,eAAA,OAEA3b,UAAA,EACA4b,UAAA,EAEAjhC,UAAA,CACAyf,MAAA,WAKAhd,EAAAC,QAAApH,wBC5FA,IAAApC,EAAaF,EAAQ,GAErBkoC,EAAgBloC,EAAQ,KAExBQ,EAAcR,EAAQ,IAEtBmoC,EAAenoC,EAAQ,KAEvBooC,EAAmBpoC,EAAQ,KAE3BoP,EAAiBpP,EAAQ,IAEzBmK,EAAanK,EAAQ,IAErB+c,EAAiB/c,EAAQ,KAqBzBoR,EAAA5Q,EAAA4Q,KACAgP,EAAAhR,EAAAgR,UACApD,EAAA5N,EAAA4N,IACA2K,EAAAznB,EAAAynB,KACA5jB,EAAA7D,EAAA6D,KAKAskC,EAAA,aAEAC,EAAA,EACAC,EAAA,uCACAC,EAAAJ,EAAA7lC,OAAA,CACAhC,KAAA,kBACAqO,KAAA,SAAAjM,EAAA4I,GAKA3I,KAAA6lC,cAAA,GAMA7lC,KAAA8lC,QAMA9lC,KAAA+lC,OAMA/lC,KAAAgmC,YAOAhmC,KAAAimC,MAMAjmC,KAAAkmC,aAMAlmC,KAAAmmC,cAKAnmC,KAAAomC,UAKApmC,KAAAqmC,UAKArmC,KAAAsmC,gBACAtmC,KAAA2I,OAMA9I,OAAA,SAAA2a,EAAAza,EAAA4I,EAAAwC,GACAy6B,EAAA1xB,WAAAlU,KAAA,SAAAmU,WACAoxB,EAAAgB,eAAAvmC,KAAA,sBAAAA,KAAAwa,cAAAra,IAAA,uBACAH,KAAA8lC,QAAAtrB,EAAAra,IAAA,WAEA,IAAAH,KAAAwa,cAAAra,IAAA,SAQAgL,GAAA,aAAAA,EAAAxN,MAAAwN,EAAAgB,OAAAnM,KAAAoM,KACApM,KAAAwmC,aAGAxmC,KAAAymC,eAXAzmC,KAAAC,MAAAC,aAiBAqM,OAAA,WACAq5B,EAAA1xB,WAAAlU,KAAA,SAAAmU,WACAoxB,EAAAmB,MAAA1mC,KAAA,wBAMAsM,QAAA,WACAs5B,EAAA1xB,WAAAlU,KAAA,UAAAmU,WACAoxB,EAAAmB,MAAA1mC,KAAA,wBAEAwmC,WAAA,WACA,IAAAG,EAAA3mC,KAAAC,MACA0mC,EAAAzmC,YAEAF,KAAA4mC,iBAEA5mC,KAAA6mC,iBAEA,IAAAC,EAAA9mC,KAAA6lC,cAAAiB,SAAA,IAAAlpC,EAAAwV,MAEApT,KAAA+mC,oBAEA/mC,KAAAgnC,gBAEAhnC,KAAAinC,oBAEAN,EAAAnkC,IAAAskC,GAEA9mC,KAAAknC,kBAMAN,eAAA,WACA,IAAApsB,EAAAxa,KAAAwa,cACA7R,EAAA3I,KAAA2I,IAGAw+B,EAAAnnC,KAAAonC,iBAEAC,EAAA,CACA54B,MAAA9F,EAAA2Q,WACA5K,OAAA/F,EAAA6Q,aAGA8tB,EAAAtnC,KAAA8lC,UAAAL,EAAA,CAGAz0B,MAAAq2B,EAAA54B,MAAA04B,EAAA1iC,EAAA0iC,EAAA14B,MACAoC,IAAAw2B,EAAA34B,OAlJA,GAFA,EAqJAD,MAAA04B,EAAA14B,MACAC,OApJA,IAqJK,CAELsC,MAzJA,EA0JAH,IAAAs2B,EAAAziC,EACA+J,MAzJA,GA0JAC,OAAAy4B,EAAAz4B,QAIA64B,EAAAhgC,EAAAs2B,gBAAArjB,EAAAhH,QAEAlW,EAAA6D,KAAA,0CAAAC,GACA,OAAAmmC,EAAAnmC,KACAmmC,EAAAnmC,GAAAkmC,EAAAlmC,MAGA,IAAAomC,EAAAjgC,EAAAmlB,cAAA6a,EAAAF,EAAA7sB,EAAAkP,SACA1pB,KAAAomC,UAAA,CACA3hC,EAAA+iC,EAAA/iC,EACAC,EAAA8iC,EAAA9iC,GAEA1E,KAAAimC,MAAA,CAAAuB,EAAA/4B,MAAA+4B,EAAA94B,QAxKA,aAyKA1O,KAAA8lC,SAAA9lC,KAAAimC,MAAA3nC,WAMA4oC,eAAA,WACA,IAAAP,EAAA3mC,KAAAC,MACAwnC,EAAAznC,KAAAomC,UACA/4B,EAAArN,KAAA8lC,QAEA4B,EAAA1nC,KAAAwa,cAAAmtB,0BACA3oC,EAAA0oC,KAAAvnC,IAAA,WACA2mC,EAAA9mC,KAAA6lC,cAAAiB,SACAc,GAAA5nC,KAAAsmC,iBAAA,IAAsDsB,iBAEtDd,EAAA31B,KAAA9D,IAAAo4B,GAAAzmC,EAEKqO,IAAAo4B,GAAAzmC,EAAA,CACLqC,MAAAumC,EAAA,gBA5LA,aA6LKv6B,GAAArO,EAIA,CACLqC,MAAAumC,EAAA,eACAngC,SAAAnI,KAAA6G,GAAA,GANK,CACL9E,MAAAumC,EAAA,aACAngC,SAAAnI,KAAA6G,GAAA,GANA,CACA9E,MAAAumC,EAAA,eAYA,IAAAr5B,EAAAo4B,EAAAtY,gBAAA,CAAAyY,IACAH,EAAAx1B,KAAA,YAAAs2B,EAAAhjC,EAAA8J,EAAA9J,EAAAgjC,EAAA/iC,EAAA6J,EAAA7J,KAMAmjC,eAAA,WACA,SAAA7nC,KAAAimC,MAAA,KAEAc,kBAAA,WACA,IAAAvsB,EAAAxa,KAAAwa,cACAstB,EAAA9nC,KAAAimC,MACAa,EAAA9mC,KAAA6lC,cAAAiB,SACAA,EAAAtkC,IAAA,IAAAgM,EAAA,CACApM,QAAA,EACAZ,MAAA,CACAiD,EAAA,EACAC,EAAA,EACA+J,MAAAq5B,EAAA,GACAp5B,OAAAo5B,EAAA,IAEA7lC,MAAA,CACAM,KAAAiY,EAAAra,IAAA,oBAEAgC,IAAA,MAGA2kC,EAAAtkC,IAAA,IAAAgM,EAAA,CACAhN,MAAA,CACAiD,EAAA,EACAC,EAAA,EACA+J,MAAAq5B,EAAA,GACAp5B,OAAAo5B,EAAA,IAEA7lC,MAAA,CACAM,KAAA,eAEAJ,GAAA,EACAguB,QAAA7yB,EAAAynB,KAAA/kB,KAAA+nC,mBAAA/nC,UAGAinC,kBAAA,WACA,IAAA/tB,EAAAlZ,KAAAsmC,gBAAAtmC,KAAAgoC,yBAEA,GAAA9uB,EAAA,CAIA,IAAA4uB,EAAA9nC,KAAAimC,MACA9pB,EAAAjD,EAAAykB,OACA1W,EAAA9K,EAAA8rB,aACAC,EAAA/rB,EAAAgsB,aAAAhsB,EAAAgsB,eACAjvB,EAAAgvB,SAEA,SAAAA,EAAA,CAIA,IAAAE,EAAAnhB,EAAAoI,cAAA6Y,GAEAG,EAAA,IAAAD,EAAA,GAAAA,EAAA,IACAA,EAAA,CAAAA,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACA,IAQAC,EARAC,EAAA,GAAAT,EAAA,IACAU,EAAA,GAAAV,EAAA,IACAW,EAAA,EAAAX,EAAA,aACAY,EAAA,GACAC,EAAAH,EAAA,IAAAvhB,EAAAmD,QAAA,GACAwe,EAAA,EAEAC,EAAAvpC,KAAAwpC,MAAA7hB,EAAAmD,QAAA0d,EAAA,IAEA7gB,EAAA9lB,KAAA,CAAA+mC,GAAA,SAAA9iC,EAAA6P,GACA,GAAA4zB,EAAA,GAAA5zB,EAAA4zB,EACAD,GAAAD,MADA,CASA,IAAAI,EAAA,MAAA3jC,GAAA6a,MAAA7a,IAAA,KAAAA,EAEA4jC,EAAAD,EAAA,EAAAvrB,EAAApY,EAAAgjC,EAAAG,GAAA,GAEAQ,IAAAT,GAAArzB,GACAwzB,EAAAjlC,KAAA,CAAAilC,IAAAppC,OAAA,UACAqpC,EAAAllC,KAAA,CAAAklC,IAAArpC,OAAA,YACO0pC,GAAAT,IACPG,EAAAjlC,KAAA,CAAAolC,EAAA,IACAF,EAAAllC,KAAA,CAAAolC,EAAA,KAGAH,EAAAjlC,KAAA,CAAAolC,EAAAI,IACAN,EAAAllC,KAAA,CAAAolC,EAAAI,IACAJ,GAAAD,EACAL,EAAAS,KAEA,IAAAvuB,EAAAxa,KAAAwa,cAEAxa,KAAA6lC,cAAAiB,SAAAtkC,IAAA,IAAA5E,EAAAq+B,QAAA,CACAz6B,MAAA,CACA+N,OAAAk5B,GAEAxmC,MAAA3E,EAAA2F,SAAA,CACAV,KAAAiY,EAAAra,IAAA,wBACOqa,EAAA9Y,SAAA,4BAAAkF,gBACPxE,QAAA,EACAD,IAAA,MAGAnC,KAAA6lC,cAAAiB,SAAAtkC,IAAA,IAAA5E,EAAAiS,SAAA,CACArO,MAAA,CACA+N,OAAAm5B,GAEAzmC,MAAAuY,EAAA9Y,SAAA,4BAAAQ,eACAE,QAAA,EACAD,IAAA,SAGA6lC,uBAAA,WACA,IAAAxtB,EAAAxa,KAAAwa,cACA4qB,EAAA5qB,EAAAra,IAAA,kBAEA,QAAAilC,EAAA,CAKA,IAAA7uB,EACAxW,EAAAC,KAAAD,QA+BA,OA9BAya,EAAAyuB,eAAA,SAAAC,EAAA3uB,GACA,IAAA0B,EAAAzB,EAAA2uB,aAAAD,EAAA9nC,KAAAmZ,GAAAyB,wBACA1e,EAAA6D,KAAA8a,EAAA,SAAAE,GACA,IAAA5F,MAIA,IAAA6uB,GAAA9nC,EAAA8rC,QAAAzD,EAAAxpB,EAAAhc,IAAA,aAIA,IAEAynC,EAFAyB,EAAAtpC,EAAAuc,aAAA4sB,EAAA7oC,KAAAka,GAAAla,KACA6nC,EAyUA,CACAzjC,EAAA,IACAC,EAAA,IACA9B,OAAA,QACAxE,MAAA,UA7UA8qC,EAAA9nC,MAEA8L,EAAAiP,EAAAzQ,iBAEA,MAAAw8B,GAAAh7B,EAAAlE,eACA4+B,EAAA16B,EAAAlE,aAAAqgC,GAAArqC,SAGAkpC,EAAA/rB,EAAAkC,UAAAC,aAAA4pB,GACA3xB,EAAA,CACA8yB,WACA1L,OAAAxhB,EACAmtB,QAAAJ,EAAA9nC,KACA8mC,WACAN,sBAEO5nC,OACFA,MACLuW,IAEAywB,cAAA,WACA,IAAAuC,EAAAvpC,KAAA6lC,cACA2D,EAAAD,EAAAC,QAAA,GACAC,EAAAF,EAAAE,aAAA,GACA3C,EAAA9mC,KAAA6lC,cAAAiB,SACAgB,EAAA9nC,KAAAimC,MACAzrB,EAAAxa,KAAAwa,cACAssB,EAAAtkC,IAAA+mC,EAAAG,OAAA,IAAAl7B,EAAA,CACAqjB,WAAA,EACAljB,OAAAg7B,EAAA3pC,KAAA8lC,SACAhU,MAAA/M,EAAA/kB,KAAA4pC,YAAA5pC,KAAA,OACA6pC,YAAA9kB,EAAA/kB,KAAA8pC,cAAA9pC,MAAA,GACAgyB,UAAAjN,EAAA/kB,KAAA+pC,WAAA/pC,MACAgqC,YAAAjlB,EAAA/kB,KAAA8pC,cAAA9pC,MAAA,GACAiqC,WAAAllB,EAAA/kB,KAAA8pC,cAAA9pC,MAAA,GACAiC,MAAA,CACAM,KAAAiY,EAAAra,IAAA,eACA+pC,aAAA,aAIApD,EAAAtkC,IAAA,IAAAgM,EAAA,CACApM,QAAA,EACA+nC,kBAAA,EACA3oC,MAAA,CACAiD,EAAA,EACAC,EAAA,EACA+J,MAAAq5B,EAAA,GACAp5B,OAAAo5B,EAAA,IAEA7lC,MAAA,CACAiB,OAAAsX,EAAAra,IAAA,wBAAAqa,EAAAra,IAAA,eACA2O,UA7YA,EA8YAvM,KAAA,oBAGApB,EAAA,eAAAipC,GACA,IAAAl3B,EAAAtV,EAAA4iC,WAAAhmB,EAAAra,IAAA,eACAwO,OAAAg7B,EAAA3pC,KAAA8lC,SACAjU,WAAA,EACAC,MAAA/M,EAAA/kB,KAAA4pC,YAAA5pC,KAAAoqC,GACApY,UAAAjN,EAAA/kB,KAAA+pC,WAAA/pC,MACAgqC,YAAAjlB,EAAA/kB,KAAA8pC,cAAA9pC,MAAA,GACAiqC,WAAAllB,EAAA/kB,KAAA8pC,cAAA9pC,MAAA,IACO,CACPyE,GAAA,EACAC,EAAA,EACA+J,MAAA,EACAC,OAAA,IAEA27B,EAAAn3B,EAAAmb,kBACAruB,KAAAmmC,cAAA35B,EAAAiG,aAAA+H,EAAAra,IAAA,cAAAH,KAAAimC,MAAA,IACAjmC,KAAAkmC,aAAAmE,EAAA57B,MAAA47B,EAAA37B,OAAA1O,KAAAmmC,cACAjzB,EAAA2gB,SAAArZ,EAAA9Y,SAAA,eAAAmM,gBACA,IAAAy8B,EAAA9vB,EAAAra,IAAA,eAEA,MAAAmqC,IACAp3B,EAAAjR,MAAAM,KAAA+nC,GAGAxD,EAAAtkC,IAAAgnC,EAAAY,GAAAl3B,GACA,IAAAq3B,EAAA/vB,EAAA+vB,eACAvqC,KAAAC,MAAAuC,IAAAinC,EAAAW,GAAA,IAAAxsC,EAAA0G,KAAA,CACAlC,QAAA,EACAogC,WAAA,EACAvgC,MAAA,CACAwC,EAAA,EACAC,EAAA,EACAG,KAAA,GACAG,kBAAA,SACAD,UAAA,SACAJ,SAAA4lC,EAAA3lC,eACA4lC,SAAAD,EAAA5J,WAEAx+B,GAAA,OAEKnC,OAML6mC,eAAA,WACA,IAAAvmB,EAAAtgB,KAAA+lC,OAAA/lC,KAAAwa,cAAAiwB,kBAEAC,EAAA1qC,KAAA6nC,iBAEA7nC,KAAAgmC,YAAA,CAAAxoB,EAAA8C,EAAA,WAAAoqB,GAAA,GAAAltB,EAAA8C,EAAA,WAAAoqB,GAAA,KASAC,gBAAA,SAAAP,EAAAQ,GACA,IAAApwB,EAAAxa,KAAAwa,cACAqwB,EAAA7qC,KAAAgmC,YAEA8E,EAAA9qC,KAAA6nC,iBAEA7oB,EAAAxE,EAAAuwB,8BAAAluB,gBACAO,EAAA,QACAjD,EAAAywB,EAAAC,EAAAC,EAAAtwB,EAAAra,IAAA,kBAAAiqC,EAAA,MAAAprB,EAAAgsB,QAAAxtB,EAAAwB,EAAAgsB,QAAA5tB,EAAA0tB,GAAA,cAAA9rB,EAAAisB,QAAAztB,EAAAwB,EAAAisB,QAAA7tB,EAAA0tB,GAAA,SACA,IAAAI,EAAAlrC,KAAA+lC,OACAzlB,EAAAtgB,KAAA+lC,OAAA3rB,EAAA,CAAAoD,EAAAqtB,EAAA,GAAAC,EAAA1tB,GAAA,GAAAI,EAAAqtB,EAAA,GAAAC,EAAA1tB,GAAA,KACA,OAAA8tB,KAAA,KAAA5qB,EAAA,IAAA4qB,EAAA,KAAA5qB,EAAA,IAMAmmB,YAAA,SAAA0E,GACA,IAAA5B,EAAAvpC,KAAA6lC,cACAgF,EAAA7qC,KAAAgmC,YACAoF,EAAAhxB,EAAAywB,EAAAxsC,SACAypC,EAAA9nC,KAAAimC,MACA9kC,EAAA,eAAAipC,GAEA,IAAAiB,EAAA9B,EAAAC,QAAAY,GACAkB,EAAAtrC,KAAAmmC,cACAkF,EAAAl6B,KAAA,CACA9P,MAAA,CAAAiqC,EAAA,EAAAA,EAAA,GACA9jC,SAAA,CAAAqjC,EAAAT,GAAAtC,EAAA,KAAAwD,EAAA,MAEKtrC,MAELupC,EAAAG,OAAA/N,SAAA,CACAl3B,EAAA2mC,EAAA,GACA1mC,EAAA,EACA+J,MAAA28B,EAAA,GAAAA,EAAA,GACA18B,OAAAo5B,EAAA,KAGA9nC,KAAAurC,gBAAAJ,IAMAI,gBAAA,SAAAJ,GACA,IAAA3wB,EAAAxa,KAAAwa,cACA+uB,EAAAvpC,KAAA6lC,cACA4D,EAAAF,EAAAE,aACAp8B,EAAArN,KAAA8lC,QACA0F,EAAA,QAGA,GAAAhxB,EAAAra,IAAA,eACA,IAAA8a,EAAAT,EAAAuwB,8BAEA,GAAA9vB,EAAA,CACA,IAAA5a,EAAA4a,EAAAE,eAAA9a,KACAigB,EAAAtgB,KAAA+lC,OACA0F,EAAAN,EACAlwB,EAAA6B,oBAAA,CACAve,MAAA+hB,EAAA,GACA7hB,IAAA6hB,EAAA,KACSjF,YAAAJ,EAAAa,qBACT0vB,EAAA,CAAAxrC,KAAA0rC,aAAAD,EAAA,GAAAprC,GAAAL,KAAA0rC,aAAAD,EAAA,GAAAprC,KAIA,IAAAsrC,EAAAvxB,EAAApa,KAAAgmC,YAAA3nC,SAIA,SAAAutC,EAAAxB,GAIA,IAAAyB,EAAAjuC,EAAAkuC,aAAAvC,EAAAC,QAAAY,GAAA7yB,OAAAvX,KAAAC,OACA8rC,EAAAnuC,EAAAouC,mBAAA,IAAA5B,EAAA,eAAAyB,GACAlK,EAAA3hC,KAAAkmC,aAAA,EAAAR,EACAuG,EAAAruC,EAAAoM,eAAA,CAAA2hC,EAAAvB,IAAA,IAAAA,GAAAzI,KAAA3hC,KAAAimC,MAAA,MAAA4F,GACApC,EAAAW,GAAAvW,SAAA,CACApvB,EAAAwnC,EAAA,GACAvnC,EAAAunC,EAAA,GACAjnC,kBAAAqI,IAAAo4B,EAAA,SAAAsG,EACAhnC,UAAAsI,IAAAo4B,EAAAsG,EAAA,SACAlnC,KAAA2mC,EAAApB,KAhBAwB,EAAAtX,KAAAt0B,KAAA,GACA4rC,EAAAtX,KAAAt0B,KAAA,IAuBA0rC,aAAA,SAAAtmC,EAAA/E,GACA,IAAAma,EAAAxa,KAAAwa,cACA0qB,EAAA1qB,EAAAra,IAAA,kBACA8kC,EAAAzqB,EAAAra,IAAA,kBAEA,MAAA8kC,GAAA,SAAAA,IACAA,EAAA5kC,EAAAkb,qBAGA,IAAA2wB,EAAA,MAAA9mC,GAAA6a,MAAA7a,GAAA,GACA,aAAA/E,EAAA1C,MAAA,SAAA0C,EAAA1C,KAAA0C,EAAAgB,MAAA8qB,SAAA7sB,KAAAwpC,MAAA1jC,IACAA,EAAAsW,QAAApc,KAAA+G,IAAA4+B,EAAA,KACA,OAAA3nC,EAAAk5B,WAAA0O,KAAA9/B,EAAA8mC,GAAA5uC,EAAAmU,SAAAyzB,KAAA9T,QAAA,UAAkJ8a,MAOlJpC,cAAA,SAAAqC,GAEAA,EAAAnsC,KAAAqmC,WAAA8F,EACA,IAAA1C,EAAAzpC,KAAA6lC,cAAA4D,aACAA,EAAA,GAAAt4B,KAAA,aAAAg7B,GACA1C,EAAA,GAAAt4B,KAAA,aAAAg7B,IAEAvC,YAAA,SAAAQ,EAAA/X,EAAAC,EAAAxmB,GACA9L,KAAAqmC,WAAA,EAEAf,EAAA8G,KAAAtgC,SAEA,IAAA+/B,EAAA7rC,KAAA6lC,cAAAiB,SAAA1T,oBAEAF,EAAAt1B,EAAAoM,eAAA,CAAAqoB,EAAAC,GAAAuZ,GAAA,GAEAQ,EAAArsC,KAAA2qC,gBAAAP,EAAAlX,EAAA,IAEAzJ,EAAAzpB,KAAAwa,cAAAra,IAAA,YAEAH,KAAAymC,aAAAhd,GAIA4iB,GAAA5iB,GAAAzpB,KAAAssC,uBAEAvC,WAAA,WACA/pC,KAAAqmC,WAAA,EAEArmC,KAAA8pC,eAAA,IAIA9pC,KAAAwa,cAAAra,IAAA,aACAH,KAAAssC,uBAEAvE,mBAAA,SAAAxV,GACA,IAAAuV,EAAA9nC,KAAAimC,MAEAsG,EAAAvsC,KAAA6lC,cAAAiB,SAAA0F,sBAAAja,EAAAE,QAAAF,EAAAG,SAEA,KAAA6Z,EAAA,MAAAA,EAAA,GAAAzE,EAAA,IAAAyE,EAAA,MAAAA,EAAA,GAAAzE,EAAA,KAIA,IAAA+C,EAAA7qC,KAAAgmC,YACArzB,GAAAk4B,EAAA,GAAAA,EAAA,MAEAwB,EAAArsC,KAAA2qC,gBAAA,MAAA4B,EAAA,GAAA55B,GAEA3S,KAAAymC,cAEA4F,GAAArsC,KAAAssC,wBAOAA,oBAAA,WACA,IAAAhsB,EAAAtgB,KAAA+lC,OACA/lC,KAAA2I,IAAA+c,eAAA,CACA/nB,KAAA,WACAwO,KAAAnM,KAAAoM,IACAqgC,WAAAzsC,KAAAwa,cAAAnF,GACA9W,MAAA+hB,EAAA,GACA7hB,IAAA6hB,EAAA,MAOA8mB,eAAA,WAEA,IAAA74B,EAQA,GAPApN,EAAAnB,KAAA0sC,qBAAA,SAAAxoB,GACA,IAAA3V,GAAA2V,EAAA7kB,OAAA,CACA,IAAA6N,EAAAgX,EAAA,GAAAS,MAAAjZ,iBACA6C,EAAArB,EAAAy/B,SAAAz/B,EAAAy/B,cAIAp+B,EAAA,CACA,IAAAE,EAAAzO,KAAA2I,IAAA2Q,WACA5K,EAAA1O,KAAA2I,IAAA6Q,YACAjL,EAAA,CACA9J,EAAA,GAAAgK,EACA/J,EAAA,GAAAgK,EACAD,MAAA,GAAAA,EACAC,OAAA,GAAAA,GAIA,OAAAH,KAgBA,SAAAo7B,EAAAt8B,GACA,mBAAAA,EAAA,wBAGA,IAAA3N,EAAAkmC,EACA/+B,EAAAC,QAAApH,wBC1tBA,IAqBAA,EArBoBtC,EAAQ,KAqB5BuC,OAAA,CACAhC,KAAA,kBAKAmW,cAAA,CACA84B,UAAA,EAEAvH,UAAA,EAEAwH,kBAAA,EAEAC,iBAAA,EAEAC,kBAAA,EAEAC,yBAAA,KAIAnmC,EAAAC,QAAApH,wBC1CA,IAAApC,EAAaF,EAAQ,GAErBooC,EAAmBpoC,EAAQ,KAE3B+c,EAAiB/c,EAAQ,KAEzB6vC,EAAY7vC,EAAQ,MAqBpB2nB,EAAAznB,EAAAynB,KACAmoB,EAAA1H,EAAA7lC,OAAA,CACAhC,KAAA,kBAKAqO,KAAA,SAAAjM,EAAA4I,GAOA3I,KAAA+lC,QAMAlmC,OAAA,SAAA2a,EAAAza,EAAA4I,EAAAwC,GACA+hC,EAAAh5B,WAAAlU,KAAA,SAAAmU,WAIAnU,KAAA+lC,OAAAvrB,EAAAiwB,kBAEAntC,EAAA6D,KAAAnB,KAAA0sC,qBAAA,SAAAxoB,EAAAipB,GACA,IAAAC,EAAA9vC,EAAAuD,IAAAqjB,EAAA,SAAAmpB,GACA,OAAAJ,EAAAK,gBAAAD,EAAA1oB,SAEArnB,EAAA6D,KAAA+iB,EAAA,SAAAmpB,GACA,IAAAE,EAAAF,EAAA1oB,MACA6oB,EAAA,GACAlwC,EAAA6D,KAAA,qCAAAssC,GACAD,EAAAC,GAAA1oB,EAAA2oB,EAAAD,GAAAztC,KAAAqtC,EAAAF,IACSntC,MACTitC,EAAAU,SAAAhlC,EAAA,CACAilC,QAAAX,EAAAK,gBAAAC,GACAH,cACAS,cAAA,SAAAtb,EAAA9tB,EAAAC,GACA,OAAA6oC,EAAA7hC,iBAAAoiC,aAAA,CAAArpC,EAAAC,KAEA+nC,WAAAjyB,EAAAnF,GACAmF,gBACAgzB,cAEOxtC,OACFA,OAMLsM,QAAA,WACA2gC,EAAAc,WAAA/tC,KAAA2I,IAAA3I,KAAAwa,cAAAnF,IACA63B,EAAAh5B,WAAAlU,KAAA,UAAAmU,WACAnU,KAAA+lC,OAAA,QAGA2H,EAAA,CAIAM,KAAA,SAAAX,EAAAF,EAAAc,EAAA1b,GACA,IAAA2Y,EAAAlrC,KAAA+lC,OACAzlB,EAAA4qB,EAAA7sC,QAEAoK,EAAA4kC,EAAAa,WAAA,GAEA,GAAAzlC,EAAA,CAIA,IAAA0lC,EAAAC,EAAAjB,GAAA,MAAA5a,EAAA8b,QAAA9b,EAAA+b,SAAA7lC,EAAAwlC,EAAAZ,GACAkB,GAAAJ,EAAAK,OAAA,EAAAL,EAAAM,WAAAN,EAAAO,YAAAP,EAAAQ,MAAAR,EAAAQ,MAAAR,EAAAM,YAAAN,EAAAO,aAAApuB,EAAA,GAAAA,EAAA,IAAAA,EAAA,GACAjf,EAAA/B,KAAAiH,IAAA,EAAAgsB,EAAAlxB,MAAA,GACAif,EAAA,IAAAA,EAAA,GAAAiuB,GAAAltC,EAAAktC,EACAjuB,EAAA,IAAAA,EAAA,GAAAiuB,GAAAltC,EAAAktC,EAEA,IAAAvvB,EAAAhf,KAAAwa,cAAAuwB,8BAAAluB,gBAIA,OAHA1C,EAAA,EAAAmG,EAAA,UAAAtB,EAAAgsB,QAAAhsB,EAAAisB,SACAjrC,KAAA+lC,OAAAzlB,EAEA4qB,EAAA,KAAA5qB,EAAA,IAAA4qB,EAAA,KAAA5qB,EAAA,GACAA,OADA,IAQAsuB,IAAAC,EAAA,SAAAvuB,EAAA7X,EAAA4kC,EAAAF,EAAAc,EAAA1b,GACA,IAAA4b,EAAAC,EAAAjB,GAAA,CAAA5a,EAAAuc,KAAAvc,EAAAwc,MAAA,CAAAxc,EAAAyc,KAAAzc,EAAA0c,MAAAxmC,EAAAwlC,EAAAZ,GACA,OAAAc,EAAAK,QAAAluB,EAAA,GAAAA,EAAA,IAAA6tB,EAAAQ,MAAAR,EAAAO,cAMAQ,WAAAL,EAAA,SAAAvuB,EAAA7X,EAAA4kC,EAAAF,EAAAc,EAAA1b,GAEA,OADA6b,EAAAjB,GAAA,OAAA5a,EAAA4c,YAAA5c,EAAA4c,aAAA1mC,EAAAwlC,EAAAZ,GACAmB,QAAAluB,EAAA,GAAAA,EAAA,IAAAiS,EAAA4c,eAIA,SAAAN,EAAAO,GACA,gBAAA/B,EAAAF,EAAAc,EAAA1b,GACA,IAAA2Y,EAAAlrC,KAAA+lC,OACAzlB,EAAA4qB,EAAA7sC,QAEAoK,EAAA4kC,EAAAa,WAAA,GAEA,GAAAzlC,EAAA,CAIA,IAAA4mC,EAAAD,EAAA9uB,EAAA7X,EAAA4kC,EAAAF,EAAAc,EAAA1b,GAIA,OAHApY,EAAAk1B,EAAA/uB,EAAA,eACAtgB,KAAA+lC,OAAAzlB,EAEA4qB,EAAA,KAAA5qB,EAAA,IAAA4qB,EAAA,KAAA5qB,EAAA,GACAA,OADA,IAMA,IAAA8tB,EAAA,CACAkB,KAAA,SAAAC,EAAAC,EAAA/mC,EAAAwlC,EAAAZ,GACA,IAAAhtC,EAAAoI,EAAApI,KACAovC,EAAA,GACAlhC,EAAA8+B,EAAA1oB,MAAAjZ,iBAAAihC,UAgBA,OAfA4C,KAAA,MAEA,MAAAlvC,EAAAuI,KACA6mC,EAAAd,MAAAa,EAAA,GAAAD,EAAA,GACAE,EAAAf,YAAAngC,EAAAE,MACAghC,EAAAhB,WAAAlgC,EAAA9J,EACAgrC,EAAAjB,OAAAnuC,EAAArB,QAAA,OAGAywC,EAAAd,MAAAa,EAAA,GAAAD,EAAA,GACAE,EAAAf,YAAAngC,EAAAG,OACA+gC,EAAAhB,WAAAlgC,EAAA7J,EACA+qC,EAAAjB,OAAAnuC,EAAArB,SAAA,KAGAywC,GAEAvxC,MAAA,SAAAqxC,EAAAC,EAAA/mC,EAAAwlC,EAAAZ,GACA,IAAAhtC,EAAAoI,EAAApI,KACAovC,EAAA,GACAvxC,EAAAmvC,EAAA1oB,MAAAjZ,iBACApL,EAAApC,EAAAa,gBAAAwB,YACAmvC,EAAAxxC,EAAAiJ,eAAA5G,YAqBA,OApBAgvC,IAAArxC,EAAAyxC,aAAAJ,GAAA,MACAC,EAAAtxC,EAAAyxC,aAAAH,GAEA,eAAA/mC,EAAA6C,UACAmkC,EAAAd,MAAAa,EAAA,GAAAD,EAAA,GAGAE,EAAAf,YAAApuC,EAAA,GAAAA,EAAA,GACAmvC,EAAAhB,WAAAnuC,EAAA,GACAmvC,EAAAjB,OAAAnuC,EAAArB,QAAA,OAGAywC,EAAAd,MAAAa,EAAA,GAAAD,EAAA,GAGAE,EAAAf,YAAAgB,EAAA,GAAAA,EAAA,GACAD,EAAAhB,WAAAiB,EAAA,GACAD,EAAAjB,OAAAnuC,EAAArB,SAAA,KAGAywC,GAEAG,WAAA,SAAAL,EAAAC,EAAA/mC,EAAAwlC,EAAAZ,GACA,IAAAhtC,EAAAoI,EAAApI,KACAkO,EAAA8+B,EAAA1oB,MAAAjZ,iBAAAihC,UACA8C,EAAA,GAgBA,OAfAF,KAAA,MAEA,eAAAlvC,EAAAgN,QACAoiC,EAAAd,MAAAa,EAAA,GAAAD,EAAA,GACAE,EAAAf,YAAAngC,EAAAE,MACAghC,EAAAhB,WAAAlgC,EAAA9J,EACAgrC,EAAAjB,OAAAnuC,EAAArB,QAAA,OAGAywC,EAAAd,MAAAa,EAAA,GAAAD,EAAA,GACAE,EAAAf,YAAAngC,EAAAG,OACA+gC,EAAAhB,WAAAlgC,EAAA7J,EACA+qC,EAAAjB,OAAAnuC,EAAArB,SAAA,KAGAywC,IAGA/vC,EAAAwtC,EACArmC,EAAAC,QAAApH,wBCnOA,IAAApC,EAAaF,EAAQ,GAErByyC,EAAqBzyC,EAAQ,KAE7B0yC,EAAmB1yC,EAAQ,KA0B3B2yC,EAAA,uBAuFA,SAAAC,EAAArnC,GAGA,IAAAsnC,EAAAtnC,EAAAkc,QACA,OAAAorB,EAAAF,KAAAE,EAAAF,GAAA,IA6BA,SAAAG,EAAAC,GACA7yC,EAAA6D,KAAAgvC,EAAA,SAAAC,EAAAxC,GACAwC,EAAAhmB,QACAgmB,EAAAnC,WAAA3hC,iBACA6jC,EAAAvC,MASA,SAAAloB,EAAA/c,EAAA0nC,GACA1nC,EAAA+c,eAAA,CACA/nB,KAAA,WACA0yC,UA8CAvpC,EAAA6mC,SAtKA,SAAAhlC,EAAA2nC,GACA,IAAAH,EAAAH,EAAArnC,GACA4nC,EAAAD,EAAA7D,WACA+D,EAAAF,EAAA1C,QAGAtwC,EAAA6D,KAAAgvC,EAAA,SAAAC,EAAAxC,GACA,IAAA6C,EAAAL,EAAAK,cAEAA,EAAAF,IAAAjzC,EAAA8rC,QAAAkH,EAAAlD,YAAAoD,GAAA,WACAC,EAAAF,GACAH,EAAAhmB,WAGA8lB,EAAAC,GACA,IAAAC,EAAAD,EAAAK,GAEAJ,KACAA,EAAAD,EAAAK,GAAA,CACA5C,QAAA4C,EACAC,cAAA,GACArmB,MAAA,IAEA6jB,WAuDA,SAAAtlC,EAAA+nC,GACA,IAAAzC,EAAA,IAAA4B,EAAAlnC,EAAAkc,SAsBA,OArBAvnB,EAAA6D,KAAA,qCAAAssC,GACAQ,EAAAnpB,GAAA2oB,EAAA,SAAA3hC,GACA,IAAAukC,EAAA,GACA/yC,EAAA6D,KAAAuvC,EAAAD,cAAA,SAAAv3B,GAGA,GAAApN,EAAA6kC,oBAAAz3B,EAAAsB,cAAAhH,QAAA,CAIA,IAAAzI,GAAAmO,EAAAs0B,UAAA,IAAyCC,GACzCntB,EAAAvV,KAAA2lC,EAAAzC,WAAAniC,IACAoN,EAAAsB,cAAAra,IAAA,gBAAAmgB,GAAA+vB,EAAA7sC,KAAA,CACAipC,WAAAvzB,EAAAuzB,WACAluC,MAAA+hB,EAAA,GACA7hB,IAAA6hB,EAAA,QAGA+vB,EAAAhxC,QAAAqxC,EAAAhrB,eAAA2qB,OAGApC,EA9EA2C,CAAAjoC,EAAAynC,GACAA,EAAA1qB,eAAApoB,EAAAG,MAAAioB,EAAA/c,KAIAynC,EAAAK,cAAAF,IAAAH,EAAAhmB,QACAgmB,EAAAK,cAAAF,GAAAD,EACA,IAAAO,EAkGA,SAAAJ,GACA,IAAAK,EAIAC,EAAA,CACAC,UAAA,EACAC,UAAA,EACAC,WAAA,EACAC,gBAAA,GAEAnE,GAAA,EAaA,OAZA1vC,EAAA6D,KAAAsvC,EAAA,SAAAH,GACA,IAAA91B,EAAA81B,EAAA91B,cACA42B,GAAA52B,EAAAra,IAAA,kBAAAqa,EAAAra,IAAA,wBAEA4wC,EAZA,QAYAK,GAAAL,EAZA,QAYAD,KACAA,EAAAM,GAKApE,GAAAxyB,EAAAra,IAAA,gCAEA,CACA2wC,cACA/zB,IAAA,CAIA8vB,kBAAA,EACAC,iBAAA,EACAC,kBAAA,EACAC,8BAnIAqE,CAAAjB,EAAAK,eACAL,EAAAnC,WAAAqD,OAAAT,EAAAC,YAAAD,EAAA9zB,KAEAqzB,EAAAnC,WAAAsD,kBAAAjB,EAAAzC,eAEAiC,EAAAvJ,eAAA6J,EAAA,iBAAAE,EAAA91B,cAAAra,IAAA,2BAoIA2G,EAAAinC,WA3HA,SAAAplC,EAAA8jC,GACA,IAAA0D,EAAAH,EAAArnC,GACArL,EAAA6D,KAAAgvC,EAAA,SAAAC,GACAA,EAAAnC,WAAA3hC,UACA,IAAAmkC,EAAAL,EAAAK,cAEAA,EAAAhE,YACAgE,EAAAhE,GACA2D,EAAAhmB,WAGA8lB,EAAAC,IAiHArpC,EAAAwmC,gBA1GA,SAAAC,GACA,OAAAA,EAAA5vC,KAAA,MAAA4vC,EAAAl4B,yBC7GA,IAAAm8B,EAAYp0C,EAAQ,GAEpB46B,EAAAwZ,EAAAxZ,SACA/0B,EAAAuuC,EAAAvuC,SACAtD,EAAA6xC,EAAA7xC,OACAwB,EAAAqwC,EAAArwC,KAEA+G,EAAiB9K,EAAQ,IAEzBQ,EAAcR,EAAQ,IAEtBS,EAAYT,EAAQ,IAEpBq0C,EAAcr0C,EAAQ,IAEtBs0C,EAAAD,EAAAC,mBACAC,EAAAF,EAAAE,UAIAxmB,EAFc/tB,EAAQ,KAEtB+tB,aAEAymB,EAAiBx0C,EAAQ,IAIzBy0C,EAFcz0C,EAAQ,IAEtB4M,eAIA8nC,EAFkB10C,EAAQ,KAE1B00C,oBAoBA3rC,EAAA7G,KAAA6G,GAwCApI,EAAA,SAAA0K,EAAAsU,GAIA/c,KAAA+c,MAKA/c,KAAAyI,YAEAxF,EAAA8Z,EAAA,CACAg1B,YAAA,EACAnqC,cAAA,EACAD,cAAA,EACAD,eAAA,EACAtF,QAAA,IAMApC,KAAAC,MAAA,IAAArC,EAAAwV,MAEA,IAAA4+B,EAAA,IAAAp0C,EAAAwV,MAAA,CACA5L,SAAAuV,EAAAvV,SAAAnJ,QACAoJ,SAAAsV,EAAAtV,WAIAuqC,EAAA5sB,kBACAplB,KAAAiyC,WAAAD,EAAApoC,UACA5J,KAAAkyC,WAAAF,GAGAj0C,EAAA4d,UAAA,CACAC,YAAA7d,EACAo0C,WAAA,SAAA/wC,GACA,QAAAgxC,EAAAhxC,IAEAoB,IAAA,SAAApB,GACAgxC,EAAAhxC,GAAAkzB,KAAAt0B,OAEAgI,SAAA,WACA,OAAAhI,KAAAC,QAGA,IAAAmyC,EAAA,CAIAC,SAAA,WACA,IAAAt1B,EAAA/c,KAAA+c,IACAtU,EAAAzI,KAAAyI,UAEA,GAAAA,EAAAtI,IAAA,kBAIA,IAAAmyC,EAAAtyC,KAAAyI,UAAApI,KAAAE,YACA8H,EAAArI,KAAAiyC,WACAM,EAAA,CAAAD,EAAA,MACAE,EAAA,CAAAF,EAAA,MAEAjqC,IACAwpC,EAAAU,IAAAlqC,GACAwpC,EAAAW,IAAAnqC,IAGA,IAAAggB,EAAA1oB,EAAA,CACA+vB,QAAA,SACKjnB,EAAA/G,SAAA,sBAAAQ,gBACLlC,KAAAC,MAAAuC,IAAA,IAAA5E,EAAAmF,KAAA,CAEA0vC,KAAA,OACAtI,kBAAA,EACA3oC,MAAA,CACA9C,GAAA6zC,EAAA,GACA5zC,GAAA4zC,EAAA,GACA3zC,GAAA4zC,EAAA,GACA3zC,GAAA2zC,EAAA,IAEAvwC,MAAAomB,EACAqqB,uBAAA31B,EAAA21B,wBAAA,EACAtwC,QAAA,EACAD,GAAA,KAEA,IAAAwwC,EAAAlqC,EAAAtI,IAAA,mBACAyyC,EAAAnqC,EAAAtI,IAAA,uBACA0yC,EAAApqC,EAAAtI,IAAA,4BAMA,GAJA,kBAAA0yC,IACAA,EAAA,CAAAA,MAGA,MAAAF,EAAA,CACA,kBAAAA,IAEAA,EAAA,CAAAA,MAGA,kBAAAC,GAAA,kBAAAA,IAEAA,EAAA,CAAAA,MAGA,IAAAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAzxC,EAAA,EACA2I,OAAAiT,EAAAtV,SAAAnI,KAAA6G,GAAA,EACAw7B,OAAAkR,EAAA,GACA7wC,EAAA,GACO,CACP8H,OAAAiT,EAAAtV,SAAAnI,KAAA6G,GAAA,EACAw7B,OAAAkR,EAAA,GACA7wC,EAAA1C,KAAA0zC,MAAAT,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,OACO,SAAApkC,EAAA6G,GACP,YAAA09B,EAAA19B,IAAA,MAAA09B,EAAA19B,GAAA,CACA,IAAAkT,EAAAgD,EAAAwnB,EAAA19B,IAAA69B,EAAA,GAAAC,EAAA,EAAAD,EAAAC,EAAA1qB,EAAAnlB,QAAA,GAEAlB,EAAAoM,EAAApM,EAAAoM,EAAAuzB,OACAlxB,EAAA,CAAA8hC,EAAA,GAAAvwC,EAAA1C,KAAA2zC,IAAAl2B,EAAAtV,UAAA8qC,EAAA,GAAAvwC,EAAA1C,KAAA4zC,IAAAn2B,EAAAtV,WACA0gB,EAAAhX,KAAA,CACA1J,SAAA2G,EAAAtE,OACAtC,SAAAiJ,EACArO,QAAA,EACAD,GAAA,KAEAnC,KAAAC,MAAAuC,IAAA2lB,KAEOnoB,SAOPmzC,cAAA,WACA,IAAA1qC,EAAAzI,KAAAyI,UACAsU,EAAA/c,KAAA+c,IACAq2B,EAsTA,SAAArrC,EAAAU,EAAAsU,GACA,IAAA1c,EAAAoI,EAAApI,KACAqC,EAAA+F,EAAA/G,SAAA,YAEA,IAAAgB,EAAAvC,IAAA,SAAAE,EAAAgB,MAAAC,UACA,OAUA,IAPA,IAAAG,EAAAiB,EAAAhB,SAAA,aACA2xC,EAAAt2B,EAAApV,cAAAjF,EAAAvC,IAAA,UAEAizC,EAAAE,EADAjzC,EAAAI,iBACAsH,EAAAkqC,WAAAoB,EAAApwC,EAAAxB,EAAAS,eAAA,CACAgB,OAAAuF,EAAAtI,IAAA,8BACG,SAEHmD,EAAA,EAAiBA,EAAA8vC,EAAA/zC,OAAqBiE,IACtCyE,EAAA9H,MAAAuC,IAAA4wC,EAAA9vC,IAGA,OAAA8vC,EAzUAG,CAAAvzC,KAAAyI,EAAAsU,GACAy2B,EAwWA,SAAAzrC,EAAAU,EAAAsU,GACA,IAAA1c,EAAAoI,EAAApI,KAGA,IAFA23B,EAAAjb,EAAA02B,cAAAhrC,EAAAtI,IAAA,oBAEAE,EAAAgB,MAAAC,UACA,OAGA,IAAA0C,EAAAyE,EAAA/G,SAAA,aACAmC,EAAAG,EAAA7D,IAAA,UACAS,EAAAP,EAAAS,gBAEAmJ,GAAA+tB,EAAAjb,EAAAlV,YAAA7D,EAAA7D,IAAA,eAAAgG,EAAA,IACA+D,EAAAC,EAAA4S,EAAAtV,SAAAwC,EAAA8S,EAAArV,gBACAhE,EAAA+E,EAAA9E,eAAA8E,EAAA9E,eAAA,GACA6vC,EAAA,GACApxC,EAAAmC,EAAAkE,GACA3E,EAAA2E,EAAAtI,IAAA,gBAkDA,OAjDAgB,EAAAP,EAAA,SAAAG,EAAAkU,GACA,IAAA/T,EAAAH,EAAAG,UACA4D,EAAA/D,EAAA+D,eACAO,EAAAtE,EAAAsE,SACAquC,EAAA1vC,EAEAN,KAAAxC,IAAAwC,EAAAxC,GAAAkD,YACAsvC,EAAA,IAAA71C,EAAA6F,EAAAxC,GAAAkD,UAAAJ,EAAAyE,EAAA1I,UAGA,IAAA4zC,EAAAD,EAAA9uC,gBAAA6D,EAAAtI,IAAA,4BAEAsQ,EAAA,CADApQ,EAAAY,YAAAC,GACA6b,EAAAg1B,YAAAh1B,EAAArV,eAAA7D,GACAQ,EAAA,IAAAzG,EAAA0G,KAAA,CAEAmuC,KAAA,SAAAvxC,EACAsG,SAAAiJ,EACAhJ,SAAAyC,EAAAzC,SACArF,SACAD,GAAA,KAEAvE,EAAA4G,aAAAH,EAAApC,MAAAyxC,EAAA,CACA7uC,KAAAC,EACAC,UAAA2uC,EAAApd,WAAA,aAAApsB,EAAAnF,UACAC,kBAAA0uC,EAAApd,WAAA,qBAAAod,EAAApd,WAAA,gBAAApsB,EAAAlF,kBACAL,SAAA,oBAAAgvC,IAOA,aAAAtzC,EAAA1C,KAAA0H,EAAA,UAAAhF,EAAA1C,KAAAuD,EAAA,GAAAA,EAAA+T,GAAA0+B,IAGA7vC,IACAO,EAAAY,UAAAC,EAAAuD,GACApE,EAAAY,UAAAE,WAAA,YACAd,EAAAY,UAAAG,MAAAC,GAIA0C,EAAAmqC,WAAA1vC,IAAA6B,GAEAA,EAAA+gB,kBACAouB,EAAAhwC,KAAAa,GACA0D,EAAA9H,MAAAuC,IAAA6B,GACAA,EAAAuvC,uBAEAJ,EA3aAK,CAAA7zC,KAAAyI,EAAAsU,IAmMA,SAAAtU,EAAA+qC,EAAAM,GACA,GAAAhC,EAAArpC,EAAApI,MACA,OAMA,IAAA0zC,EAAAtrC,EAAAtI,IAAA,0BACA6zC,EAAAvrC,EAAAtI,IAAA,0BAIA2zC,KAAA,GACA,IAAAG,GAFAT,KAAA,IAEA,GACAU,EAAAV,EAAA,GACAW,EAAAX,IAAAn0C,OAAA,GACA+0C,EAAAZ,IAAAn0C,OAAA,GACAg1C,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,IAAAz0C,OAAA,GACAm1C,EAAAV,IAAAz0C,OAAA,IAEA,IAAA00C,GACAU,EAAAR,GACAQ,EAAAJ,IACGK,EAAAT,EAAAC,KACHH,GACAU,EAAAP,GACAO,EAAAH,KAEAG,EAAAR,GACAQ,EAAAJ,MAIA,IAAAL,GACAS,EAAAN,GACAM,EAAAF,IACGG,EAAAN,EAAAD,KACHH,GACAS,EAAAL,GACAK,EAAAD,KAEAC,EAAAN,GACAM,EAAAF,KA/OAI,CAAAlsC,EAAA+qC,EAAAJ,GA0UA,SAAArrC,EAAAU,EAAAsU,GACA,IAAA1c,EAAAoI,EAAApI,KACAgD,EAAAoF,EAAA/G,SAAA,aAEA,IAAA2B,EAAAlD,IAAA,SAAAE,EAAAgB,MAAAC,UACA,OAGA,IAAA+F,EAAAhH,EAAAM,sBAEA,IAAA0G,EAAAhI,OACA,OASA,IANA,IAAAoC,EAAA4B,EAAA3B,SAAA,aACA2xC,EAAAt2B,EAAApV,cAAAtE,EAAAlD,IAAA,UACAy0C,EAAA3xC,EAAAxB,EAAAS,eAAAe,EAAAwF,EAAA/G,SAAA,YAAAQ,eAAA,CACAgB,OAAAuF,EAAAtI,IAAA,+BAGAmD,EAAA,EAAiBA,EAAA+D,EAAAhI,OAA6BiE,IAG9C,IAFA,IAAAuxC,EAAAvB,EAAAjsC,EAAA/D,GAAAyE,EAAAkqC,WAAAoB,EAAAuB,EAAA,cAAAtxC,GAEAC,EAAA,EAAmBA,EAAAsxC,EAAAx1C,OAA0BkE,IAC7CwE,EAAA9H,MAAAuC,IAAAqyC,EAAAtxC,IAjWAuxC,CAAA90C,KAAAyI,EAAAsU,IAMAg4B,SAAA,WACA,IAAAh4B,EAAA/c,KAAA+c,IACAtU,EAAAzI,KAAAyI,UACArH,EAAA42B,EAAAjb,EAAAg4B,SAAAtsC,EAAAtI,IAAA,SAEA,GAAAiB,EAAA,CAIA,IASA8I,EAOA8qC,EAhBAC,EAAAxsC,EAAAtI,IAAA,gBACAyH,EAAAmV,EAAAnV,cACA2iC,EAAA9hC,EAAA/G,SAAA,iBACAwzC,EAAAzsC,EAAAtI,IAAA,cACAmyC,EAAAtyC,KAAAyI,UAAApI,KAAAE,YACA40C,EAAA7C,EAAA,GAAAA,EAAA,QACA7hC,EAAA,WAAAwkC,EAAA3C,EAAA,GAAA6C,EAAAD,EAAA,QAAAD,EAAA3C,EAAA,GAAA6C,EAAAD,GAAA5C,EAAA,GAAAA,EAAA,MAEA8C,EAAAH,GAAAl4B,EAAAg1B,YAAAnqC,EAAAstC,EAAA,GAEAG,EAAA5sC,EAAAtI,IAAA,cAEA,MAAAk1C,IACAA,IAAAlvC,EAAA,KAKAivC,EAAAH,GACA/qC,EAAAC,EAAA4S,EAAAtV,SAAA,MAAA4tC,IAAAt4B,EAAAtV,SACAG,IAEAsC,EAwHA,SAAA6S,EAAAmtB,EAAAoL,EAAAhD,GACA,IACAvtC,EACAC,EAFAuwC,EAAA5D,EAAA2D,EAAAv4B,EAAAtV,UAGAzI,EAAAszC,EAAA,GAAAA,EAAA,GACAkD,EAAA,UAAAtL,IAAAlrC,GAAA,UAAAkrC,GAAAlrC,EAEA0yC,EAAA6D,EAAApvC,EAAA,IACAnB,EAAAwwC,EAAA,eACAzwC,EAAA,UACG2sC,EAAA6D,EAAA,IAAApvC,IACHnB,EAAAwwC,EAAA,eACAzwC,EAAA,WAEAC,EAAA,SAGAD,EADAwwC,EAAA,IAAApvC,GAAAovC,EAAApvC,EAAA,EACAqvC,EAAA,eAEAA,EAAA,gBAIA,OACA/tC,SAAA8tC,EACAxwC,YACAC,qBAlJAywC,CAAA14B,EAAAk4B,EAAAI,GAAA,EAAA/C,GAGA,OAFA0C,EAAAj4B,EAAAi4B,0BAGAA,EAAA11C,KAAAC,IAAAy1C,EAAA11C,KAAA4zC,IAAAhpC,EAAAzC,YACAixB,SAAAsc,OAAA,QAIA,IAAAxK,EAAAD,EAAA5J,UACA+U,EAAAjtC,EAAAtI,IAAA,uBACAw1C,EAAAD,EAAAC,SACAC,EAAA5d,EAAAjb,EAAA84B,qBAAAH,EAAAE,SAAAZ,GAGAc,EAAA,MAAAH,GAAA,MAAAC,EAAA1tC,EAAA6tC,aAAA30C,EAAAw0C,EAAApL,EAAAmL,EAAA,CACAK,QAAA,EACAC,YAAAP,EAAAO,cACK70C,EACL80C,EAAAztC,EAAAtI,IAAA,cACAmL,EAAA7C,EAAA6C,SACA6qC,EAAA,CACAn9B,cAAA1N,EACAlK,OACAg1C,MAAA,UAEAD,EAAA7qC,EAAA,SAAA7C,EAAAwQ,eACA,IAAA5U,EAAA,IAAAzG,EAAA0G,KAAA,CAEAmuC,KAAA,OACA4D,WAAAj1C,EACAk1C,gBAAAR,EACAtuC,SAAAiJ,EACAhJ,SAAAyC,EAAAzC,SACArF,OAAAmC,EAAAkE,GACAtG,GAAA,EACA8lB,QAAAiuB,KAAArnC,KAAAlP,EAAA,CACAsR,QAAA7P,EACA6O,UAAA,WACA,OAAA7O,GAEA+0C,mBACOD,GAAA,OAEPt4C,EAAA4G,aAAAH,EAAApC,MAAAsoC,EAAA,CACA1lC,KAAAixC,EACAtL,WACA7lC,SAAA4lC,EAAA3lC,gBAAA6D,EAAAtI,IAAA,4BACA4E,UAAAwlC,EAAApqC,IAAA,UAAA+J,EAAAnF,UACAC,kBAAAulC,EAAApqC,IAAA,kBAAA+J,EAAAlF,oBAGAyD,EAAAtI,IAAA,kBACAkE,EAAAY,UAAAC,EAAAuD,GACApE,EAAAY,UAAAE,WAAA,WACAd,EAAAY,UAAA7D,QAIApB,KAAAkyC,WAAA1vC,IAAA6B,GAEAA,EAAA+gB,kBACAplB,KAAAC,MAAAuC,IAAA6B,GACAA,EAAAuvC,wBAIA1uC,EAAAnH,EAAAmH,sBAAA,SAAAuD,GACA,IAAAxD,EAAA,CACA+T,cAAAvQ,EAAA6C,SACA2N,eAAAxQ,EAAAwQ,gBAGA,OADAhU,EAAAwD,EAAA6C,SAAA,SAAA7C,EAAAwQ,eACAhU,GAiBAkF,EAAApM,EAAAoM,gBAAA,SAAAosC,EAAAC,EAAAzK,GACA,IACAhnC,EACAC,EAFAuwC,EAAA5D,EAAA6E,EAAAD,GAsBA,OAlBA7E,EAAA6D,IAEAvwC,EAAA+mC,EAAA,iBACAhnC,EAAA,UACG2sC,EAAA6D,EAAApvC,IAEHnB,EAAA+mC,EAAA,iBACAhnC,EAAA,WAEAC,EAAA,SAGAD,EADAwwC,EAAA,GAAAA,EAAApvC,EACA4lC,EAAA,iBAEAA,EAAA,kBAIA,CACAtkC,SAAA8tC,EACAxwC,YACAC,sBAkCA,IAAAT,EAAAxG,EAAAwG,cAAA,SAAAkE,GACA,IAAAytC,EAAAztC,EAAAtI,IAAA,WACA,OAAAsI,EAAAtI,IAAA,aACAsI,EAAAtI,IAAA,iBAAA+1C,KAAArnC,OAqDA,SAAA4lC,EAAA19B,GACAA,MAAAgC,QAAA,GAGA,SAAA27B,EAAAxR,EAAAuT,EAAAvsC,GAEA,IAAAwsC,EAAAxT,KAAA7U,kBAAArtB,QACA21C,EAAAF,KAAApoB,kBAAArtB,QAEA,GAAA01C,GAAAC,EAAA,CAMA,IAAAC,EAAAhF,EAAAiF,SAAA,IAIA,OAHAjF,EAAA9nC,OAAA8sC,KAAA1T,EAAAz7B,UACAivC,EAAA1sC,eAAA4nC,EAAAkF,IAAA,GAAAF,EAAA1T,EAAA9P,sBACAujB,EAAA3sC,eAAA4nC,EAAAkF,IAAA,GAAAF,EAAAH,EAAArjB,sBACAsjB,EAAA/zB,UAAAg0B,IAGA,SAAAvB,EAAAH,GACA,iBAAAA,GAAA,WAAAA,EAGA,SAAA3B,EAAAlsC,EAAA2vC,EAAA1D,EAAA2D,EAAAC,GAKA,IAJA,IAAAnD,EAAA,GACAvB,EAAA,GACAC,EAAA,GAEAlvC,EAAA,EAAiBA,EAAA8D,EAAA/H,OAAwBiE,IAAA,CACzC,IAAAusB,EAAAzoB,EAAA9D,GAAA9D,MACA+yC,EAAA,GAAA1iB,EACA0iB,EAAA,KACAC,EAAA,GAAA3iB,EACA2iB,EAAA,GAAAa,EAEA0D,IACAlF,EAAAU,IAAAwE,GACAlF,EAAAW,IAAAuE,IAIA,IAAAG,EAAA,IAAAt5C,EAAAmF,KAAA,CAEA0vC,KAAAwE,EAAA,IAAA7vC,EAAA9D,GAAApC,UACAipC,kBAAA,EACA3oC,MAAA,CACA9C,GAAA6zC,EAAA,GACA5zC,GAAA4zC,EAAA,GACA3zC,GAAA4zC,EAAA,GACA3zC,GAAA2zC,EAAA,IAEAvwC,MAAA+0C,EACA70C,GAAA,EACAC,QAAA,IAEA0xC,EAAAtwC,KAAA0zC,GAGA,OAAApD,EA4HA,IAAAp0C,EAAA3B,EACA8I,EAAAC,QAAApH,uBCtpBctC,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtB+5C,EAA6B/5C,EAAQ,KAyBrCU,EAAAT,EAAAK,oBAAA,CACAC,KAAA,OAKAy5C,aAAA,KAMAx3C,iBAAA,KAKAC,OAAA,SAAA4I,EAAA1I,EAAA4I,EAAAwC,GAMAnL,KAAAJ,kBAAAu3C,EAAAE,SAAA5uC,GACA3K,EAAAoW,WAAAlU,KAAA,SAAAmU,WAEAmjC,EAAAt3C,KAAAyI,EAAA1I,EAAA4I,EAAAwC,GAAA,IAWAosC,kBAAA,SAAA9uC,EAAA1I,EAAA4I,EAAAwC,EAAAqsC,GACAF,EAAAt3C,KAAAyI,EAAA1I,EAAA4I,EAAAwC,GAAA,IAMAoB,OAAA,SAAAxM,EAAA4I,GACA,IAAA8uC,EAAAz3C,KAAAo3C,aACAK,KAAAlrC,OAAA5D,GACA7K,EAAAoW,WAAAlU,KAAA,SAAAmU,YAMA7H,QAAA,SAAAvM,EAAA4I,GACA+uC,EAAA13C,KAAA2I,GACA7K,EAAAoW,WAAAlU,KAAA,UAAAmU,cAIA,SAAAmjC,EAAAK,EAAAlvC,EAAA1I,EAAA4I,EAAAwC,EAAAysC,GACA,IAAAC,EAAA/5C,EAAAg6C,oBAAAH,EAAA/3C,kBAEA,GAAAi4C,EAAA,CAIA,IAAAnvC,EAAAyuC,EAAAY,oBAAAtvC,GACAC,GAAAivC,EAAAP,eAAAO,EAAAP,aAAA,IAAAS,IAAAh4C,OAAA4I,EAAAC,EAAAC,EAAAivC,GAAAF,EAAAC,EAAAhvC,IAGA,SAAA+uC,EAAAC,EAAA53C,EAAA4I,GACA,IAAA8uC,EAAAE,EAAAP,aACAK,KAAAnrC,QAAAvM,EAAA4I,GACAgvC,EAAAP,aAAA,KAGA,IAAAY,EAAA,GAEAl6C,EAAA+M,yBAAA,SAAAlN,EAAAs6C,GACAD,EAAAr6C,GAAAs6C,GAGAn6C,EAAAg6C,oBAAA,SAAAn6C,GACA,OAAAA,GAAAq6C,EAAAr6C,IAGA,IAAA+B,EAAA5B,EACA+I,EAAAC,QAAApH,qBChCA,SAAAw4C,EAAArN,EAAAT,GACA,IAAA9W,EAAAuX,EAAAT,GAAAS,EAAA,EAAAT,GAGA,OACA+N,KAAA74C,KAAAC,IAAA+zB,GACA8kB,KAAA9kB,EAAA,KAAAA,EAAA,IAAA8W,GAAA,KAIA,SAAAiO,EAAAjzC,EAAAzF,GACA,OAAAL,KAAA+G,IAAA,MAAA1G,EAAA,GAAAA,EAAA,GAAAwe,IAAA7e,KAAAiH,IAAA,MAAA5G,EAAA,GAAAA,EAAA,IAAAwe,IAAA/Y,IAGAyB,EAAAC,QA5DA,SAAA8jC,EAAAC,EAAAyH,EAAAlI,EAAAY,EAAAC,GACAL,KAAA,EACA,IAAA0N,EAAAhG,EAAA,GAAAA,EAAA,GAUA,GARA,MAAAtH,IACAA,EAAAqN,EAAArN,EAAA,GAAAsN,KAGA,MAAArN,IACAA,EAAA3rC,KAAAiH,IAAA0kC,EAAA,MAAAD,IAAA,IAGA,QAAAZ,EAAA,CACA,IAAAmO,EAAAj5C,KAAAC,IAAAsrC,EAAA,GAAAA,EAAA,IACA0N,EAAAF,EAAAE,EAAA,GAAAD,IACAtN,EAAAC,EAAAoN,EAAAE,EAAA,CAAAvN,EAAAC,IACAb,EAAA,EAGAS,EAAA,GAAAwN,EAAAxN,EAAA,GAAAyH,GACAzH,EAAA,GAAAwN,EAAAxN,EAAA,GAAAyH,GACA,IAAAkG,EAAAN,EAAArN,EAAAT,GACAS,EAAAT,IAAAQ,EAEA,IAAA6N,EAAAzN,GAAA,EACA0N,EAAApG,EAAAj0C,QACAm6C,EAAAJ,KAAA,EAAAM,EAAA,IAAAD,EAAAC,EAAA,IAAAD,EACA5N,EAAAT,GAAAiO,EAAAxN,EAAAT,GAAAsO,GAEA,IAAAC,EAAAT,EAAArN,EAAAT,GAcA,OAZA,MAAAY,IAAA2N,EAAAP,OAAAI,EAAAJ,MAAAO,EAAAR,KAAAnN,KAEAH,EAAA,EAAAT,GAAAS,EAAAT,GAAAoO,EAAAJ,KAAApN,GAIA2N,EAAAT,EAAArN,EAAAT,GAEA,MAAAa,GAAA0N,EAAAR,KAAAlN,IACAJ,EAAA,EAAAT,GAAAS,EAAAT,GAAAuO,EAAAP,KAAAnN,GAGAJ,wBCnFcztC,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBw7C,EAAUx7C,EAAQ,IAElB0V,EAAgB1V,EAAQ,IAExB8c,EAAa9c,EAAQ,KAErBid,EAAgBjd,EAAQ,MAqBxB+D,EAAA7D,EAAA6D,KACA03C,EAAA3+B,EAAA2+B,YAkiBA,SAAAC,EAAAtlC,GACA,IAAAi8B,EAAA,GAIA,OAHAtuC,EAAA,4DAAAC,GACAoS,EAAAwD,eAAA5V,KAAAquC,EAAAruC,GAAAoS,EAAApS,MAEAquC,EAGA,SAAAsJ,EAAAv+B,EAAAw+B,GACA,IAAA97B,EAAA1C,EAAAy+B,eACAC,EAAA1+B,EAAAra,IAAA,aACAgB,EAAA,qDAAAspB,EAAAxV,GACA,IAAAkkC,EAAA,MAAAH,EAAAvuB,EAAA,IACA2uB,EAAA,MAAAJ,EAAAvuB,EAAA,IAEA0uB,IAAAC,EACAl8B,EAAAjI,GAAA,WACKkkC,GAAAC,EACLl8B,EAAAjI,GAAA,QACKikC,EACLh8B,EAAAjI,GAAAikC,EAAAjkC,GACKkkC,IAELj8B,EAAAjI,GAAA,aAMA,IAAAvV,EA9jBArC,EAAAwW,qBAAA,CACAlW,KAAA,WACA2lB,aAAA,yEAKAxP,cAAA,CACA0V,OAAA,EACA5jB,EAAA,EAEAyH,OAAA,KAEAqW,WAAA,KAEAC,WAAA,KAEAlE,WAAA,SAgBA8lB,SAAA,KAKAhnC,MAAA,EAEAE,IAAA,IAEA46C,WAAA,KAEAC,SAAA,KAEAtO,QAAA,KAEAC,QAAA,KAEAsO,aAAA,KAEAC,aAAA,KAEAC,UAAA,MAOAztC,KAAA,SAAAwH,EAAAuW,EAAAhqB,GAMAC,KAAA05C,oBAAA,GAKA15C,KAAA25C,UAAA,GAMA35C,KAAA45C,aAAA,GAKA55C,KAAAuqC,eAKAvqC,KAAA65C,eAAA,EAoBA75C,KAAAi5C,eAAA,sBACA,IAAAD,EAAAF,EAAAtlC,GAyBAxT,KAAAsf,cAAA05B,EACAh5C,KAAAkqB,qBAAA1W,EAAAzT,GACAC,KAAA85C,OAAAd,IAMA/kC,YAAA,SAAAI,GACA,IAAA2kC,EAAAF,EAAAzkC,GAEA/W,EAAAsY,MAAA5V,KAAAwT,OAAAa,GAAA,GACA/W,EAAAsY,MAAA5V,KAAAsf,cAAA05B,GAAA,GACAh5C,KAAA85C,OAAAd,IAMAc,OAAA,SAAAd,GACA,IAAAzkC,EAAAvU,KAAAwT,OAEAolC,EAAAmB,kBACAxlC,EAAAkV,UAAA,GAGAzpB,KAAAg6C,oBAAAhB,GAEAD,EAAA/4C,KAAAg5C,GACA,IAAA15B,EAAAtf,KAAAsf,cACAne,EAAA,qDAAAspB,EAAAxV,GAIA,UAAAjV,KAAAi5C,eAAAhkC,KACAV,EAAAkW,EAAA,IAAAnL,EAAAmL,EAAA,WAGKzqB,MACLA,KAAAuqC,eAAAvqC,KAAA0B,SAAA,aAEA1B,KAAAi6C,eAEAj6C,KAAAk6C,oBAMAA,iBAAA,WACA,IAAAC,EAAAn6C,KAAA45C,aACA55C,KAAAipC,eAAA,SAAAC,EAAA3uB,EAAAC,EAAAza,GACA,IAAA0I,EAAAzI,KAAAo6C,gBAAAlR,EAAA7oC,MAAAka,GAEAU,EAAAxS,EAAA4xC,gBACA5xC,EAAA4xC,cAAA,IAAAhgC,EAAA6uB,EAAA9nC,KAAAmZ,EAAAva,KAAAD,IAGAo6C,EAAAjR,EAAA9nC,KAAA,IAAAmZ,GAAAU,GACKjb,OAMLi6C,aAAA,WACA,IAAA1lC,EAAAvU,KAAAwT,OAEA8mC,EAAAt6C,KAAAu6C,iBAEA1B,EAAA,SAAA3P,GACA,IAAAsR,EAAAtR,EAAA3uB,UACAhG,EAAAimC,GAAA1nC,EAAA2nC,iBAAAlmC,EAAAimC,KACKx6C,MAEL,cAAAs6C,EACAt6C,KAAA06C,oBACK,WAAAJ,GACLt6C,KAAA26C,kBAOAJ,eAAA,WAIA,IAAAhmC,EAAAvU,KAAAwT,OACAonC,GAAA,EACA/B,EAAA,SAAA3P,GAIA,MAAA30B,EAAA20B,EAAA3uB,aACAqgC,GAAA,IAEK56C,MACL,IAAAqN,EAAAkH,EAAAlH,OAEA,aAAAA,GAAAutC,EACA,SACKA,OAAA,GACL,MAAAvtC,IACAkH,EAAAlH,OAAA,cAGA,cAOAqtC,kBAAA,WACA,IAAAG,GAAA,EACAxtC,EAAArN,KAAAG,IAAA,aACAoU,EAAAvU,KAAAwT,OACA4mC,EAAAp6C,KAAAo6C,gBAEA,GAAAS,EAAA,CAEA,IAAAvgC,EAAA,aAAAjN,EAAA,QAEA+sC,EAAA9/B,EAAA,QAAAjb,QACAkV,EAAA+F,EAAA,iBACAugC,GAAA,GAEA15C,EAAAi5C,EAAAxK,WAAA,SAAAkL,GACAD,GAAAC,EAAA36C,IAAA,eAAAkN,IACAkH,EAAAwmC,gBAAA,CAAAD,EAAA7hC,gBACA4hC,GAAA,KAMAA,GAEAhC,EAAA,SAAA3P,GACA,GAAA2R,EAAA,CAIA,IAAAG,EAAA,GACA9M,EAAAluC,KAAAo6C,gBAAAlR,EAAA7oC,MAEA,GAAA6tC,EAAA7uC,SAAA27C,EAAA37C,OACA,QAAAiE,EAAA,EAAA23C,EAAA/M,EAAA7uC,OAAkDiE,EAAA23C,EAAS33C,IAC3D,aAAA4qC,EAAA5qC,GAAAnD,IAAA,SACA66C,EAAAx3C,KAAAF,GAKAiR,EAAA20B,EAAA3uB,WAAAygC,EAEAA,EAAA37C,SACAw7C,GAAA,KAEO76C,MAGP66C,GAOA76C,KAAAD,QAAAmc,WAAA,SAAAC,GACAnc,KAAAk7C,0BAAA/+B,EAAA,UACA08B,EAAA,SAAA3P,GACA,IAAA8R,EAAAzmC,EAAA20B,EAAA3uB,WACAA,EAAA4B,EAAAhc,IAAA+oC,EAAA3uB,WACA4gC,EAAAh/B,EAAAhc,IAAA+oC,EAAAiS,QAMA5gC,EALA4B,EAAApc,QAAAsc,gBAAA,CACA/Q,SAAA49B,EAAA7oC,KACA4U,MAAAsF,EACAlF,GAAA8lC,IACa,GACbliC,eAEA3b,EAAA8rC,QAAA4R,EAAAzgC,GAAA,GACAygC,EAAAx3C,KAAA+W,MAIOva,OAOP26C,eAAA,WACA,IAAA/xC,EAEA5I,KAAAipC,eAAA,SAAAC,IACAtgC,MAAAsgC,EAAA9nC,OACKpB,MACLA,KAAAwT,OAAAnG,OAAA,MAAAzE,EAAA,yBAMAsyC,0BAAA,SAAA/+B,EAAA2K,GAIA,IAAAs0B,GAAA,EASA,OARAvC,EAAA,SAAA3P,GACA,IAAAmS,EAAAl/B,EAAAhc,IAAA+oC,EAAA3uB,WACA9R,EAAAzI,KAAAo6C,gBAAAlR,EAAA7oC,MAAAg7C,GAEA5yC,KAAAtI,IAAA,UAAA2mB,IACAs0B,GAAA,IAEKp7C,MACLo7C,GAMApB,oBAAA,SAAAhB,GAMA,GAJAA,EAAAhiC,eAAA,cACAhX,KAAA65C,eAAA,GAGA75C,KAAA65C,cAAA,CACA,IAAAyB,EAAAt7C,KAAAD,QAAAyT,OACAxT,KAAAwT,OAAA+xB,SAAA+V,EAAA9yB,WAAA8yB,EAAA5c,wBAAA,WAOAiJ,wBAAA,WACA,IAAA4T,EAUA,OATA1C,EAAA,SAAA3P,GACA,SAAAqS,EAAA,CACA,IAAAC,EAAAx7C,KAAAG,IAAA+oC,EAAA3uB,WAEAihC,EAAAn8C,SACAk8C,EAAAv7C,KAAAo6C,gBAAAlR,EAAA7oC,MAAAm7C,EAAA,OAGKx7C,MACLu7C,GAOAtS,eAAA,SAAAtX,EAAA8pB,GACA,IAAA17C,EAAAC,KAAAD,QACA84C,EAAA,SAAA3P,GACA/nC,EAAAnB,KAAAG,IAAA+oC,EAAA3uB,WAAA,SAAAA,GACAoX,EAAA2C,KAAAmnB,EAAAvS,EAAA3uB,EAAAva,KAAAD,IACOC,OACFA,OAQLmpC,aAAA,SAAA7uB,EAAAC,GACA,OAAAva,KAAA45C,aAAAt/B,EAAA,IAAAC,IAQAY,aAAA,SAAAb,EAAAC,GACA,IAAAU,EAAAjb,KAAAmpC,aAAA7uB,EAAAC,GACA,OAAAU,KAAAE,gBAaAugC,YAAA,SAAA3+B,GACA,IAAAxI,EAAAvU,KAAAwT,OACA8L,EAAAtf,KAAAsf,cACAne,EAAA,qDAAAspB,GAUA,MAAA1N,EAAA0N,EAAA,WAAA1N,EAAA0N,EAAA,MACAlW,EAAAkW,EAAA,IAAAnL,EAAAmL,EAAA,IAAA1N,EAAA0N,EAAA,IACAlW,EAAAkW,EAAA,IAAAnL,EAAAmL,EAAA,IAAA1N,EAAA0N,EAAA,MAEKzqB,MACL+4C,EAAA/4C,KAAA+c,IAWA4+B,mBAAA,SAAA5+B,GACA,IAAAvJ,EAAAxT,KAAAwT,OACArS,EAAA,iDAAAC,GACAoS,EAAApS,GAAA2b,EAAA3b,MAQAqpC,gBAAA,WACA,IAAAxvB,EAAAjb,KAAA+qC,8BAEA,GAAA9vB,EACA,OAAAA,EAAAc,wBAYA6/B,cAAA,SAAAC,EAAAthC,GACA,SAAAshC,GAAA,MAAAthC,EAOA,OAAAva,KAAAmpC,aAAA0S,EAAAthC,GAAAuB,qBANA,IAAAb,EAAAjb,KAAA+qC,8BAEA,OAAA9vB,EACAA,EAAAa,0BADA,GAcAivB,4BAAA,SAAAtiC,GACA,GAAAA,EACA,OAAAA,EAAA4xC,cAIA,IAAAF,EAAAn6C,KAAA45C,aAEA,QAAAkC,KAAA3B,EACA,GAAAA,EAAAnjC,eAAA8kC,IAAA3B,EAAA2B,GAAAjgC,SAAA7b,MACA,OAAAm6C,EAAA2B,GASA,QAAAA,KAAA3B,EACA,GAAAA,EAAAnjC,eAAA8kC,KAAA3B,EAAA2B,GAAAjgC,SAAA7b,MACA,OAAAm6C,EAAA2B,IAQA3+B,iBAAA,WACA,OAAAnd,KAAAi5C,eAAA56C,WAuCAwI,EAAAC,QAAApH,uBCpmBA,IAqBAA,EArBoBtC,EAAQ,KAqB5BuC,OAAA,CACAhC,KAAA,WACAkC,OAAA,SAAA2a,EAAAza,EAAA4I,EAAAwC,GACAnL,KAAAwa,gBACAxa,KAAAD,UACAC,KAAA2I,OAqBA+jC,mBAAA,WACA,IAAAlyB,EAAAxa,KAAAwa,cACAza,EAAAC,KAAAD,QACAg8C,EAAA,GA+BA,OA9BAvhC,EAAAyuB,eAAA,SAAAC,EAAA3uB,GACA,IAAA9R,EAAA1I,EAAAuc,aAAA4sB,EAAA7oC,KAAAka,GAEA,GAAA9R,EAAA,CACA,IAAA8kC,EAAA9kC,EAAAuzC,mBACAzO,GAIA,SAAAA,EAAA9kC,EAAA0nC,EAAA8L,GAGA,IAFA,IAAAtxB,EAEArnB,EAAA,EAAqBA,EAAA6sC,EAAA9wC,OAAkBiE,IACvC,GAAA6sC,EAAA7sC,GAAAqhB,QAAA4oB,EAAA,CACA5iB,EAAAwlB,EAAA7sC,GACA,MAIAqnB,GACAwlB,EAAA3sC,KAAAmnB,EAAA,CACAhG,MAAA4oB,EACAW,WAAA,GACA+N,eAIAtxB,EAAAujB,WAAA1qC,KAAAiF,GAtBAyzC,CAAA3O,EAAA9kC,EAAAszC,EAAAxO,EAAAjiC,YAAAywC,EAAAxO,EAAAjiC,UAAA,IAAAiiC,EAAAt0B,kBAEKjZ,MAuBL+7C,KAIAl1C,EAAAC,QAAApH,uBCrFA,IAAArC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtBA,EAAQ,KAERA,EAAQ,KAsBRC,EAAAK,oBAAA,CACAC,KAAA,OACAkC,OAAA,SAAAs8C,EAAAp8C,GACAC,KAAAC,MAAAC,YAEAi8C,EAAAh8C,IAAA,SACAH,KAAAC,MAAAuC,IAAA,IAAA5E,EAAA4Q,KAAA,CACAhN,MAAA26C,EAAAzwC,iBAAAihC,UACA1qC,MAAA3E,EAAA2F,SAAA,CACAV,KAAA45C,EAAAh8C,IAAA,oBACSg8C,EAAAtuC,gBACTzL,QAAA,EACAD,IAAA,QAKA9E,EAAAkW,qBAAA,SAAAC,GAEAA,EAAAokB,OAAApkB,EAAAqkB,QAAArkB,EAAA87B,OACA97B,EAAA87B,KAAA,2BClDA,IAAAhyC,EAAaF,EAAQ,GAErBg/C,EAAeh/C,EAAQ,KAEvBkoC,EAAgBloC,EAAQ,KAExBi/C,EAAuBj/C,EAAQ,KA6B/B,SAAAyyC,EAAAI,GAIAjwC,KAAAs8C,eAKAt8C,KAAAu8C,IAAAtM,EAKAjwC,KAAAw8C,KAAA,GAEA,IAAAz3B,EAAAznB,EAAAynB,KACA03B,EAAA13B,EAAA23B,EAAA18C,MACA28C,EAAA53B,EAAA63B,EAAA58C,MACA68C,EAAA93B,EAAA+3B,EAAA98C,MACA+8C,EAAAh4B,EAAAi4B,EAAAh9C,MACAi9C,EAAAl4B,EAAAm4B,EAAAl9C,MACAo8C,EAAA9nB,KAAAt0B,MAOAA,KAAAuxC,kBAAA,SAAA+K,GACAt8C,KAAAs8C,kBAkBAt8C,KAAAsxC,OAAA,SAAAR,EAAA/zB,GAEA/c,KAAAm9C,UACAn9C,KAAAw8C,KAAAl/C,EAAA2F,SAAA3F,EAAA0D,MAAA+b,IAAA,GAAuD,CACvD8vB,kBAAA,EACAC,iBAAA,EAEAC,kBAAA,EACAC,yBAAA,IAGA,MAAA8D,IACAA,GAAA,IAGA,IAAAA,GAAA,SAAAA,GAAA,QAAAA,IACAb,EAAAnrB,GAAA,YAAA23B,GACAxM,EAAAnrB,GAAA,YAAA63B,GACA1M,EAAAnrB,GAAA,UAAA+3B,KAGA,IAAA/L,GAAA,UAAAA,GAAA,SAAAA,IACAb,EAAAnrB,GAAA,aAAAi4B,GACA9M,EAAAnrB,GAAA,QAAAm4B,KAIAj9C,KAAAm9C,QAAA,WACAlN,EAAAmN,IAAA,YAAAX,GACAxM,EAAAmN,IAAA,YAAAT,GACA1M,EAAAmN,IAAA,UAAAP,GACA5M,EAAAmN,IAAA,aAAAL,GACA9M,EAAAmN,IAAA,QAAAH,IAGAj9C,KAAAsM,QAAAtM,KAAAm9C,QAEAn9C,KAAAq9C,WAAA,WACA,OAAAr9C,KAAAqmC,WAGArmC,KAAAs9C,WAAA,WACA,OAAAt9C,KAAAu9C,WAMA,SAAAb,EAAAnqB,GACA,KAAA+S,EAAAkY,mCAAAjrB,MAAAwM,QAAAxM,EAAAwM,OAAAlN,WAAA,CAIA,IAAAptB,EAAA8tB,EAAAE,QACA/tB,EAAA6tB,EAAAG,QAGA1yB,KAAAs8C,gBAAAt8C,KAAAs8C,eAAA/pB,EAAA9tB,EAAAC,KACA1E,KAAAy9C,GAAAh5C,EACAzE,KAAA09C,GAAAh5C,EACA1E,KAAAqmC,WAAA,IAIA,SAAAuW,EAAArqB,GACA,GAAAvyB,KAAAqmC,WAAAsK,EAAA,kBAAApe,EAAAvyB,KAAAw8C,OAAA,UAAAjqB,EAAAorB,eAAAtB,EAAAuB,QAAA59C,KAAAu8C,IAAA,cAIA,IAAA93C,EAAA8tB,EAAAE,QACA/tB,EAAA6tB,EAAAG,QACAoc,EAAA9uC,KAAAy9C,GACA1O,EAAA/uC,KAAA09C,GACArrB,EAAA5tB,EAAAqqC,EACAxc,EAAA5tB,EAAAqqC,EACA/uC,KAAAy9C,GAAAh5C,EACAzE,KAAA09C,GAAAh5C,EACA1E,KAAAw8C,KAAAxP,yBAAA1H,EAAA8G,KAAA7Z,EAAAzmB,OACAoc,EAAAloB,KAAA,wBAAAuyB,EAAA,CACAF,KACAC,KACAwc,OACAC,OACAC,KAAAvqC,EACAwqC,KAAAvqC,KAIA,SAAAo4C,EAAAvqB,GACA+S,EAAAkY,mCAAAjrB,KACAvyB,KAAAqmC,WAAA,GAIA,SAAA2W,EAAAzqB,GACA,IAAAsrB,EAAAlN,EAAA,mBAAApe,EAAAvyB,KAAAw8C,MACAsB,EAAAnN,EAAA,mBAAApe,EAAAvyB,KAAAw8C,MACAuB,EAAAxrB,EAAAwrB,WACAC,EAAA1+C,KAAAC,IAAAw+C,GACA1P,EAAA9b,EAAAE,QACA6b,EAAA/b,EAAAG,QAEA,OAAAqrB,IAAAF,GAAAC,GAAA,CAOA,GAAAD,EAAA,CASA,IAAAI,EAAAD,EAAA,MAAAA,EAAA,UAEAE,EAAAl+C,KAAA,0BAAAuyB,EAAA,CACAlxB,MAFA08C,EAAA,EAAAE,EAAA,EAAAA,EAGA5P,UACAC,YAIA,GAAAwP,EAAA,CAEA,IAAAK,EAAA7+C,KAAAC,IAAAw+C,GAGAG,EAAAl+C,KAAA,gCAAAuyB,EAAA,CACA4c,aAFA4O,EAAA,SAAAI,EAAA,KAAAA,EAAA,WAGA9P,UACAC,cAKA,SAAA4O,EAAA3qB,GACA8pB,EAAAuB,QAAA59C,KAAAu8C,IAAA,cAKA2B,EAAAl+C,KAAA,YAAAuyB,EAAA,CACAlxB,MAFAkxB,EAAA6rB,WAAA,YAGA/P,QAAA9b,EAAA8rB,OACA/P,QAAA/b,EAAA+rB,SAIA,SAAAJ,EAAAjQ,EAAAR,EAAA8Q,EAAAhsB,EAAAisB,GACAvQ,EAAAqO,gBAAArO,EAAAqO,eAAA/pB,EAAAisB,EAAAnQ,QAAAmQ,EAAAlQ,WAIAhJ,EAAA8G,KAAA7Z,EAAAzmB,OACAoc,EAAA+lB,EAAAR,EAAA8Q,EAAAhsB,EAAAisB,IAIA,SAAAt2B,EAAA+lB,EAAAR,EAAA8Q,EAAAhsB,EAAAisB,GAGAA,EAAA7N,oBAAArzC,EAAAynB,KAAA4rB,EAAA,KAAA4N,EAAAhsB,GACA0b,EAAA/lB,QAAAulB,EAAA+Q,GASA,SAAA7N,EAAA4N,EAAAhsB,EAAAksB,GACA,IAAAC,EAAAD,EAAAF,GACA,OAAAA,GAAAG,KAAAphD,EAAAmU,SAAAitC,IAAAnsB,EAAAzmB,MAAA4yC,EAAA,QApIAphD,EAAA8rB,MAAAymB,EAAAuM,GAuIA,IAAA18C,EAAAmwC,EACAhpC,EAAAC,QAAApH,uBCzQA,IAAArC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErB+5C,EAA6B/5C,EAAQ,KAErCuhD,EAAkBvhD,EAAQ,KAE1BA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAwBRC,EAAAkW,qBAAA,SAAAC,GAEA,GAAAA,EAAA,GACAA,EAAAikC,aAAA,IAAAjkC,EAAAikC,YAAAp4C,UAAAmU,EAAAikC,YAAA,IACA,IAAAmH,EAAAprC,EAAAikC,YAAAmH,KAIAA,IAAAthD,EAAAoW,QAAAkrC,KACAprC,EAAAikC,YAAAmH,KAAA,CAAAA,OAMAvhD,EAAAwhD,kBAAAxhD,EAAAyhD,SAAAC,UAAAC,UAAA,SAAAj/C,EAAA4I,GAGA5I,EAAAuc,aAAA,eAAA2iC,iBAAA9H,EAAA+H,QAAAn/C,EAAA4I,KAGAtL,EAAA6N,eAAA,CACAvN,KAAA,oBACAmO,MAAA,oBACAb,OAAA,sBACC0zC,wBC7DD,IAAArhD,EAAaF,EAAQ,GAErBS,EAAYT,EAAQ,IAqBpB+D,EAAA7D,EAAA6D,KACA1D,EAAAH,EAAAG,MAgNA,SAAA0hD,EAAAC,EAAAC,GACA,cAAAD,GAAA9hD,EAAAoW,QAAA0rC,IAAA9hD,EAAA8rC,QAAAgW,EAAAC,IAAA,GAAAD,IAAAC,EAiDA,SAAAnnB,EAAAzvB,GACA,IAAAw2C,GAAAx2C,EAAA1I,QAAAuc,aAAA,oBAA6E2iC,iBAC7E,OAAAA,KAAAK,SAAAC,EAAA92C,IAQA,SAAA+2C,EAAA92C,GACA,QAAAA,EAAAvI,IAAA,eAQA,SAAAo/C,EAAA56B,GACA,OAAAA,EAAAhnB,KAAA,KAAAgnB,EAAAtP,GAGAvO,EAAAo4C,QAtRA,SAAAn/C,EAAA4I,GACA,IAAA4N,EAAA,CAcA+oC,SAAA,GACAG,gBAAA,EAMAR,iBAAA,GACAS,YAAA,IAKA,OAGA,SAAAnpC,EAAAxW,EAAA4I,GACA,IAAAg3C,EAAA5/C,EAAAuc,aAAA,WACAsjC,EAAA7/C,EAAAuc,aAAA,eAEAujC,EAAAD,EAAAz/C,IAAA,eACA2/C,EAAA,GAEA3+C,EAAAwH,EAAAo3C,uBAAA,SAAA7yC,GAEA,GAAAA,EAAA8yC,mBAAA,CAIA,IAAAC,EAAAV,EAAAryC,EAAAyX,OACAu7B,EAAA3pC,EAAA0oC,iBAAAgB,GAAA,GACA1pC,EAAAmpC,YAAAO,GAAA/yC,EAGA,IAAAizC,EAAAjzC,EAAAyX,MACAy7B,EAAAD,EAAAz+C,SAAA,UAAAi+C,GAIA,GAHAx+C,EAAA+L,EAAAmzC,UAAA5iD,EAAA6iD,GAAA,SAGApzC,EAAAqzC,gBAAAZ,GAEAS,EAAAjgD,IAAA,SAGA,IAAAqgD,EAAA,SAAAJ,EAAAjgD,IAAA,WACAsgD,EAAA,UAAAL,EAAAjgD,IAAA,oBACAugD,EAAAxzC,EAAAqzC,eAAAH,EAAAjgD,IAAA,sBAEAqgD,GAAAC,IACAt/C,EAAAu/C,EAAAC,SAAAljD,EAAA6iD,GAAAG,GAAA,QAAAD,IAGAC,GACAt/C,EAAAu/C,EAAAE,UAAAnjD,EAAA6iD,EAAA,cAMA,SAAAA,EAAAO,EAAAC,EAAAzgD,GACA,IAAAqI,EAAArI,EAAAskB,MAAAjjB,SAAA,cAAAk+C,GACAmB,EAAAr4C,EAAAvI,IAAA,QAEA,GAAA4gD,IAAA,SAAAA,GAAAF,GAAArB,EAAA92C,IAAA,CAIA,MAAAo4C,IACAA,EAAAp4C,EAAAvI,IAAA,mBAIA,IAAA6gD,GADAt4C,EAAAm4C,EAgCA,SAAAxgD,EAAA+/C,EAAAR,EAAA7/C,EAAA8gD,EAAAC,GACA,IAAAG,EAAAb,EAAA1+C,SAAA,eACAw/C,EAAA,GACA//C,EAAA,6HAAAggD,GACAD,EAAAC,GAAA7jD,EAAA0D,MAAAigD,EAAA9gD,IAAAghD,MAKAD,EAAAF,KAAA,aAAA3gD,EAAA1C,QAAAmjD,EAGA,UAAAG,EAAA9gD,IAAA,UACA+gD,EAAAvjD,KAAA,QAGA,IAAAyjD,EAAAF,EAAA76B,QAAA66B,EAAA76B,MAAA,IAIA,GAFA,MAAA+6B,EAAAvyC,OAAAuyC,EAAAvyC,MAAA,GAEA,UAAAgyC,EAAA,CAEA,IAAAQ,EAAAJ,EAAA9gD,IAAA,cAIA,GAHAihD,EAAAvyC,KAAA,MAAAwyC,MAGAP,EAAA,CACA,IAAAQ,EAAAJ,EAAA74B,UAAA44B,EAAA9gD,IAAA,cACAmhD,GAAAhkD,EAAA2F,SAAAm+C,EAAAE,EAAAl9C,YAIA,OAAA/D,EAAAskB,MAAAjjB,SAAA,kBAAA7D,EAAAqjD,EAAAtB,EAAA7/C,IAhEAwhD,CAAAlhD,EAAA+/C,EAAAR,EAAA7/C,EAAA8gD,EAAAC,GAAAp4C,GACAvI,IAAA,QACA27C,EAAAyD,EAAAl/C,EAAAskB,OACA68B,EAAAV,GAAAE,GAAA,aAAA3gD,EAAA1C,KAEAs6B,EAAA1hB,EAAA+oC,SAAAxD,GAAA,CACAA,MACAz7C,OACA6M,WACAxE,mBACAo4C,iBACAU,gBACAR,OACAS,UAAAjC,EAAA92C,GACAuT,aAAA,IAEAikC,EAAApE,GAAA7jB,EACA1hB,EAAAkpC,gBAAA+B,EACA,IAAAE,EAwFA,SAAA7B,EAAAx/C,GAIA,IAHA,IAAAoI,EAAApI,EAAAskB,MACA/b,EAAAvI,EAAAuI,IAEAtF,EAAA,EAAiBA,EAAAu8C,EAAAxgD,OAAwBiE,IAAA,CACzC,IAAAq+C,EAAA9B,EAAAv8C,IAAA,GAEA,GAAA67C,EAAAwC,EAAA/4C,EAAA,UAAAH,EAAA4M,KAAA8pC,EAAAwC,EAAA/4C,EAAA,aAAAH,EAAAwQ,iBAAAkmC,EAAAwC,EAAA/4C,EAAA,YAAAH,EAAArH,MACA,OAAAkC,GAhGAs+C,CAAA/B,EAAAx/C,GAEA,SAAAqhD,EAAA,CACA,IAAAG,EAAA/B,EAAA4B,KAAA5B,EAAA4B,GAAA,CACApC,SAAA,KAEAuC,EAAAvC,SAAAxD,GAAA7jB,EACA4pB,EAAAC,OAAAjC,EAAA6B,GAAAI,OACA7pB,EAAA4pB,iBAvFAE,CAAAxrC,EAAAxW,EAAA4I,GAEA4N,EAAAkpC,gBA8HA,SAAAlpC,EAAAxW,GAEAA,EAAAmc,WAAA,SAAAC,GAEA,IAAAjP,EAAAiP,EAAAzQ,iBACAs2C,EAAA7lC,EAAAhc,IAAA,sBACA8hD,EAAA9lC,EAAAhc,IAAA,mBAEA+M,GAAA,SAAA80C,IAAA,IAAAA,GAAA,SAAAA,IAAA,IAAAC,IAAA,IAAA9lC,EAAAhc,IAAA,wBAIAgB,EAAAoV,EAAA0oC,iBAAAM,EAAAryC,EAAAyX,QAAA,SAAAsT,GACA,IAAA53B,EAAA43B,EAAA53B,KAEA6M,EAAA6qB,QAAA13B,EAAAuI,OAAAvI,IACA43B,EAAAhc,aAAAzY,KAAA2Y,GACA,MAAA8b,EAAAiqB,kBAAAjqB,EAAAiqB,gBAAA,GACAjqB,EAAAiqB,iBAAA/lC,EAAAkC,UAAA+L,YAGGpqB,MAnJHmiD,CAAA5rC,EAAAxW,GACAwW,GA2PAzP,EAAAuwC,SAtEA,SAAA5uC,GACA,IAAAwvB,EAAAC,EAAAzvB,GAEA,GAAAwvB,EAAA,CAIA,IAAAvvB,EAAAuvB,EAAAvvB,iBACArH,EAAA42B,EAAA53B,KAAAgB,MACAmS,EAAA9K,EAAA8K,OACA4uC,EAAA15C,EAAAvI,IAAA,UACAiF,EAAAsD,EAAAvI,IAAA,SAEA,MAAAiF,IACAA,EAAA/D,EAAAkc,MAAAnY,IAGA,IAAAq8C,EAAAjC,EAAA92C,GAGA,MAAA05C,IACA5uC,EAAA4uC,OAAAX,EAAA,eAGA,IAAAnP,EAAAjxC,EAAAd,YAAAlC,QACAi0C,EAAA,GAAAA,EAAA,IAAAA,EAAAh0C,WAGA,MAAA8G,GAEAA,EAAAktC,EAAA,MAEAltC,EAAAktC,EAAA,IAGAltC,EAAAktC,EAAA,KACAltC,EAAAktC,EAAA,IAGA9+B,EAAApO,QAEAq8C,IACAjuC,EAAA4uC,OAAAnqB,EAAA53B,KAAAgB,MAAAC,UAAA,iBA6BAwF,EAAAoxB,cACApxB,EAAAixC,oBArBA,SAAAtvC,GACA,IAAAwvB,EAAAC,EAAAzvB,GACA,OAAAwvB,KAAAvvB,kBAoBA5B,EAAAy4C,6BClSA,IAAA8C,EAAA,CACA5K,YAAA,EACAxvB,QAAA,EACApH,MAAA,GAcA/Z,EAAAw7C,oBAPA,SAAA/vB,EAAA5pB,EAAA45C,GACA,IAAA59B,EAAAhc,EAAA65C,sBAAAjwB,EAAAkwB,WAEAv1C,EAAAyX,KAAAjZ,iBACA,OAAAiZ,OAAA49B,IAAAF,EAAA19B,EAAArZ,WAAA4B,KAAAyX,QAAA49B,wBCjCA,IAAAjlD,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtBslD,EAAkBtlD,EAAQ,IAE1B8K,EAAiB9K,EAAQ,IAEzBiL,EAAajL,EAAQ,IAErBguB,EAAiBhuB,EAAQ,KAEzBW,EAAkBX,EAAQ,KA6C1B,SAAAiN,EAAA7B,EAAAC,EAAAC,EAAAC,EAAAc,GACA,IACA5E,EAAA89C,EADAj6C,EAAAvI,IAAA,SACAsI,EAAApI,KAAAoI,EAAA1I,QAAA2I,EAAAvI,IAAA,sBACAmb,UAAA5S,EAAAvI,IAAA,mBACA8P,UAAAvH,EAAAvI,IAAA,qBAEA6D,EAAA0E,EAAAhH,SAAA,SACAkhD,EAAA16C,EAAA26C,kBAAA7+C,EAAA7D,IAAA,eACAugC,EAAA18B,EAAA28B,UACAmiB,EAAAJ,EAAAr0B,gBAAAxpB,EAAA67B,GACAl5B,EAAAiC,EAAAjC,SACAiH,EAAAq0C,EAAAr0C,MAAAm0C,EAAA,GAAAA,EAAA,GACAl0C,EAAAo0C,EAAAp0C,OAAAk0C,EAAA,GAAAA,EAAA,GAEAl5C,EAAAD,EAAAC,MACA,UAAAA,IAAAlC,EAAA,IAAAiH,GACA,WAAA/E,IAAAlC,EAAA,IAAAiH,EAAA,GACA,IAAA9E,EAAAF,EAAAE,cACA,WAAAA,IAAAnC,EAAA,IAAAkH,GACA,WAAA/E,IAAAnC,EAAA,IAAAkH,EAAA,GAuCA,SAAAlH,EAAAiH,EAAAC,EAAA/F,GACA,IAAAo6C,EAAAp6C,EAAA2Q,WACA0pC,EAAAr6C,EAAA6Q,YACAhS,EAAA,GAAAlI,KAAA+G,IAAAmB,EAAA,GAAAiH,EAAAs0C,GAAAt0C,EACAjH,EAAA,GAAAlI,KAAA+G,IAAAmB,EAAA,GAAAkH,EAAAs0C,GAAAt0C,EACAlH,EAAA,GAAAlI,KAAAiH,IAAAiB,EAAA,MACAA,EAAA,GAAAlI,KAAAiH,IAAAiB,EAAA,MA3CAy7C,CAAAz7C,EAAAiH,EAAAC,EAAA/F,GACA,IAAAu6C,EAAAl/C,EAAA7D,IAAA,mBAEA+iD,GAAA,SAAAA,IACAA,EAAAz6C,EAAAtI,IAAA,6BAGAqI,EAAA6d,MAAA,CACA7kB,MAAA,CACAiD,EAAA,EACAC,EAAA,EACA+J,QACAC,SACA1M,EAAAgC,EAAA7D,IAAA,iBAEAqH,WAAAnJ,QAEA4D,MAAA,CACA4C,OACA2lC,SAAA9J,EACA/7B,SAAAX,EAAAY,eACAslC,aAAA,SACAiZ,YAAAP,EACArgD,KAAA2gD,EACAhgD,OAAAc,EAAA7D,IAAA,8BACA2O,UAAA9K,EAAA7D,IAAA,kBACAijD,WAAAp/C,EAAA7D,IAAA,cACAkjD,YAAAr/C,EAAA7D,IAAA,eACAmjD,cAAAt/C,EAAA7D,IAAA,iBACAojD,cAAAv/C,EAAA7D,IAAA,kBAGAgC,GAAA,IAwBA,SAAAwgD,EAAAv9C,EAAA/E,EAAAN,EAAAyjD,EAAAzmC,GACA3X,EAAA/E,EAAAgB,MAAAkc,MAAAnY,GACA,IAAAP,EAAAxE,EAAAgB,MAAA8qB,SAEA/mB,EAAA,CACAkW,UAAAyB,EAAAzB,YAEArL,EAAA8M,EAAA9M,UAEA,GAAAA,EAAA,CACA,IAAAC,EAAA,CACA9K,MAAAgmB,EAAAq4B,gBAAApjD,EAAA+E,GACAs+C,cAAArjD,EAAAuI,IACA2R,UAAAla,EAAA4U,MACAmJ,WAAA,IAEA9gB,EAAA6D,KAAAqiD,EAAA,SAAAG,GACA,IAAAhmB,EAAA59B,EAAA6jD,iBAAAD,EAAAngC,aACA5D,EAAA+jC,EAAAE,gBACAjtB,EAAA+G,KAAA9G,cAAAjX,GACAgX,GAAA1mB,EAAAkO,WAAA5a,KAAAozB,KAGAt5B,EAAAmU,SAAAxB,GACApL,EAAAoL,EAAAmhB,QAAA,UAAuCvsB,GAClCvH,EAAAk5B,WAAAvmB,KACLpL,EAAAoL,EAAAC,IAIA,OAAArL,EAWA,SAAAi/C,EAAAzjD,EAAA+E,EAAAwmB,GACA,IAAAhiB,EAAAvB,EAAAwB,SAGA,OAFAxB,EAAAyB,OAAAF,IAAAgiB,EAAAnkB,UACAY,EAAA0B,UAAAH,IAAAgiB,EAAApkB,UACA5J,EAAAoM,eAAA,CAAA3J,EAAAY,YAAAmE,IAAAwmB,EAAAmmB,aAAA,IAAAnmB,EAAAlkB,gBAAA,IAAAkkB,EAAA/nB,aAAA,IAAA+F,GAyDA9C,EAAAsC,aAvMA,SAAAV,GACA,IAEAzG,EAFAiH,EAAAR,EAAAvI,IAAA,QACA4jD,EAAAr7C,EAAAhH,SAAAwH,EAAA,SAWA,MARA,SAAAA,GACAjH,EAAA8hD,EAAA7hD,gBACAK,KAAA,KACG,WAAA2G,KACHjH,EAAA8hD,EAAAn9C,gBACA1D,OAAA,MAGAjB,GA2LA6E,EAAAuD,qBACAvD,EAAA67C,gBACA77C,EAAAg9C,yBACAh9C,EAAAk9C,kCA1DA,SAAA5+C,EAAAoD,EAAAojB,EAAAnjB,EAAAC,EAAAC,GACA,IAAAs7C,EAAAlmD,EAAAoM,gBAAAyhB,EAAAnkB,SAAA,EAAAmkB,EAAAlkB,gBACAkkB,EAAA/nB,YAAA6E,EAAAvI,IAAA,gBACAkK,EAAA7B,EAAAC,EAAAC,EAAAC,EAAA,CACAnB,SAAAs8C,EAAAr7C,EAAApI,KAAA+E,EAAAwmB,GACAliB,MAAAu6C,EAAAl/C,UACA4E,cAAAs6C,EAAAj/C,qBAqDA8B,EAAAyD,cA3CA,SAAA25C,EAAAC,EAAAC,GAEA,OACA1lD,GAAAwlD,EAFAE,KAAA,GAGAzlD,GAAAulD,EAAA,EAAAE,GACAxlD,GAAAulD,EAAAC,GACAvlD,GAAAslD,EAAA,EAAAC,KAsCAt9C,EAAAu9C,cA5BA,SAAAriC,EAAAC,EAAAmiC,GAEA,OACA3/C,EAAAud,EAFAoiC,KAAA,GAGA1/C,EAAAsd,EAAA,EAAAoiC,GACA31C,MAAAwT,EAAAmiC,GACA11C,OAAAuT,EAAA,EAAAmiC,KAuBAt9C,EAAA8D,gBAnBA,SAAA9I,EAAAC,EAAAO,EAAAN,EAAA0E,EAAAC,GACA,OACA7E,KACAC,KACAO,KACAN,IACA0E,aACAC,WACAH,WAAA,yBCxOA,IAAAlJ,EAAaF,EAAQ,GA2BrBsC,EAAA,CAMA4kD,kBAAA,SAAAC,GACAvkD,KAAAwkD,YAAAlnD,EAAAoW,QAAA6wC,KAAAlmD,QAAA,GACA2B,KAAAykD,iBAAAnnD,EAAAonD,OAAAH,GAAA,YAAAI,EAAA5lB,GAEA,OADA4lB,EAAAztC,IAAA6nB,EAAA39B,KAAA29B,GACA4lB,GACKrnD,EAAAya,kBAWL6sC,OAAA,SAAAxjD,EAAAiU,GACA,IAAA0pB,EAAA,MAAA1pB,EAAArV,KAAAwkD,YAAAnvC,GAAArV,KAAAykD,iBAAAtkD,IAAAiB,GAGA,WAFApB,KAAAG,IAAA,iBAGAH,KAAAykD,iBAAAtjD,KAAA,SAAA49B,GACAA,EAAA3zB,UAAA,IAIA2zB,MAAA3zB,UAAA,IAUAy5C,SAAA,SAAAzjD,EAAAiU,GACA,IAAA0pB,EAAA,MAAA1pB,EAAArV,KAAAwkD,YAAAnvC,GAAArV,KAAAykD,iBAAAtkD,IAAAiB,GAGA29B,MAAA3zB,UAAA,IAUA05C,eAAA,SAAA1jD,EAAAiU,GACA,IAAA0pB,EAAA,MAAA1pB,EAAArV,KAAAwkD,YAAAnvC,GAAArV,KAAAykD,iBAAAtkD,IAAAiB,GAEA,SAAA29B,EAEA,OADA/+B,KAAA++B,EAAA3zB,SAAA,qBAAAhK,EAAAiU,GACA0pB,EAAA3zB,UAWAS,WAAA,SAAAzK,EAAAiU,GACA,IAAA0pB,EAAA,MAAA1pB,EAAArV,KAAAwkD,YAAAnvC,GAAArV,KAAAykD,iBAAAtkD,IAAAiB,GACA,OAAA29B,KAAA3zB,WAGAvE,EAAAC,QAAApH,qBCrCAoH,EAAAi+C,gBAzCA,SAAAC,EAAA3yB,EAAAC,GACA,IAAAyM,EAAAimB,EAAAjmB,OACAtuB,EAAAsuB,EAAAv3B,SACAiJ,EAAA,IAAA4hB,EACA5hB,EAAA,IAAA6hB,EACAyM,EAAAjM,SAqCAhsB,EAAAm+C,iBAzBA,SAAAD,EAAAE,EAAAC,EAAAC,GACA,IAAArmB,EAAAimB,EAAAjmB,OACAsmB,EAAAL,EAAAK,UACA50C,EAAAsuB,EAAAv3B,SACAnG,EAAA09B,EAAA19B,MACAikD,EAAAN,EAAAhX,KAAAgX,EAAAhX,MAAA,EAGA,GAFAsX,GAAAJ,EAEAG,EAAA,CACA,IAAAE,EAAAF,EAAAh/C,KAAA,EACAm/C,EAAAH,EAAA9+C,KAAA4X,IACAmnC,EAAAhmD,KAAAiH,IAAAjH,KAAA+G,IAAAm/C,EAAAF,GAAAC,GAGA,IAAAE,EAAAH,EAAAN,EAAAhX,KACAgX,EAAAhX,KAAAsX,EAEA70C,EAAA,KAAA00C,EAAA10C,EAAA,KAAAg1C,EAAA,GACAh1C,EAAA,KAAA20C,EAAA30C,EAAA,KAAAg1C,EAAA,GACApkD,EAAA,IAAAokD,EACApkD,EAAA,IAAAokD,EACA1mB,EAAAjM,8BChEc11B,EAAQ,IAEtByV,QAFA,IAIAvV,EAAaF,EAAQ,GAErBg/C,EAAeh/C,EAAQ,KAEvBQ,EAAcR,EAAQ,IAEtBi/C,EAAuBj/C,EAAQ,KAE/BsoD,EAAiBtoD,EAAQ,KAqBzBK,EAAAH,EAAAG,MACA0D,EAAA7D,EAAA6D,KACAN,EAAAvD,EAAAuD,IACA8kD,EAAArmD,KAAA+G,IACAu/C,EAAAtmD,KAAAiH,IACAs/C,EAAAvmD,KAAAwmD,IACAC,EAAA,IACAC,EAAA,EACAC,EAAA,EACAC,EAAA,YACAC,EAAA,CACAC,EAAA,MACA7zB,EAAA,MACA8zB,EAAA,MACAtiB,EAAA,OAEAuiB,EAAA,CACAF,EAAA,KACA7zB,EAAA,KACA8zB,EAAA,KACAtiB,EAAA,KACAwiB,GAAA,OACAz4C,GAAA,OACA04C,GAAA,OACAC,GAAA,QAEAC,EAAA,CACAtjC,WAAA,CACAtU,UAAA,EACA5L,OAAA,kBACAX,KAAA,mBAEA4gB,eAAA,EACAD,UAAA,SACAG,eAAA,GAEAsjC,EAAA,EAiBA,SAAAliC,EAAAwrB,GACAmM,EAAA9nB,KAAAt0B,MAMAA,KAAAu8C,IAAAtM,EAMAjwC,KAAAC,MAAA,IAAArC,EAAAwV,MAUApT,KAAA4mD,WAQA5mD,KAAA6mD,aAMA7mD,KAAA8mD,QAMA9mD,KAAA+mD,OAAA,GAMA/mD,KAAAqmC,UAMArmC,KAAAgnD,QAAA,GAMAhnD,KAAAinD,eAOAjnD,KAAAknD,eAMAlnD,KAAAmnD,iBAWAnnD,KAAAonD,KAAA,mBAAAT,IAMA3mD,KAAAqnD,UAAA,GACAlmD,EAAAmmD,EAAA,SAAAC,EAAA9Z,GACAztC,KAAAqnD,UAAA5Z,GAAAnwC,EAAAynB,KAAAwiC,EAAAvnD,OACGA,MA6KH,SAAAwnD,EAAAvZ,EAAAjrB,GACA,IAAAykC,EAAAC,EAAA1kC,EAAAC,WAAAukC,YAAAvZ,EAAAjrB,GAIA,OAHAykC,EAAAE,cAAA3kC,EACA4kC,EAAAH,EAAAzkC,GACAirB,EAAAhuC,MAAAuC,IAAAilD,GACAA,EAGA,SAAAI,EAAA5Z,EAAA6Z,GACA,IAAAC,EAAAC,EAAAF,GAOA,OALAC,EAAAF,cACAE,EAAAF,YAAA5Z,EAAA6Z,GACAF,EAAAE,IAAAH,gBAGAG,EAGA,SAAAG,EAAAha,EAAAwZ,GACA,IAAAzkC,EAAAykC,EAAAE,cACAK,EAAAP,GAAAQ,iBAAAha,EAAAwZ,EAAAzkC,EAAA1C,MAAA0C,GAGA,SAAA4kC,EAAAH,EAAAzkC,GACA,IAAApd,EAAAod,EAAApd,EACA,MAAAA,MAAAmgD,GACA0B,EAAAjwC,SAAA,SAAAT,GACAA,EAAAnR,IACAmR,EAAA5U,GAAAyD,IAIA,SAAAsiD,EAAAja,EAAAwZ,GACAO,EAAAP,GAAAU,aAAAla,EAAAwZ,GACAQ,EAAAha,EAAAwZ,GAGA,SAAAO,EAAAP,GACA,OAAAC,EAAAD,EAAAE,cAAA1kC,WAIA,SAAAmlC,EAAAna,EAAA1b,EAAA81B,GACA,IAMAC,EANAC,EAAAta,EAAA6Y,QAEA,IAAAyB,EACA,SAIA,IAAA3+C,EAAAqkC,EAAAgE,WAIA,OAHA9wC,EAAAonD,EAAA,SAAAC,GACAA,EAAAC,iBAAAl2B,EAAA81B,EAAAz+C,KAAA0+C,EAAAE,KAEAF,EAIA,SAAAI,EAAAza,EAAAwZ,GACA,IAAAc,EAAAta,EAAA6Y,QAEA,IAAAyB,EACA,SAGA,IAAAI,EAAAlB,EAAAE,cAAAgB,QAGA,aAAAA,GAAAJ,EAAAI,GAGA,SAAAC,EAAA3a,GACA,IAAA4a,EAAA5a,EAAA+Y,QACA8B,EAAAD,EAAAxpD,OAKA,OAJA8B,EAAA0nD,EAAA,SAAApB,GACAxZ,EAAAhuC,MAAAsM,OAAAk7C,IACGxZ,GACH4a,EAAAxpD,OAAA,IACAypD,EAGA,SAAA5gC,EAAA+lB,EAAAlxB,GACA,IAAAkH,EAAApjB,EAAAotC,EAAA+Y,QAAA,SAAAS,GACA,IAAAzkC,EAAAykC,EAAAE,cACArnC,EAAAhjB,EAAA0D,MAAAgiB,EAAA1C,OACA,OACA2C,UAAAD,EAAAC,UACA0lC,QAAA3lC,EAAA2lC,QACAroC,WAGA2tB,EAAA/lB,QAAA,QAAAjE,EAAA,CACAwB,QAAA1I,EAAA0I,MACApC,gBAAAtG,EAAAsG,gBAmBA,SAAA0lC,EAAAC,GACA,IAAAC,EAAAD,EAAA3pD,OAAA,EAEA,OADA4pD,EAAA,IAAAA,EAAA,GACA,CAAAD,EAAA,GAAAA,EAAAC,IAGA,SAAAC,EAAAC,EAAAlb,EAAAjrB,EAAAomC,GACA,IAAA3B,EAAA,IAAA7pD,EAAAwV,MA2BA,OA1BAq0C,EAAAjlD,IAAA,IAAA5E,EAAA4Q,KAAA,CACApN,KAAA,OACAa,MAAAonD,EAAArmC,GACA5gB,QAAA,EACAyvB,WAAA,EACAljB,OAAA,OACAmjB,MAAAr0B,EAAA0rD,EAAAlb,EAAAwZ,EAAA,QACAz1B,UAAAv0B,EAAAyqB,EAAA+lB,EAAA,CACAxoB,OAAA,OAGAtkB,EAAAioD,EAAA,SAAAhoD,GACAqmD,EAAAjlD,IAAA,IAAA5E,EAAA4Q,KAAA,CACApN,OACAa,MAAA,CACA0iC,QAAA,GAEA9S,WAAA,EACAzvB,QAAA,EACAogC,WAAA,EACA1Q,MAAAr0B,EAAA0rD,EAAAlb,EAAAwZ,EAAArmD,GACA4wB,UAAAv0B,EAAAyqB,EAAA+lB,EAAA,CACAxoB,OAAA,SAIAgiC,EAGA,SAAA6B,EAAArb,EAAAwZ,EAAA8B,EAAAvmC,GACA,IAAAlU,EAAAkU,EAAAI,WAAAtU,WAAA,EACAi2B,EAAA6gB,EAAA92C,EAAAm3C,GACAxhD,EAAA8kD,EAAA,MACA7kD,EAAA6kD,EAAA,MACAC,EAAA/kD,EAAAqK,EAAA,EACA26C,EAAA/kD,EAAAoK,EAAA,EACAlQ,EAAA2qD,EAAA,MACA1qD,EAAA0qD,EAAA,MACAG,EAAA9qD,EAAAmmC,EAAAj2B,EAAA,EACA66C,EAAA9qD,EAAAkmC,EAAAj2B,EAAA,EACAL,EAAA7P,EAAA6F,EACAiK,EAAA7P,EAAA6F,EACAklD,EAAAn7C,EAAAK,EACA+6C,EAAAn7C,EAAAI,EACAg7C,EAAA7b,EAAAwZ,EAAA,OAAAhjD,EAAAC,EAAA+J,EAAAC,GAEAsU,EAAAG,gBACA2mC,EAAA7b,EAAAwZ,EAAA,IAAA+B,EAAAC,EAAA1kB,EAAA8kB,GACAC,EAAA7b,EAAAwZ,EAAA,IAAAiC,EAAAD,EAAA1kB,EAAA8kB,GACAC,EAAA7b,EAAAwZ,EAAA,IAAA+B,EAAAC,EAAAG,EAAA7kB,GACA+kB,EAAA7b,EAAAwZ,EAAA,IAAA+B,EAAAG,EAAAC,EAAA7kB,GACA+kB,EAAA7b,EAAAwZ,EAAA,KAAA+B,EAAAC,EAAA1kB,KACA+kB,EAAA7b,EAAAwZ,EAAA,KAAAiC,EAAAD,EAAA1kB,KACA+kB,EAAA7b,EAAAwZ,EAAA,KAAA+B,EAAAG,EAAA5kB,KACA+kB,EAAA7b,EAAAwZ,EAAA,KAAAiC,EAAAC,EAAA5kB,MAIA,SAAAojB,EAAAla,EAAAwZ,GACA,IAAAzkC,EAAAykC,EAAAE,cACAxkC,EAAAH,EAAAG,cACA4mC,EAAAtC,EAAAuC,QAAA,GACAD,EAAAvtB,SAAA6sB,EAAArmC,IACA+mC,EAAA54C,KAAA,CACA/O,QAAA+gB,EACAxU,OAAAwU,EAAA,mBAEAhiB,EAAA,+CAAAC,GACA,IAAA2V,EAAA0wC,EAAAzkB,YAAA5hC,GACA6oD,EAgCA,SAAAC,EAAAjc,EAAAkc,GACA,GAAAA,EAAA9qD,OAAA,GACA8qD,IAAAC,MAAA,IACA,IAAAH,EAAA,CAAAC,EAAAjc,EAAAkc,EAAA,IAAAD,EAAAjc,EAAAkc,EAAA,KAEA,OADA,MAAAF,EAAA,UAAAA,EAAA,KAAAA,EAAA3rD,UACA2rD,EAAAI,KAAA,IAEA,IAYAJ,EAAArsD,EAAAouC,mBAZA,CACAoa,EAAA,OACA7zB,EAAA,QACA8zB,EAAA,MACAtiB,EAAA,UAQAomB,GAvBA,SAAAlc,GACA,OAAArwC,EAAAkuC,aAAAmC,EAAAhuC,OAsBA6rC,CAAAmC,IACA,MAPA,CACAl9B,KAAA,IACAC,MAAA,IACAH,IAAA,IACAC,OAAA,KAGAm5C,GApDAC,CAAAjc,EAAA7sC,GACA2V,KAAA5F,KAAA,CACA/O,QAAA+gB,EACAqf,WAAArf,EACAxU,OAAAwU,EAAAmjC,EAAA2D,GAAA,mBAKA,SAAAH,EAAA7b,EAAAwZ,EAAArmD,EAAAqD,EAAAC,EAAA0hD,EAAAkE,GACA,IAAAvzC,EAAA0wC,EAAAzkB,YAAA5hC,GACA2V,KAAA4kB,SAqFA,SAAApsB,GACA,IAAAg7C,EAAA5E,EAAAp2C,EAAA,MAAAA,EAAA,OACAi7C,EAAA7E,EAAAp2C,EAAA,MAAAA,EAAA,OACAk7C,EAAA7E,EAAAr2C,EAAA,MAAAA,EAAA,OACAm7C,EAAA9E,EAAAr2C,EAAA,MAAAA,EAAA,OACA,OACA9K,EAAA8lD,EACA7lD,EAAA8lD,EACA/7C,MAAAg8C,EAAAF,EACA77C,OAAAg8C,EAAAF,GA9FAG,CAAAC,EAAA3c,EAAAwZ,EAAA,EAAAhjD,EAAAC,GAAA,CAAAD,EAAA2hD,EAAA1hD,EAAA4lD,OAGA,SAAAjB,EAAArmC,GACA,OAAA1lB,EAAA2F,SAAA,CACA4nD,eAAA,GACG7nC,EAAAI,YAGH,SAAA0nC,EAAArmD,EAAAC,EAAA9F,EAAAC,GACA,IAAAwH,EAAA,CAAAs/C,EAAAlhD,EAAA7F,GAAA+mD,EAAAjhD,EAAA7F,IACA0H,EAAA,CAAAq/C,EAAAnhD,EAAA7F,GAAAgnD,EAAAlhD,EAAA7F,IACA,QAAAwH,EAAA,GAAAE,EAAA,IACA,CAAAF,EAAA,GAAAE,EAAA,KAgCA,SAAAwkD,EAAAC,EAAAC,EAAAhd,EAAAwZ,EAAArmD,EAAAixB,EAAAC,EAAAC,GACA,IAAAvP,EAAAykC,EAAAE,cACAuD,EAAAF,EAAAhoC,EAAA1C,OACA6qC,EAAAC,EAAAnd,EAAA5b,EAAAC,GACAnxB,EAAAC,EAAAgpD,MAAA,aAAAiB,GACA,IAAAC,EAAAnF,EAAAkF,GACAH,EAAAI,EAAA,IAAAA,EAAA,KAAAH,EAAAG,EAAA,MAEAtoC,EAAA1C,MAAA2qC,EAAAH,EAAAI,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QACAhD,EAAAja,EAAAwZ,GACAv/B,EAAA+lB,EAAA,CACAxoB,OAAA,IAIA,SAAA8lC,EAAAtd,EAAAwZ,EAAAp1B,EAAAC,EAAAC,GACA,IAAAjS,EAAAmnC,EAAAE,cAAArnC,MACA6qC,EAAAC,EAAAnd,EAAA5b,EAAAC,GACAnxB,EAAAmf,EAAA,SAAAlS,GACAA,EAAA,IAAA+8C,EAAA,GACA/8C,EAAA,IAAA+8C,EAAA,KAEAjD,EAAAja,EAAAwZ,GACAv/B,EAAA+lB,EAAA,CACAxoB,OAAA,IAIA,SAAA2lC,EAAAnd,EAAA5b,EAAAC,GACA,IAAAqU,EAAAsH,EAAAhuC,MACAurD,EAAA7kB,EAAA6F,sBAAAna,EAAAC,GACAm5B,EAAA9kB,EAAA6F,sBAAA,KACA,OAAAgf,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAGA,SAAAb,EAAA3c,EAAAwZ,EAAAxgC,GACA,IAAAqhC,EAAAI,EAAAza,EAAAwZ,GACA,OAAAa,IAAA,IAAAA,IAAAoD,SAAAzkC,EAAAgnB,EAAAgE,YAAA30C,EAAA0D,MAAAimB,GA2CA,SAAA0kC,EAAAp5B,GACA,IAAAq5B,EAAAr5B,EAAAzmB,MACA8/C,EAAAD,gBAAAC,EAAAD,iBAGA,SAAAE,EAAApE,EAAAhjD,EAAAC,GACA,OAAA+iD,EAAAzkB,YAAA,QAAAtgB,QAAAje,EAAAC,GAGA,SAAAonD,EAAA7d,EAAA1b,EAAA81B,EAAA5iC,GACA,IAGAsmC,EAHAjE,EAAA7Z,EAAAgZ,eACAqB,EAAAra,EAAAiZ,eACA8E,EAAA/d,EAAA4Y,aAKA,GAFA5Y,EAAA8Y,OAAAvjD,KAAA6kD,EAAAhqD,SAnPA,SAAA4vC,GACA,IAAA+a,EAAA/a,EAAA8Y,OAEA,IAAAiC,EAAA3pD,OACA,SAGA,IAAA8kD,EAAA6E,IAAA3pD,OAAA,GACA6kD,EAAA8E,EAAA,GACA32B,EAAA8xB,EAAA,GAAAD,EAAA,GACA5xB,EAAA6xB,EAAA,GAAAD,EAAA,GAEA,OADA2B,EAAAxzB,IAAAC,IAAA,IACA0zB,EAyOAiG,CAAAhe,IAAA6Z,EAAA,CACA,GAAAQ,IAAAR,EAAA,CACA,WAAAkE,EAAA9oC,WAAA0lC,EAAA3a,GACA,IAAAjrB,EAAA1lB,EAAA0D,MAAAgrD,GACAhpC,EAAAC,UAAAipC,EAAAlpC,EAAAC,UAAAqlC,GACAtlC,EAAA2lC,SAAA,IAAAL,EAAA,KAAAA,EAAAK,QACAb,EAAA7Z,EAAAgZ,eAAAO,EAAAvZ,EAAAjrB,GAEAirB,EAAA+Y,QAAAxjD,KAAAskD,GAGA,GAAAA,EAAA,CACA,IAAAC,EAAAL,EAAAwE,EAAAje,EAAA2Y,WAAA0B,IACAR,EAAAH,cACArnC,MAAAynC,EAAAoE,iBAAAvB,EAAA3c,EAAA6Z,EAAA7Z,EAAA8Y,SAEAthC,IACAoiC,EAAA5Z,EAAA6Z,GACAC,EAAAI,aAAAla,EAAA6Z,IAGAG,EAAAha,EAAA6Z,GACAiE,EAAA,CACAtmC,eAGGA,GAAA,WAAAumC,EAAA9oC,WAAA8oC,EAAA3oC,eAMH+kC,EAAAna,EAAA1b,EAAA81B,IAAAO,EAAA3a,KACA8d,EAAA,CACAtmC,QACApC,eAAA,IAKA,OAAA0oC,EAGA,SAAAG,EAAAjpC,EAAAqlC,GACA,eAAArlC,EACAqlC,EAAA8D,iBAGAnpC,EAjjBAwB,EAAA9I,UAAA,CACAC,YAAA6I,EAmBAsB,YAAA,SAAA/C,GAGA,OAFAhjB,KAAA4mD,YAkIA,SAAA3Y,GACA,IAAAgC,EAAAhC,EAAAsO,IACAF,EAAAgQ,QAAApc,EAAAiW,EAAAjY,EAAAmZ,MAWA,SAAAnX,EAAAqc,GACAnrD,EAAAmrD,EAAA,SAAA/E,EAAA9Z,GACAwC,EAAAmN,IAAA3P,EAAA8Z,KAZAgF,CAAAtc,EAAAhC,EAAAoZ,WACApZ,EAAA2Y,WAAA3Y,EAAA4Y,aAAA,KAtIA2F,CAAAxsD,MACAgjB,EAAAC,WAqHA,SAAAgrB,EAAAjrB,GACA,IAAAitB,EAAAhC,EAAAsO,IAEAtO,EAAAkZ,kBACA9K,EAAAoQ,KAAAxc,EAAAiW,EAAAjY,EAAAmZ,OAeA,SAAAnX,EAAAqc,GACAnrD,EAAAmrD,EAAA,SAAA/E,EAAA9Z,GACAwC,EAAAnrB,GAAA2oB,EAAA8Z,MAdAmF,CAAAzc,EAAAhC,EAAAoZ,WACApZ,EAAA2Y,WAAA5jC,EAAAC,UACAgrB,EAAA4Y,aAAAvpD,EAAAsY,MAAAtY,EAAA0D,MAAA0lD,GAAA1jC,GAAA,GA9HA2pC,CAAA3sD,KAAAgjB,GACAhjB,MAaA6lB,UAAA,SAAA+mC,GACA,GAAAA,KAAAvtD,OAAA,CACA,IAAAkpD,EAAAvoD,KAAA8mD,QAAA,GACAxpD,EAAA6D,KAAAyrD,EAAA,SAAAA,GACArE,EAAAqE,EAAAjE,SAAArrD,EAAA0D,MAAA4rD,UAGA5sD,KAAA8mD,QAAA,KAGA,OAAA9mD,MAOAilB,MAAA,SAAAlI,GACAA,KAAA,GACA/c,KAAAmnD,iBAAApqC,EAAA8vC,gBACA,IAAAlmB,EAAA3mC,KAAAC,MAUA,OARAD,KAAAu8C,IAAA/5C,IAAAmkC,GAEAA,EAAAx1B,KAAA,CACA3J,SAAAuV,EAAAvV,UAAA,MACAC,SAAAsV,EAAAtV,UAAA,EACApG,MAAA0b,EAAA1b,OAAA,QAEArB,KAAAiyC,WAAAtL,EAAAvT,oBACApzB,MAEA8sD,UAAA,SAAAC,EAAAtR,GACAt6C,EAAAnB,KAAAgnD,QAAA+F,EAAAtR,IAgBAz1B,aAAA,SAAAgnC,GACAA,EAAA1vD,EAAAuD,IAAAmsD,EAAA,SAAAhqC,GACA,OAAA1lB,EAAAsY,MAAAtY,EAAA0D,MAAA0lD,GAAA1jC,GAAA,KAEA,IAAAiqC,EAAA,kBACAC,EAAAltD,KAAAgnD,QACAmG,EAAAntD,KAAAgnD,QAAA,GACA/Y,EAAAjuC,KACA8nD,EAAA9nD,KAAAinD,eAEA,OADA,IAAAvB,EAAAwH,EAAAF,EAOA,SAAAvF,EAAAxyC,GACA,OAAAm4C,EAAA3F,EAAAE,cAAA1yC,IARAm4C,GAAA5qD,IAAA6qD,GAAApiD,OAAAoiD,GAAA9gD,OAuBA,SAAA+gD,GACAJ,EAAAI,KAAAxF,GACA7Z,EAAAhuC,MAAAsM,OAAA2gD,EAAAI,MAzBAhxB,UACAt8B,KAEA,SAAAotD,EAAApqC,EAAA/N,GACA,aAAA+N,EAAA3N,GAAA2N,EAAA3N,GAAA43C,EAAAh4C,GAAA,IAAA+N,EAAAC,UAOA,SAAAoqC,EAAAE,EAAAD,GACA,IAAAE,EAAAR,EAAAO,GAGA,SAAAD,GAAAJ,EAAAI,KAAAxF,EACAqF,EAAAI,GAAAL,EAAAI,OACO,CACP,IAAA7F,EAAA0F,EAAAI,GAAA,MAAAD,GAAAJ,EAAAI,GAAA3F,cAAA6F,EAAAN,EAAAI,IAAAzF,EAAA5Z,EAAAuZ,EAAAvZ,EAAAuf,IACAtF,EAAAja,EAAAwZ,MAUAgG,QAAA,WAOA,OANAztD,KAAA+lB,aAAA,GAEA6iC,EAAA5oD,MAEAA,KAAAu8C,IAAAhwC,OAAAvM,KAAAC,OAEAD,MAEAsM,QAAA,WACAtM,KAAAytD,UACAztD,KAAAo9C,QAGA9/C,EAAA8rB,MAAA3E,EAAA23B,GA2aA,IAAAkL,EAAA,CACA5K,UAAA,SAAAnqB,GACA,GAAAvyB,KAAAqmC,UAGAqnB,EAAA1tD,KAAAuyB,QACK,IAAAA,EAAAwM,SAAAxM,EAAAwM,OAAAlN,UAAA,CACL85B,EAAAp5B,GACA,IAAA81B,EAAAroD,KAAAC,MAAAusC,sBAAAja,EAAAE,QAAAF,EAAAG,SACA1yB,KAAAinD,eAAA,MACAjnD,KAAAknD,eAAAkB,EAAApoD,KAAAuyB,EAAA81B,MAGAroD,KAAAqmC,WAAA,EACArmC,KAAA+mD,OAAA,CAAAsB,EAAAhqD,YAIAu+C,UAAA,SAAArqB,GACA,IAAA9tB,EAAA8tB,EAAAE,QACA/tB,EAAA6tB,EAAAG,QACA21B,EAAAroD,KAAAC,MAAAusC,sBAAA/nC,EAAAC,GAGA,GAvHA,SAAAupC,EAAA1b,EAAA81B,GACA,GACApa,EAAA2Y,aA+IA,SAAA3Y,EAAAxpC,EAAAC,GACA,IAAAurC,EAAAhC,EAAAsO,IACA,OAAA93C,EAAA,GAAAA,EAAAwrC,EAAA32B,YAAA5U,EAAA,GAAAA,EAAAurC,EAAAz2B,YA9IAm0C,CAAA1f,EAAA1b,GAJA,CAQA,IAAA0d,EAAAhC,EAAAsO,IACAsM,EAAA5a,EAAA+Y,QACA4G,EAAAxF,EAAAna,EAAA1b,EAAA81B,GAEA,IAAApa,EAAA5H,UACA,QAAA/iC,EAAA,EAAmBA,EAAAulD,EAAAxpD,OAAmBiE,IAAA,CACtC,IAAA0f,EAAA6lC,EAAAvlD,GAAAqkD,cAEA,GAAAiG,KAAA,IAAAA,GAAA5qC,EAAA2lC,UAAAiF,EAAAjF,UAAAjB,EAAA1kC,EAAAC,WAAAP,QAAAmmC,EAAAvlD,GAAA+kD,EAAA,GAAAA,EAAA,IAEA,OAKAuF,GAAA3d,EAAA4d,eAAA,cA6FAC,CAAA9tD,KAAAuyB,EAAA81B,GAEAroD,KAAAqmC,UAAA,CACAslB,EAAAp5B,GACA,IAAAw5B,EAAAD,EAAA9rD,KAAAuyB,EAAA81B,GAAA,GACA0D,GAAA7jC,EAAAloB,KAAA+rD,KAGAjP,QAAA,SAAAvqB,GACAm7B,EAAA1tD,KAAAuyB,KAIA,SAAAm7B,EAAAzf,EAAA1b,GACA,GAAA0b,EAAA5H,UAAA,CACAslB,EAAAp5B,GACA,IAAA9tB,EAAA8tB,EAAAE,QACA/tB,EAAA6tB,EAAAG,QACA21B,EAAApa,EAAAhuC,MAAAusC,sBAAA/nC,EAAAC,GACAqnD,EAAAD,EAAA7d,EAAA1b,EAAA81B,GAAA,GACApa,EAAA5H,WAAA,EACA4H,EAAA8Y,OAAA,GACA9Y,EAAAgZ,eAAA,KAEA8E,GAAA7jC,EAAA+lB,EAAA8d,IAcA,IAAArE,EAAA,CACAnlC,MAAAwrC,EAAA,GACAvrC,MAAAurC,EAAA,GACAx/C,KAAA,CACAi5C,YAAA,SAAAvZ,EAAAjrB,GACA,OAAAkmC,EAAAzrD,EAAAstD,EAAA,SAAAzqC,GACA,OAAAA,GACO,SAAAA,GACP,OAAAA,IACO2tB,EAAAjrB,EAAA,wCAEPmpC,iBAAA,SAAA6B,GACA,IAAAC,EAAAlF,EAAAiF,GACA,OAAAlD,EAAAmD,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAEAhG,iBAAA,SAAAha,EAAAwZ,EAAA8B,EAAAvmC,GACAsmC,EAAArb,EAAAwZ,EAAA8B,EAAAvmC,IAEAmlC,eACAzlC,QAAAmpC,GAEAjpC,QAAA,CACA4kC,YAAA,SAAAvZ,EAAAjrB,GACA,IAAAykC,EAAA,IAAA7pD,EAAAwV,MAQA,OALAq0C,EAAAjlD,IAAA,IAAA5E,EAAAiS,SAAA,CACAzO,KAAA,OACAa,MAAAonD,EAAArmC,GACA5gB,QAAA,KAEAqlD,GAEA0E,iBAAA,SAAA6B,GACA,OAAAA,GAEAnG,YAAA,SAAA5Z,EAAAwZ,GACAA,EAAAl7C,OAAAk7C,EAAAuC,QAAA,IAEAvC,EAAAjlD,IAAA,IAAA5E,EAAAq+B,QAAA,CACA76B,KAAA,OACAywB,WAAA,EACAC,MAAAr0B,EAAA8tD,EAAAtd,EAAAwZ,GACAz1B,UAAAv0B,EAAAyqB,EAAA+lB,EAAA,CACAxoB,OAAA,QAIAwiC,iBAAA,SAAAha,EAAAwZ,EAAA8B,EAAAvmC,GACAykC,EAAAuC,QAAA,GAAAruB,SAAA,CACApsB,OAAAq7C,EAAA3c,EAAAwZ,EAAA8B,MAGApB,eACAzlC,QAAAmpC,IAIA,SAAAkC,EAAAhsC,GACA,OACAylC,YAAA,SAAAvZ,EAAAjrB,GACA,OAAAkmC,EAAAzrD,EAAAstD,EAAA,SAAAzqC,GACA,IAAA4qC,EAAA,CAAA5qC,EAAA,SAEA,OADAyB,GAAAmpC,EAAA5sD,UACA4sD,GACO,SAAAA,GACP,OAAAA,EAAAnpC,KACOksB,EAAAjrB,EAAA,sBAAAjB,KAEPoqC,iBAAA,SAAA6B,GACA,IAAAC,EAAAlF,EAAAiF,GAGA,OAFArI,EAAAsI,EAAA,GAAAlsC,GAAAksC,EAAA,GAAAlsC,IACA6jC,EAAAqI,EAAA,GAAAlsC,GAAAksC,EAAA,GAAAlsC,MAGAkmC,iBAAA,SAAAha,EAAAwZ,EAAA8B,EAAAvmC,GACA,IAAAja,EAEAu/C,EAAAI,EAAAza,EAAAwZ,GAEA,QAAAa,KAAA4F,0BACAnlD,EAAAu/C,EAAA4F,0BAAAnsC,EAAAksB,EAAAgE,gBACO,CACP,IAAAhC,EAAAhC,EAAAsO,IACAxzC,EAAA,IAAAknC,EAAA32B,WAAA22B,EAAAz2B,aAAA,EAAAuI,IAGA,IAAAmpC,EAAA,CAAA3B,EAAAxgD,GACAgZ,GAAAmpC,EAAA5sD,UACAgrD,EAAArb,EAAAwZ,EAAAyD,EAAAloC,IAEAmlC,eACAzlC,QAAAmpC,GAIA,IAAAnsD,EAAA+kB,EACA5d,EAAAC,QAAApH,uBCx4BA,IAAApC,EAAaF,EAAQ,GAErB+wD,EAAgB/wD,EAAQ,KAExBQ,EAAcR,EAAQ,IAEtB+5C,EAA6B/5C,EAAQ,KAErCkoC,EAAgBloC,EAAQ,KAExB0yC,EAAmB1yC,EAAQ,KAwB3BgxD,GAAAC,EAtBajxD,EAAQ,IAErBixD,aAqBArtD,EAAA1D,EAAA0D,MACA+jB,EAAAznB,EAAAynB,KAMA,SAAA5c,KAmaA,SAAAk0B,EAAAiyB,EAAAC,EAAAx3C,EAAAY,IAQA,SAAA62C,EAAAC,EAAAC,GACA,GAAApxD,EAAA6pB,SAAAsnC,IAAAnxD,EAAA6pB,SAAAunC,GAAA,CACA,IAAAC,GAAA,EAIA,OAHArxD,EAAA6D,KAAAutD,EAAA,SAAA/jC,EAAAmxB,GACA6S,KAAAH,EAAAC,EAAA3S,GAAAnxB,OAEAgkC,EAEA,OAAAF,IAAAC,GAdAF,CAAAJ,EAAAr3C,GAAA63C,SAAAj3C,KACAy2C,EAAAr3C,GAAA63C,SAAAj3C,EACA42C,EAAA3wD,EAAAy+B,YAAAtlB,EAAAY,EAAA22C,IAAAv3C,EAAAmd,gBAAAnd,EAAA5F,KAAAwG,KAgBA,SAAAk3C,EAAAC,EAAApmD,GACAomD,EAAApmD,EAAAvI,IAAA,+BAGA,SAAA4uD,EAAA57B,GACA,OACA3rB,SAAA2rB,EAAA3rB,SAAAnJ,QACAoJ,SAAA0rB,EAAA1rB,UAAA,GAIA,SAAAunD,EAAA/uD,EAAAyI,EAAAtG,GACA,IAAAwD,EAAA8C,EAAAvI,IAAA,KACAqpB,EAAA9gB,EAAAvI,IAAA,UACAF,KAAAuX,SAAA,SAAAT,GACA,UAAAA,EAAApZ,OACA,MAAAiI,IAAAmR,EAAAnR,KACA,MAAA4jB,IAAAzS,EAAAyS,UACAzS,EAAA3U,YAvcA+F,EAAAwT,UAAA,CAIAszC,OAAA,KAKAC,gBAAA,KAKAC,QAAA,KAKA9oB,WAAA,EAKA+oB,WAAA,KAKAC,YAAA,KAKAC,aAAA,KAOAzmD,mBAAA,GAKAhJ,OAAA,SAAA4I,EAAAC,EAAAC,EAAAivC,GACA,IAAAxyC,EAAAsD,EAAAvI,IAAA,SACAiiD,EAAA15C,EAAAvI,IAAA,UASA,GANAH,KAAAuvD,WAAA9mD,EACAzI,KAAAwvD,kBAAA9mD,EACA1I,KAAAyvD,KAAA9mD,EAIAivC,GAAA53C,KAAAovD,aAAAhqD,GAAApF,KAAAqvD,cAAAjN,EAAA,CAIApiD,KAAAovD,WAAAhqD,EACApF,KAAAqvD,YAAAjN,EACA,IAAAniD,EAAAD,KAAAivD,OACA5jB,EAAArrC,KAAAmvD,QAEA,IAAA/M,GAAA,SAAAA,EAIA,OAFAniD,KAAAyvD,YACArkB,KAAAqkB,QAIAzvD,KAAA4O,OACAw8B,KAAAx8B,OAEA,IAAArG,EAAA,GACAxI,KAAAuI,aAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,GAEA,IAAAY,EAAAf,EAAAe,WAEAA,IAAAvJ,KAAAkvD,iBACAlvD,KAAA0mC,MAAA/9B,GAGA3I,KAAAkvD,gBAAA3lD,EACA,IAAAglD,EAAAvuD,KAAA2vD,eAAA3vD,KAAA4vD,mBAAAnnD,EAAAC,GAEA,GAAAzI,EAKK,CACL,IAAA4vD,EAAAvyD,EAAAG,MAAA4+B,EAAA3zB,EAAA6lD,GACAvuD,KAAA8vD,gBAAA7vD,EAAAuI,EAAAqnD,EAAAnnD,GACA1I,KAAA+vD,cAAA9vD,EAAAuI,EAAAqnD,EAAAnnD,QAPAzI,EAAAD,KAAAivD,OAAA,IAAArxD,EAAAwV,MACApT,KAAAgwD,gBAAA/vD,EAAAuI,EAAAC,EAAAC,GACA1I,KAAAiwD,cAAAhwD,EAAAuI,EAAAC,EAAAC,GACAC,EAAAkc,QAAAriB,IAAAvC,GAOA+uD,EAAA/uD,EAAAyI,GAAA,GAEA1I,KAAAgnC,cAAA5hC,KAMAmH,OAAA,SAAA5D,GACA3I,KAAA0mC,MAAA/9B,IAMA2D,QAAA,SAAA3D,GACA3I,KAAA0mC,MAAA/9B,IAMAinD,mBAAA,SAAAnnD,EAAAC,GACA,IAAA8f,EAAA9f,EAAAvI,IAAA,aACAE,EAAAoI,EAAApI,KACAse,EAAA,aAAAte,EAAA1C,KACAuyD,EAAAxnD,EAAAvI,IAAA,QAEA,IAAA+vD,IAAAvxC,EACA,SAGA,YAAA6J,GAAA,MAAAA,EAAA,CACA,IAAA3f,EAAA7I,KAAA6I,mBAEA,GAAA8V,GAAAte,EAAAqK,eAAA7B,EACA,SAMA,GAAAqnD,EAAA,CACA,IAAAhO,EAAA/K,EAAAjf,YAAAzvB,GAAAy5C,gBACAh1B,EAAA7sB,EAAAE,YAEA,OAAAjB,KAAAC,IAAA2tB,EAAA,GAAAA,EAAA,IAAAg1B,EAAAr5C,EAGA,SAGA,WAAA2f,GAOAjgB,aAAA,SAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,KAMAqnD,gBAAA,SAAA/vD,EAAAuI,EAAAC,EAAAC,GACA,IAAAW,EAAAb,EAAAgB,QAEA,GAAAH,EAAA,CACA,IAAA8mD,EAAA/B,EAAAnuD,GAAAkwD,UAAA,IAAAvyD,EAAAyL,EAAA1L,MAAAqD,EAAAwH,EAAAgB,UACAvJ,EAAAuC,IAAA2tD,KAOAF,cAAA,SAAAhwD,EAAAuI,EAAAC,EAAAC,GACA,GAAAF,EAAA6d,MAAA,CACA,IAAAyoC,EAAAV,EAAAnuD,GAAA6uD,QAAA,IAAAlxD,EAAA4Q,KAAAxN,EAAAwH,EAAA6d,QACApmB,EAAAuC,IAAAssD,GACAD,EAAAC,EAAApmD,KAOAonD,gBAAA,SAAA7vD,EAAAuI,EAAA6zB,GACA,IAAA8zB,EAAA/B,EAAAnuD,GAAAkwD,UAEAA,GAAA3nD,EAAAgB,UACA2mD,EAAAt8B,SAAArrB,EAAAgB,QAAAvH,OACAo6B,EAAA8zB,EAAA,CACA3uD,MAAAgH,EAAAgB,QAAAhI,UAQAuuD,cAAA,SAAA9vD,EAAAuI,EAAA6zB,EAAA3zB,GACA,IAAAomD,EAAAV,EAAAnuD,GAAA6uD,QAEAA,IACAA,EAAAj7B,SAAArrB,EAAA6d,MAAApkB,OACAo6B,EAAAyyB,EAAA,CAGAttD,MAAAgH,EAAA6d,MAAA7kB,MACAgG,SAAAgB,EAAA6d,MAAA7e,WAEAqnD,EAAAC,EAAApmD,KAOAs+B,cAAA,SAAA5hC,GACA,IAAApF,KAAAqmC,WAAArmC,KAAAowD,sBAAA,CAIA,IAcA97C,EAdA5L,EAAA1I,KAAAwvD,kBAEAvf,EAAAjwC,KAAAyvD,KAAA5qC,QAEAwmB,EAAArrC,KAAAmvD,QACAkB,EAAA3nD,EAAAhH,SAAA,UACA0gD,EAAA15C,EAAAvI,IAAA,UAEA,IAAAkwD,EAAAlwD,IAAA,UAAAiiD,GAAA,SAAAA,EAGA,OAFA/W,GAAA4E,EAAA1jC,OAAA8+B,QACArrC,KAAAmvD,QAAA,MAMAnvD,KAAAmvD,UACA76C,GAAA,EACA+2B,EAAArrC,KAAAmvD,QAAAvxD,EAAA4iC,WAAA6vB,EAAAlwD,IAAA,SACAwO,OAAA,OACAkjB,WAAA,EACAy+B,YAAA,SAAA/9B,GAEA+S,EAAA8G,KAAA7Z,EAAAzmB,QAEAykD,YAAAxrC,EAAA/kB,KAAAwwD,kBAAAxwD,KAAA,KACA8xB,MAAA/M,EAAA/kB,KAAAwwD,kBAAAxwD,MACAgyB,UAAAjN,EAAA/kB,KAAAywD,iBAAAzwD,QAEAiwC,EAAAztC,IAAA6oC,IAGA2jB,EAAA3jB,EAAA3iC,GAAA,GAGA2iC,EAAAxX,SAAAw8B,EAAAxiD,aAAA,KADA,6GAGA,IAAAk3B,EAAAsrB,EAAAlwD,IAAA,QAEA7C,EAAAoW,QAAAqxB,KACAA,EAAA,CAAAA,MAGAsG,EAAAl6B,KAAA,SAAA4zB,EAAA,KAAAA,EAAA,OACA+K,EAAAvJ,eAAAvmC,KAAA,yBAAAqwD,EAAAlwD,IAAA,0BAEAH,KAAA0wD,mBAAAtrD,EAAAkP,KAMAo8C,mBAAA,SAAAtrD,EAAAkP,GACA+nB,EAAAr8B,KAAAwvD,mBAAAl7C,GAAAtU,KAAA2vD,eAAA3vD,KAAAmvD,QAAAJ,EAAA/uD,KAAA2wD,mBAAAvrD,EAAApF,KAAAuvD,WAAAvvD,KAAAwvD,sBAMAgB,kBAAA,SAAAn+B,EAAAC,GACA,IAAA+Y,EAAArrC,KAAAmvD,QAEA,GAAA9jB,EAAA,CAIArrC,KAAAqmC,WAAA,EAEA,IAAAlT,EAAAnzB,KAAAowD,sBAAArB,EAAA1jB,GAAA,CAAAhZ,EAAAC,GAAAtyB,KAAAuvD,WAAAvvD,KAAAwvD,mBACAxvD,KAAAsvD,aAAAn8B,EACAkY,EAAAnX,gBACAmX,EAAAl6B,KAAA49C,EAAA57B,IACAi7B,EAAA/iB,GAAAujB,SAAA,KAEA5uD,KAAA4wD,2BAOAA,uBAAA,WAGA,GAFA5wD,KAAAmvD,QAEA,CAIA,IAAA0B,EAAA7wD,KAAAsvD,aACA7mD,EAAAzI,KAAAuvD,WAEAvvD,KAAAyvD,KAAA/pC,eAAA,CACA/nB,KAAA,oBACA8G,EAAAosD,EAAAC,YAAA,GACApsD,EAAAmsD,EAAAC,YAAA,GACAC,cAAAF,EAAAE,cACAzR,SAAA,EACA3iC,QAAAlU,EAAApI,KAAAuI,IACA2R,UAAA9R,EAAAwQ,qBAQAw3C,iBAAA,SAAAlC,GAIA,GAHAvuD,KAAAqmC,WAAA,EACArmC,KAAAmvD,QAEA,CAIA,IAAA/pD,EAAApF,KAAAwvD,kBAAArvD,IAAA,SAKAH,KAAA0wD,mBAAAtrD,GAIApF,KAAAyvD,KAAA/pC,eAAA,CACA/nB,KAAA,cAYAgzD,mBAAA,KAWAP,sBAAA,KAKA1pB,MAAA,SAAA/9B,GACA3I,KAAAovD,WAAA,KACApvD,KAAAqvD,YAAA,KACA,IAAApf,EAAAtnC,EAAAkc,QACA5kB,EAAAD,KAAAivD,OACA5jB,EAAArrC,KAAAmvD,QAEAlf,GAAAhwC,IACAD,KAAAkvD,gBAAA,KACAjvD,GAAAgwC,EAAA1jC,OAAAtM,GACAorC,GAAA4E,EAAA1jC,OAAA8+B,GACArrC,KAAAivD,OAAA,KACAjvD,KAAAmvD,QAAA,KACAnvD,KAAAsvD,aAAA,OAOA0B,QAAA,aASAC,WAAA,SAAAjvC,EAAAC,EAAAmiC,GAEA,OACA3/C,EAAAud,EAFAoiC,KAAA,GAGA1/C,EAAAsd,EAAA,EAAAoiC,GACA31C,MAAAwT,EAAAmiC,GACA11C,OAAAuT,EAAA,EAAAmiC,MAIAj8C,EAAAwT,UAAAC,YAAAzT,EA6CAgmD,EAAA+C,kBAAA/oD,GACA,IAAAzI,EAAAyI,EACAtB,EAAAC,QAAApH,uBC1fgBtC,EAAQ,IAqBxBiqB,yBAAA,sBAEA,sCCvBA,IAAA/pB,EAAaF,EAAQ,GAErB8K,EAAiB9K,EAAQ,IAuBzB+zD,EAAA,qCAmBA,SAAAC,EAAA3mC,EAAA4mC,GACA5mC,IAAApsB,QACA,IAAAizD,EAAAh0D,EAAAuD,IAAA4pB,EAAAviB,EAAAe,cACAooD,MAAA,IAAAhzD,QACA,IAAAkzD,EAAAj0D,EAAAuD,IAAAwwD,EAAAnpD,EAAAe,cACA,gBAAA0oB,EAAA8pB,GACAn+C,EAAA6D,KAAAspB,EAAA,SAAArpB,EAAA6T,GAMA,IALA,IAAAu8C,EAAA,CACApwD,OACAqwD,QAAAH,EAAAr8C,IAGAy8C,EAAA,EAAqBA,EAAAL,EAAAhyD,OAAkBqyD,IACvCF,EAAAH,EAAAK,IAAAtwD,EAAAmwD,EAAAG,GAGA//B,EAAA2C,KAAAmnB,EAAA+V,MAoBA,IAAA3Y,EAAAuY,EAzDA,wCAyDA,mCAsEAtqD,EAAAsV,iBAvHA,SAAAu1C,GACA,OAAAr0D,EAAA8rC,QAAA+nB,EAAAQ,IAAA,GAuHA7qD,EAAAsqD,iBACAtqD,EAAA+xC,cACA/xC,EAAA8qD,wBA5DA,SAAAC,EAAAC,EAAAC,GACA,gBAAAC,GACA,IAcAC,EAdA17C,EAAA,CACA27C,MAAA,GACAC,QAAA,IAOA,GAJAL,EAAA,SAAAM,GACA77C,EAAA47C,QAAAC,EAAAhxD,MAAA,MAGA4wD,EACA,OAAAz7C,EAGA87C,EAAAL,EAAAz7C,GAGA,GACA07C,GAAA,EACAJ,EAAAS,SACKL,GAEL,SAAAK,EAAAC,IAUA,SAAAA,EAAAh8C,GACA,OAAAjZ,EAAA8rC,QAAA7yB,EAAA27C,MAAAK,IAAA,EAVAC,CAAAD,EAAAh8C,IAaA,SAAAg8C,EAAAh8C,GACA,IAAAk8C,GAAA,EAMA,OALAX,EAAA,SAAAM,GACA90D,EAAA6D,KAAA4wD,EAAAQ,EAAAH,IAAA,YAAAM,GACAn8C,EAAA47C,QAAAC,EAAAhxD,MAAAsxD,KAAAD,GAAA,OAGAA,EApBAE,CAAAJ,EAAAh8C,KACA87C,EAAAE,EAAAh8C,GACA07C,GAAA,GAIA,OAAA17C,GAiBA,SAAA87C,EAAAE,EAAAh8C,GACAA,EAAA27C,MAAA1uD,KAAA+uD,GACAT,EAAA,SAAAM,GACA90D,EAAA6D,KAAA4wD,EAAAQ,EAAAH,IAAA,YAAAM,GACAn8C,EAAA47C,QAAAC,EAAAhxD,MAAAsxD,IAAA,6BChJA,IAAAr1D,EAAcD,EAAQ,IAEtBo0C,EAAYp0C,EAAQ,GAEpB2a,EAAAy5B,EAAAz5B,cACA5W,EAAAqwC,EAAArwC,KAoBA9D,EAAAwhD,kBAAA,CAIA+T,gBAAA,SAAA7yD,GACA,IAAA8yD,EAAA96C,IASA,OARAhY,EAAAsL,cAAA,oBAAAmP,GACAA,EAAAyuB,eAAA,SAAAC,EAAA3uB,EAAAC,GACA,IAAAS,EAAAT,EAAA2uB,aAAAD,EAAA9nC,KAAAmZ,GACApZ,EAAA8Z,EAAAe,wBAAA,SAAAG,GACA02C,EAAA37C,IAAAiF,EAAA/P,IAAA+P,SAIA02C,GAEAC,iBAAA,EAIAC,aAAA,SAAAhzD,EAAA4I,GACA5I,EAAAsL,cAAA,oBAAAmP,GAIAA,EAAAyuB,eAAA,SAAAC,EAAA3uB,EAAAC,GACAA,EAAA2uB,aAAAD,EAAA9nC,KAAAmZ,GAAA0D,MAAAzD,EAAA7R,KAgBA6R,EAAAyuB,eAAA,SAAAC,EAAA3uB,EAAAC,GACAA,EAAA2uB,aAAAD,EAAA9nC,KAAAmZ,GAAAiF,WAAAhF,EAAA7R,OAGA5I,EAAAsL,cAAA,oBAAAmP,GAGA,IAAAS,EAAAT,EAAAuwB,8BACAioB,EAAA/3C,EAAAc,uBACAk3C,EAAAh4C,EAAAa,qBACAtB,EAAAmhC,mBAAA,CACAp9C,MAAAy0D,EAAA,GACAv0D,IAAAu0D,EAAA,GACA3Z,WAAA4Z,EAAA,GACA3Z,SAAA2Z,EAAA,+BCjFA,IAAA51D,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErB8c,EAAa9c,EAAQ,KAqBrBC,EAAA6N,eAAA,oBAAAC,EAAApL,GACA,IAAAmzD,EAAAh5C,EAAA03C,wBAAAt0D,EAAAynB,KAAAhlB,EAAAsL,cAAAtL,EAAA,YAAAma,EAAA2+B,YAAA,SAAAl0B,EAAAukB,GACA,OAAAvkB,EAAAxkB,IAAA+oC,EAAA3uB,aAEA44C,EAAA,GACApzD,EAAAsL,cAAA,CACAC,SAAA,WACAC,MAAAJ,GACG,SAAAwZ,EAAA1P,GACHk+C,EAAA3vD,KAAA8d,MAAA6xC,EAAAD,EAAAvuC,GAAAutC,SAEA50D,EAAA6D,KAAAgyD,EAAA,SAAA34C,EAAAvF,GACAuF,EAAAkhC,YAAA,CACAn9C,MAAA4M,EAAA5M,MACAE,IAAA0M,EAAA1M,IACA46C,WAAAluC,EAAAkuC,WACAC,SAAAnuC,EAAAmuC,oCCzCcl8C,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBw7C,EAAUx7C,EAAQ,IAElB0V,EAAgB1V,EAAQ,IAExB8K,EAAiB9K,EAAQ,IAEzB0qB,EAAsB1qB,EAAQ,KAqB9Bg2D,EAAAlrD,EAAAkrD,UACA/nC,EAAAnjB,EAAAmjB,WAEA,SAAAgoC,EAAAt2C,GACAjK,EAAAwgD,gBAAAv2C,EAAA,kBAGA,IAAAw2C,EAAAl2D,EAAAwW,qBAAA,CACAlW,KAAA,SACA2lB,aAAA,gCAKAtX,KAAA,SAAAwH,EAAAuW,EAAAhqB,GACAC,KAAAkqB,qBAAA1W,EAAAzT,GAEAC,KAAAwzD,aAAAhgD,EAAAzT,GAAA,OAMA0zD,mBAAA,WACA,GAAA7a,EAAA2Z,KACA,SAGA,IAAAmB,EAAA1zD,KAAA2zD,aACA,OAAA3zD,KAAAs2B,WAAA,cAAAo9B,KAAAD,sBAMAx/C,YAAA,SAAA2/C,EAAA7zD,GACAC,KAAAwzD,aAAAI,EAAA7zD,GAAA,OAEAyzD,aAAA,SAAAI,EAAA7zD,EAAA8zD,EAAAv/C,GACA,IAAAi/C,EAAAvzD,KAAA4b,YACAk4C,EAAA9zD,KAAAsL,SAAA,QAEAuoD,GACA9zD,EAAAmc,WAAA,SAAAC,GACA,IAAA43C,EAAA53C,EAAAhc,IAAAH,KAAAsL,UAAA,GACA0oD,EAAA73C,EAAA23C,GAEAC,KAAA9sC,MAKA+sC,EAyBAA,EAAAR,aAAAO,EAAAh0D,GAAA,IAxBAuU,GAEA++C,EAAAU,GAGAz2D,EAAA6D,KAAA4yD,EAAA9sC,KAAA,SAAA0D,GAEAA,aAAAllB,OACA4tD,EAAA1oC,EAAA,IACA0oC,EAAA1oC,EAAA,KAEA0oC,EAAA1oC,KAGAqpC,EAAA,IAAAT,EAAAQ,EAAA/zD,KAAAD,GACAzC,EAAAqC,OAAAq0D,EAAA,CACA1oD,SAAAtL,KAAAsL,SAEAkY,YAAArH,EAAAqH,YACApiB,KAAA+a,EAAA/a,KACAyyD,eAAA,IAEAG,EAAAL,aAAAx3C,GAKAA,EAAA23C,GAAAE,GAhCA73C,EAAA23C,GAAA,MAiCO9zD,OAGPksB,cAAA,SAAAtM,GACA,IAAAqH,EAAAjnB,KAAAqe,UACAjZ,EAAApF,KAAA22B,YAAA/W,GACAq0C,EAAA32D,EAAAoW,QAAAtO,GAAA9H,EAAAuD,IAAAuE,EAAAguD,GAAA/I,KAAA,MAAA+I,EAAAhuD,GACAhE,EAAA6lB,EAAA6V,QAAAld,GACAs0C,EAAA7oC,EAAArrB,KAAAoB,MAkBA,OAhBA,MAAAgE,GAAAhE,KACA8yD,GAAA,UAGA9yD,IACA8yD,GAAA7oC,EAAAjqB,GAEA,MAAAgE,IACA8uD,GAAA,QAIA,MAAA9uD,IACA8uD,GAAA7oC,EAAA4oC,IAGAC,GAEA71C,QAAA,WACA,OAAAre,KAAAgqB,OAEA5J,QAAA,SAAA6G,GACAjnB,KAAAgqB,MAAA/C,KAGA3pB,EAAA8rB,MAAAmqC,EAAAzrC,GACA,IAAApoB,EAAA6zD,EACA1sD,EAAAC,QAAApH,uBCzJA,IAAApC,EAAaF,EAAQ,GAErBoP,EAAiBpP,EAAQ,IAIzB+2D,EAFuB/2D,EAAQ,KAE/B+2D,mBAoBA/qB,EAAA9rC,EAAA8rC,QAgCA,SAAAgrB,EAAAz8B,EAAA1Q,EAAAotC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAA,GAIAC,EAHAP,EAAAltC,EAAAqtC,GAGArtC,EAAA0tC,mBAAA,wBAAAL,EACAlvD,EAAAgzB,EAAAnR,EAAAytC,EAAA/8B,GACA/X,EAAAqH,EAAA2tC,iBAAAF,EAAAtvD,GAAA,GACAqvD,EAAAF,GAAAttC,EAAA9mB,IAAAk0D,EAAAz0C,GACA60C,EAAAD,GAAAvtC,EAAA9mB,IAAAu0D,EAAA90C,GACA,IAAAi1C,EAAA5tC,EAAA9mB,IAAAm0D,EAAA10C,GAEAtE,EAAA9O,EAAAsoD,aAAA7tC,EAAA9mB,IAAAm0D,EAAA10C,IAOA,OANAtE,EAAAhc,KAAA+G,IAAAiV,EAAA,MAEA,IACAm5C,EAAAD,IAAAC,EAAAD,GAAA94C,QAAAJ,IAGA,CAAAm5C,EAAAI,GAGA,IAAAp3D,EAAAH,EAAAG,MAEAs3D,EAAA,CAOA1uD,IAAA5I,EAAA22D,EAAA,OAQA7tD,IAAA9I,EAAA22D,EAAA,OAQAY,QAAAv3D,EAAA22D,EAAA,YAmDA,SAAAl8B,EAAAvN,EAAA1D,EAAA/Z,EAAAiP,GACA,IAAAszB,EAAA,GAcA,OAZA,MAAA9kB,EAAA0N,YAAA,MAAA1N,EAAAsqC,UACAxlB,EAAAtX,aAAA,MAAAxN,EAAA0N,WAAApR,EAAAiuC,aAAAvqC,EAAA0N,YAAA1N,EAAAsqC,SACAxlB,EAAA3X,UAAA5qB,EAAA6qB,QAaA,SAAA5b,EAAAg5C,GACA,IAAAluC,EAAA9K,EAAAkC,UACA6W,EAAAjO,EAAAiO,WACAigC,EAAAluC,EAAAiuC,aAAAC,GAEA,QAAA7xD,EAAA,EAAiBA,EAAA4xB,EAAA71B,OAAuBiE,IAAA,CACxC,IAAA8xD,EAAAnuC,EAAA8O,iBAAAb,EAAA5xB,IAEA,GAAA8xD,EAAAh0D,OAAA+zD,EACA,OAAAC,EAAAt/B,UAtBAu/B,CAAAl5C,EAAAszB,EAAAtX,eACAsX,EAAA6lB,SAAApoD,EAAAlE,aAAAymC,EAAA3X,WACA2X,EAAA8lB,YAAAtuC,EAAA3I,aAAAmxB,EAAA6lB,SAAA1sD,OAEA6mC,EAAA6lB,SAAAn5C,EAAAq5C,cACA/lB,EAAA3X,UAAA5qB,EAAAlE,aAAAymC,EAAA6lB,UACA7lB,EAAA8lB,YAAAtuC,EAAA3I,aAAAmxB,EAAA6lB,SAAA1sD,KACA6mC,EAAAtX,aAAAlR,EAAA3I,aAAAmxB,EAAA3X,UAAAlvB,MAGA6mC,EAuCA,SAAArX,EAAAnR,EAAAkR,EAAAx6B,GACA,eAAAA,EAAA,CACA,IAAA83D,EAAA,EACArrC,EAAA,EAOA,OANAnD,EAAA9lB,KAAAg3B,EAAA,SAAA3W,EAAAzd,GACAkc,MAAAuB,KACAi0C,GAAAj0C,EACA4I,OAGAqrC,EAAArrC,EACG,iBAAAzsB,EACHspB,EAAAyuC,UAAAv9B,GAGAlR,EAAAoI,cAAA8I,GAAA,WAAAx6B,EAAA,KAIAmJ,EAAAmvB,cAhHA,SAAA9Z,EAAAwO,GACA,IAAA1D,EAAA9K,EAAAkC,UACAnR,EAAAiP,EAAAzQ,iBAKA,GAAAif,IA5FA,SAAAA,GACA,OAAA1K,MAAA01C,WAAAhrC,EAAAlmB,MAAAwb,MAAA01C,WAAAhrC,EAAAjmB,IA2FAkxD,CAAAjrC,KAAArtB,EAAAoW,QAAAiX,EAAAnrB,QAAA0N,EAAA,CACA,IAAAisB,EAAAjsB,EAAAgoB,WACA+C,EAAAC,EAAAvN,EAAA1D,EAAA/Z,EAAAiP,GAKA,IAFAwO,EAAArtB,EAAA0D,MAAA2pB,IAEAhtB,MAAAo3D,EAAApqC,EAAAhtB,OAAAs6B,EAAAq9B,UAAAr9B,EAAAH,UAAA,CACA,IAAAy8B,EAAAnrB,EAAAjQ,EAAAlB,EAAAq9B,SAAA1sD,KACA4rD,EAAAprB,EAAAjQ,EAAAlB,EAAAH,UAAAlvB,KACAykC,EAAA0nB,EAAApqC,EAAAhtB,MAAAspB,EAAAgR,EAAAs9B,YAAAt9B,EAAAE,aAAAo8B,EAAAC,GACA7pC,EAAAnrB,MAAA6tC,EAAA,GAGA1iB,EAAAvlB,MAAAioC,EAAA,OACK,CAIL,IAFA,IAAA7tC,EAAA,OAAAmrB,EAAAiN,MAAAjN,EAAAiN,MAAAjN,EAAAzjB,WAAA,MAAAyjB,EAAAkN,MAAAlN,EAAAkN,MAAAlN,EAAAvqB,WAEAkD,EAAA,EAAqBA,EAAA,EAAOA,IAC5ByxD,EAAAv1D,EAAA8D,MACA9D,EAAA8D,GAAA80B,EAAAnR,IAAA3I,aAAA6a,EAAA71B,IAAA9D,EAAA8D,KAIAqnB,EAAAnrB,SAIA,OAAAmrB,GA6EA7jB,EAAAoxB,cACApxB,EAAAqvB,WAnCA,SAAAjpB,EAAAyd,GAEA,QAAAzd,KAAA6rB,aAAApO,EAAAnrB,QA1KA,SAAAmrB,GACA,QAAA1K,MAAA01C,WAAAhrC,EAAAlmB,KAAAwb,MAAA01C,WAAAhrC,EAAAjmB,KAyKAmxD,CAAAlrC,KAAAzd,EAAA6rB,YAAApO,EAAAnrB,QAkCAsH,EAAAsvB,eA/BA,SAAAzL,EAAArQ,EAAAsF,EAAAgZ,GAEA,OAAAA,EAAA,EACAjO,EAAAnrB,OAAAmrB,EAAAnrB,MAAAo5B,GAGAjO,EAAAvlB,OA0BA0B,EAAAsxB,oCCzOA,IAAA/6B,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAqBrBsC,EAAArC,EAAAK,oBAAA,CACAC,KAAA,SACAqO,KAAA,WAMAhM,KAAAu1B,eAAAj4B,EAAAya,iBAEAlY,OAAA,SAAAm0D,EAAAj0D,EAAA4I,GACA,IAAA4sB,EAAAv1B,KAAAu1B,eACAA,EAAAp0B,KAAA,SAAAwpB,GACAA,EAAAwM,QAAA,IAEA,IAAA2+B,EAAA91D,KAAArC,KAAA,QACAoC,EAAAmc,WAAA,SAAAC,GACA,IAAA63C,EAAA73C,EAAA25C,GACA9B,GAAAh0D,KAAAy1B,aAAAtZ,EAAA63C,EAAAj0D,EAAA4I,IACK3I,MACLu1B,EAAAp0B,KAAA,SAAAwpB,IACAA,EAAAwM,QAAAn3B,KAAAC,MAAAsM,OAAAoe,EAAA1qB,QACKD,OAELy1B,aAAA,eAGA5uB,EAAAC,QAAApH,uBClDA,IAAA2pB,EAAqBjsB,EAAQ,IAE7B24D,EAAoB34D,EAAQ,KAI5B44D,EAFoB54D,EAAQ,KAE5B44D,mBAIAC,EAFkB74D,EAAQ,KAE1B64D,wBA6BA5sC,EAAA1pB,OAAA,CACAhC,KAAA,UAKAmW,cAAA,CAEAoiD,eAAAD,EAEAE,aAAA,KACAjhC,WAAA,KACAkhC,OAAA,MAEAhiD,cAAA,WACA4hD,EAAAh2D,SAGA+1D,EAAAp2D,OAAA,CACAhC,KAAA,iCC1DA,IAAAL,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IA6GtB0J,EAAAuvD,4BAxFA,SAAA1e,EAAA2e,EAAA7tD,EAAA0zC,GACA,IAAA97C,EAAAoI,EAAApI,KAEA,IAAAA,EAAAgB,MAAAC,UAAA,CAIA,IAAAi1D,EAAA9tD,EAAA/G,SAAA,aACAqE,EAAAwwD,EAAA70D,SAAA,aACAsE,EAAAD,EAAA5F,IAAA,SACAq2D,EAAAra,EAAAzwC,iBAAAihC,UACAvlC,EAAA/G,EAAAI,eAAA,CACAiC,UAAA6zD,EACAE,OAAA,IAGA,GAAArvD,EAAA/H,OAAA,CAMA,IAAAq3D,EAAA1wD,EAAA3G,OACAs3D,EAAAhf,EAAAif,kBACAC,EAAAv5D,EAAAya,gBACApS,EAAA,EAEA,GAAAgxD,EACA,QAAArzD,EAAA,EAAmBA,EAAA8D,EAAA/H,OAAwBiE,IAAA,CAC3C,IAAAwzD,EAAAH,EAAAx2D,IAAAiH,EAAA9D,GAAApC,WAEA,SAAA41D,EAAA,CACAnxD,GAAAmxD,GAAAJ,EAAA,GAAApzD,GAAAozD,EACA,OAKA,IAAAK,EAAA12D,EAAA+4B,cAAAhyB,EAAA,GAAA5H,OACAolC,EAAA7+B,EAAAa,eAGA,IAFAZ,EAAA1I,EAAAoW,QAAA1N,KAAA,CAAAA,GAEA1C,EAAA,EAAiBA,EAAA8D,EAAA/H,OAAwBiE,IAAA,CACzC,IACAmB,EACAC,EACA+J,EACAC,EAJAmhB,EAAAxvB,EAAA+4B,cAAAhyB,EAAA9D,GAAA9D,OAMAa,EAAAk0B,gBACA9vB,EAAAsyD,EACAryD,EAAA8xD,EAAA9xD,EACA+J,EAAAohB,EAAAprB,EACAiK,EAAA8nD,EAAA9nD,OACAqoD,EAAAtyD,EAAAgK,IAEAhK,EAAA+xD,EAAA/xD,EACAC,EAAAqyD,EACAtoD,EAAA+nD,EAAA/nD,MAEAsoD,EAAAryD,GADAgK,EAAAmhB,EAAAnrB,IAIA,IAAAxD,EAAAkG,EAAA9D,EAAA,GAAApC,UACA,MAAAA,GAAA21D,EAAA3/C,IAAAhW,EAAAyE,GACA2wD,EAAA9zD,IAAA,IAAA5E,EAAA4Q,KAAA,CACAikC,KAAA,MAAAvxC,EAAA,QAAAA,EAAA,KACAM,MAAA,CACAiD,IACAC,IACA+J,QACAC,UAEAzM,MAAA3E,EAAA2F,SAAA,CACAV,KAAAyD,EAAAL,IACOi/B,GACPxiC,QAAA,KAEAuD,KAAA,GAAA+wD,EAGA/e,EAAAif,kBAAAC,KAQA/vD,EAAAkwD,0BALA,SAAArf,GACAA,EAAAif,kBAAA,2BC5GA,IAAAt5D,EAAaF,EAAQ,GAErByyC,EAAqBzyC,EAAQ,KAE7B65D,EAAiB75D,EAAQ,KAIzBklD,EAFoBllD,EAAQ,KAE5BklD,oBAEA1kD,EAAcR,EAAQ,IAEtB85D,EAAuB95D,EAAQ,KAI/B+5D,EAFiB/5D,EAAQ,KAEzB+5D,OAEAC,EAAoBh6D,EAAQ,KAqB5B,SAAAi6D,EAAA1yC,GACA,IAAAuB,EAAAvB,EAAA9W,eACAypD,EAAA3yC,EAAAxkB,IAAA,aAOA,OAJA,MAAAm3D,IACApxC,EAAA3jB,KAAA+0D,GAGApxC,EA2CA,SAAAqxC,EAAAC,EAAAC,GAEAA,EAAAl1B,UAAA,SAAAm1B,GACAp6D,EAAA6D,KAAAu2D,EAAAC,UAAA,SAAA/rD,GACA8rD,EAAAxvC,QAAAsvC,EAAA3rD,WAAAD,EAAAxK,MAAA,yBAWA,SAAA2K,EAAApD,EAAAivD,GACA,IAAA33D,EAAA,IAAArC,EAAAwV,MAMApT,KAAAoM,IAAA+qD,EAAA,eAMAn3D,KAAA63D,YAAA,IAAAhoB,EAAAlnC,EAAAkc,SAMA7kB,KAAA83D,gBAAA,CACA/4B,OAAA64B,EAAA33D,EAAA,MAOAD,KAAAC,QAMAD,KAAA+3D,aAAAH,EAQA53D,KAAAg4D,eAKAh4D,KAAAi4D,SAKAj4D,KAAAk4D,aAKAj4D,EAAAuC,IAAAxC,KAAAm4D,cAAA,IAAAv6D,EAAAwV,OAKAnT,EAAAuC,IAAAxC,KAAAo4D,iBAAA,IAAAx6D,EAAAwV,OAGArH,EAAA4P,UAAA,CACAC,YAAA7P,EACAM,KAAA,SAAAmrD,EAAAz3D,EAAA4I,EAAA0vD,EAAAltD,GACA,IAAAmtD,EAAA,QAAAd,EAAAlsD,SAGA2b,EAAAuwC,EAAAn5C,SAAAm5C,EAAAn5C,UACAi6C,GAAAv4D,EAAAsL,cAAA,CACAC,SAAA,SACAm5B,QAAA,OACK,SAAA8zB,GACLtxC,GAAAsxC,EAAAC,oBAAAhB,IACAvwC,EAAAsxC,EAAAl6C,aAGA,IAAA5S,EAAA+rD,EAAA9rD,iBAEA1L,KAAAy4D,kBAAAhtD,GAEA,IAKAitD,EALAjB,EAAAz3D,KAAAm4D,cACAl4D,EAAAD,KAAAC,MACA04D,EAAAltD,EAAAmtD,mBAEAC,GAAApB,EAAAzN,QAAA,IAAA7+C,EAGA,GAAA0tD,EACA54D,EAAA2J,UAAA+uD,EAAAG,cACA74D,EAAA2zC,qBACA3zC,EAAA6yB,YACK,CACL,IAAAiM,EAAA,IAAAq4B,EACAr4B,EAAAn1B,UAAA+uD,EAAAG,cACA/5B,EAAA6U,qBACA,IAAAj8B,EAAA,CACAtW,MAAA09B,EAAA19B,MACAmG,SAAAu3B,EAAAv3B,UAEAkxD,EAAA35B,EAAA19B,MACAzD,EAAAy+B,YAAAp8B,EAAA0X,EAAA6/C,GAGA,IAAAn2D,EAAAs3D,EAAAI,SACAvxD,EAAAmxD,EAAAK,YACAvB,EAAAv3D,YACA,IAAA+4D,EAAA,cACAC,EAAA,yBACAC,EAAA,UACAC,EAAA,qBACAhpD,EAAA9S,EAAAya,gBACAza,EAAA6D,KAAAsK,EAAAE,QAAA,SAAAC,GAMA,IAAAytD,EAAAjpD,EAAAjQ,IAAAyL,EAAAxK,OAAAgP,EAAA8G,IAAAtL,EAAAxK,KAAA,IAAAxD,EAAAwV,OACAD,EAAA,IAAAvV,EAAA07D,aAAA,CACAC,uBAAA,EACA/3D,MAAA,CACAg4D,MAAA,MAGAH,EAAA72D,IAAA2Q,GACA,IAOAsmD,EANAzpC,GADA0pC,EAAAlC,EAAAmC,eAAA/tD,EAAAxK,OAAAo2D,GACA91D,SAAAu3D,GACAW,EAAAF,EAAAh4D,SAAAw3D,GACAhzC,EAAAmxC,EAAArnC,GACA6pC,EAAAxC,EAAAuC,GACA51D,EAAA01D,EAAAh4D,SAAAy3D,GACAzoC,EAAAgpC,EAAAh4D,SAAA03D,GAGA,GAAAnyC,EAAA,CACAwyC,EAAAxyC,EAAA6yC,YAAAluD,EAAAxK,MAKA,IAAA24D,EAAA9yC,EAAAkT,cAAAs/B,EAAA,YAEAM,IACA7zC,EAAA3jB,KAAAw3D,GAIA,IAAAC,EAAA,SAAA5rD,GACA,OAAAA,EAAA,GAAA/M,EAAA,GAAAmG,EAAA,GAAA4G,EAAA,GAAA/M,EAAA,GAAAmG,EAAA,KAGAlK,EAAA6D,KAAAyK,EAAAquD,WAAA,SAAAC,GACA,eAAAA,EAAAv8D,KAAA,CAMA,IAFA,IAAA4R,EAAA,GAEAjM,EAAA,EAAuBA,EAAA42D,EAAAC,SAAA96D,SAA8BiE,EACrDiM,EAAA/L,KAAAw2D,EAAAE,EAAAC,SAAA72D,KAGA6P,EAAA3R,MAAAg4D,MAAAh2D,KAAA,IAAA5F,EAAAq+B,QAAA,CACAs9B,uBAAA,EACA/3D,MAAA,CACA+N,aAIA,IAAAjM,EAAA,EAAuBA,GAAA42D,EAAAE,UAAAF,EAAAE,UAAA/6D,OAAA,KAA0DiE,EAAA,CAIjF,IAHA,IAAA+2D,EAAAH,EAAAE,UAAA92D,GAGAouD,GAFAniD,EAAA,GAEA,GAAyBmiD,EAAA2I,EAAAh7D,SAAqBqyD,EAC9CniD,EAAA/L,KAAAw2D,EAAAK,EAAA3I,KAGAv+C,EAAA3R,MAAAg4D,MAAAh2D,KAAA,IAAA5F,EAAAq+B,QAAA,CACAs9B,uBAAA,EACA/3D,MAAA,CACA+N,iBAKA4D,EAAA0gB,SAAA3N,GACA/S,EAAAlR,MAAA4oD,eAAA,EACA13C,EAAAmnD,SAAA,EAEA,IAAAC,EAAAv2D,EAAA7D,IAAA,QACAq6D,EAAA9pC,EAAAvwB,IAAA,QACAs6D,EAAAxzC,GAAAhH,MAAAgH,EAAA9mB,IAAA8mB,EAAA3I,aAAA,SAAAm7C,IACAv3C,EAAA+E,KAAA0S,cAAA8/B,GAKA,GAAAnB,GAAAmC,IAAAF,GAAAC,IAAAt4C,KAAAq4C,UAAA,CACA,IACA59B,EADApxB,EAAA+sD,EAAA1sD,EAAAxK,KAAAq4D,IAGAxyC,GAAAwyC,GAAA,KACA98B,EAAA66B,GAGA,IAAAnzD,EAAA,IAAAzG,EAAA0G,KAAA,CACAkD,SAAAwyD,EAAApuD,EAAA+G,OAAAtU,SAKAgD,MAAA,GAAApB,EAAAoB,MAAA,KAAApB,EAAAoB,MAAA,IACAc,GAAA,GACAC,QAAA,IAYA,GAVAxE,EAAA8+B,cAAAr4B,EAAApC,MAAAoC,EAAAusB,WAAA,GAAkE5sB,EAAA0sB,EAAA,CAClEiM,eACAC,eAAArxB,EACAsxB,YAAAjxB,EAAAxK,KACAs5D,gBAAA,GACS,CACT31D,UAAA,SACAC,kBAAA,YAGA6zD,EAAA,CAEA,IAAA8B,EAAA,GAAAjC,EAAA,KAAAA,EAAA,IACA96D,EAAAy+B,YAAAh4B,EAAA,CACAhD,MAAAs5D,GACWnD,GAGX6B,EAAA72D,IAAA6B,GAKA,GAAA4iB,EACAA,EAAAiV,iBAAAu9B,EAAAJ,OACO,CACP,IAAAK,EAAAlC,EAAAmC,eAAA/tD,EAAAxK,MAEA+R,EAAAlO,UAAA,CACA+T,cAAA,MACAC,eAAAu+C,EAAAv+C,eACAwK,SAAA+zC,EAAAv+C,eACA7X,KAAAwK,EAAAxK,KACAwK,OAAA8tD,KAAAlmD,QAAA,KAIA6lD,EAAA1B,YAAA0B,EAAA1B,UAAA,KACAn0D,KAAAoI,GACAytD,EAAAuB,wBAAApD,EAAAr3D,IAAA,gBACAvC,EAAA0yB,cAAA+oC,EAAAQ,GACApC,EAAAj1D,IAAA62D,KAGAr5D,KAAA66D,kBAAArD,EAAAz3D,EAAA4I,GA7TA,SAAAsD,EAAAurD,EAAAC,EAAA9uD,EAAA0vD,GACAZ,EAAAra,IAAA,SACAqa,EAAAra,IAAA,aAEAoa,EAAAr3D,IAAA,kBACAs3D,EAAA3yC,GAAA,uBACA7Y,EAAA+rD,gBAAA,IAEAP,EAAA3yC,GAAA,iBAAAyN,GACA,GAAAtmB,EAAA+rD,eAAA,CAIA/rD,EAAA+rD,gBAAA,EAGA,IAFA,IAAAjhD,EAAAwb,EAAAwM,QAEAhoB,EAAA4gD,WACA5gD,IAAAQ,OAGA,GAAAR,EAAA,CAIA,IAAA+jD,EAAA,CACAn9D,MAAA,QAAA65D,EAAAlsD,SAAA,4BACA+kC,MAAA/yC,EAAAuD,IAAAkW,EAAA4gD,UAAA,SAAA/rD,GACA,OACAxK,KAAAwK,EAAAxK,KACA+K,KAAAksD,EAAAjsD,QAIA0uD,EAAAtD,EAAAlsD,SAAA,MAAAksD,EAAAniD,GACA1M,EAAA+c,eAAAo1C,GACAvD,EAAAC,EAAAC,QA4RAsD,CAAA/6D,KAAAw3D,EAAAC,EAAA9uD,EAAA0vD,GACAd,EAAAC,EAAAC,IAEAlrD,OAAA,WACAvM,KAAAm4D,cAAAj4D,YAEAF,KAAAo4D,iBAAAl4D,YAEAF,KAAA63D,YAAAvrD,UAEAtM,KAAAi4D,UAAAf,EAAA8D,cAAAh7D,KAAAi4D,SAAAj4D,KAAAoM,KACApM,KAAAi4D,SAAA,KACAj4D,KAAA83D,gBAAA,IAEAW,kBAAA,SAAAhtD,GACA,IAAAwvD,EAAAxvD,EAAA5K,IAEAb,KAAAi4D,WAAAgD,GACA39D,EAAA6D,KAAA+1D,EAAAgE,YAAAD,EAAAj7D,KAAAoM,KAAA,SAAA+uD,GACAn7D,KAAAo4D,iBAAA51D,IAAA24D,IACOn7D,MAGPA,KAAAi4D,SAAAgD,GAEAJ,kBAAA,SAAArD,EAAAz3D,EAAA4I,GACA,IAAA8C,EAAA+rD,EAAA9rD,iBACAuiC,EAAAjuC,KAAA63D,YACA7S,EAAAhlD,KAAA83D,gBACA9S,EAAAK,UAAAmS,EAAAr3D,IAAA,cACA6kD,EAAAhX,KAAAviC,EAAA2vD,UAEAntB,EAAAqD,OAAAkmB,EAAAr3D,IAAA,aACA,IAAAmL,EAAAksD,EAAAlsD,SAEA,SAAA+vD,IACA,IAAAP,EAAA,CACAn9D,KAAA,UACAqb,cAAA1N,GAGA,OADAwvD,EAAAxvD,EAAA,MAAAksD,EAAAniD,GACAylD,EAGA7sB,EAAAmP,IAAA,OAAAt4B,GAAA,eAAAyN,GACAvyB,KAAAg4D,gBAAA,EACAf,EAAAlS,gBAAAC,EAAAzyB,EAAAF,GAAAE,EAAAD,IACA3pB,EAAA+c,eAAApoB,EAAAqC,OAAA07D,IAAA,CACAhpC,GAAAE,EAAAF,GACAC,GAAAC,EAAAD,OAEKtyB,MACLiuC,EAAAmP,IAAA,QAAAt4B,GAAA,gBAAAyN,GASA,GARAvyB,KAAAg4D,gBAAA,EACAf,EAAAhS,iBAAAD,EAAAzyB,EAAAlxB,MAAAkxB,EAAA8b,QAAA9b,EAAA+b,SACA3lC,EAAA+c,eAAApoB,EAAAqC,OAAA07D,IAAA,CACArtB,KAAAzb,EAAAlxB,MACAgtC,QAAA9b,EAAA8b,QACAC,QAAA/b,EAAA+b,WAGAtuC,KAAA+3D,aAAA,CACA,IAAA12D,EAAArB,KAAAC,MAAAoB,MAEArB,KAAAm4D,cAAA3gD,SAAA,SAAAT,GACA,SAAAA,EAAApZ,MACAoZ,EAAA5F,KAAA,WAAA9P,EAAA,KAAAA,EAAA,SAIKrB,MACLiuC,EAAAsD,kBAAA,SAAAhf,EAAA9tB,EAAAC,GACA,OAAA+G,EAAA6vD,uBAAA54C,QAAAje,EAAAC,KAAA49C,EAAA/vB,EAAA5pB,EAAA6uD,OAIA,IAAA93D,EAAAqM,EACAlF,EAAAC,QAAApH,uBC/bA,IAAArC,EAAcD,EAAQ,IAqBtB2yC,EAAA,0BAoBA,SAAAwrB,EAAAtrB,GACA,OAAAA,EAAAF,KAAAE,EAAAF,GAAA,IAWA1yC,EAAA6N,eAAA,CACAvN,KAAA,mBACAmO,MAAA,oBACAb,OAAA,UACC,cACDnE,EAAA2lD,KAnCA,SAAAxc,EAAAurB,EAAAC,GACAF,EAAAtrB,GACAurB,GAAAC,GAkCA30D,EAAAulD,QA/BA,SAAApc,EAAAurB,EAAAC,GACA,IAAAtrB,EAAAorB,EAAAtrB,GACAE,EAAAqrB,KAEAC,IACAtrB,EAAAqrB,GAAA,OA2BA10D,EAAA82C,QAvBA,SAAA3N,EAAAurB,GACA,QAAAD,EAAAtrB,GAAAurB,yBCtCA,IAAAn+D,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErB0yC,EAAmB1yC,EAAQ,KAE3Bs+D,EAA2Bt+D,EAAQ,KAEnCA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAwBRC,EAAAK,oBAAA,CACAC,KAAA,WACAkC,OAAA,SAAA87D,EAAA57D,EAAA4I,GACA3I,KAAA47D,OAAAD,EACA37D,KAAAyvD,KAAA9mD,EAEA3I,KAAAqnD,YACArnD,KAAAqnD,UAAA,GACA/pD,EAAA6D,KAAAmrD,EAAA,SAAA/E,EAAA9Z,GACA9kC,EAAAkc,QAAAC,GAAA2oB,EAAAztC,KAAAqnD,UAAA5Z,GAAAnwC,EAAAynB,KAAAwiC,EAAAvnD,QACOA,OAGP8vC,EAAAvJ,eAAAvmC,KAAA,2BAAA27D,EAAAx7D,IAAA,8BAEAmM,QAAA,SAAAvM,EAAA4I,GACArL,EAAA6D,KAAAnB,KAAAqnD,UAAA,SAAAE,EAAA9Z,GACA9kC,EAAAkc,QAAAu4B,IAAA3P,EAAA8Z,KAEAvnD,KAAAqnD,UAAA,MAMAwU,yBAAA,SAAA9+C,GACA/c,KAAA87D,gBAAA/+C,IAEA++C,gBAAA,SAAA/+C,GACAA,GAAA/c,KAAAyvD,KAAA/pC,eAAApoB,EAAAqC,OAAA,CACAhC,KAAA,sBACKof,OAGL,IAAAuvC,EAAA,CACA5P,UAAA,SAAAnqB,GACAwpC,EAAA/7D,KAAA,WACAA,KAAAg8D,gBAAA,CAAAzpC,EAAAE,QAAAF,EAAAG,WAGAoqB,QAAA,SAAAvqB,GACA,IAAA0pC,EAAAj8D,KAAAg8D,gBAEA,GAAAD,EAAA/7D,KAAA,UAAAi8D,EAAA,CACA,IAAA7tD,EAAA,CAAAmkB,EAAAE,QAAAF,EAAAG,SAGA,GAFApzB,KAAAwmD,IAAAmW,EAAA,GAAA7tD,EAAA,MAAA9O,KAAAwmD,IAAAmW,EAAA,GAAA7tD,EAAA,MAhDA,EAmDA,OAGA,IAAAmI,EAAAvW,KAAA47D,OAAAlwD,iBAAAwwD,0BAAA,CAAA3pC,EAAAE,QAAAF,EAAAG,UAEA,SAAAnc,EAAA4lD,UAAAn8D,KAAA87D,gBAAA,CACAM,iBAAA7lD,EAAA6lD,mBAIAp8D,KAAAg8D,gBAAA,MAEApf,UAAA,SAAArqB,GAEA,IAAAvyB,KAAAg8D,iBAAAD,EAAA/7D,KAAA,cAIA,IAAA2kB,EAAA3kB,KAAA47D,OACArlD,EAAAoO,EAAAjZ,iBAAAwwD,0BAAA,CAAA3pC,EAAAE,QAAAF,EAAAG,UACAypC,EAAA5lD,EAAA4lD,SACA,SAAAA,GAAAn8D,KAAA67D,yBAAAQ,iBAAA13C,EAAAxkB,IAAA,uBAEAH,KAAA67D,yBAAA,SAAAM,EAAA,KACA,CACAC,iBAAA7lD,EAAA6lD,iBAEA5zC,UAAA,SAAA2zC,GAAA,UAKA,SAAAJ,EAAAO,EAAAC,GACA,IAAA53C,EAAA23C,EAAAV,OACA,OAAAj3C,EAAAxkB,IAAA,mBAAAwkB,EAAAxkB,IAAA,yBAAAo8D,EAGAl/D,EAAAkW,qBAAAmoD,wBCzHA,IAAA95C,EAAmBxkB,EAAQ,IAI3BklD,EAFoBllD,EAAQ,KAE5BklD,oBAEAvvC,EAAkB3V,EAAQ,IA8C1B,SAAAo/D,EAAAjuD,GACA,OAAAqT,EAAA/X,OAAA0E,GAGAzH,EAAA21D,sBA7BA,SAAAluD,GAEA,OADAA,EAAAiuD,EAAAjuD,GACA,SAAAmuD,EAAA9yD,GACA,OAAAmJ,EAAA4pD,iBAAAD,EAAAnuD,KA2BAzH,EAAA81D,2BAvBA,SAAAruD,EAAAsuD,GAEA,OADAtuD,EAAAiuD,EAAAjuD,GACA,SAAAwT,GACA,IAAAhe,EAAA,MAAA84D,IAAA96C,EACA+6C,EAAA/4D,EAAAwK,EAAAE,MAAAF,EAAAG,OACAquD,EAAAh5D,EAAAwK,EAAA9J,EAAA8J,EAAA7J,EACA,OAAAq4D,KAAAD,GAAA,MAkBAh2D,EAAAk2D,yBAdA,SAAAzuD,EAAA5F,EAAAs0D,GAEA,OADA1uD,EAAAiuD,EAAAjuD,GACA,SAAAgkB,EAAA81B,EAAAz+C,GACA,OAAA2E,EAAAmU,QAAA2lC,EAAA,GAAAA,EAAA,MAAA/F,EAAA/vB,EAAA5pB,EAAAs0D,0BC/CA,IAAA5/D,EAAcD,EAAQ,IAEtBA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAqBRC,EAAAK,oBAAA,CACAC,KAAA,gCChCA,IAAAL,EAAaF,EAAQ,GAErB0V,EAAgB1V,EAAQ,IAqExByJ,EAAAC,QA1CA,SAAAo2D,EAAAn9D,GACA,IAEAoc,EAFA/N,EAAA,GACAoV,EAAA05C,EAAA15C,YAGA,SAAAA,KAAArH,EAAApc,EAAA6jD,iBAAApgC,IACA,OACApV,MAAA,IAIA,IAAA6Y,EAAA9K,EAAAkC,UACAuB,EAAA9M,EAAAqqD,eAAAl2C,EAAAi2C,GAEA,SAAAt9C,KAAA,GAAAtiB,EAAAoW,QAAAkM,GACA,OACAxR,MAAA,IAIA,IAAA2I,EAAAkQ,EAAAyU,iBAAA9b,GACA1S,EAAAiP,EAAAzQ,iBAEA,GAAAyQ,EAAAihD,mBACAhvD,EAAA+N,EAAAihD,mBAAAx9C,IAAA,QACG,GAAA1S,KAAAioB,YACH/mB,EAAAlB,EAAAioB,YAAAlO,EAAAgO,UAAA33B,EAAAuD,IAAAqM,EAAAgoB,WAAA,SAAAtsB,GACA,OAAAqe,EAAA3I,aAAA1V,KACKgX,GAAA,aACF,GAAA7I,EAAA,CAEH,IAAAxI,EAAAwI,EAAAsX,kBAAArtB,QACAuN,EAAAvE,eAAA+M,EAAAnN,WACAwE,EAAA,CAAAG,EAAA9J,EAAA8J,EAAAE,MAAA,EAAAF,EAAA7J,EAAA6J,EAAAG,OAAA,GAGA,OACAN,QACA2I,4BCnEA,IAAAzZ,EAAaF,EAAQ,GAErBw7C,EAAUx7C,EAAQ,IAwBlBgxD,GAAAC,EAtBajxD,EAAQ,IAErBixD,aAqBAltD,EAAA7D,EAAA6D,KA4DA,SAAAk8D,EAAAjtB,EAAA7d,EAAA7M,GACA0qB,EAAAmX,QAAA,aAAA7hC,GAGA,SAAA43C,EAAAC,EAAAntB,EAAA7d,EAAA7M,GACA0qB,EAAAmX,QAAAgW,EAAAhrC,EAAA7M,GAgDA5e,EAAA6mC,SAxGA,SAAAmO,EAAAnzC,EAAA4+C,GACA,IAAA3O,EAAA2Z,KAAA,CAIA,IAAAtiB,EAAAtnC,EAAAkc,QACAupC,EAAAne,GAAAkiB,UAAA/D,EAAAne,GAAAkiB,QAAA,IAMA,SAAAliB,EAAAtnC,GAWA,SAAA60D,EAAAC,EAAA1Q,GACA9c,EAAAnrB,GAAA24C,EAAA,SAAAlrC,GACA,IAAAmrC,EAkCA,SAAA/0D,GACA,IAAAg1D,EAAA,CACAC,QAAA,GACAC,QAAA,IAkBA,OACAn4C,eAZA,SAAAA,EAAAva,GACA,IAAA2yD,EAAAH,EAAAxyD,EAAAxN,MAEAmgE,EACAA,EAAAt6D,KAAA2H,IAEAA,EAAAua,iBACA/c,EAAA+c,eAAAva,KAMAwyD,YAzDAI,CAAAp1D,GACAxH,EAAAitD,EAAAne,GAAAkiB,QAAA,SAAA/hB,GACAA,GAAA2c,EAAA3c,EAAA7d,EAAAmrC,EAAAh4C,kBAOA,SAAAi4C,EAAAh1D,GACA,IAEAq1D,EAFAC,EAAAN,EAAAC,QAAAv+D,OACA6+D,EAAAP,EAAAE,QAAAx+D,OAGA4+D,EACAD,EAAAL,EAAAC,QAAAK,EAAA,GACGC,IACHF,EAAAL,EAAAE,QAAAK,EAAA,IAGAF,IACAA,EAAAt4C,eAAA,KACA/c,EAAA+c,eAAAs4C,IAlBAG,CAAAT,EAAAC,SAAAh1D,KAhBAylD,EAAAne,GAAAmuB,cAIAhQ,EAAAne,GAAAmuB,aAAA,EACAZ,EAAA,QAAAlgE,EAAAG,MAAA6/D,EAAA,UACAE,EAAA,YAAAlgE,EAAAG,MAAA6/D,EAAA,cAEAE,EAAA,YAAAH,IAdAgB,CAAApuB,EAAAtnC,IACAylD,EAAAne,GAAAkiB,QAAArW,KAAAsS,EAAAne,GAAAkiB,QAAArW,GAAA,KACAyL,YAgGAzgD,EAAAinC,WAdA,SAAA+N,EAAAnzC,GACA,IAAAiwC,EAAA2Z,KAAA,CAIA,IAAAtiB,EAAAtnC,EAAAkc,SACAupC,EAAAne,GAAAkiB,SAAA,IAAuCrW,KAGvCsS,EAAAne,GAAAkiB,QAAArW,GAAA,6BCxIA,IAAA3zC,EAAsB/K,EAAQ,KAE9BgL,EAAiBhL,EAAQ,KAEzBkhE,EAA0BlhE,EAAQ,KAElCU,EAAeV,EAAQ,KAqBvBmhE,EAAAp2D,EAAAxI,OAAA,CAIA4I,aAAA,SAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,GACA,IAAAtI,EAAAoI,EAAApI,KACAivC,EAAAjvC,EAAAivC,KACApmC,EAAAR,EAAAvI,IAAA,QACA4I,EAAAy1D,EAAAlvB,EAAAjvC,GAAA2I,aAAA3I,GAAAo+D,kBACAC,EAAAr+D,EAAA+4B,cAAA/4B,EAAAY,YAAAmE,GAAA,IAEA,GAAA8D,GAAA,SAAAA,EAAA,CACA,IAAAC,EAAAf,EAAAgB,aAAAV,GACAW,EAAAC,EAAAJ,GAAA7I,EAAAq+D,EAAA31D,GACAM,EAAApH,MAAAkH,EACAX,EAAAe,WAAAF,EAAA1L,KACA6K,EAAAgB,QAAAH,EAGA,IAAAuiB,EAAA0yC,EAAA/2D,OAAA+nC,EAAA3qB,MAAAlc,GACAL,EAAA47C,kCAAA5+C,EAAAoD,EAAAojB,EAAAnjB,EAAAC,EAAAC,IAMAgoD,mBAAA,SAAAvrD,EAAAqD,EAAAC,GACA,IAAAkjB,EAAA0yC,EAAA/2D,OAAAkB,EAAApI,KAAAivC,KAAA3qB,MAAAlc,EAAA,CACAk2D,aAAA,IAGA,OADA/yC,EAAA/nB,YAAA6E,EAAAvI,IAAA,iBACA,CACAqH,SAAAY,EAAA07C,uBAAAr7C,EAAApI,KAAA+E,EAAAwmB,GACAnkB,SAAAmkB,EAAAnkB,UAAAmkB,EAAAlkB,eAAA,EAAApI,KAAA6G,GAAA,KAOAiqD,sBAAA,SAAAxmD,EAAAghC,EAAAniC,EAAAC,GACA,IAAArI,EAAAoI,EAAApI,KACAivC,EAAAjvC,EAAAivC,KACApiB,EAAA7sB,EAAAo+D,iBAAA,GACA11D,EAAAy1D,EAAAlvB,EAAAjvC,GAAA2I,aAAA3I,GAAAo+D,kBACA7lC,EAAA,MAAAv4B,EAAAuI,IAAA,IACAg2D,EAAAh1D,EAAApC,SACAo3D,EAAAhmC,IAAAgS,EAAAhS,GACAgmC,EAAAhmC,GAAAt5B,KAAA+G,IAAA6mB,EAAA,GAAA0xC,EAAAhmC,IACAgmC,EAAAhmC,GAAAt5B,KAAAiH,IAAA2mB,EAAA,GAAA0xC,EAAAhmC,IACA,IAAAimC,GAAA91D,EAAA,GAAAA,EAAA,MACA+nD,EAAA,CAAA+N,KACA/N,EAAAl4B,GAAAgmC,EAAAhmC,GAOA,OACApxB,SAAAo3D,EACAn3D,SAAAmC,EAAAnC,SACAqpD,cACAC,cATA,EACApnD,cAAA,UACK,CACLD,MAAA,WAMAkvB,OAKA,SAAA4lC,EAAAlvB,EAAAjvC,GACA,IAAA0c,EAAA,GAEA,OADAA,EAAA1c,EAAAuI,IAAA,aAAAvI,EAAA4U,MACAq6B,EAAAkvB,aAAAzhD,GAGA,IAAAzT,EAAA,CACAgB,KAAA,SAAAjK,EAAAq+D,EAAA31D,GAEA,OACApL,KAAA,OACAwsC,kBAAA,EACA3oC,MAJA4G,EAAAmC,cAAA,CAAAm0D,EAAA31D,EAAA,KAAA21D,EAAA31D,EAAA,IAAA+1D,EAAAz+D,MAOAmK,OAAA,SAAAnK,EAAAq+D,EAAA31D,GACA,IAAA0B,EAAAnL,KAAAiH,IAAA,EAAAlG,EAAAqK,gBACAytC,EAAApvC,EAAA,GAAAA,EAAA,GACA,OACApL,KAAA,OACA6D,MAAA4G,EAAAi8C,cAAA,CAAAqa,EAAAj0D,EAAA,EAAA1B,EAAA,KAAA0B,EAAA0tC,GAAA2mB,EAAAz+D,OAKA,SAAAy+D,EAAAz+D,GACA,YAAAA,EAAAuI,IAAA,IAGA9K,EAAA+M,yBAAA,uBAAA0zD,GACA,IAAA7+D,EAAA6+D,EACA13D,EAAAC,QAAApH,uBC9HA,IAAAmsB,EAAczuB,EAAQ,IAEtBsvB,EAAAb,EAAAa,cACAqyC,EAAAlzC,EAAAuV,IACArnB,EAAA8R,EAAA9R,gBAEA7R,EAAiB9K,EAAQ,IAEzBQ,EAAcR,EAAQ,IAgEtB0J,EAAAS,OAnCA,SAAAtH,EAAA++D,EAAAr2D,GACA,IAAAs2D,EAAAD,EAAAryC,qBACAjD,EAAAs1C,EAAA7+D,IAAA,WACA++D,EAAA,CACAzwD,MAAA9F,EAAA2Q,WACA5K,OAAA/F,EAAA6Q,aAEAjL,EAAAme,EAAAuyC,EAAAC,EAAAx1C,GACAq1C,EAAAC,EAAA7+D,IAAA,UAAAF,EAAA++D,EAAA7+D,IAAA,WAAAoO,EAAAE,MAAAF,EAAAG,QACAqL,EAAA9Z,EAAAg/D,EAAAC,EAAAx1C,IA2BA5iB,EAAAq4D,eAxBA,SAAA5wD,EAAAywD,GACA,IAAAt1C,EAAAxhB,EAAA26C,kBAAAmc,EAAA7+D,IAAA,YACA8B,EAAA+8D,EAAAnxD,aAAA,qBAkBA,OAjBA5L,EAAAM,KAAAy8D,EAAA7+D,IAAA,mBACAoO,EAAA,IAAA3Q,EAAA4Q,KAAA,CACAhN,MAAA,CACAiD,EAAA8J,EAAA9J,EAAAilB,EAAA,GACAhlB,EAAA6J,EAAA7J,EAAAglB,EAAA,GACAjb,MAAAF,EAAAE,MAAAib,EAAA,GAAAA,EAAA,GACAhb,OAAAH,EAAAG,OAAAgb,EAAA,GAAAA,EAAA,GACA1nB,EAAAg9D,EAAA7+D,IAAA,iBAEA8B,QACAG,QAAA,EACAD,IAAA,0BC/Dc/E,EAAQ,IAEtByV,QAFA,IAIAvV,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtB0V,EAAgB1V,EAAQ,IAExBgiE,EAAkBhiE,EAAQ,KAqB1B+D,EAAA7D,EAAA6D,KACAioC,EAAA9rC,EAAA8rC,QACA3rC,EAAAH,EAAAG,MACA4hE,EAAA,8BAGAC,EAAA,+EA4DA,SAAAC,EAAA/rD,EAAAzT,EAAAgd,GAKA,IAAAyiD,EAAAx/D,KAAAy/D,gBAAA,GACAvmD,EAAA,GACAwmD,EAAAC,EAAA5/D,EAAAyT,GACArS,EAAAy+D,EAAA,SAAAC,EAAAliE,KACAof,MAAA+iD,SAAA12B,EAAArsB,EAAA+iD,QAAAniE,IAAA,IACAkiE,EAAAH,EAAAF,EAAAtmD,KAKA,IAAA6mD,EAAAR,EAAA5jD,UA6GA,SAAAqkD,EAAA/gD,GAEA,OADAA,EAAA,GAAAA,EAAA,IAAAA,EAAA3gB,UACA2gB,EAGA,SAAA0gD,EAAA5/D,EAAAyT,GACA,OAAAV,EAAA6sD,YAAA5/D,EAAAyT,EAAA,CACAysD,iBAAAX,IAlHAS,EAAAv6C,gBAAA,SAAAvB,EAAAlkB,GACAC,KAAAkgE,kBAAAj8C,EAAAlkB,EAAA,SAAAqiB,EAAA+9C,EAAAjzD,GAGA,IAFAkV,EAAAg+C,cAAAh+C,EAAAg+C,YAAA,KAAA58D,KAAA28D,IAEA/9C,EAAA+9C,WAAA,CACA/9C,EAAA+9C,aAMA,IAAA5pD,EAAA8pD,EAAAj+C,EAAAa,WAAA,EAAA/V,EAAAizD,GACA/9C,EAAAk+C,cAAA,CACA3+B,OAAA4+B,EAAAn+C,EAAAa,WAAA1M,EAAAiqD,OAAAp+C,EAAA9B,MAAA,OACAmgD,SAAAlqD,EAAAkqD,cAMAV,EAAAG,kBAAA,SAAAj8C,EAAAlkB,EAAAgtD,GACA5rD,EAAA8iB,EAAA,SAAA7B,GACA,IAAAs+C,EAAA1gE,KAAA2gE,eAAAv+C,EAAAriB,GAEA2gE,IAAA,IAAAA,GACApjE,EAAA6D,KAAAu/D,EAAAE,WAAA,SAAA1zD,GACA,IAAAqJ,EAAA8pD,EAAAj+C,EAAAa,WAAA,EAAA/V,EAAAkV,EAAA9B,OACAysC,EAAA3qC,EAAA7L,EAAAiqD,OAAAtzD,EAAAnN,MAGGC,OAGH+/D,EAAAc,eAAA,SAAA58C,EAAAlkB,GACAoB,EAAA8iB,EAAA,SAAA7B,GACA,IAAAs+C,EAAA1gE,KAAA2gE,eAAAv+C,EAAAriB,GAGA,GAFAqiB,EAAA9B,MAAA8B,EAAA9B,OAAA,GAEAogD,IAAA,IAAAA,EAAA,CACAt+C,EAAAumC,QAAA+X,EAAA/X,QAOA,IAAApyC,EAAA8pD,EAAAj+C,EAAAa,WAAA,EAAAy9C,EAAAxzD,SAAAkV,EAAA+9C,YACAW,EAAA1+C,EAAAk+C,cACAl+C,EAAA9B,MAAAwgD,EAAAP,EAAAn+C,EAAAa,WAAA1M,EAAAiqD,OAAAM,EAAAn/B,OA8NA,SAAAo/B,EAAAC,GACA,IAAAC,EAAAC,EAAAH,GACAI,EAAAD,EAAAF,GACAI,EAAA,CAAAH,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,IAGA,OAFAlhD,MAAAmhD,EAAA,MAAAA,EAAA,MACAnhD,MAAAmhD,EAAA,MAAAA,EAAA,MACAA,EApOAC,CAAA9qD,EAAAkqD,SAAAK,EAAAL,WAAAlqD,EAAAiqD,SAEGxgE,OAGH+/D,EAAAj6C,cAAA,SAAAnd,EAAA24D,GACA,OAAAhkE,EAAAuD,IAAAb,KAAAy/D,gBAAA,SAAAiB,GACA,IAAAnyD,EAAAmyD,EAAAa,eACA,OACA5Y,QAAA+X,EAAA/X,QACAyD,iBAAAkV,KAAAZ,GACAhV,SAAA0T,EAAA3C,sBAAAluD,GACAk6C,iBAAA2W,EAAApC,yBAAAzuD,EAAA5F,EAAA+3D,EAAAvgB,eACA+N,0BAAAkR,EAAAxC,2BAAAruD,OAKAwxD,EAAAyB,cAAA,SAAAp/C,EAAAjG,EAAApc,GAGA,IAAA2gE,EAAA1gE,KAAA2gE,eAAAv+C,EAAAriB,GACA,WAAA2gE,MAAAt3B,EAAAs3B,EAAAE,WAAAzkD,EAAAzQ,mBAAA,GAaAq0D,EAAAY,eAAA,SAAAv+C,EAAAriB,GAIA,IAHA,IAAAy/D,EAAAx/D,KAAAy/D,gBACAC,EAAAC,EAAA5/D,EAAAqiB,GAEA9e,EAAA,EAAiBA,EAAAk8D,EAAAngE,OAA2BiE,IAAA,CAC5C,IAAAo9D,EAAAlB,EAAAl8D,GACAm+D,EAAAr/C,EAAAumC,QAEA,GAAA8Y,GACA,GAAAf,EAAA/X,UAAA8Y,EACA,OAAAf,OAGA,IAAAp9D,EAAA,EAAqBA,EAAAo+D,EAAAriE,OAA+BiE,IACpD,GAAAo+D,EAAAp+D,GAAAo8D,EAAAgB,GACA,OAAAA,EAMA,UAcA,IAAAd,EAAA,CACAtwB,KAAA,SAAAowB,EAAAF,GACA,IAAAmC,EAAAjC,EAAAiC,YACAC,EAAAlC,EAAAkC,YACAC,EAAAnC,EAAAmC,WAEAC,EAAAxkE,EAAAya,gBACAgqD,EAAA,GACAC,EAAA,IAEAL,GAAAC,GAAAC,KAIA1gE,EAAAwgE,EAAA,SAAAl5D,GACA,IAAA0zC,EAAA1zC,EAAApI,KAAAivC,KAAA3qB,MACAm9C,EAAA5qD,IAAAilC,EAAA9mC,GAAA8mC,GACA4lB,EAAA5lB,EAAA9mC,KAAA,IAEAlU,EAAAygE,EAAA,SAAAn5D,GACA,IAAA0zC,EAAA1zC,EAAApI,KAAAivC,KAAA3qB,MACAm9C,EAAA5qD,IAAAilC,EAAA9mC,GAAA8mC,GACA6lB,EAAA7lB,EAAA9mC,KAAA,IAEAlU,EAAA0gE,EAAA,SAAA1lB,GACA2lB,EAAA5qD,IAAAilC,EAAA9mC,GAAA8mC,GACA4lB,EAAA5lB,EAAA9mC,KAAA,EACA2sD,EAAA7lB,EAAA9mC,KAAA,IAEAysD,EAAA3gE,KAAA,SAAAg7C,GACA,IAAA7M,EAAA6M,EAAAzwC,iBACAu2D,EAAA,GACA9gE,EAAAmuC,EAAA4yB,gBAAA,SAAAC,EAAAltD,IACAm0B,EAAAu4B,EAAAQ,EAAApqC,QAAA,KAAApT,QAAA,GAAAykB,EAAAw4B,EAAAO,EAAApqC,QAAA,KAAApT,QAAA,IACAs9C,EAAAz+D,KAAA2+D,KAGA3C,EAAAh8D,KAAA,CACAmlD,QAAA,SAAAxM,EAAA9mC,GACA8mC,YACAgE,cAAAhE,EAEAjvC,SAAA+0D,EAAA,GACArB,WAAAqB,EACAV,aAAAa,EAAA9yB,KACA+yB,cAAAN,EAAA5lB,EAAA9mC,IACAitD,cAAAN,EAAA7lB,EAAA9mC,UAIA5J,IAAA,SAAAi0D,EAAAF,GACAr+D,EAAAu+D,EAAA6C,UAAA,SAAA/2D,GACA,IAAA0B,EAAA1B,EAAAE,iBACA8zD,EAAAh8D,KAAA,CACAmlD,QAAA,QAAAn9C,EAAA6J,GACA7J,WACA20C,cAAA30C,EACA0B,WACA0zD,WAAA,CAAA1zD,GACAq0D,aAAAa,EAAA32D,UAKAi2D,EAAA,CACA,SAAAhC,EAAAgB,GACA,IAAA8B,EAAA9C,EAAA8C,WACAC,EAAA/C,EAAA+C,WACAtmB,EAAAujB,EAAAvjB,UAGA,OAFAA,GAAAqmB,IAAArmB,EAAAqmB,EAAAniE,KAAAivC,KAAA3qB,QACAw3B,GAAAsmB,IAAAtmB,EAAAsmB,EAAApiE,KAAAivC,KAAA3qB,OACAw3B,OAAAukB,EAAAvkB,WAEA,SAAAujB,EAAAgB,GACA,IAAAl1D,EAAAk0D,EAAAl0D,SACA,OAAAA,OAAAk1D,EAAAl1D,WAEA42D,EAAA,CACA9yB,KAAA,WAEA,OAAAtvC,KAAAkN,SAAAoiC,KAAA3C,UAAA3rC,SAEAyK,IAAA,WACA,IAAAyB,EAAAlN,KAAAkN,SACAqB,EAAArB,EAAAmhB,kBAAArtB,QAGA,OADAuN,EAAAvE,eAAApM,EAAAkuC,aAAA5+B,IACAqB,IAGA8xD,EAAA,CACA99C,MAAA9kB,EAAAilE,EAAA,GACAlgD,MAAA/kB,EAAAilE,EAAA,GACAn0D,KAAA,SAAAwgB,EAAA7hB,EAAAy1D,GACA,IAAAC,EAAA11D,EAAAmyD,EAAAtwC,IAAA,CAAA4zC,EAAA,MAAAA,EAAA,QACAE,EAAA31D,EAAAmyD,EAAAtwC,IAAA,CAAA4zC,EAAA,MAAAA,EAAA,QACAnC,EAAA,CAAAR,EAAA,CAAA4C,EAAA,GAAAC,EAAA,KAAA7C,EAAA,CAAA4C,EAAA,GAAAC,EAAA,MACA,OACArC,SACAC,SAAAD,IAGA59C,QAAA,SAAAmM,EAAA7hB,EAAAy1D,GACA,IAAAlC,EAAA,EAAAtiD,UAAA,CAAAA,WASA,OACAqiD,OATAljE,EAAAuD,IAAA8hE,EAAA,SAAAh4C,GACA,IAAA1mB,EAAAiJ,EAAAmyD,EAAAtwC,IAAApE,GAKA,OAJA81C,EAAA,MAAAnhE,KAAA+G,IAAAo6D,EAAA,MAAAx8D,EAAA,IACAw8D,EAAA,MAAAnhE,KAAA+G,IAAAo6D,EAAA,MAAAx8D,EAAA,IACAw8D,EAAA,MAAAnhE,KAAAiH,IAAAk6D,EAAA,MAAAx8D,EAAA,IACAw8D,EAAA,MAAAnhE,KAAAiH,IAAAk6D,EAAA,MAAAx8D,EAAA,IACAA,IAIAw8D,cAKA,SAAAiC,EAAAI,EAAA/zC,EAAA7hB,EAAAy1D,GACA,IAAAtiE,EAAA6M,EAAA6qB,QAAA,UAAA+qC,IACAtC,EAAAR,EAAA1iE,EAAAuD,IAAA,eAAAyC,GACA,OAAAyrB,EAAA1uB,EAAA0iE,YAAA1iE,EAAA2iE,aAAAL,EAAAr/D,KAAAjD,EAAA+4B,cAAA/4B,EAAAY,YAAA0hE,EAAAr/D,QAEAm9D,EAAA,GAGA,OAFAA,EAAAqC,GAAAtC,EACAC,EAAA,EAAAqC,GAAA,CAAArkD,SACA,CACA+hD,SACAC,YAIA,IAAAF,EAAA,CACAh+C,MAAA9kB,EAAAwlE,EAAA,GACAzgD,MAAA/kB,EAAAwlE,EAAA,GACA10D,KAAA,SAAAiyD,EAAA0C,EAAA9B,GACA,QAAAZ,EAAA,MAAAY,EAAA,GAAA8B,EAAA,MAAA1C,EAAA,MAAAY,EAAA,GAAA8B,EAAA,QAAA1C,EAAA,MAAAY,EAAA,GAAA8B,EAAA,MAAA1C,EAAA,MAAAY,EAAA,GAAA8B,EAAA,SAEAtgD,QAAA,SAAA49C,EAAA0C,EAAA9B,GACA,OAAA9jE,EAAAuD,IAAA2/D,EAAA,SAAA71C,EAAA5mB,GACA,OAAA4mB,EAAA,GAAAy2C,EAAA,GAAA8B,EAAAn/D,GAAA,GAAA4mB,EAAA,GAAAy2C,EAAA,GAAA8B,EAAAn/D,GAAA,QAKA,SAAAk/D,EAAAH,EAAAtC,EAAA0C,EAAA9B,GACA,OAAAZ,EAAA,GAAAY,EAAA0B,GAAAI,EAAA,GAAA1C,EAAA,GAAAY,EAAA0B,GAAAI,EAAA,IAcA,SAAAhC,EAAAT,GACA,OAAAA,EAAA,CAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAAAhiD,SAGA,IAAA/e,EAAA6/D,EACA14D,EAAAC,QAAApH,uBC9YA,IAqBAyB,EArBa/D,EAAQ,GAqBrB+D,KACA4uC,EAAA,mBA0FA,SAAAC,EAAAjwC,GACA,IAAAowC,EAAApwC,EAAAgwC,GAMA,OAJAI,IACAA,EAAApwC,EAAAgwC,GAAA,MAGAI,EAGArpC,EAAAtD,KA9FA,SAAAzD,EAAAojE,GACA,IAAAhzB,EAAAH,EAAAjwC,GAGAoB,EAAAgiE,EAAA,SAAAC,EAAA32B,GAGA,IAFA,IAAAnpC,EAAA6sC,EAAA9wC,OAAA,EAEUiE,GAAA,IACV6sC,EAAA7sC,GAEAmpC,GAHkBnpC,KAQlB,GAAAA,EAAA,GAEA,IAAAkX,EAAAza,EAAAsc,gBAAA,CACA/Q,SAAA,WACAm5B,QAAA,SACApvB,GAAAo3B,IACO,GAEP,GAAAjyB,EAAA,CACA,IAAAw4C,EAAAx4C,EAAAiwB,kBACA0F,EAAA,GAAA1D,GAAA,CACAA,aACAluC,MAAAy0D,EAAA,GACAv0D,IAAAu0D,EAAA,QAKA7iB,EAAA3sC,KAAA2/D,IA8DAr8D,EAAArH,IAtDA,SAAAM,GACA,IAAAowC,EAAAH,EAAAjwC,GACAsjE,EAAAlzB,IAAA9wC,OAAA,GACA8wC,EAAA9wC,OAAA,GAAA8wC,EAAA1wC,MAEA,IAAA6jE,EAAA,GAWA,OAVAniE,EAAAkiE,EAAA,SAAAD,EAAA32B,GACA,QAAAnpC,EAAA6sC,EAAA9wC,OAAA,EAAkCiE,GAAA,EAAQA,IAG1C,GAFA8/D,EAAAjzB,EAAA7sC,GAAAmpC,GAEA,CACA62B,EAAA72B,GAAA22B,EACA,SAIAE,GAuCAx8D,EAAA4/B,MAhCA,SAAA3mC,GACAA,EAAAgwC,GAAA,MAgCAjpC,EAAAsjB,MAxBA,SAAArqB,GACA,OAAAiwC,EAAAjwC,GAAAV,6BCtGA,IAAAhC,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBwkB,EAAmBxkB,EAAQ,IAE3BylB,EAAqBzlB,EAAQ,KAE7B4iC,EAAe5iC,EAAQ,MAEvB0yC,EAAmB1yC,EAAQ,KAE3BmiE,EAAyBniE,EAAQ,KAqBjCmmE,EAAA,yBACAC,EAAA,kBACAC,EAAA,yBACAC,EAAArmE,EAAAyhD,SAAA6kB,OAAAC,MAgBA,SAAAl/C,EAAA3kB,GACAA,EAAAsL,cAAA,CACAC,SAAA,SACG,SAAA4Z,IACHA,EAAAK,mBAAA,IAAAg6C,EAAAr6C,EAAA1R,OAAAzT,IACA8gE,eAAA37C,EAAAjB,MAAAlkB,KAmKA,SAAA8jE,EAAAl7D,EAAAm7D,GACA,IAAAn7D,EAAAo7D,aAAA,CACA,IAAA9zB,EAAAtnC,EAAAkc,QACAorB,EAAAwzB,IAAA,EACA96D,EAAA+c,eAAA,CACA/nB,KAAA,cACA0yC,MAAAyzB,IAEA7zB,EAAAwzB,IAAA,GAIA,SAAAO,EAAAC,EAAAC,EAAAj9C,EAAArH,GACA,QAAAtc,EAAA,EAAA23C,EAAAipB,EAAA7kE,OAA6CiE,EAAA23C,EAAS33C,IAAA,CACtD,IAAA8e,EAAA8hD,EAAA5gE,GAEA,GAAA2gE,EAAA7hD,EAAAa,WAAArD,EAAAqH,EAAA7E,EAAAD,UAAAC,GACA,UAKA,SAAA+hD,EAAAhoD,GACA,IAAAioD,EAAAjoD,EAAAioD,cAEA,GAAA9mE,EAAAmU,SAAA2yD,GAAA,CACA,IAAAC,EAAA,GAOA,OANA/mE,EAAA6D,KAAA6+B,EAAA,SAAAskC,EAAArhD,GACAohD,EAAAphD,GAAA,SAAArD,EAAAqH,EAAA9E,EAAAC,GACA,IAAAF,EAAA+E,EAAA0S,cAAA/Z,GACA,OAAA0kD,EAAAF,GAAAliD,EAAAC,EAAAC,MAGAiiD,EACG,GAAA/mE,EAAAk5B,WAAA4tC,GAAA,CACH,IAAAG,EAAA,GAIA,OAHAjnE,EAAA6D,KAAA6+B,EAAA,SAAAwkC,EAAAvhD,GACAshD,EAAAthD,GAAAmhD,IAEAG,EAGA,OAAAH,EA7NA/mE,EAAAG,eAAAkmE,EAAA,SAAA3jE,EAAA4I,EAAAwC,GACApL,EAAAsL,cAAA,CACAC,SAAA,SACG,SAAA4Z,GACH/Z,GAAA,qBAAAA,EAAAxN,MAAAunB,EAAAV,eAAA,UAAArZ,EAAA2wC,IAAA3wC,EAAA6X,YAAA,CACAC,WAAA,MAGAyB,EAAA3kB,KAgBA1C,EAAAonE,eAAAf,EAAA,SAAA3jE,EAAA4I,EAAAwC,GACA,IACA4Y,EACAC,EAFA8/C,EAAA,GAGA/jE,EAAAsL,cAAA,CACAC,SAAA,SACG,SAAA4Z,EAAAw/C,GACH,IAAAC,EAAA,CACAh/C,QAAAT,EAAA7P,GACAqvD,aACAE,UAAA1/C,EAAA9jB,KACA6iB,MAAA3mB,EAAA0D,MAAAkkB,EAAAjB,OACA7Y,SAAA,IAIA04D,EAAAtgE,KAAAmhE,GACA,IAAA3hD,EAAAkC,EAAA1R,OACA+P,EAAAP,EAAAO,UACAshD,EAAA,GACAC,EAAA,GACAC,EAAA,GACAC,EAAA,EAEAN,IAEA3gD,EAAAf,EAAAe,aACAC,EAAAhB,EAAAgB,eAIA,IAAAC,EAAA3mB,EAAAuD,IAAAqkB,EAAAjB,MAAA,SAAA7B,GACA,OA6KA,SAAAA,GACA,IAAAD,EAAAC,EAAAD,UAAA,GAOA,OANA7kB,EAAA6D,KAAA6+B,EAAA5d,EAAAa,WAAA,SAAAgiD,EAAAC,GAEA/iD,EAAA+iD,GAAA,SAAAhjD,GACA,OAAA+iD,EAAA/iD,EAAAC,EAAAC,MAGAA,EArLA+iD,CAAA7nE,EAAA2F,SAAA,CACAwf,aAAA2iD,EAAAhjD,EAAAa,WAAAb,IACOA,MAEPijD,EAAAxiD,EAAAyiD,qBAAApgD,EAAA1R,OAAA+vD,EAAA,SAAAgC,GACAA,EAAAC,cAAA,UAMA,SAAAC,EAAAjiD,GACA,cAAAD,GAAAshD,EAAArhD,GAKA,SAAAkiD,EAAAxB,GACA,QAAAA,EAAA7kE,OAXA/B,EAAAoW,QAAA6P,IAAAjmB,EAAA6D,KAAAoiB,EAAA,SAAAC,GACAqhD,EAAArhD,GAAA,IA2BAzjB,EAAAmc,WAAA,SAAAC,EAAAqH,GACA,IAAA0gD,EAAAa,EAAAvhD,GAAA,GACA,aAAArH,EAAAsoB,QAGA,SAAAtoB,EAAAqH,GACA,IAAAtW,EAAAiP,EAAAzQ,iBACAs5D,GAAA93D,EAAAy4D,iBACAF,EAAAjiD,IAAAtW,EAAA04D,gBAAAzpD,EAAAkC,UAAA,SAAAwnD,EAAAjmD,GACA,WAAAimD,IAAAf,EAAAllD,GAAA,KAPAkmD,CAAA3pD,EAAAqH,GAWA,SAAArH,EAAAqH,EAAA0gD,GACA,IAAAD,EAAAE,EAAAhoD,GAEA,IAAA8nD,GAqHA,SAAA/+C,EAAA1B,GACA,IAAAuiD,EAAA7gD,EAAA1R,OAAAgQ,YACA,aAAAuiD,GAAA,QAAAA,IAAAzoE,EAAAoW,QAAAqyD,GAAAzoE,EAAA8rC,QAAA28B,EAAAviD,GAAA,EAAAA,IAAAuiD,GAvHAC,CAAA9gD,EAAA1B,GACA,OAQA,GALAlmB,EAAA6D,KAAA8iB,EAAA,SAAA7B,GACA6hD,EAAA7hD,EAAAa,YAAAiC,EAAAK,mBAAAi8C,cAAAp/C,EAAAjG,EAAApc,IAAAmkE,EAAA1gE,KAAA4e,GACA4iD,GAAAU,EAAAxB,KAGAuB,EAAAjiD,IAAAkiD,EAAAxB,GAAA,CACA,IAAAj9C,EAAA9K,EAAAkC,UACA4I,EAAA9lB,KAAA,SAAAye,GACAokD,EAAAC,EAAAC,EAAAj9C,EAAArH,KACAklD,EAAAllD,GAAA,MA3BAqmD,CAAA9pD,EAAAqH,EAAA0gD,KAkCAnkE,EAAAmc,WAAA,SAAAC,EAAAqH,GACA,IAAA0iD,EAAA,CACAxwC,SAAAvZ,EAAA9G,GACAmO,cACA2iD,WAAAhqD,EAAA/a,KACAwe,UAAA,IAIA+kD,EAAAv5D,SAAA5H,KAAA0iE,GACA,IAAAjC,EAAAE,EAAAhoD,GACA+nD,EAAAa,EAAAvhD,GACAyD,EAAA9K,EAAAkC,UACA+nD,EAAAX,EAAAjiD,GAAA,SAAA5D,GACA,OAAAklD,EAAAllD,IAAAsmD,EAAAtmD,UAAApc,KAAAyjB,EAAAo/C,YAAAzmD,IAAA,yBACO,SAAAA,GACP,OAAAokD,EAAAC,EAAAC,EAAAj9C,EAAArH,IAAAsmD,EAAAtmD,UAAApc,KAAAyjB,EAAAo/C,YAAAzmD,IAAA,0BAGA6lD,EAAAjiD,GAAAwhD,EAAAU,EAAAxB,KAAArhD,EAAAyjD,YAAA/C,EAAA8B,EAAAp+C,EAAAm/C,OAMA,SAAAz9D,EAAAob,EAAAC,EAAA8/C,EAAA34D,GASA,IAAAA,EACA,OAGA,IAAA8kC,EAAAtnC,EAAAkc,QAEA,GAAAorB,EAAAwzB,GACA,OAGAxzB,EAAAuzB,KACAvzB,EAAAuzB,GAAAK,GAGA/zB,EAAAvJ,eAAA0J,EAAAuzB,EAAAx/C,EAAAD,EACAwiD,CAAA59D,EAAAm7D,GA3BAp+C,CAAA/c,EAAAob,EAAAC,EAAA8/C,EAAA34D,KA2FA,IAAAi6D,EAAA,CACA7iD,MAAAjlB,EAAAkpE,KACAhkD,MAAAllB,EAAAkpE,KACAj4D,KAAA,SAAA6T,GACA,OAAAqkD,EAAArkD,EAAA9B,QAEAsC,QAAA,SAAAR,GAIA,IAHA,IAAAnD,EACAqB,EAAA8B,EAAA9B,MAEAhd,EAAA,EAAA23C,EAAA36B,EAAAjhB,OAAuCiE,EAAA23C,EAAS33C,IAAA,CAChD2b,KAAA,EAAAd,UAAA,CAAAA,WACA,IAAAuoD,EAAApmD,EAAAhd,GACAojE,EAAA,GAAAznD,EAAA,QAAAA,EAAA,MAAAynD,EAAA,IACAA,EAAA,GAAAznD,EAAA,QAAAA,EAAA,MAAAynD,EAAA,IACAA,EAAA,GAAAznD,EAAA,QAAAA,EAAA,MAAAynD,EAAA,IACAA,EAAA,GAAAznD,EAAA,QAAAA,EAAA,MAAAynD,EAAA,IAGA,OAAAznD,GAAAwnD,EAAAxnD,KAIA,SAAAwnD,EAAAxnD,GACA,WAAA2C,EAAA3C,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OAGAnY,EAAA4d,oCCpTA,IAAArnB,EAAcD,EAAQ,IAEtBA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,KAER,IAAAupE,EAAmBvpE,EAAQ,MAE3BwpE,EAAgBxpE,EAAQ,IAuBxBC,EAAAwhD,kBAAAxhD,EAAAyhD,SAAAC,UAAA8nB,cAAAF,GACAC,EAAAv/C,yBAAA,oBAEA,qCCpCA,IAAAhqB,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBS,EAAYT,EAAQ,IAIpB0pE,EAFa1pE,EAAQ,IAErB0pE,gBAuBAC,EArBW3pE,EAAQ,KAqBnB4pE,OAAAhnC,SACAinC,EAAA,CACAC,IAAA,CACAvpE,KAAA,MACAwpE,MAAA7pE,EAAA0D,MAAA+lE,EAAAG,MAEAloE,QAAA,CACArB,KAAA,UACAwpE,MAAA7pE,EAAA0D,MAAA+lE,EAAA/nE,WAGA4+B,EAAAvgC,EAAAwW,qBAAA,CACAlW,KAAA,eACA2lB,aAAA,WACAiG,WAAA,CACA5rB,KAAA,MAQAmY,YAAA,GAEA9J,KAAA,SAAAwH,EAAAuW,EAAAhqB,GACAC,KAAAkqB,qBAAA1W,EAAAzT,GACAyT,EAAApI,SAAAoI,EAAApI,UAAA,GAEApL,KAAAonE,gBAAA5zD,IAEAS,YAAA,SAAAT,GACAoqB,EAAAiB,UAAA7+B,KAAA,cAAAwT,GAEAxT,KAAAonE,gBAAA5zD,IAEA4zD,gBAAA,SAAA5zD,GACA,IAAAwsB,EAAAxsB,EAAAwsB,UAEA,IAAAA,IACAA,EAAAxsB,EAAAwsB,SAAA,mBAGA1iC,EAAAoW,QAAAssB,IACA1iC,EAAA6D,KAAA6+B,EAAA,SAAArV,EAAA1V,GACA3X,EAAAmU,SAAAkZ,OAAA,CACAhtB,KAAAgtB,IAEAqV,EAAA/qB,GAAA3X,EAAAsY,MAAA+U,EAAAs8C,EAAAt8C,EAAAhtB,UAIAyW,cAAA,WACApU,KAAAqnE,YAAArnE,KAAAD,SAEA,IAAAu9B,EAAAt9B,KAAAgqB,MAEA,GAAAsT,EAAA,eAAAt9B,KAAAG,IAAA,iBAGA,IAFA,IAAAmnE,GAAA,EAEAhkE,EAAA,EAAqBA,EAAAg6B,EAAAj+B,OAAuBiE,IAAA,CAC5C,IAAAlC,EAAAk8B,EAAAh6B,GAAAnD,IAAA,QAEA,GAAAH,KAAA6L,WAAAzK,GAAA,CAEApB,KAAA4kD,OAAAxjD,GACAkmE,GAAA,EACA,QAKAA,GAAAtnE,KAAA4kD,OAAAtnB,EAAA,GAAAn9B,IAAA,WAGAknE,YAAA,SAAAtnE,GACA,IAAAwnE,EAAA,GACAC,EAAA,GACAznE,EAAA0nE,cAAA,SAAAtrD,GACA,IAEAurD,EAFAvB,EAAAhqD,EAAA/a,KAIA,GAHAomE,EAAAhkE,KAAA2iE,GAGAhqD,EAAAwrD,qBAAA,CACA,IACAl9C,EADAtO,EAAAwrD,qBACAC,cAEA7nE,EAAA8nE,iBAAA1rD,KACAqrD,IAAA9uD,OAAA+R,IAGAA,EAAAprB,OACAkoE,IAAA7uD,OAAA+R,GAEAi9C,GAAA,OAGAA,GAAA,EAGAA,GAAAZ,EAAA3qD,IACAorD,EAAA/jE,KAAA2Y,EAAA/a,QAQApB,KAAA8nE,gBAAAN,EAGA,IAAAO,EAAA/nE,KAAAG,IAAA,SAAAonE,EACAjqC,EAAAhgC,EAAAuD,IAAAknE,EAAA,SAAA7gD,GAQA,MANA,kBAAAA,GAAA,kBAAAA,IACAA,EAAA,CACA9lB,KAAA8lB,IAIA,IAAArpB,EAAAqpB,EAAAlnB,UAAAD,UACKC,MAMLA,KAAAgqB,MAAAsT,GAMAjf,QAAA,WACA,OAAAre,KAAAgqB,OAMA46B,OAAA,SAAAxjD,GACA,IAAAgK,EAAApL,KAAAwT,OAAApI,SAGA,cAFApL,KAAAG,IAAA,gBAEA,CACA,IAAA8mB,EAAAjnB,KAAAgqB,MACA1sB,EAAA6D,KAAA8lB,EAAA,SAAAC,GACA9b,EAAA8b,EAAA/mB,IAAA,cAIAiL,EAAAhK,IAAA,GAMAyjD,SAAA,SAAAzjD,GACA,WAAApB,KAAAG,IAAA,kBACAH,KAAAwT,OAAApI,SAAAhK,IAAA,IAOA0jD,eAAA,SAAA1jD,GACA,IAAAgK,EAAApL,KAAAwT,OAAApI,SAEAA,EAAA4L,eAAA5V,KACAgK,EAAAhK,IAAA,GAGApB,KAAAoL,EAAAhK,GAAA,qBAAAA,IAEA4mE,UAAA,WACA,IAAA/gD,EAAAjnB,KAAAgqB,MACA5e,EAAApL,KAAAwT,OAAApI,SACA9N,EAAA6D,KAAA8lB,EAAA,SAAAC,GACA9b,EAAA8b,EAAA/mB,IAAA,kBAGA8nE,cAAA,WACA,IAAAhhD,EAAAjnB,KAAAgqB,MACA5e,EAAApL,KAAAwT,OAAApI,SACA9N,EAAA6D,KAAA8lB,EAAA,SAAAC,GACA,IAAA9lB,EAAA8lB,EAAA/mB,IAAA,WAEAiL,EAAA4L,eAAA5V,KACAgK,EAAAhK,IAAA,GAGAgK,EAAAhK,IAAAgK,EAAAhK,MAOAyK,WAAA,SAAAzK,GACA,IAAAgK,EAAApL,KAAAwT,OAAApI,SACA,QAAAA,EAAA4L,eAAA5V,KAAAgK,EAAAhK,KAAA9D,EAAA8rC,QAAAppC,KAAA8nE,gBAAA1mE,IAAA,GAEAkM,UAAA,WACA,mBAAAtN,KAAAG,IAAA,WACA8U,MAAA,EACA7T,KAAA,YACK,CACL6T,MAAA,EACA7T,KAAA,eAGA0S,cAAA,CAEA0V,OAAA,EAEA5jB,EAAA,EACAiJ,MAAA,EAGAxB,OAAA,aACA0D,KAAA,SAEAF,IAAA,EAKAnH,MAAA,OACAse,gBAAA,gBAEAlE,YAAA,OACAokD,aAAA,EAEAtkD,YAAA,EAGA8F,QAAA,EAGAX,QAAA,GAEAo/C,UAAA,GAEAC,WAAA,GAEAC,cAAA,OAEAC,oBAAA,OACApiD,UAAA,CAEAtC,YAAA,GAEAxf,UAAA,CAEAyf,MAAA,QAIA0kD,cAAA,EAWAvoC,UAAA,EACAwoC,cAAA,CACA35D,MAAA,EACAq5D,aAAA,GACAx+C,QAAA,UACA++C,SAAA,GACAC,WAAA,cACA7kD,MAAA,OACAD,YAAA,EACAE,YAAA,QAEAsC,SAAA,CACAoiD,cAAA,CACA35D,MAAA,EACAgV,MAAA,OACAmE,gBAAA,SAIAiY,iBAAA,OACA0oC,gBAAA,EACAtnC,kBAAA,GAEApZ,QAAA,CACApZ,MAAA,MAIAnP,EAAAk+B,EACA/2B,EAAAC,QAAApH,uBC3UctC,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAIrB+tB,EAFc/tB,EAAQ,KAEtB+tB,aAEAvtB,EAAcR,EAAQ,IAItB+hE,EAFqB/hE,EAAQ,KAE7B+hE,eAEAnsD,EAAiB5V,EAAQ,IAqBzBK,EAAAH,EAAAG,MACA0D,EAAA7D,EAAA6D,KACAiS,EAAAxV,EAAAwV,MAEA1T,EAAArC,EAAAK,oBAAA,CACAC,KAAA,eACA0hC,iBAAA,EAKArzB,KAAA,WAKAhM,KAAAC,MAAAuC,IAAAxC,KAAA4oE,cAAA,IAAAx1D,GAMApT,KAAA6oE,cAMA7oE,KAAAC,MAAAuC,IAAAxC,KAAA8oE,eAAA,IAAA11D,GAQApT,KAAA+oE,gBAAA,GAMAvpC,gBAAA,WACA,OAAAx/B,KAAA4oE,eAMA5nC,iBAAA,WACA,OAAAhhC,KAAA8oE,gBAMAjpE,OAAA,SAAAw9B,EAAAt9B,EAAA4I,GACA,IAAAm4B,EAAA9gC,KAAA+oE,eAIA,GAHA/oE,KAAA+oE,gBAAA,EACA/oE,KAAA2/B,aAEAtC,EAAAl9B,IAAA,YAIA,IAAA4/B,EAAA1C,EAAAl9B,IAAA,SACAkN,EAAAgwB,EAAAl9B,IAAA,UAEA4/B,GAAA,SAAAA,IACAA,EAAA,UAAA1C,EAAAl9B,IAAA,sBAAAkN,EAAA,gBAGA,IAAA2yB,EAAA3C,EAAAl9B,IAAA,eACA8/B,EAAA5C,EAAAl9B,IAAA,wBAEA6/B,GAAAC,GAAA,SAAAA,IACAA,EAAA,eAAA5yB,EAAA,eAGArN,KAAA8/B,YAAAC,EAAA1C,EAAAt9B,EAAA4I,EAAAq3B,EAAA3yB,EAAA4yB,GAEA,IAAAqH,EAAAjK,EAAA1Q,qBACAuyC,EAAA,CACAzwD,MAAA9F,EAAA2Q,WACA5K,OAAA/F,EAAA6Q,aAEAkQ,EAAA2T,EAAAl9B,IAAA,WACA0gC,EAAA7tB,EAAA0Z,cAAA4a,EAAA43B,EAAAx1C,GACA+X,EAAAzhC,KAAA4gC,YAAAvD,EAAA0C,EAAAc,EAAAC,EAAAd,EAAAC,GAEAuH,EAAAx0B,EAAA0Z,cAAApvB,EAAA2F,SAAA,CACAwL,MAAAgzB,EAAAhzB,MACAC,OAAA+yB,EAAA/yB,QACK44B,GAAA43B,EAAAx1C,GACL1pB,KAAAC,MAAAkR,KAAA,YAAAq2B,EAAA/iC,EAAAg9B,EAAAh9B,EAAA+iC,EAAA9iC,EAAA+8B,EAAA/8B,IAEA1E,KAAAC,MAAAuC,IAAAxC,KAAA6oE,cAAA1J,EAAA19B,EAAApE,MAMAsC,WAAA,WACA3/B,KAAAw/B,kBAAAt/B,YACAF,KAAA6oE,eAAA7oE,KAAAC,MAAAsM,OAAAvM,KAAA6oE,eACA7oE,KAAAghC,mBAAA9gC,aAMA4/B,YAAA,SAAAC,EAAA1C,EAAAt9B,EAAA4I,EAAAq3B,EAAA3yB,EAAA4yB,GACA,IAAA2B,EAAA5hC,KAAAw/B,kBACAwpC,EAAA1rE,EAAAya,gBACAkxD,EAAA5rC,EAAAl9B,IAAA,gBACA+oE,EAAA,GACAnpE,EAAA0nE,cAAA,SAAAtrD,IACAA,EAAAhc,IAAA,oBAAA+oE,EAAA1lE,KAAA2Y,EAAA9G,MAEAlU,EAAAk8B,EAAAhf,UAAA,SAAAyR,EAAAlQ,GACA,IAAAxe,EAAA0uB,EAAA3vB,IAAA,QAEA,GAAAH,KAAAq/B,iBAAA,KAAAj+B,GAAA,OAAAA,EAAA,CAQA,IAAA+a,EAAApc,EAAAopE,gBAAA/nE,GAAA,GAEA,IAAA4nE,EAAA7oE,IAAAiB,GAMA,GAAA+a,EAAA,CACA,IAAA8K,EAAA9K,EAAAkC,UACAwF,EAAAoD,EAAA8P,UAAA,SACAjT,EAAAmD,EAAA8P,UAAA,eAEA,oBAAAlT,IAEAA,IAAA1H,EAAA0a,cAAA,KAIA,oBAAA/S,IAEAA,IAAA3H,EAAA0a,cAAA,KAIA,IAAAuyC,EAAAniD,EAAA8P,UAAA,6BACAnD,EAAA3M,EAAA8P,UAAA,UAEA/2B,KAAAqpE,YAAAjoE,EAAAwe,EAAAkQ,EAAAuN,EAAA+rC,EAAAx1C,EAAAmM,EAAAlc,EAAAC,EAAAmlD,GAEAnkD,GAAA,QAAArnB,EAAA6rE,EAAAloE,EAAA,KAAAuH,EAAAugE,IAAApkD,GAAA,YAAArnB,EAAA8rE,EAAAptD,EAAA/a,KAAA,KAAAuH,EAAAugE,IAAApkD,GAAA,WAAArnB,EAAA+rE,EAAArtD,EAAA/a,KAAA,KAAAuH,EAAAugE,IACAF,EAAA9xD,IAAA9V,GAAA,QAGArB,EAAA0nE,cAAA,SAAAtrD,GAEA,IAAA6sD,EAAA7oE,IAAAiB,IAIA+a,EAAAwrD,qBAAA,CACA,IAAA8B,EAAAttD,EAAAwrD,qBAEA,IAAA8B,EAAAC,YAAAtoE,GACA,OAGA,IAAA2C,EAAA0lE,EAAA3P,YAAA14D,GACAyiB,EAAA4lD,EAAAtvC,cAAAp2B,EAAA,SACA+f,EAAA2lD,EAAAtvC,cAAAp2B,EAAA,eAGA/D,KAAAqpE,YAAAjoE,EAAAwe,EAAAkQ,EAAAuN,EAFA,YAEA,KAAA0C,EAAAlc,EAAAC,EAAAmlD,GAGAnkD,GAAA,QAAArnB,EAAA6rE,EAAA,KAAAloE,EAAAuH,EAAAugE,IAEApkD,GAAA,YAAArnB,EAAA8rE,EAAA,KAAAnoE,EAAAuH,EAAAugE,IAAApkD,GAAA,WAAArnB,EAAA+rE,EAAA,KAAApoE,EAAAuH,EAAAugE,IACAF,EAAA9xD,IAAA9V,GAAA,KAESpB,WAnET4hC,EAAAp/B,IAAA,IAAA4Q,EAAA,CACAu2D,SAAA,MAoEK3pE,MAELggC,GACAhgC,KAAA4pE,gBAAA5pC,EAAA3C,EAAA10B,EAAA0E,EAAA4yB,IAGA2pC,gBAAA,SAAA5pC,EAAA3C,EAAA10B,EAAA0E,EAAA4yB,GACA,IAAAc,EAAA/gC,KAAAghC,mBACA7/B,EAAA6+B,EAAA,SAAA6pC,IAIA,SAAAA,GACA,IAAAlsE,EAAAksE,EAAAlsE,KACAmsE,EAAA,IAAAlsE,EAAA0G,KAAA,CACArC,MAAA,CACAwC,EAAA,EACAC,EAAA,EACAgF,MAAA,SACAC,cAAA,UAEAwmB,QAAA,WACAxnB,EAAA+c,eAAA,CACA/nB,KAAA,QAAAA,EAAA,6CAIAojC,EAAAv+B,IAAAsnE,GACA,IAAA9lE,EAAAq5B,EAAA37B,SAAA,iBACAqoE,EAAA1sC,EAAA37B,SAAA,0BACA9D,EAAA8+B,cAAAotC,EAAA7nE,MAAA6nE,EAAAl5C,WAAA,GAAsE5sB,EAAA+lE,EAAA,CACtEltC,YAAAgtC,EAAA1C,MACApqC,YAAA,IAEAn/B,EAAA0yB,cAAAw5C,GAzBAE,CAAAH,MA4BAR,YAAA,SAAAjoE,EAAAwe,EAAAkQ,EAAAuN,EAAA+rC,EAAAx1C,EAAAmM,EAAAlc,EAAAC,EAAAmlD,GACA,IAAAd,EAAA9qC,EAAAl9B,IAAA,aACAioE,EAAA/qC,EAAAl9B,IAAA,cACAkoE,EAAAhrC,EAAAl9B,IAAA,iBACAmoE,EAAAjrC,EAAAl9B,IAAA,uBACA8pE,EAAA5sC,EAAAl9B,IAAA,oBACA+pE,EAAA7sC,EAAA37B,SAAA,aACAmK,EAAAwxB,EAAAxxB,WAAAzK,GACA+oE,EAAA,IAAA/2D,EACAm3B,EAAAza,EAAApuB,SAAA,aACA0oE,EAAAt6C,EAAA3vB,IAAA,QACAkqE,EAAAv6C,EAAApuB,SAAA,WACA4oE,EAAAD,EAAAtgD,YAGAwgD,EAAAp/C,EADAi+C,EAAAgB,GAAAhB,EACA,IAAAjB,EAAAC,EAAAv8D,EAAAgY,EAAAwkD,EACA,MAAA4B,MAIA,GAHAE,EAAA3nE,IAAAgoE,EAAAD,EAAAnB,EAAAc,EAAApmD,EAAAwkD,EAAAz8D,KAGAu+D,GAAAx2C,IACAA,IAAAw1C,GAAA,SAAAx1C,GAAA,CACA,IAAAkU,EAAA,GAAAsgC,EAEA,SAAAx0C,IACAA,EAAA,UAGA,IAAA62C,EAAAt/C,EAAAyI,GAAAu0C,EAAArgC,GAAA,GAAAsgC,EAAAtgC,GAAA,EAAAA,IAAAj8B,EAAAgY,EAAAwkD,EACA,MAAA4B,MAEAE,EAAA3nE,IAAAgoE,EAAAC,EAAA72C,EAAAs2C,EAAApmD,EAAAwkD,EAAAz8D,IAGA,IAAA6+D,EAAA,SAAA3qC,EAAAooC,EAAA,KACApjE,EAAAg7B,EACA9vB,EAAAotB,EAAAl9B,IAAA,aACA8Q,EAAA7P,EAEA,kBAAA6O,KACAgB,EAAAhB,EAAAmhB,QAAA,SAAyC,MAAAhwB,IAAA,IACpC,oBAAA6O,IACLgB,EAAAhB,EAAA7O,IAGA+oE,EAAA3nE,IAAA,IAAA5E,EAAA0G,KAAA,CACArC,MAAArE,EAAA4G,aAAA,GAAoC+lC,EAAA,CACpC1lC,KAAAoM,EACAxM,EAAAimE,EACAhmE,EAAA0jE,EAAA,EACAzjE,SAAAkH,EAAA0+B,EAAA3lC,eAAAyjE,EACAtjE,YACAC,kBAAA,cAIA,IAAA2lE,EAAA,IAAA/sE,EAAA4Q,KAAA,CACAhN,MAAA2oE,EAAA97C,kBACAmU,WAAA,EACAva,QAAAoiD,EAAAlqE,IAAA,QAAA7C,EAAAqC,OAAA,CACAsR,QAAA7P,EAEA6O,UAAAq6D,EAAAnqE,IAAA,4BACA,OAAAiB,GAEA+0C,gBAAA,CACAn9B,cAAA,SACA4xD,YAAAvtC,EAAApkB,eACA7X,OACAg1C,MAAA,WAEOi0B,EAAA72D,QAAA,OAUP,OARA22D,EAAA3nE,IAAAmoE,GACAR,EAAA5nC,UAAA,SAAArL,GACAA,EAAA90B,QAAA,IAEAuoE,EAAAvoE,QAAA6mE,EACAjpE,KAAAw/B,kBAAAh9B,IAAA2nE,GACAvsE,EAAA0yB,cAAA65C,GACAA,EAAA/lC,kBAAAxkB,EACAuqD,GAMAvpC,YAAA,SAAAvD,EAAA0C,EAAAc,EAAAC,EAAAd,EAAAC,GACA,IAAA2B,EAAA5hC,KAAAw/B,kBACAuB,EAAA/gC,KAAAghC,mBAEAhuB,EAAAouB,IAAA/D,EAAAl9B,IAAA,UAAAyhC,EAAAvE,EAAAl9B,IAAA,WAAA0gC,EAAApyB,MAAAoyB,EAAAnyB,QACA,IAAAozB,EAAAF,EAAAvT,kBACA4T,EAAA,EAAAH,EAAAr9B,GAAAq9B,EAAAp9B,GAEA,GAAAs7B,EAAA,CAEAhtB,EAAAouB,IACA,aAAAL,EAAA1D,EAAAl9B,IAAA,uBACA,IAAAmhC,EAAAP,EAAA1S,kBACAkT,EAAA,EAAAD,EAAA78B,GAAA68B,EAAA58B,GACA28B,EAAAhE,EAAAl9B,IAAA,wBACA8gC,EAAA5D,EAAA/vB,YAAA2H,MACAgN,EAAA,IAAAgf,EAAA,iBACAC,EAAA,IAAAD,EAAA,iBACAE,EAAA,IAAAF,EAAA,QAEA,QAAAhB,EACAsB,EAAAN,IAAAa,EAAA7f,GAAAof,EAEAY,EAAAhB,IAAAK,EAAArf,GAAAof,EAIAE,EAAA,EAAAN,IAAAa,EAAAZ,GAAA,EAAAI,EAAAJ,GAAA,EACAH,EAAA5vB,KAAA,WAAAowB,GACAK,EAAAzwB,KAAA,WAAA8wB,GACA,IAAAR,EAAA,CACAh9B,EAAA,EACAC,EAAA,GAKA,OAHA+8B,EAAAxf,GAAA6f,EAAA7f,GAAAof,EAAAC,EAAArf,GACAwf,EAAAP,GAAA5hC,KAAAiH,IAAAu7B,EAAAZ,GAAAI,EAAAJ,IACAO,EAAAN,GAAA7hC,KAAA+G,IAAA,EAAAi7B,EAAAH,GAAAI,EAAA,EAAAN,IACAQ,EAGA,OADAG,EAAAzwB,KAAA,WAAA8wB,GACAjiC,KAAAC,MAAAouB,mBAOA9hB,OAAA,WACAvM,KAAAw/B,kBAAAt/B,YACAF,KAAA+oE,gBAAA,KAIA,SAAAyB,EAAAriD,EAAAyL,EAAAs2C,EAAApmD,EAAAwkD,EAAAz8D,GACA,IAAAqa,EAaA,MAXA,SAAA0N,KAAAwV,QAAA,YACAljB,EAAAgkD,EAAAr8D,eACAsa,EAAAlmB,MAAAiB,OAAA4gB,EAEAjY,IACAqa,EAAAhjB,OAAAolE,IAGApiD,EAAAgkD,EAAAr8D,aAAA,+BAGAsa,EAAA0L,SAAA3N,GAGA,SAAAojD,EAAAnD,EAAA0E,EAAAliE,EAAAugE,GAEAM,EAAArD,EAAA0E,EAAAliE,EAAAugE,GACAvgE,EAAA+c,eAAA,CACA/nB,KAAA,qBACAyD,KAAA,MAAA+kE,IAAA0E,IAGAtB,EAAApD,EAAA0E,EAAAliE,EAAAugE,GAGA,SAAAK,EAAApD,EAAA0E,EAAAliE,EAAAugE,GAEA,IAAAnyD,EAAApO,EAAAkc,QAAAimD,QAAAC,iBAAA,GAEAh0D,KAAAi0D,eACAriE,EAAA+c,eAAA,CACA/nB,KAAA,YACAwoE,aACA/kE,KAAAypE,EACA3B,oBAKA,SAAAM,EAAArD,EAAA0E,EAAAliE,EAAAugE,GAEA,IAAAnyD,EAAApO,EAAAkc,QAAAimD,QAAAC,iBAAA,GAEAh0D,KAAAi0D,eACAriE,EAAA+c,eAAA,CACA/nB,KAAA,WACAwoE,aACA/kE,KAAAypE,EACA3B,oBAKAriE,EAAAC,QAAApH,uBChdAtC,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,KAERA,EAAQ,0BCZRA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,MAERA,EAAQ,MAERA,EAAQ,KAERA,EAAQ,0BCZRA,EAAQ,KAERA,EAAQ,0BCFR,IAAAE,EAAaF,EAAQ,GAErBQ,EAAcR,EAAQ,IAEtBW,EAAkBX,EAAQ,KAE1BU,EAAeV,EAAQ,KAEvBkhE,EAA0BlhE,EAAQ,KAElC6tE,EAAuB7tE,EAAQ,KAE/Bi5D,EAAA4U,EAAA5U,4BACAW,EAAAiU,EAAAjU,0BAoBAjwD,EAAA,wCACAC,EAAA,2CACAkkE,EAAAptE,EAAA6B,OAAA,CACAhC,KAAA,gBACAiC,iBAAA,uBAKAC,OAAA,SAAA4I,EAAA1I,EAAA4I,EAAAwC,GACAnL,KAAAC,MAAAC,YACA,IAAAirE,EAAAnrE,KAAAorE,WAIA,GAHAprE,KAAAorE,WAAA,IAAAxtE,EAAAwV,MACApT,KAAAC,MAAAuC,IAAAxC,KAAAorE,YAEA3iE,EAAAtI,IAAA,SAIA,IAAAg8C,EAAA1zC,EAAAuzC,mBACAz0C,EAAA+2D,EAAA/2D,OAAA40C,EAAA1zC,GACAV,EAAA,IAAAhK,EAAA0K,EAAAlB,GACAjK,EAAA6D,KAAA4F,EAAAgB,EAAAvF,IAAAuF,GAEA/H,KAAAorE,WAAA5oE,IAAAuF,EAAAC,YAEA1K,EAAA6D,KAAA6F,EAAA,SAAA5F,GACAqH,EAAAtI,IAAAiB,EAAA,UACApB,KAAA,IAAAoB,GAAAqH,EAAA0zC,IAEKn8C,MACLpC,EAAAytE,gBAAAF,EAAAnrE,KAAAorE,WAAA3iE,GACAyiE,EAAArsC,UAAA7+B,KAAA,SAAAyI,EAAA1I,EAAA4I,EAAAwC,KAEAoB,OAAA,WACAyqD,EAAAh3D,OAQAsF,WAAA,SAAAmD,EAAA0zC,GACA,IAAA97C,EAAAoI,EAAApI,KAEA,IAAAA,EAAAgB,MAAAC,UAAA,CAIA,IAAAgqE,EAAA7iE,EAAA/G,SAAA,aACAD,EAAA6pE,EAAA5pE,SAAA,aACA6D,EAAA9D,EAAAtB,IAAA,SACAoF,EAAAjI,EAAAoW,QAAAnO,KAAA,CAAAA,GAWA,IAVA,IAAAixD,EAAAra,EAAAzwC,iBAAAihC,UACApY,EAAAl0B,EAAAk0B,eACA/uB,EAAA,EACA4B,EAAA/G,EAAAI,eAAA,CACAiC,UAAA4oE,IAEApnB,EAAA,GACAC,EAAA,GACA97B,EAAA5mB,EAAAS,eAEAoB,EAAA,EAAmBA,EAAA8D,EAAA/H,OAAwBiE,IAAA,CAC3C,IAAAusB,EAAAxvB,EAAA+4B,cAAAhyB,EAAA9D,GAAA9D,OAEA+0B,GACA2vB,EAAA,GAAAr0B,EACAq0B,EAAA,GAAAsS,EAAA9xD,EACAy/C,EAAA,GAAAt0B,EACAs0B,EAAA,GAAAqS,EAAA9xD,EAAA8xD,EAAA9nD,SAEAw1C,EAAA,GAAAsS,EAAA/xD,EACAy/C,EAAA,GAAAr0B,EACAs0B,EAAA,GAAAqS,EAAA/xD,EAAA+xD,EAAA/nD,MACA01C,EAAA,GAAAt0B,GAGA,IAAAlqB,EAAAH,IAAAD,EAAAlG,OACA6B,EAAAkG,EAAA9D,GAAApC,UAEAlB,KAAAorE,WAAA5oE,IAAA,IAAA5E,EAAAmF,KAAA,CACA0vC,KAAA,MAAAvxC,EAAA,QAAAkG,EAAA9D,GAAApC,UAAA,KACAipC,kBAAA,EACA3oC,MAAA,CACA9C,GAAAwlD,EAAA,GACAvlD,GAAAulD,EAAA,GACAtlD,GAAAulD,EAAA,GACAtlD,GAAAslD,EAAA,IAEAliD,MAAA3E,EAAA2F,SAAA,CACAC,OAAAqC,EAAAI,IACS0iB,GACTjmB,QAAA,QAUAyD,gBAAA,SAAA4C,EAAA0zC,GACA,IAAA97C,EAAAoI,EAAApI,KAEAoB,EADAgH,EAAA/G,SAAA,kBACAA,SAAA,aACA80D,EAAAra,EAAAzwC,iBAAAihC,UACApY,EAAAl0B,EAAAk0B,eACAltB,EAAAhH,EAAAM,sBAEA,GAAA0G,EAAAhI,OAQA,IAJA,IAAA6kD,EAAA,GACAC,EAAA,GACA97B,EAAA5mB,EAAAS,eAEAoB,EAAA,EAAmBA,EAAA+D,EAAAhI,OAA6BiE,IAChD,QAAAC,EAAA,EAAqBA,EAAA8D,EAAA/D,GAAAjE,OAAgCkE,IAAA,CACrD,IAAAssB,EAAAxvB,EAAA+4B,cAAA/xB,EAAA/D,GAAAC,GAAA/D,OAEA+0B,GACA2vB,EAAA,GAAAr0B,EACAq0B,EAAA,GAAAsS,EAAA9xD,EACAy/C,EAAA,GAAAt0B,EACAs0B,EAAA,GAAAqS,EAAA9xD,EAAA8xD,EAAA9nD,SAEAw1C,EAAA,GAAAsS,EAAA/xD,EACAy/C,EAAA,GAAAr0B,EACAs0B,EAAA,GAAAqS,EAAA/xD,EAAA+xD,EAAA/nD,MACA01C,EAAA,GAAAt0B,GAGA7vB,KAAAorE,WAAA5oE,IAAA,IAAA5E,EAAAmF,KAAA,CACA0vC,KAAA,cAAAprC,EAAA/D,GAAAC,GAAArC,UACAipC,kBAAA,EACA3oC,MAAA,CACA9C,GAAAwlD,EAAA,GACAvlD,GAAAulD,EAAA,GACAtlD,GAAAulD,EAAA,GACAtlD,GAAAslD,EAAA,IAEAliD,MAAAomB,EACAjmB,QAAA,OAWA0D,WAAA,SAAA2C,EAAA0zC,GACAka,EAAAr2D,UAAAorE,WAAA3iE,EAAA0zC,MAGA+uB,EAAAvrE,OAAA,CACAhC,KAAA,UAEAutE,EAAAvrE,OAAA,CACAhC,KAAA,+BCtMAP,EAAQ,KAERA,EAAQ,KAERA,EAAQ,0BCJMA,EAAQ,IAEtByV,QAFA,IAIAxV,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBW,EAAkBX,EAAQ,KAE1BQ,EAAcR,EAAQ,IAqBtB2J,EAAA,wCAEArH,EAAArC,EAAAK,oBAAA,CACAC,KAAA,QACAkC,OAAA,SAAA0rE,EAAAxrE,EAAA4I,GACA3I,KAAAC,MACAC,YAEAF,KAAAwrE,WAAAD,GAEAvrE,KAAAyrE,uBAAAF,IAEAC,WAAA,SAAAD,GACA,IAAAG,EAAAH,EAAA7/D,iBACAigE,EAAAD,EAAAE,mBACAC,EAAAvuE,EAAAuD,IAAA8qE,EAAA,SAAAG,GAQA,OAPA,IAAA/tE,EAAA+tE,EAAAnnD,MAAA,CACAnd,SAAA,CAAAkkE,EAAA5pE,GAAA4pE,EAAA3pE,IACA0F,SAAAqkE,EAAA1tE,MACAsJ,gBAAA,EACAC,eAAA,EACAC,cAAA,MAIAtK,EAAA6D,KAAA0qE,EAAA,SAAA9jE,GACAzK,EAAA6D,KAAA4F,EAAAgB,EAAAvF,IAAAuF,GACA/H,KAAAC,MAAAuC,IAAAuF,EAAAC,aACKhI,OAELyrE,uBAAA,SAAAF,GACA,IAAAG,EAAAH,EAAA7/D,iBACAigE,EAAAD,EAAAE,mBAEA,GAAAD,EAAAtsE,OAAA,CAIA,IAAAmC,EAAA+pE,EAAAprE,IAAA,SACAmrE,EAAAC,EAAA7pE,SAAA,aACA60D,EAAAgV,EAAA7pE,SAAA,aACAD,EAAA6pE,EAAA5pE,SAAA,aACAqE,EAAAwwD,EAAA70D,SAAA,aACAqqE,EAAAT,EAAAnrE,IAAA,QACA6rE,EAAAzV,EAAAp2D,IAAA,QACA8rE,EAAAxqE,EAAAtB,IAAA,SACA+rE,EAAAnmE,EAAA5F,IAAA,SACA8rE,EAAA3uE,EAAAoW,QAAAu4D,KAAA,CAAAA,GACAC,EAAA5uE,EAAAoW,QAAAw4D,KAAA,CAAAA,GACA,IAAAxmE,EAAA,GACAO,EAAA,GAQA,cAAAzE,EAKA,IAJA,IAAA2qE,EAAAR,EAAA,GAAAlrE,iBACAqB,EAAA4pE,EAAA5pE,GACAC,EAAA2pE,EAAA3pE,GAEAuB,EAAA,EAAqBA,EAAA6oE,EAAA9sE,OAAwBiE,IAAA,CAC7C,GAAAyoE,EAEArmE,EADA0mE,EAAA1mE,EAAAumE,EAAA3oE,IACAE,KAAA,IAAA5F,EAAAiE,OAAA,CACAL,MAAA,CACAM,KACAC,KACAC,EAAAmqE,EAAA7oE,GAAA9D,UAKA,GAAAwsE,GAAA1oE,EAAA6oE,EAAA9sE,OAAA,EAEA4G,EADAmmE,EAAAnmE,EAAAimE,EAAA5oE,IACAE,KAAA,IAAA5F,EAAAyE,KAAA,CACAb,MAAA,CACAM,KACAC,KACAO,GAAA6pE,EAAA7oE,GAAA9D,MACAwC,EAAAmqE,EAAA7oE,EAAA,GAAA9D,cAOA,KAAA6sE,EACAC,EAAAhvE,EAAAuD,IAAA8qE,EAAA,SAAAG,EAAA/nE,GACA,IAAAqD,EAAA0kE,EAAArrE,iBAEA,OADA4rE,EAAA,MAAAA,EAAAjlE,EAAA/H,OAAA,EAAAC,KAAA+G,IAAAe,EAAA/H,OAAA,EAAAgtE,GACA/uE,EAAAuD,IAAAuG,EAAA,SAAAyoB,GACA,OAAA67C,EAAAltE,aAAAqxB,EAAArwB,MAAAuE,OAGAwoE,EAAA,GAEA,IAAAjpE,EAAA,EAAuBA,GAAA+oE,EAAsB/oE,IAAA,CAG7C,IAFA,IAAAiM,EAAA,GAEAmiD,EAAA,EAAyBA,EAAAia,EAAAtsE,OAA0BqyD,IACnDniD,EAAA/L,KAAA8oE,EAAA5a,GAAApuD,IAQA,GAJAiM,EAAA,IACAA,EAAA/L,KAAA+L,EAAA,GAAAlR,SAGA0tE,EAEArmE,EADA0mE,EAAA1mE,EAAAumE,EAAA3oE,IACAE,KAAA,IAAA5F,EAAAiS,SAAA,CACArO,MAAA,CACA+N,aAKA,GAAAy8D,GAAAO,EAEAtmE,EADAmmE,EAAAnmE,EAAAimE,EAAA5oE,EAAA,IACAE,KAAA,IAAA5F,EAAAq+B,QAAA,CACAz6B,MAAA,CACA+N,SAAAmJ,OAAA6zD,OAKAA,EAAAh9D,EAAAlR,QAAAC,WAIA,IAAA+pB,EAAA5mB,EAAAS,eACA0iC,EAAA7+B,EAAAa,eAEAtJ,EAAA6D,KAAA8E,EAAA,SAAAA,EAAAlC,GACA/D,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAAiD,EAAA,CACAhE,MAAA3E,EAAA2F,SAAA,CACAC,OAAA,OACAX,KAAA2pE,EAAAnoE,EAAAmoE,EAAA7sE,SACSulC,GACTxiC,QAAA,MAEKpC,MACL1C,EAAA6D,KAAAuE,EAAA,SAAAA,EAAA3B,GACA/D,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAA0C,EAAA,CACAzD,MAAA3E,EAAA2F,SAAA,CACAV,KAAA,OACAW,OAAA+oE,EAAAloE,EAAAkoE,EAAA5sE,SACSgpB,GACTjmB,QAAA,MAEKpC,MArGL,SAAAosE,EAAAI,EAAAC,EAAA1oE,GACA,IAAA4B,EAAA5B,EAAA0oE,EAAAptE,OAEA,OADAmtE,EAAA7mE,GAAA6mE,EAAA7mE,IAAA,GACAA,MAsGAkB,EAAAC,QAAApH,uBC5LAtC,EAAQ,KAERA,EAAQ,KAERA,EAAQ,0BCJR,IAAAC,EAAcD,EAAQ,IAgCtBC,EAAA6N,eALA,CACAvN,KAAA,iBACAmO,MAAA,oBAGA,SAAAX,EAAApL,GACAA,EAAAsL,cAAA,CACAC,SAAA,eACAC,MAAAJ,GACG,SAAAuhE,GACHA,EAAArsE,KAAAskB,MAAAgoD,mBAAAxhE,EAAAyhE,eAOAvvE,EAAA6N,eAAA,8BAAAC,EAAApL,GACAA,EAAAsL,cAAA,CACAC,SAAA,WACAC,MAAAJ,GACG,SAAAwwD,GACHA,EAAAkR,cAAA1hE,4BCjDA,IAAA9N,EAAcD,EAAQ,IAEtBE,EAAaF,EAAQ,GAErBW,EAAkBX,EAAQ,KAE1BqnB,EAAsBrnB,EAAQ,KAE9BgiE,EAAkBhiE,EAAQ,KAE1BQ,EAAcR,EAAQ,IAqBtBY,EAAA,wCACAF,EAAAT,EAAAK,oBAAA,CACAC,KAAA,eAKAqO,KAAA,SAAAjM,EAAA4I,GACA7K,EAAAoW,WAAAlU,KAAA,OAAAmU,YAKAnU,KAAA4kB,iBAAA,IAAAH,EAAA9b,EAAAkc,UAAAC,GAAA,QAAAxnB,EAAAynB,KAAA/kB,KAAAglB,SAAAhlB,QAMAH,OAAA,SAAA4I,EAAA1I,EAAA4I,EAAAwC,GACA,IAqGA,SAAA1C,EAAA1I,EAAAoL,GACA,OAAAA,GAAA,mBAAAA,EAAAxN,MAAAoC,EAAA09B,eAAA,CACAnyB,SAAA,eACAC,MAAAJ,IACG,KAAA1C,EAzGHqkE,CAAArkE,EAAA1I,EAAAoL,GAAA,CAIAnL,KAAAyI,YACAzI,KAAA2I,MACA3I,KAAAC,MAAAC,YACA,IAAAirE,EAAAnrE,KAAAorE,WAIA,GAHAprE,KAAAorE,WAAA,IAAAxtE,EAAAwV,MACApT,KAAAC,MAAAuC,IAAAxC,KAAAorE,YAEA3iE,EAAAtI,IAAA,SAIA,IAAAggD,EAwGA,SAAA13C,EAAA1I,GACA,OAAAA,EAAAuc,aAAA,WAAA7T,EAAAtI,IAAA,kBAzGA67C,CAAAvzC,EAAA1I,GACAmN,EAAAizC,EAAAz0C,iBACAqhE,EAAAtkE,EAAAukE,qBACAC,EAAAF,EAAAt+D,MACA7F,EAAAH,EAAApI,KAAAuI,IACAskE,EAAAhgE,EAAAigE,cAAAvkE,GACAwkE,EAAA9vE,EAAAqC,OAAA,CACA+yC,uBAAAu6B,GACKC,GACLnlE,EAAA,IAAAhK,EAAA0K,EAAA2kE,GACA9vE,EAAA6D,KAAAnD,EAAA+J,EAAAvF,IAAAuF,GAEA/H,KAAAorE,WAAA5oE,IAAAuF,EAAAC,YAEAhI,KAAAqtE,wBAAAD,EAAAL,EAAAtkE,EAAA03C,EAAA8sB,EAAAtkE,GAEA,IAAA2lD,EAAAnjD,IAAA,IAAAA,EAAAqd,UAAA,KAAA/f,EACA7K,EAAAytE,gBAAAF,EAAAnrE,KAAAorE,WAAA9c,MASA+e,wBAAA,SAAAD,EAAAL,EAAAtkE,EAAA03C,EAAA8sB,EAAAtkE,GAEA,IAAA2pC,EAAA7pC,EAAApI,KAAAE,YACA+sE,EAAAh7B,EAAA,GAAAA,EAAA,GACAi7B,EAAAjuE,KAAA+G,IAAA,MAAA/G,KAAAC,IAAA+tE,IAIA/+D,EAAA3Q,EAAAgkB,aAAA/X,OAAA,CACApF,EAAA6tC,EAAA,GACA5tC,GAAAuoE,EAAA,EACAx+D,MAAA6+D,EACA5+D,OAAAu+D,IAEA1+D,EAAA9J,GAAA8oE,EACAh/D,EAAAE,OAAA,EAAA8+D,EAEAvtE,KAAA4kB,iBAAAK,MAAA,CACA4nC,iBAAA,EACAplD,SAAA2lE,EAAA3lE,SACAD,SAAA4lE,EAAA5lE,WACKqe,UAAA,EACL8iC,QAAA,KACA+C,SAAA0T,EAAA3C,sBAAAluD,GACAk6C,iBAAA2W,EAAApC,yBAAAzuD,EAAA5F,EAAAw3C,GACA+N,0BAAAkR,EAAAxC,2BAAAruD,EAAA,MACKwX,YAAA,CACL9C,UAAA,QACAG,WAAA2pD,EACA1pD,eAAA,IACK2C,aAqCL,SAAAvd,GACA,IAAApI,EAAAoI,EAAApI,KACA,OAAA/C,EAAAuD,IAAA4H,EAAA+kE,gBAAA,SAAAllD,GACA,OACArF,UAAA,QACA0lC,QAAA,KACAroC,MAAA,CAAAjgB,EAAAY,YAAAqnB,EAAA,OAAAjoB,EAAAY,YAAAqnB,EAAA,WA3CKmlD,CAAAhlE,KAELuc,SAAA,SAAA0oD,EAAA3wD,GAEA,IAAAtU,EAAAzI,KAAAyI,UACApI,EAAAoI,EAAApI,KACAusE,EAAAtvE,EAAAuD,IAAA6sE,EAAA,SAAAC,GACA,OAAAttE,EAAA0iE,YAAA4K,EAAArtD,MAAA,OAAAjgB,EAAA0iE,YAAA4K,EAAArtD,MAAA,YAKA7X,EAAA+K,OAAAiW,WAAA1M,EAAA0I,OAAA1I,EAAAsG,gBAEArjB,KAAA2I,IAAA+c,eAAA,CACA/nB,KAAA,iBACAiwE,eAAAnlE,EAAA4M,GACAu3D,eAQAtgE,QAAA,WACAtM,KAAA4kB,iBAAAtY,aA0BA,IAAA5M,EAAA5B,EACA+I,EAAAC,QAAApH,uBC/KA,IAAApC,EAAaF,EAAQ,GAErBW,EAAkBX,EAAQ,KAE1BQ,EAAcR,EAAQ,IAEtBywE,EAAuBzwE,EAAQ,KAE/BU,EAAeV,EAAQ,KAEvB6tE,EAAuB7tE,EAAQ,KAE/Bi5D,EAAA4U,EAAA5U,4BACAW,EAAAiU,EAAAjU,0BAoBAjwD,EAAA,wCACAC,EAAA,0BACA8mE,EAAAhwE,EAAA6B,OAAA,CACAhC,KAAA,aACAiC,iBAAA,oBACAC,OAAA,SAAA4I,EAAA1I,EAAA4I,EAAAwC,GACA,IAAAlL,EAAAD,KAAAC,MACAA,EAAAC,YACA,IAAAirE,EAAAnrE,KAAAorE,WACAprE,KAAAorE,WAAA,IAAAxtE,EAAAwV,MACA,IAAA7L,EAAAsmE,EAAAtmE,OAAAkB,GACAV,EAAA,IAAAhK,EAAA0K,EAAAlB,GACAjK,EAAA6D,KAAA4F,EAAAgB,EAAAvF,IAAAuF,GACA9H,EAAAuC,IAAAxC,KAAAorE,YACAnrE,EAAAuC,IAAAuF,EAAAC,YACA1K,EAAA6D,KAAA6F,EAAA,SAAA5F,GACAqH,EAAAtI,IAAAiB,EAAA,UACApB,KAAA,IAAAoB,GAAAqH,IAEKzI,MACLpC,EAAAytE,gBAAAF,EAAAnrE,KAAAorE,WAAA3iE,GACAqlE,EAAAjvC,UAAA7+B,KAAA,SAAAyI,EAAA1I,EAAA4I,EAAAwC,IAEAoB,OAAA,WACAyqD,EAAAh3D,OAEAsF,WAAA,SAAAmD,GACA,IAAApI,EAAAoI,EAAApI,KAEA,IAAAA,EAAAgB,MAAAC,UAAA,CAIA,IAAAgqE,EAAA7iE,EAAA/G,SAAA,aACAD,EAAA6pE,EAAA5pE,SAAA,aACAoN,EAAArN,EAAAtB,IAAA,SACAoF,EAAA9D,EAAAtB,IAAA,SACAoF,eAAAE,MAAAF,EAAA,CAAAA,GAWA,IAVA,IAAAixD,EAAA/tD,EAAAiD,iBAAAihC,UACApY,EAAAl0B,EAAAk0B,eACA7uB,EAAA,GACAF,EAAA,EACA4B,EAAA/G,EAAAI,eAAA,CACAiC,UAAA4oE,IAEApnB,EAAA,GACAC,EAAA,GAEA7gD,EAAA,EAAmBA,EAAA8D,EAAA/H,SAAwBiE,EAAA,CAC3C,IAAAusB,EAAAxvB,EAAA+4B,cAAAhyB,EAAA9D,GAAA9D,OAEA+0B,GACA2vB,EAAA,GAAAr0B,EACAq0B,EAAA,GAAAsS,EAAA9xD,EACAy/C,EAAA,GAAAt0B,EACAs0B,EAAA,GAAAqS,EAAA9xD,EAAA8xD,EAAA9nD,SAEAw1C,EAAA,GAAAsS,EAAA/xD,EACAy/C,EAAA,GAAAr0B,EACAs0B,EAAA,GAAAqS,EAAA/xD,EAAA+xD,EAAA/nD,MACA01C,EAAA,GAAAt0B,GAGA,IAAAlqB,EAAAH,IAAAD,EAAAlG,OACAqG,EAAAC,GAAAD,EAAAC,IAAA,GACAD,EAAAC,GAAAnC,KAAA,IAAA5F,EAAAmF,KAAA,CACAonC,kBAAA,EACA3oC,MAAA,CACA9C,GAAAwlD,EAAA,GACAvlD,GAAAulD,EAAA,GACAtlD,GAAAulD,EAAA,GACAtlD,GAAAslD,EAAA,IAEAliD,MAAA,CACA6M,aAEA1M,QAAA,KAIA,IAAAkB,EAAA,EAAmBA,EAAAoC,EAAArG,SAAuBiE,EAC1CtD,KAAAC,MAAAuC,IAAA5E,EAAAoF,UAAA0C,EAAApC,GAAA,CACArB,MAAA,CACAiB,OAAAqC,EAAAjC,EAAAiC,EAAAlG,QACA0uE,SAAAtsE,EAAAusE,YAAAl/D,GACAA,aAEA1M,QAAA,OAIA0D,WAAA,SAAA2C,GACA4tD,EAAAr2D,UAAAorE,WAAA3iE,QAGA/I,EAAAouE,EACAjnE,EAAAC,QAAApH,uBCjIA,IAAApC,EAAaF,EAAQ,GAIrBixD,EAFajxD,EAAQ,IAErBixD,UAEA4f,EAAkB7wE,EAAQ,KAE1B8wE,EAA0B9wE,EAAQ,KAqBlC+D,EAAA7D,EAAA6D,KACA1D,EAAAH,EAAAG,MACA2wD,EAAAC,IAmHA,SAAA8f,EAAAl2C,EAAAm2C,EAAAC,EAAAC,EAAAC,GACA,IAAAluE,EAAA43B,EAAA53B,KAEA,IAAAA,EAAAgB,MAAAC,WAAAjB,EAAA04B,YAAAq1C,GAIA,GAAAn2C,EAAAupB,cAAA,CAMA,IAAAqP,EAuBA,SAAAzrD,EAAA6yB,GACA,IAAA53B,EAAA43B,EAAA53B,KACAuI,EAAAvI,EAAAuI,IACA4lE,EAAAppE,EACAqpE,EAAA,GACAC,EAAAC,OAAAC,UACAC,GAAA,EA+CA,OA9CA1tE,EAAA82B,EAAAhc,aAAA,SAAA0hB,EAAA55B,GACA,IACA+qE,EACAC,EAFA5Z,EAAAx3B,EAAAtf,UAAAC,aAAA1V,GAAA,GAIA,GAAA+0B,EAAAqxC,mBAAA,CACA,IAAAz4D,EAAAonB,EAAAqxC,mBAAA7Z,EAAA/vD,EAAA/E,GACA0uE,EAAAx4D,EAAAw4D,YACAD,EAAAv4D,EAAA04D,iBACK,CAML,KALAF,EAAApxC,EAAAtf,UAAAu2C,iBAAAO,EAAA,GAAA/vD,EAGA,aAAA/E,EAAA1C,KAAA,UAEA0B,OACA,OAGAyvE,EAAAnxC,EAAAtf,UAAAle,IAAAg1D,EAAA,GAAA4Z,EAAA,IAGA,SAAAD,GAAAp2C,SAAAo2C,GAAA,CAIA,IAAA/yC,EAAA32B,EAAA0pE,EACAx7C,EAAAh0B,KAAAC,IAAAw8B,GAEAzI,GAAAo7C,KACAp7C,EAAAo7C,GAAA3yC,GAAA,GAAA8yC,EAAA,KACAH,EAAAp7C,EACAu7C,EAAA9yC,EACAyyC,EAAAM,EACAL,EAAApvE,OAAA,GAGA8B,EAAA4tE,EAAA,SAAAnvD,GACA6uD,EAAAjrE,KAAA,CACAggB,YAAAma,EAAAna,YACAqgC,gBAAAjkC,EACAA,UAAA+d,EAAAtf,UAAAgoD,YAAAzmD,WAKA,CACA6uD,eACAD,eA9EAU,CAAAd,EAAAn2C,GACAw2C,EAAA5d,EAAA4d,aACAD,EAAA3d,EAAA2d,YAGAC,EAAA,UAAAF,EAAA/qD,aACAlmB,EAAAqC,OAAA4uE,EAAAE,EAAA,KAKAH,GAAAr2C,EAAA+oB,MACA3gD,EAAA04B,YAAAy1C,IAAA,MAAAA,IACAJ,EAAAI,GAIAH,EAAAc,YAAAl3C,EAAAm2C,EAAAK,EAAAF,GAGAF,EAAAe,YAAAn3C,EAAA44B,EAAA2d,QAzBAH,EAAAc,YAAAl3C,EAAAm2C,GAuFA,SAAAe,EAAAE,EAAAp3C,EAAA7yB,EAAAqpE,GACAY,EAAAp3C,EAAA6jB,KAAA,CACA12C,QACAqpE,gBAIA,SAAAW,EAAAE,EAAAr3C,EAAA44B,EAAAzrD,GACA,IAAAqpE,EAAA5d,EAAA4d,aACApuE,EAAA43B,EAAA53B,KACAoI,EAAApI,EAAAskB,MACAjc,EAAAuvB,EAAAvvB,iBAGA,GAAAuvB,EAAA6oB,gBAAA2tB,EAAApvE,OAAA,CAIA,IAAA8gD,EAAAloB,EAAA/qB,SAAAyX,MACAs7B,EAAAguB,EAAA1uB,QAAAY,GACAovB,EAAAD,EAAAzuE,IAAAo/C,GAEAsvB,IACAA,EAAAD,EAAAzuE,IAAAo/C,GAAA,CACAuvB,WAAArvB,EAAA9qC,GACAo6D,cAAAtvB,EAAAlnC,eACAy2D,aAAAvvB,EAAAxiD,KACAgyE,iBAAAxvB,EAAA70C,SACAskE,WAAA,IAEAN,EAAApwE,KAAAsE,KAAA+rE,IAGAA,EAAAK,WAAApsE,KAAA,CACAmZ,QAAAtc,EAAAuI,IACA2R,UAAA9R,EAAAwQ,eACA6N,SAAAre,EAAA9K,KACAw9C,OAAA1yC,EAAA4M,GACAjQ,QAKAyqE,cAAA,CACAv0D,UAAA5S,EAAAvI,IAAA,mBACA8P,UAAAvH,EAAAvI,IAAA,oBAEAqjD,kBAAAirB,EAAApwE,WA6GA,SAAAyxE,EAAA73C,GACA,IAAAxvB,EAAAwvB,EAAA53B,KAAAskB,MACAgG,EAAA,GACA/hB,EAAA+hB,EAAAhO,QAAAsb,EAAA53B,KAAAuI,IAIA,OAHA+hB,EAAApQ,UAAAoQ,EAAA/hB,EAAA,aAAAH,EAAAwQ,eACA0R,EAAAoqB,SAAApqB,EAAA/hB,EAAA,YAAAH,EAAArH,KACAupB,EAAAwwB,OAAAxwB,EAAA/hB,EAAA,UAAAH,EAAA4M,GACAsV,EAGA,SAAAolD,EAAA3hE,GACA,OAAAA,GAAA,MAAAA,EAAA,IAAA6R,MAAA7R,EAAA,WAAAA,EAAA,IAAA6R,MAAA7R,EAAA,IAGAvH,EAAAC,QA/VA,SAAAqE,EAAApL,EAAA4I,GACA,IAAA40D,EAAApyD,EAAAoyD,YACAnvD,EAAA,CAAAjD,EAAA1G,EAAA0G,EAAAzG,GACAw4D,EAAA/xD,EACAua,EAAAva,EAAAua,gBAAApoB,EAAAynB,KAAApc,EAAA+c,eAAA/c,GACAs2C,EAAAl/C,EAAAuc,aAAA,eAAA2iC,iBAGA,GAAAA,EAAA,CAIA8wB,EAAA3hE,KAGAA,EAAA8/D,EAAA,CACA1qD,YAAA05C,EAAA15C,YAGA5D,UAAAs9C,EAAAt9C,WACK7f,GAAAqO,OAGL,IAAA4hE,EAAAD,EAAA3hE,GAKA6hE,EAAA/S,EAAA5d,SACAA,EAAAL,EAAAK,SACA4wB,EAAA,UAAA3S,GAAAwS,EAAA3hE,GACAmgE,EAAA,GACAc,EAAA,GACAC,EAAA,CACApwE,KAAA,GACA2B,IAAA,IAEAwtE,EAAA,CACAc,YAAA1xE,EAAA0xE,EAAAE,GACAD,YAAA3xE,EAAA2xE,EAAAE,IAGAnuE,EAAA89C,EAAAS,YAAA,SAAAxyC,EAAA+yC,GAEA,IAAAkwB,EAAAH,GAAA9iE,EAAA4gC,aAAA1/B,GACAjN,EAAA89C,mBAAAgB,GAAA,SAAAhoB,EAAA6jB,GACA,IAAAz7C,EAAA43B,EAAA53B,KACA+vE,EAwRA,SAAAH,EAAAh4C,GACA,QAAA30B,EAAA,EAAiBA,GAAA2sE,GAAA,IAAA5wE,OAAkCiE,IAAA,CACnD,IAAA8sE,EAAAH,EAAA3sE,GAEA,GAAA20B,EAAA53B,KAAAuI,MAAAwnE,EAAAzzD,SAAAsb,EAAA53B,KAAAskB,MAAA1L,iBAAAm3D,EAAA71D,UACA,OAAA61D,GA7RAC,CAAAJ,EAAAh4C,GAEA,IAAAi4C,GAAAC,KAAAF,GAAAG,GAAA,CACA,IAAA5uD,EAAA4uD,KAAAhrE,MAEA,MAAAoc,GAAAwuD,IACAxuD,EAAAnhB,EAAAiwE,YAAAliE,IAGA,MAAAoT,GAAA2sD,EAAAl2C,EAAAzW,EAAA6sD,GAAA,EAAAE,QAKA,IAAAgC,EAAA,GAsBA,OArBApvE,EAAAm+C,EAAA,SAAAkxB,EAAAC,GACA,IAAA5uB,EAAA2uB,EAAA3uB,UAEAA,IAAAwtB,EAAAoB,IACAtvE,EAAA0gD,EAAAvC,SAAA,SAAAoxB,EAAAC,GACA,IAAAC,EAAAvB,EAAAsB,GAEA,GAAAD,IAAAF,GAAAI,EAAA,CACA,IAAApvD,EAAAovD,EAAAxrE,MACAy8C,EAAAC,SAAAtgC,EAAAgvD,EAAAnwE,KAAAgB,MAAAkc,MAAAskC,EAAAC,OAAAtgC,EAAAsuD,EAAAY,GAAAZ,EAAAU,MACAD,EAAAC,EAAA10B,KAAAt6B,OAKArgB,EAAAovE,EAAA,SAAA/uD,EAAAivD,GACAtC,EAAA7uB,EAAAmxB,GAAAjvD,EAAA6sD,GAAA,EAAAE,KA0JA,SAAAc,EAAA/vB,EAAAivB,GACA,IAAAsC,EAAAtC,EAAAjvB,SAAA,GAEAn+C,EAAAm+C,EAAA,SAAArnB,EAAA6jB,GACA,IAAAtoC,EAAAykB,EAAAvvB,iBAAA8K,OACAs9D,EAAAzB,EAAAvzB,GAEAg1B,IACA74C,EAAAwpB,YAAAjuC,EAAA4uC,OAAA,QACA5uC,EAAApO,MAAA0rE,EAAA1rE,MAEAoO,EAAAgwC,mBAAAstB,EAAArC,cAAA,IAAApwE,UAMA45B,EAAAwpB,YAAAjuC,EAAA4uC,OAAA,QAIA,SAAA5uC,EAAA4uC,QAAAyuB,EAAArtE,KAAA,CACAmZ,QAAAsb,EAAA53B,KAAAuI,IACA2R,UAAA0d,EAAA53B,KAAAskB,MAAA1L,eACA7T,MAAAoO,EAAApO,UAhLA2rE,CAAA1B,EAAA/vB,EAAAivB,GAqLA,SAAAe,EAAAlhE,EAAAjD,EAAAua,GAEA,IAAAqqD,EAAA3hE,IAAAkhE,EAAApwE,KAAAG,OAAA,CAWA,IAAA2xE,IAAA1B,EAAApwE,KAAA,GAAA0wE,WAAA,QAA+DpsB,mBAAA,WAC/D99B,EAAA,CACA/nB,KAAA,UACAszE,eAAA,EACAxsE,EAAA2J,EAAA,GACA1J,EAAA0J,EAAA,GACA2iD,cAAA5lD,EAAA4lD,cACAvpD,SAAA2D,EAAA3D,SACAq8C,gBAAAmtB,EAAAntB,gBACAjkC,UAAAoxD,EAAApxD,UACA4D,YAAAwtD,EAAAxtD,YACA8rD,iBAAApwE,YArBAwmB,EAAA,CACA/nB,KAAA,YAxLAuzE,CAAA5B,EAAAlhE,EAAAjD,EAAAua,GAgNA,SAAA45B,EAAA55B,EAAA/c,GAIA,IAAAsnC,EAAAtnC,EAAAkc,QAEAssD,EAAA/iB,EAAAne,GAAA,8BACAmhC,EAAAhjB,EAAAne,GAAA,6BAGA9uC,EAAAm+C,EAAA,SAAArnB,EAAA6jB,GACA,IAAAtoC,EAAAykB,EAAAvvB,iBAAA8K,OACA,SAAAA,EAAA4uC,QAAAjhD,EAAAqS,EAAAgwC,kBAAA,SAAA4f,GACA,IAAAtnB,EAAAsnB,EAAA5/C,YAAA,MAAA4/C,EAAAxjD,UACAwxD,EAAAt1B,GAAAsnB,MAIA,IAAAiO,EAAA,GACAC,EAAA,GACAh0E,EAAA6D,KAAAgwE,EAAA,SAAA/N,EAAAtnB,IACAs1B,EAAAt1B,IAAAw1B,EAAA9tE,KAAA4/D,KAEA9lE,EAAA6D,KAAAiwE,EAAA,SAAAhO,EAAAtnB,IACAq1B,EAAAr1B,IAAAu1B,EAAA7tE,KAAA4/D,KAEAkO,EAAAjyE,QAAAsJ,EAAA+c,eAAA,CACA/nB,KAAA,WACAszE,eAAA,EACA5gC,MAAAihC,IAEAD,EAAAhyE,QAAAsJ,EAAA+c,eAAA,CACA/nB,KAAA,YACAszE,eAAA,EACA5gC,MAAAghC,IAjPAE,CAAAjyB,EAAA55B,EAAA/c,GACA4lE,yBC/IA,IA4GA7uE,EA5GctC,EAAQ,IAqBtByW,qBAAA,CACAlW,KAAA,cACAshD,iBAAA,KACAnrC,cAAA,CAEAjF,KAAA,OAEA0tD,UAAA,KAEA/yC,OAAA,EACA5jB,EAAA,GACAjI,KAAA,OAIAqjD,MAAA,EACAF,gBAAA,EACA17C,MAAA,KACAg9C,OAAA,KAaAxD,KAAA,GAGAp2B,UAAA,KACAkW,wBAAA,IACArW,UAAA,CACAxE,MAAA,OACApV,MAAA,EACA9Q,KAAA,SAEA6zE,YAAA,CACA3tD,MAAA,yBAEAwC,MAAA,CACAxX,MAAA,EACAoB,UAAA,KAEAqL,UAAA,OAEAhL,OAAA,EACAuT,MAAA,OACA6F,QAAA,UACA1B,gBAAA,OAEAlE,YAAA,KACAF,YAAA,EACAw/B,WAAA,EACAC,YAAA,QAMAhY,OAAA,CACAx8B,MAAA,EAGA0xB,KAAA,2MAIAuH,KAAA,GAEAx3B,OAAA,GAGAuT,MAAA,OACAu/B,WAAA,EACAC,YAAA,OACAC,cAAA,EACAC,cAAA,EAEAhe,SAAA,OAKA1+B,EAAAC,QAAApH,uBC7GA,IAAArC,EAAcD,EAAQ,IAEtBq0E,EAAqBr0E,EAAQ,KAqB7Bs0E,EAAAr0E,EAAAK,oBAAA,CACAC,KAAA,cACAkC,OAAA,SAAA+/C,EAAA7/C,EAAA4I,GACA,IAAAg3C,EAAA5/C,EAAAuc,aAAA,WACAigD,EAAA3c,EAAAz/C,IAAA,cAAAw/C,KAAAx/C,IAAA,gCAGAsxE,EAAA9jC,SAAA,cAAAhlC,EAAA,SAAA40D,EAAAhrC,EAAA7M,GAEA,SAAA62C,IAAA,UAAAgB,GAAAhB,EAAAnzB,QAAAm0B,IAAA,IACA73C,EAAA,CACA/nB,KAAA,oBACA4/D,cACA94D,EAAA8tB,KAAAE,QACA/tB,EAAA6tB,KAAAG,aASAnmB,OAAA,SAAAxM,EAAA4I,GACA8oE,EAAA1jC,WAAAplC,EAAAkc,QAAA,eACA6sD,EAAAx9D,WAAAlU,KAAA47D,OAAA,SAAAznD,YAMA7H,QAAA,SAAAvM,EAAA4I,GACA8oE,EAAA1jC,WAAA,cAAAplC,GACA+oE,EAAAx9D,WAAAlU,KAAA47D,OAAA,UAAAznD,cAGAzU,EAAAgyE,EACA7qE,EAAAC,QAAApH,uBC5DA,IAAAyI,EAAsB/K,EAAQ,KAE9BgL,EAAiBhL,EAAQ,KAEzBywE,EAAuBzwE,EAAQ,KAE/BU,EAAeV,EAAQ,KAqBvB+hC,EAAA,UACAD,EAAA,mBACAyyC,EAAAxpE,EAAAxI,OAAA,CAIA4I,aAAA,SAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,GACA,IAAAtI,EAAAoI,EAAApI,KACA6M,EAAA7M,EAAAqL,iBACA3C,EAAA01D,EAAAvxD,EAAA,EAAA0kE,EAAAvxE,IACAq+D,EAAAxxD,EAAAioB,YAAA/vB,GAAA,GACA8D,EAAAR,EAAAvI,IAAA,QAEA,GAAA+I,GAAA,SAAAA,EAAA,CACA,IAAAC,EAAAf,EAAAgB,aAAAV,GACAW,EAAAC,EAAAJ,GAAA7I,EAAAq+D,EAAA31D,GACAM,EAAApH,MAAAkH,EACAX,EAAAe,WAAAF,EAAA1L,KACA6K,EAAAgB,QAAAH,EAGA,IAAAuiB,EAAAiiD,EAAAtmE,OAAAkB,GACAL,EAAA47C,kCAAA5+C,EAAAoD,EAAAojB,EAAAnjB,EAAAC,EAAAC,IAMAgoD,mBAAA,SAAAvrD,EAAAqD,EAAAC,GACA,IAAAkjB,EAAAiiD,EAAAtmE,OAAAkB,EAAA,CACAk2D,aAAA,IAGA,OADA/yC,EAAA/nB,YAAA6E,EAAAvI,IAAA,iBACA,CACAqH,SAAAY,EAAA07C,uBAAAr7C,EAAApI,KAAA+E,EAAAwmB,GACAnkB,SAAAmkB,EAAAnkB,UAAAmkB,EAAAlkB,eAAA,EAAApI,KAAA6G,GAAA,KAOAiqD,sBAAA,SAAAxmD,EAAAghC,EAAAniC,EAAAC,GACA,IAAArI,EAAAoI,EAAApI,KACA6M,EAAA7M,EAAAqL,iBACAktB,EAAAg5C,EAAAvxE,GACA6sB,EAAAuxC,EAAAvxD,EAAA0rB,GACAgmC,EAAAh1D,EAAApC,SACAo3D,EAAAhmC,IAAAgS,EAAAhS,GACAgmC,EAAAhmC,GAAAt5B,KAAA+G,IAAA6mB,EAAA,GAAA0xC,EAAAhmC,IACAgmC,EAAAhmC,GAAAt5B,KAAAiH,IAAA2mB,EAAA,GAAA0xC,EAAAhmC,IACA,IAAA7vB,EAAA01D,EAAAvxD,EAAA,EAAA0rB,GACAimC,GAAA91D,EAAA,GAAAA,EAAA,MACA+nD,EAAA,CAAA+N,KAEA,OADA/N,EAAAl4B,GAAAgmC,EAAAhmC,GACA,CACApxB,SAAAo3D,EACAn3D,SAAAmC,EAAAnC,SACAqpD,cACAC,cAAA,CACApnD,cAAA,cAKAL,EAAA,CACAgB,KAAA,SAAAjK,EAAAq+D,EAAA31D,GAEA,OACApL,KAAA,OACAwsC,kBAAA,EACA3oC,MAJA4G,EAAAmC,cAAA,CAAAm0D,EAAA31D,EAAA,KAAA21D,EAAA31D,EAAA,IAAA6oE,EAAAvxE,MAOAmK,OAAA,SAAAnK,EAAAq+D,EAAA31D,GACA,IAAA0B,EAAApK,EAAAqK,eACAytC,EAAApvC,EAAA,GAAAA,EAAA,GACA,OACApL,KAAA,OACA6D,MAAA4G,EAAAi8C,cAAA,CAAAqa,EAAAj0D,EAAA,EAAA1B,EAAA,KAAA0B,EAAA0tC,GAAAy5B,EAAAvxE,OAKA,SAAAuxE,EAAAvxE,GACA,OAAAA,EAAAk0B,eAAA,IAGA,SAAAkqC,EAAAvxD,EAAA0rB,GACA,IAAArqB,EAAArB,EAAAy/B,UACA,OAAAp+B,EAAA4wB,EAAAvG,IAAArqB,EAAA4wB,EAAAvG,IAAArqB,EAAA2wB,EAAAtG,KAGA96B,EAAA+M,yBAAA,oBAAA8mE,GACA,IAAAjyE,EAAAiyE,EACA9qE,EAAAC,QAAApH","file":"static/js/main~58fdc3a3.148e2dcb.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./gridSimple\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\nrequire(\"./axisPointer\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar barPolar = require(\"../layout/barPolar\");\n\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./angleAxis\");\n\nrequire(\"./radiusAxis\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/PolarAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// For reducing size of echarts.min, barLayoutPolar is required by polar.\n\n\necharts.registerLayout(zrUtil.curry(barPolar, 'bar')); // Polar view\n\necharts.extendComponentView({\n  type: 'polar'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/AngleAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar elementList = ['axisLine', 'axisLabel', 'axisTick', 'minorTick', 'splitLine', 'minorSplitLine', 'splitArea'];\n\nfunction getAxisLineShape(polar, rExtent, angle) {\n  rExtent[1] > rExtent[0] && (rExtent = rExtent.slice().reverse());\n  var start = polar.coordToPoint([rExtent[0], angle]);\n  var end = polar.coordToPoint([rExtent[1], angle]);\n  return {\n    x1: start[0],\n    y1: start[1],\n    x2: end[0],\n    y2: end[1]\n  };\n}\n\nfunction getRadiusIdx(polar) {\n  var radiusAxis = polar.getRadiusAxis();\n  return radiusAxis.inverse ? 0 : 1;\n} // Remove the last tick which will overlap the first tick\n\n\nfunction fixAngleOverlap(list) {\n  var firstItem = list[0];\n  var lastItem = list[list.length - 1];\n\n  if (firstItem && lastItem && Math.abs(Math.abs(firstItem.coord - lastItem.coord) - 360) < 1e-4) {\n    list.pop();\n  }\n}\n\nvar _default = AxisView.extend({\n  type: 'angleAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function render(angleAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!angleAxisModel.get('show')) {\n      return;\n    }\n\n    var angleAxis = angleAxisModel.axis;\n    var polar = angleAxis.polar;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var ticksAngles = angleAxis.getTicksCoords();\n    var minorTickAngles = angleAxis.getMinorTicksCoords();\n    var labels = zrUtil.map(angleAxis.getViewLabels(), function (labelItem) {\n      var labelItem = zrUtil.clone(labelItem);\n      labelItem.coord = angleAxis.dataToCoord(labelItem.tickValue);\n      return labelItem;\n    });\n    fixAngleOverlap(labels);\n    fixAngleOverlap(ticksAngles);\n    zrUtil.each(elementList, function (name) {\n      if (angleAxisModel.get(name + '.show') && (!angleAxis.scale.isBlank() || name === 'axisLine')) {\n        this['_' + name](angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _axisLine: function _axisLine(angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var lineStyleModel = angleAxisModel.getModel('axisLine.lineStyle'); // extent id of the axis radius (r0 and r)\n\n    var rId = getRadiusIdx(polar);\n    var r0Id = rId ? 0 : 1;\n    var shape;\n\n    if (radiusExtent[r0Id] === 0) {\n      shape = new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    } else {\n      shape = new graphic.Ring({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: radiusExtent[rId],\n          r0: radiusExtent[r0Id]\n        },\n        style: lineStyleModel.getLineStyle(),\n        z2: 1,\n        silent: true\n      });\n    }\n\n    shape.style.fill = null;\n    this.group.add(shape);\n  },\n\n  /**\n   * @private\n   */\n  _axisTick: function _axisTick(angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * tickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = zrUtil.map(ticksAngles, function (tickAngleItem) {\n      return new graphic.Line({\n        shape: getAxisLineShape(polar, [radius, radius + tickLen], tickAngleItem.coord)\n      });\n    });\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(tickModel.getModel('lineStyle').getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      })\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _minorTick: function _minorTick(angleAxisModel, polar, tickAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var tickModel = angleAxisModel.getModel('axisTick');\n    var minorTickModel = angleAxisModel.getModel('minorTick');\n    var tickLen = (tickModel.get('inside') ? -1 : 1) * minorTickModel.get('length');\n    var radius = radiusExtent[getRadiusIdx(polar)];\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, [radius, radius + tickLen], minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults(minorTickModel.getModel('lineStyle').getLineStyle(), zrUtil.defaults(tickModel.getLineStyle(), {\n        stroke: angleAxisModel.get('axisLine.lineStyle.color')\n      }))\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _axisLabel: function _axisLabel(angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent, labels) {\n    var rawCategoryData = angleAxisModel.getCategories(true);\n    var commonLabelModel = angleAxisModel.getModel('axisLabel');\n    var labelMargin = commonLabelModel.get('margin');\n    var triggerEvent = angleAxisModel.get('triggerEvent'); // Use length of ticksAngles because it may remove the last tick to avoid overlapping\n\n    zrUtil.each(labels, function (labelItem, idx) {\n      var labelModel = commonLabelModel;\n      var tickValue = labelItem.tickValue;\n      var r = radiusExtent[getRadiusIdx(polar)];\n      var p = polar.coordToPoint([r + labelMargin, labelItem.coord]);\n      var cx = polar.cx;\n      var cy = polar.cy;\n      var labelTextAlign = Math.abs(p[0] - cx) / r < 0.3 ? 'center' : p[0] > cx ? 'left' : 'right';\n      var labelTextVerticalAlign = Math.abs(p[1] - cy) / r < 0.3 ? 'middle' : p[1] > cy ? 'top' : 'bottom';\n\n      if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n        labelModel = new Model(rawCategoryData[tickValue].textStyle, commonLabelModel, commonLabelModel.ecModel);\n      }\n\n      var textEl = new graphic.Text({\n        silent: AxisBuilder.isLabelSilent(angleAxisModel)\n      });\n      this.group.add(textEl);\n      graphic.setTextStyle(textEl.style, labelModel, {\n        x: p[0],\n        y: p[1],\n        textFill: labelModel.getTextColor() || angleAxisModel.get('axisLine.lineStyle.color'),\n        text: labelItem.formattedLabel,\n        textAlign: labelTextAlign,\n        textVerticalAlign: labelTextVerticalAlign\n      }); // Pack data for mouse event\n\n      if (triggerEvent) {\n        textEl.eventData = AxisBuilder.makeAxisEventDataBase(angleAxisModel);\n        textEl.eventData.targetType = 'axisLabel';\n        textEl.eventData.value = labelItem.rawLabel;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function _splitLine(angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    var splitLineModel = angleAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        shape: getAxisLineShape(polar, radiusExtent, ticksAngles[i].coord)\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length]\n        }, lineStyleModel.getLineStyle()),\n        silent: true,\n        z: angleAxisModel.get('z')\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _minorSplitLine: function _minorSplitLine(angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!minorTickAngles.length) {\n      return;\n    }\n\n    var minorSplitLineModel = angleAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTickAngles.length; i++) {\n      for (var k = 0; k < minorTickAngles[i].length; k++) {\n        lines.push(new graphic.Line({\n          shape: getAxisLineShape(polar, radiusExtent, minorTickAngles[i][k].coord)\n        }));\n      }\n    }\n\n    this.group.add(graphic.mergePath(lines, {\n      style: lineStyleModel.getLineStyle(),\n      silent: true,\n      z: angleAxisModel.get('z')\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function _splitArea(angleAxisModel, polar, ticksAngles, minorTickAngles, radiusExtent) {\n    if (!ticksAngles.length) {\n      return;\n    }\n\n    var splitAreaModel = angleAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var RADIAN = Math.PI / 180;\n    var prevAngle = -ticksAngles[0].coord * RADIAN;\n    var r0 = Math.min(radiusExtent[0], radiusExtent[1]);\n    var r1 = Math.max(radiusExtent[0], radiusExtent[1]);\n    var clockwise = angleAxisModel.get('clockwise');\n\n    for (var i = 1; i < ticksAngles.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: r0,\n          r: r1,\n          startAngle: prevAngle,\n          endAngle: -ticksAngles[i].coord * RADIAN,\n          clockwise: clockwise\n        },\n        silent: true\n      }));\n      prevAngle = -ticksAngles[i].coord * RADIAN;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/polar/polarCreator\");\n\nrequire(\"./axis/RadiusAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitLine', 'splitArea', 'minorSplitLine'];\n\nvar _default = AxisView.extend({\n  type: 'radiusAxis',\n  axisPointerClass: 'PolarAxisPointer',\n  render: function render(radiusAxisModel, ecModel) {\n    this.group.removeAll();\n\n    if (!radiusAxisModel.get('show')) {\n      return;\n    }\n\n    var radiusAxis = radiusAxisModel.axis;\n    var polar = radiusAxis.polar;\n    var angleAxis = polar.getAngleAxis();\n    var ticksCoords = radiusAxis.getTicksCoords();\n    var minorTicksCoords = radiusAxis.getMinorTicksCoords();\n    var axisAngle = angleAxis.getExtent()[0];\n    var radiusExtent = radiusAxis.getExtent();\n    var layout = layoutAxis(polar, radiusAxisModel, axisAngle);\n    var axisBuilder = new AxisBuilder(radiusAxisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    this.group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (radiusAxisModel.get(name + '.show') && !radiusAxis.scale.isBlank()) {\n        this['_' + name](radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords);\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _splitLine: function _splitLine(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    var splitLineModel = radiusAxisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    var lineCount = 0;\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var splitLines = [];\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Circle({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r: ticksCoords[i].coord\n        }\n      }));\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitLines.length; i++) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: zrUtil.defaults({\n          stroke: lineColors[i % lineColors.length],\n          fill: null\n        }, lineStyleModel.getLineStyle()),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @private\n   */\n  _minorSplitLine: function _minorSplitLine(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords, minorTicksCoords) {\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var minorSplitLineModel = radiusAxisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var lines = [];\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        lines.push(new graphic.Circle({\n          shape: {\n            cx: polar.cx,\n            cy: polar.cy,\n            r: minorTicksCoords[i][k].coord\n          }\n        }));\n      }\n    }\n\n    this.group.add(graphic.mergePath(lines, {\n      style: zrUtil.defaults({\n        fill: null\n      }, lineStyleModel.getLineStyle()),\n      silent: true\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _splitArea: function _splitArea(radiusAxisModel, polar, axisAngle, radiusExtent, ticksCoords) {\n    if (!ticksCoords.length) {\n      return;\n    }\n\n    var splitAreaModel = radiusAxisModel.getModel('splitArea');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var areaColors = areaStyleModel.get('color');\n    var lineCount = 0;\n    areaColors = areaColors instanceof Array ? areaColors : [areaColors];\n    var splitAreas = [];\n    var prevRadius = ticksCoords[0].coord;\n\n    for (var i = 1; i < ticksCoords.length; i++) {\n      var colorIndex = lineCount++ % areaColors.length;\n      splitAreas[colorIndex] = splitAreas[colorIndex] || [];\n      splitAreas[colorIndex].push(new graphic.Sector({\n        shape: {\n          cx: polar.cx,\n          cy: polar.cy,\n          r0: prevRadius,\n          r: ticksCoords[i].coord,\n          startAngle: 0,\n          endAngle: Math.PI * 2\n        },\n        silent: true\n      }));\n      prevRadius = ticksCoords[i].coord;\n    } // Simple optimization\n    // Batching the lines if color are the same\n\n\n    for (var i = 0; i < splitAreas.length; i++) {\n      this.group.add(graphic.mergePath(splitAreas[i], {\n        style: zrUtil.defaults({\n          fill: areaColors[i % areaColors.length]\n        }, areaStyleModel.getAreaStyle()),\n        silent: true\n      }));\n    }\n  }\n});\n/**\n * @inner\n */\n\n\nfunction layoutAxis(polar, radiusAxisModel, axisAngle) {\n  return {\n    position: [polar.cx, polar.cy],\n    rotation: axisAngle / 180 * Math.PI,\n    labelDirection: -1,\n    tickDirection: -1,\n    nameDirection: 1,\n    labelRotate: radiusAxisModel.getModel('axisLabel').get('rotate'),\n    // Over splitLine and splitArea\n    z2: 1\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar formatUtil = require(\"../../util/format\");\n\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar PolarAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n\n    if (axis.dim === 'angle') {\n      this.animationThreshold = Math.PI / 18;\n    }\n\n    var polar = axis.polar;\n    var otherAxis = polar.getOtherAxis(axis);\n    var otherExtent = otherAxis.getExtent();\n    var coordValue;\n    coordValue = axis['dataTo' + formatUtil.capitalFirst(axis.dim)](value);\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, polar, coordValue, otherExtent, elStyle);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var labelMargin = axisPointerModel.get('label.margin');\n    var labelPos = getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin);\n    viewHelper.buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos);\n  } // Do not support handle, utill any user requires it.\n\n});\n\nfunction getLabelPosition(value, axisModel, axisPointerModel, polar, labelMargin) {\n  var axis = axisModel.axis;\n  var coord = axis.dataToCoord(value);\n  var axisAngle = polar.getAngleAxis().getExtent()[0];\n  axisAngle = axisAngle / 180 * Math.PI;\n  var radiusExtent = polar.getRadiusAxis().getExtent();\n  var position;\n  var align;\n  var verticalAlign;\n\n  if (axis.dim === 'radius') {\n    var transform = matrix.create();\n    matrix.rotate(transform, transform, axisAngle);\n    matrix.translate(transform, transform, [polar.cx, polar.cy]);\n    position = graphic.applyTransform([coord, -labelMargin], transform);\n    var labelRotation = axisModel.getModel('axisLabel').get('rotate') || 0;\n    var labelLayout = AxisBuilder.innerTextLayout(axisAngle, labelRotation * Math.PI / 180, -1);\n    align = labelLayout.textAlign;\n    verticalAlign = labelLayout.textVerticalAlign;\n  } else {\n    // angle axis\n    var r = radiusExtent[1];\n    position = polar.coordToPoint([r + labelMargin, coord]);\n    var cx = polar.cx;\n    var cy = polar.cy;\n    align = Math.abs(position[0] - cx) / r < 0.3 ? 'center' : position[0] > cx ? 'left' : 'right';\n    verticalAlign = Math.abs(position[1] - cy) / r < 0.3 ? 'middle' : position[1] > cy ? 'top' : 'bottom';\n  }\n\n  return {\n    position: position,\n    align: align,\n    verticalAlign: verticalAlign\n  };\n}\n\nvar pointerShapeBuilder = {\n  line: function line(axis, polar, coordValue, otherExtent, elStyle) {\n    return axis.dim === 'angle' ? {\n      type: 'Line',\n      shape: viewHelper.makeLineShape(polar.coordToPoint([otherExtent[0], coordValue]), polar.coordToPoint([otherExtent[1], coordValue]))\n    } : {\n      type: 'Circle',\n      shape: {\n        cx: polar.cx,\n        cy: polar.cy,\n        r: coordValue\n      }\n    };\n  },\n  shadow: function shadow(axis, polar, coordValue, otherExtent, elStyle) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var radian = Math.PI / 180;\n    return axis.dim === 'angle' ? {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, otherExtent[0], otherExtent[1], // In ECharts y is negative if angle is positive\n      (-coordValue - bandWidth / 2) * radian, (-coordValue + bandWidth / 2) * radian)\n    } : {\n      type: 'Sector',\n      shape: viewHelper.makeSectorShape(polar.cx, polar.cy, coordValue - bandWidth / 2, coordValue + bandWidth / 2, 0, Math.PI * 2)\n    };\n  }\n};\nAxisView.registerAxisPointerClass('PolarAxisPointer', PolarAxisPointer);\nvar _default = PolarAxisPointer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MapDraw = require(\"../helper/MapDraw\");\n\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'geo',\n  init: function init(ecModel, api) {\n    var mapDraw = new MapDraw(api, true);\n    this._mapDraw = mapDraw;\n    this.group.add(mapDraw.group);\n  },\n  render: function render(geoModel, ecModel, api, payload) {\n    // Not render if it is an toggleSelect action from self\n    if (payload && payload.type === 'geoToggleSelect' && payload.from === this.uid) {\n      return;\n    }\n\n    var mapDraw = this._mapDraw;\n\n    if (geoModel.get('show')) {\n      mapDraw.draw(geoModel, ecModel, api, this, payload);\n    } else {\n      this._mapDraw.group.removeAll();\n    }\n\n    this.group.silent = geoModel.get('silent');\n  },\n  dispose: function dispose() {\n    this._mapDraw && this._mapDraw.remove();\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/calendar/Calendar\");\n\nrequire(\"../coord/calendar/CalendarModel\");\n\nrequire(\"./calendar/CalendarView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar numberUtil = require(\"../../util/number\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar MONTH_TEXT = {\n  EN: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  CN: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月']\n};\nvar WEEK_TEXT = {\n  EN: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  CN: ['日', '一', '二', '三', '四', '五', '六']\n};\n\nvar _default = echarts.extendComponentView({\n  type: 'calendar',\n\n  /**\n   * top/left line points\n   *  @private\n   */\n  _tlpoints: null,\n\n  /**\n   * bottom/right line points\n   *  @private\n   */\n  _blpoints: null,\n\n  /**\n   * first day of month\n   *  @private\n   */\n  _firstDayOfMonth: null,\n\n  /**\n   * first day point of month\n   *  @private\n   */\n  _firstDayPoints: null,\n  render: function render(calendarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n    var coordSys = calendarModel.coordinateSystem; // range info\n\n    var rangeData = coordSys.getRangeInfo();\n    var orient = coordSys.getOrient();\n\n    this._renderDayRect(calendarModel, rangeData, group); // _renderLines must be called prior to following function\n\n\n    this._renderLines(calendarModel, rangeData, orient, group);\n\n    this._renderYearText(calendarModel, rangeData, orient, group);\n\n    this._renderMonthText(calendarModel, orient, group);\n\n    this._renderWeekText(calendarModel, rangeData, orient, group);\n  },\n  // render day rect\n  _renderDayRect: function _renderDayRect(calendarModel, rangeData, group) {\n    var coordSys = calendarModel.coordinateSystem;\n    var itemRectStyleModel = calendarModel.getModel('itemStyle').getItemStyle();\n    var sw = coordSys.getCellWidth();\n    var sh = coordSys.getCellHeight();\n\n    for (var i = rangeData.start.time; i <= rangeData.end.time; i = coordSys.getNextNDay(i, 1).time) {\n      var point = coordSys.dataToRect([i], false).tl; // every rect\n\n      var rect = new graphic.Rect({\n        shape: {\n          x: point[0],\n          y: point[1],\n          width: sw,\n          height: sh\n        },\n        cursor: 'default',\n        style: itemRectStyleModel\n      });\n      group.add(rect);\n    }\n  },\n  // render separate line\n  _renderLines: function _renderLines(calendarModel, rangeData, orient, group) {\n    var self = this;\n    var coordSys = calendarModel.coordinateSystem;\n    var lineStyleModel = calendarModel.getModel('splitLine.lineStyle').getLineStyle();\n    var show = calendarModel.get('splitLine.show');\n    var lineWidth = lineStyleModel.lineWidth;\n    this._tlpoints = [];\n    this._blpoints = [];\n    this._firstDayOfMonth = [];\n    this._firstDayPoints = [];\n    var firstDay = rangeData.start;\n\n    for (var i = 0; firstDay.time <= rangeData.end.time; i++) {\n      addPoints(firstDay.formatedDate);\n\n      if (i === 0) {\n        firstDay = coordSys.getDateInfo(rangeData.start.y + '-' + rangeData.start.m);\n      }\n\n      var date = firstDay.date;\n      date.setMonth(date.getMonth() + 1);\n      firstDay = coordSys.getDateInfo(date);\n    }\n\n    addPoints(coordSys.getNextNDay(rangeData.end.time, 1).formatedDate);\n\n    function addPoints(date) {\n      self._firstDayOfMonth.push(coordSys.getDateInfo(date));\n\n      self._firstDayPoints.push(coordSys.dataToRect([date], false).tl);\n\n      var points = self._getLinePointsOfOneWeek(calendarModel, date, orient);\n\n      self._tlpoints.push(points[0]);\n\n      self._blpoints.push(points[points.length - 1]);\n\n      show && self._drawSplitline(points, lineStyleModel, group);\n    } // render top/left line\n\n\n    show && this._drawSplitline(self._getEdgesPoints(self._tlpoints, lineWidth, orient), lineStyleModel, group); // render bottom/right line\n\n    show && this._drawSplitline(self._getEdgesPoints(self._blpoints, lineWidth, orient), lineStyleModel, group);\n  },\n  // get points at both ends\n  _getEdgesPoints: function _getEdgesPoints(points, lineWidth, orient) {\n    var rs = [points[0].slice(), points[points.length - 1].slice()];\n    var idx = orient === 'horizontal' ? 0 : 1; // both ends of the line are extend half lineWidth\n\n    rs[0][idx] = rs[0][idx] - lineWidth / 2;\n    rs[1][idx] = rs[1][idx] + lineWidth / 2;\n    return rs;\n  },\n  // render split line\n  _drawSplitline: function _drawSplitline(points, lineStyleModel, group) {\n    var poyline = new graphic.Polyline({\n      z2: 20,\n      shape: {\n        points: points\n      },\n      style: lineStyleModel\n    });\n    group.add(poyline);\n  },\n  // render month line of one week points\n  _getLinePointsOfOneWeek: function _getLinePointsOfOneWeek(calendarModel, date, orient) {\n    var coordSys = calendarModel.coordinateSystem;\n    date = coordSys.getDateInfo(date);\n    var points = [];\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(date.time, i);\n      var point = coordSys.dataToRect([tmpD.time], false);\n      points[2 * tmpD.day] = point.tl;\n      points[2 * tmpD.day + 1] = point[orient === 'horizontal' ? 'bl' : 'tr'];\n    }\n\n    return points;\n  },\n  _formatterLabel: function _formatterLabel(formatter, params) {\n    if (typeof formatter === 'string' && formatter) {\n      return formatUtil.formatTplSimple(formatter, params);\n    }\n\n    if (typeof formatter === 'function') {\n      return formatter(params);\n    }\n\n    return params.nameMap;\n  },\n  _yearTextPositionControl: function _yearTextPositionControl(textEl, point, orient, position, margin) {\n    point = point.slice();\n    var aligns = ['center', 'bottom'];\n\n    if (position === 'bottom') {\n      point[1] += margin;\n      aligns = ['center', 'top'];\n    } else if (position === 'left') {\n      point[0] -= margin;\n    } else if (position === 'right') {\n      point[0] += margin;\n      aligns = ['center', 'top'];\n    } else {\n      // top\n      point[1] -= margin;\n    }\n\n    var rotate = 0;\n\n    if (position === 'left' || position === 'right') {\n      rotate = Math.PI / 2;\n    }\n\n    return {\n      rotation: rotate,\n      position: point,\n      style: {\n        textAlign: aligns[0],\n        textVerticalAlign: aligns[1]\n      }\n    };\n  },\n  // render year\n  _renderYearText: function _renderYearText(calendarModel, rangeData, orient, group) {\n    var yearLabel = calendarModel.getModel('yearLabel');\n\n    if (!yearLabel.get('show')) {\n      return;\n    }\n\n    var margin = yearLabel.get('margin');\n    var pos = yearLabel.get('position');\n\n    if (!pos) {\n      pos = orient !== 'horizontal' ? 'top' : 'left';\n    }\n\n    var points = [this._tlpoints[this._tlpoints.length - 1], this._blpoints[0]];\n    var xc = (points[0][0] + points[1][0]) / 2;\n    var yc = (points[0][1] + points[1][1]) / 2;\n    var idx = orient === 'horizontal' ? 0 : 1;\n    var posPoints = {\n      top: [xc, points[idx][1]],\n      bottom: [xc, points[1 - idx][1]],\n      left: [points[1 - idx][0], yc],\n      right: [points[idx][0], yc]\n    };\n    var name = rangeData.start.y;\n\n    if (+rangeData.end.y > +rangeData.start.y) {\n      name = name + '-' + rangeData.end.y;\n    }\n\n    var formatter = yearLabel.get('formatter');\n    var params = {\n      start: rangeData.start.y,\n      end: rangeData.end.y,\n      nameMap: name\n    };\n\n    var content = this._formatterLabel(formatter, params);\n\n    var yearText = new graphic.Text({\n      z2: 30\n    });\n    graphic.setTextStyle(yearText.style, yearLabel, {\n      text: content\n    }), yearText.attr(this._yearTextPositionControl(yearText, posPoints[pos], orient, pos, margin));\n    group.add(yearText);\n  },\n  _monthTextPositionControl: function _monthTextPositionControl(point, isCenter, orient, position, margin) {\n    var align = 'left';\n    var vAlign = 'top';\n    var x = point[0];\n    var y = point[1];\n\n    if (orient === 'horizontal') {\n      y = y + margin;\n\n      if (isCenter) {\n        align = 'center';\n      }\n\n      if (position === 'start') {\n        vAlign = 'bottom';\n      }\n    } else {\n      x = x + margin;\n\n      if (isCenter) {\n        vAlign = 'middle';\n      }\n\n      if (position === 'start') {\n        align = 'right';\n      }\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render month and year text\n  _renderMonthText: function _renderMonthText(calendarModel, orient, group) {\n    var monthLabel = calendarModel.getModel('monthLabel');\n\n    if (!monthLabel.get('show')) {\n      return;\n    }\n\n    var nameMap = monthLabel.get('nameMap');\n    var margin = monthLabel.get('margin');\n    var pos = monthLabel.get('position');\n    var align = monthLabel.get('align');\n    var termPoints = [this._tlpoints, this._blpoints];\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = MONTH_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var idx = pos === 'start' ? 0 : 1;\n    var axis = orient === 'horizontal' ? 0 : 1;\n    margin = pos === 'start' ? -margin : margin;\n    var isCenter = align === 'center';\n\n    for (var i = 0; i < termPoints[idx].length - 1; i++) {\n      var tmp = termPoints[idx][i].slice();\n      var firstDay = this._firstDayOfMonth[i];\n\n      if (isCenter) {\n        var firstDayPoints = this._firstDayPoints[i];\n        tmp[axis] = (firstDayPoints[axis] + termPoints[0][i + 1][axis]) / 2;\n      }\n\n      var formatter = monthLabel.get('formatter');\n      var name = nameMap[+firstDay.m - 1];\n      var params = {\n        yyyy: firstDay.y,\n        yy: (firstDay.y + '').slice(2),\n        MM: firstDay.m,\n        M: +firstDay.m,\n        nameMap: name\n      };\n\n      var content = this._formatterLabel(formatter, params);\n\n      var monthText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(monthText.style, monthLabel, {\n        text: content\n      }), this._monthTextPositionControl(tmp, isCenter, orient, pos, margin));\n      group.add(monthText);\n    }\n  },\n  _weekTextPositionControl: function _weekTextPositionControl(point, orient, position, margin, cellSize) {\n    var align = 'center';\n    var vAlign = 'middle';\n    var x = point[0];\n    var y = point[1];\n    var isStart = position === 'start';\n\n    if (orient === 'horizontal') {\n      x = x + margin + (isStart ? 1 : -1) * cellSize[0] / 2;\n      align = isStart ? 'right' : 'left';\n    } else {\n      y = y + margin + (isStart ? 1 : -1) * cellSize[1] / 2;\n      vAlign = isStart ? 'bottom' : 'top';\n    }\n\n    return {\n      x: x,\n      y: y,\n      textAlign: align,\n      textVerticalAlign: vAlign\n    };\n  },\n  // render weeks\n  _renderWeekText: function _renderWeekText(calendarModel, rangeData, orient, group) {\n    var dayLabel = calendarModel.getModel('dayLabel');\n\n    if (!dayLabel.get('show')) {\n      return;\n    }\n\n    var coordSys = calendarModel.coordinateSystem;\n    var pos = dayLabel.get('position');\n    var nameMap = dayLabel.get('nameMap');\n    var margin = dayLabel.get('margin');\n    var firstDayOfWeek = coordSys.getFirstDayOfWeek();\n\n    if (zrUtil.isString(nameMap)) {\n      nameMap = WEEK_TEXT[nameMap.toUpperCase()] || [];\n    }\n\n    var start = coordSys.getNextNDay(rangeData.end.time, 7 - rangeData.lweek).time;\n    var cellSize = [coordSys.getCellWidth(), coordSys.getCellHeight()];\n    margin = numberUtil.parsePercent(margin, cellSize[orient === 'horizontal' ? 0 : 1]);\n\n    if (pos === 'start') {\n      start = coordSys.getNextNDay(rangeData.start.time, -(7 + rangeData.fweek)).time;\n      margin = -margin;\n    }\n\n    for (var i = 0; i < 7; i++) {\n      var tmpD = coordSys.getNextNDay(start, i);\n      var point = coordSys.dataToRect([tmpD.time], false).center;\n      var day = i;\n      day = Math.abs((i + firstDayOfWeek) % 7);\n      var weekText = new graphic.Text({\n        z2: 30\n      });\n      zrUtil.extend(graphic.setTextStyle(weekText.style, dayLabel, {\n        text: nameMap[day]\n      }), this._weekTextPositionControl(point, orient, pos, margin, cellSize));\n      group.add(weekText);\n    }\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../util/model\");\n\nvar graphicUtil = require(\"../util/graphic\");\n\nvar layoutUtil = require(\"../util/layout\");\n\nvar _number = require(\"../util/number\");\n\nvar parsePercent = _number.parsePercent;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _nonShapeGraphicElements = {\n  // Reserved but not supported in graphic component.\n  path: null,\n  compoundPath: null,\n  // Supported in graphic component.\n  group: graphicUtil.Group,\n  image: graphicUtil.Image,\n  text: graphicUtil.Text\n}; // -------------\n// Preprocessor\n// -------------\n\necharts.registerPreprocessor(function (option) {\n  var graphicOption = option.graphic; // Convert\n  // {graphic: [{left: 10, type: 'circle'}, ...]}\n  // or\n  // {graphic: {left: 10, type: 'circle'}}\n  // to\n  // {graphic: [{elements: [{left: 10, type: 'circle'}, ...]}]}\n\n  if (zrUtil.isArray(graphicOption)) {\n    if (!graphicOption[0] || !graphicOption[0].elements) {\n      option.graphic = [{\n        elements: graphicOption\n      }];\n    } else {\n      // Only one graphic instance can be instantiated. (We dont\n      // want that too many views are created in echarts._viewMap)\n      option.graphic = [option.graphic[0]];\n    }\n  } else if (graphicOption && !graphicOption.elements) {\n    option.graphic = [{\n      elements: [graphicOption]\n    }];\n  }\n}); // ------\n// Model\n// ------\n\nvar GraphicModel = echarts.extendComponentModel({\n  type: 'graphic',\n  defaultOption: {\n    // Extra properties for each elements:\n    //\n    // left/right/top/bottom: (like 12, '22%', 'center', default undefined)\n    //      If left/rigth is set, shape.x/shape.cx/position will not be used.\n    //      If top/bottom is set, shape.y/shape.cy/position will not be used.\n    //      This mechanism is useful when you want to position a group/element\n    //      against the right side or the center of this container.\n    //\n    // width/height: (can only be pixel value, default 0)\n    //      Only be used to specify contianer(group) size, if needed. And\n    //      can not be percentage value (like '33%'). See the reason in the\n    //      layout algorithm below.\n    //\n    // bounding: (enum: 'all' (default) | 'raw')\n    //      Specify how to calculate boundingRect when locating.\n    //      'all': Get uioned and transformed boundingRect\n    //          from both itself and its descendants.\n    //          This mode simplies confining a group of elements in the bounding\n    //          of their ancester container (e.g., using 'right: 0').\n    //      'raw': Only use the boundingRect of itself and before transformed.\n    //          This mode is similar to css behavior, which is useful when you\n    //          want an element to be able to overflow its container. (Consider\n    //          a rotated circle needs to be located in a corner.)\n    // info: custom info. enables user to mount some info on elements and use them\n    //      in event handlers. Update them only when user specified, otherwise, remain.\n    // Note: elements is always behind its ancestors in this elements array.\n    elements: [],\n    parentId: null\n  },\n\n  /**\n   * Save el options for the sake of the performance (only update modified graphics).\n   * The order is the same as those in option. (ancesters -> descendants)\n   *\n   * @private\n   * @type {Array.<Object>}\n   */\n  _elOptionsToUpdate: null,\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option) {\n    // Prevent default merge to elements\n    var elements = this.option.elements;\n    this.option.elements = null;\n    GraphicModel.superApply(this, 'mergeOption', arguments);\n    this.option.elements = elements;\n  },\n\n  /**\n   * @override\n   */\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    var newList = (isInit ? thisOption : newOption).elements;\n    var existList = thisOption.elements = isInit ? [] : thisOption.elements;\n    var flattenedList = [];\n\n    this._flatten(newList, flattenedList);\n\n    var mappingResult = modelUtil.mappingToExists(existList, flattenedList);\n    modelUtil.makeIdAndName(mappingResult); // Clear elOptionsToUpdate\n\n    var elOptionsToUpdate = this._elOptionsToUpdate = [];\n    zrUtil.each(mappingResult, function (resultItem, index) {\n      var newElOption = resultItem.option;\n\n      if (!newElOption) {\n        return;\n      }\n\n      elOptionsToUpdate.push(newElOption);\n      setKeyInfoToNewElOption(resultItem, newElOption);\n      mergeNewElOptionToExist(existList, index, newElOption);\n      setLayoutInfoToExist(existList[index], newElOption);\n    }, this); // Clean\n\n    for (var i = existList.length - 1; i >= 0; i--) {\n      if (existList[i] == null) {\n        existList.splice(i, 1);\n      } else {\n        // $action should be volatile, otherwise option gotten from\n        // `getOption` will contain unexpected $action.\n        delete existList[i].$action;\n      }\n    }\n  },\n\n  /**\n   * Convert\n   * [{\n   *  type: 'group',\n   *  id: 'xx',\n   *  children: [{type: 'circle'}, {type: 'polygon'}]\n   * }]\n   * to\n   * [\n   *  {type: 'group', id: 'xx'},\n   *  {type: 'circle', parentId: 'xx'},\n   *  {type: 'polygon', parentId: 'xx'}\n   * ]\n   *\n   * @private\n   * @param {Array.<Object>} optionList option list\n   * @param {Array.<Object>} result result of flatten\n   * @param {Object} parentOption parent option\n   */\n  _flatten: function _flatten(optionList, result, parentOption) {\n    zrUtil.each(optionList, function (option) {\n      if (!option) {\n        return;\n      }\n\n      if (parentOption) {\n        option.parentOption = parentOption;\n      }\n\n      result.push(option);\n      var children = option.children;\n\n      if (option.type === 'group' && children) {\n        this._flatten(children, result, option);\n      } // Deleting for JSON output, and for not affecting group creation.\n\n\n      delete option.children;\n    }, this);\n  },\n  // FIXME\n  // Pass to view using payload? setOption has a payload?\n  useElOptionsToUpdate: function useElOptionsToUpdate() {\n    var els = this._elOptionsToUpdate; // Clear to avoid render duplicately when zooming.\n\n    this._elOptionsToUpdate = null;\n    return els;\n  }\n}); // -----\n// View\n// -----\n\necharts.extendComponentView({\n  type: 'graphic',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this._elMap = zrUtil.createHashMap();\n    /**\n     * @private\n     * @type {module:echarts/graphic/GraphicModel}\n     */\n\n    this._lastGraphicModel;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(graphicModel, ecModel, api) {\n    // Having leveraged between use cases and algorithm complexity, a very\n    // simple layout mechanism is used:\n    // The size(width/height) can be determined by itself or its parent (not\n    // implemented yet), but can not by its children. (Top-down travel)\n    // The location(x/y) can be determined by the bounding rect of itself\n    // (can including its descendants or not) and the size of its parent.\n    // (Bottom-up travel)\n    // When `chart.clear()` or `chart.setOption({...}, true)` with the same id,\n    // view will be reused.\n    if (graphicModel !== this._lastGraphicModel) {\n      this._clear();\n    }\n\n    this._lastGraphicModel = graphicModel;\n\n    this._updateElements(graphicModel);\n\n    this._relocate(graphicModel, api);\n  },\n\n  /**\n   * Update graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   */\n  _updateElements: function _updateElements(graphicModel) {\n    var elOptionsToUpdate = graphicModel.useElOptionsToUpdate();\n\n    if (!elOptionsToUpdate) {\n      return;\n    }\n\n    var elMap = this._elMap;\n    var rootGroup = this.group; // Top-down tranverse to assign graphic settings to each elements.\n\n    zrUtil.each(elOptionsToUpdate, function (elOption) {\n      var $action = elOption.$action;\n      var id = elOption.id;\n      var existEl = elMap.get(id);\n      var parentId = elOption.parentId;\n      var targetElParent = parentId != null ? elMap.get(parentId) : rootGroup;\n      var elOptionStyle = elOption.style;\n\n      if (elOption.type === 'text' && elOptionStyle) {\n        // In top/bottom mode, textVerticalAlign should not be used, which cause\n        // inaccurately locating.\n        if (elOption.hv && elOption.hv[1]) {\n          elOptionStyle.textVerticalAlign = elOptionStyle.textBaseline = null;\n        } // Compatible with previous setting: both support fill and textFill,\n        // stroke and textStroke.\n\n\n        !elOptionStyle.hasOwnProperty('textFill') && elOptionStyle.fill && (elOptionStyle.textFill = elOptionStyle.fill);\n        !elOptionStyle.hasOwnProperty('textStroke') && elOptionStyle.stroke && (elOptionStyle.textStroke = elOptionStyle.stroke);\n      } // Remove unnecessary props to avoid potential problems.\n\n\n      var elOptionCleaned = getCleanedElOption(elOption); // For simple, do not support parent change, otherwise reorder is needed.\n\n      if (!$action || $action === 'merge') {\n        existEl ? existEl.attr(elOptionCleaned) : createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'replace') {\n        removeEl(existEl, elMap);\n        createEl(id, targetElParent, elOptionCleaned, elMap);\n      } else if ($action === 'remove') {\n        removeEl(existEl, elMap);\n      }\n\n      var el = elMap.get(id);\n\n      if (el) {\n        el.__ecGraphicWidthOption = elOption.width;\n        el.__ecGraphicHeightOption = elOption.height;\n        setEventData(el, graphicModel, elOption);\n      }\n    });\n  },\n\n  /**\n   * Locate graphic elements.\n   *\n   * @private\n   * @param {Object} graphicModel graphic model\n   * @param {module:echarts/ExtensionAPI} api extension API\n   */\n  _relocate: function _relocate(graphicModel, api) {\n    var elOptions = graphicModel.option.elements;\n    var rootGroup = this.group;\n    var elMap = this._elMap;\n    var apiWidth = api.getWidth();\n    var apiHeight = api.getHeight(); // Top-down to calculate percentage width/height of group\n\n    for (var i = 0; i < elOptions.length; i++) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el || !el.isGroup) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var isParentRoot = parentEl === rootGroup; // Like 'position:absolut' in css, default 0.\n\n      el.__ecGraphicWidth = parsePercent(el.__ecGraphicWidthOption, isParentRoot ? apiWidth : parentEl.__ecGraphicWidth) || 0;\n      el.__ecGraphicHeight = parsePercent(el.__ecGraphicHeightOption, isParentRoot ? apiHeight : parentEl.__ecGraphicHeight) || 0;\n    } // Bottom-up tranvese all elements (consider ec resize) to locate elements.\n\n\n    for (var i = elOptions.length - 1; i >= 0; i--) {\n      var elOption = elOptions[i];\n      var el = elMap.get(elOption.id);\n\n      if (!el) {\n        continue;\n      }\n\n      var parentEl = el.parent;\n      var containerInfo = parentEl === rootGroup ? {\n        width: apiWidth,\n        height: apiHeight\n      } : {\n        width: parentEl.__ecGraphicWidth,\n        height: parentEl.__ecGraphicHeight\n      }; // PENDING\n      // Currently, when `bounding: 'all'`, the union bounding rect of the group\n      // does not include the rect of [0, 0, group.width, group.height], which\n      // is probably weird for users. Should we make a break change for it?\n\n      layoutUtil.positionElement(el, elOption, containerInfo, null, {\n        hv: elOption.hv,\n        boundingMode: elOption.bounding\n      });\n    }\n  },\n\n  /**\n   * Clear all elements.\n   *\n   * @private\n   */\n  _clear: function _clear() {\n    var elMap = this._elMap;\n    elMap.each(function (el) {\n      removeEl(el, elMap);\n    });\n    this._elMap = zrUtil.createHashMap();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clear();\n  }\n});\n\nfunction createEl(id, targetElParent, elOption, elMap) {\n  var graphicType = elOption.type;\n  var Clz = _nonShapeGraphicElements.hasOwnProperty(graphicType) // Those graphic elements are not shapes. They should not be\n  // overwritten by users, so do them first.\n  ? _nonShapeGraphicElements[graphicType] : graphicUtil.getShapeClass(graphicType);\n  var el = new Clz(elOption);\n  targetElParent.add(el);\n  elMap.set(id, el);\n  el.__ecGraphicId = id;\n}\n\nfunction removeEl(existEl, elMap) {\n  var existElParent = existEl && existEl.parent;\n\n  if (existElParent) {\n    existEl.type === 'group' && existEl.traverse(function (el) {\n      removeEl(el, elMap);\n    });\n    elMap.removeKey(existEl.__ecGraphicId);\n    existElParent.remove(existEl);\n  }\n} // Remove unnecessary props to avoid potential problems.\n\n\nfunction getCleanedElOption(elOption) {\n  elOption = zrUtil.extend({}, elOption);\n  zrUtil.each(['id', 'parentId', '$action', 'hv', 'bounding'].concat(layoutUtil.LOCATION_PARAMS), function (name) {\n    delete elOption[name];\n  });\n  return elOption;\n}\n\nfunction isSetLoc(obj, props) {\n  var isSet;\n  zrUtil.each(props, function (prop) {\n    obj[prop] != null && obj[prop] !== 'auto' && (isSet = true);\n  });\n  return isSet;\n}\n\nfunction setKeyInfoToNewElOption(resultItem, newElOption) {\n  var existElOption = resultItem.exist; // Set id and type after id assigned.\n\n  newElOption.id = resultItem.keyInfo.id;\n  !newElOption.type && existElOption && (newElOption.type = existElOption.type); // Set parent id if not specified\n\n  if (newElOption.parentId == null) {\n    var newElParentOption = newElOption.parentOption;\n\n    if (newElParentOption) {\n      newElOption.parentId = newElParentOption.id;\n    } else if (existElOption) {\n      newElOption.parentId = existElOption.parentId;\n    }\n  } // Clear\n\n\n  newElOption.parentOption = null;\n}\n\nfunction mergeNewElOptionToExist(existList, index, newElOption) {\n  // Update existing options, for `getOption` feature.\n  var newElOptCopy = zrUtil.extend({}, newElOption);\n  var existElOption = existList[index];\n  var $action = newElOption.$action || 'merge';\n\n  if ($action === 'merge') {\n    if (existElOption) {\n      // We can ensure that newElOptCopy and existElOption are not\n      // the same object, so `merge` will not change newElOptCopy.\n      zrUtil.merge(existElOption, newElOptCopy, true); // Rigid body, use ignoreSize.\n\n      layoutUtil.mergeLayoutParam(existElOption, newElOptCopy, {\n        ignoreSize: true\n      }); // Will be used in render.\n\n      layoutUtil.copyLayoutParams(newElOption, existElOption);\n    } else {\n      existList[index] = newElOptCopy;\n    }\n  } else if ($action === 'replace') {\n    existList[index] = newElOptCopy;\n  } else if ($action === 'remove') {\n    // null will be cleaned later.\n    existElOption && (existList[index] = null);\n  }\n}\n\nfunction setLayoutInfoToExist(existItem, newElOption) {\n  if (!existItem) {\n    return;\n  }\n\n  existItem.hv = newElOption.hv = [// Rigid body, dont care `width`.\n  isSetLoc(newElOption, ['left', 'right']), // Rigid body, dont care `height`.\n  isSetLoc(newElOption, ['top', 'bottom'])]; // Give default group size. Otherwise layout error may occur.\n\n  if (existItem.type === 'group') {\n    existItem.width == null && (existItem.width = newElOption.width = 0);\n    existItem.height == null && (existItem.height = newElOption.height = 0);\n  }\n}\n\nfunction setEventData(el, graphicModel, elOption) {\n  var eventData = el.eventData; // Simple optimize for large amount of elements that no need event.\n\n  if (!el.silent && !el.ignore && !eventData) {\n    eventData = el.eventData = {\n      componentType: 'graphic',\n      componentIndex: graphicModel.componentIndex,\n      name: el.name\n    };\n  } // `elOption.info` enables user to mount some info on\n  // elements and use them in event handlers.\n\n\n  if (eventData) {\n    eventData.info = el.info;\n  }\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SelectZoomModel\");\n\nrequire(\"./dataZoom/SelectZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar helper = require(\"./helper\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar asc = numberUtil.asc;\n/**\n * Operate single axis.\n * One axis can only operated by one axis operator.\n * Different dataZoomModels may be defined to operate the same axis.\n * (i.e. 'inside' data zoom and 'slider' data zoom components)\n * So dataZoomModels share one axisProxy in that case.\n *\n * @class\n */\n\nvar AxisProxy = function AxisProxy(dimName, axisIndex, dataZoomModel, ecModel) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this._dimName = dimName;\n  /**\n   * @private\n   */\n\n  this._axisIndex = axisIndex;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._valueWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._percentWindow;\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n\n  this._dataExtent;\n  /**\n   * {minSpan, maxSpan, minValueSpan, maxValueSpan}\n   * @private\n   * @type {Object}\n   */\n\n  this._minMaxSpan;\n  /**\n   * @readOnly\n   * @type {module: echarts/model/Global}\n   */\n\n  this.ecModel = ecModel;\n  /**\n   * @private\n   * @type {module: echarts/component/dataZoom/DataZoomModel}\n   */\n\n  this._dataZoomModel = dataZoomModel; // /**\n  //  * @readOnly\n  //  * @private\n  //  */\n  // this.hasSeriesStacked;\n};\n\nAxisProxy.prototype = {\n  constructor: AxisProxy,\n\n  /**\n   * Whether the axisProxy is hosted by dataZoomModel.\n   *\n   * @public\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   * @return {boolean}\n   */\n  hostedBy: function hostedBy(dataZoomModel) {\n    return this._dataZoomModel === dataZoomModel;\n  },\n\n  /**\n   * @return {Array.<number>} Value can only be NaN or finite value.\n   */\n  getDataValueWindow: function getDataValueWindow() {\n    return this._valueWindow.slice();\n  },\n\n  /**\n   * @return {Array.<number>}\n   */\n  getDataPercentWindow: function getDataPercentWindow() {\n    return this._percentWindow.slice();\n  },\n\n  /**\n   * @public\n   * @param {number} axisIndex\n   * @return {Array} seriesModels\n   */\n  getTargetSeriesModels: function getTargetSeriesModels() {\n    var seriesModels = [];\n    var ecModel = this.ecModel;\n    ecModel.eachSeries(function (seriesModel) {\n      if (helper.isCoordSupported(seriesModel.get('coordinateSystem'))) {\n        var dimName = this._dimName;\n        var axisModel = ecModel.queryComponents({\n          mainType: dimName + 'Axis',\n          index: seriesModel.get(dimName + 'AxisIndex'),\n          id: seriesModel.get(dimName + 'AxisId')\n        })[0];\n\n        if (this._axisIndex === (axisModel && axisModel.componentIndex)) {\n          seriesModels.push(seriesModel);\n        }\n      }\n    }, this);\n    return seriesModels;\n  },\n  getAxisModel: function getAxisModel() {\n    return this.ecModel.getComponent(this._dimName + 'Axis', this._axisIndex);\n  },\n  getOtherAxisModel: function getOtherAxisModel() {\n    var axisDim = this._dimName;\n    var ecModel = this.ecModel;\n    var axisModel = this.getAxisModel();\n    var isCartesian = axisDim === 'x' || axisDim === 'y';\n    var otherAxisDim;\n    var coordSysIndexName;\n\n    if (isCartesian) {\n      coordSysIndexName = 'gridIndex';\n      otherAxisDim = axisDim === 'x' ? 'y' : 'x';\n    } else {\n      coordSysIndexName = 'polarIndex';\n      otherAxisDim = axisDim === 'angle' ? 'radius' : 'angle';\n    }\n\n    var foundOtherAxisModel;\n    ecModel.eachComponent(otherAxisDim + 'Axis', function (otherAxisModel) {\n      if ((otherAxisModel.get(coordSysIndexName) || 0) === (axisModel.get(coordSysIndexName) || 0)) {\n        foundOtherAxisModel = otherAxisModel;\n      }\n    });\n    return foundOtherAxisModel;\n  },\n  getMinMaxSpan: function getMinMaxSpan() {\n    return zrUtil.clone(this._minMaxSpan);\n  },\n\n  /**\n   * Only calculate by given range and this._dataExtent, do not change anything.\n   *\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  calculateDataWindow: function calculateDataWindow(opt) {\n    var dataExtent = this._dataExtent;\n    var axisModel = this.getAxisModel();\n    var scale = axisModel.axis.scale;\n\n    var rangePropMode = this._dataZoomModel.getRangePropMode();\n\n    var percentExtent = [0, 100];\n    var percentWindow = [];\n    var valueWindow = [];\n    var hasPropModeValue;\n    each(['start', 'end'], function (prop, idx) {\n      var boundPercent = opt[prop];\n      var boundValue = opt[prop + 'Value']; // Notice: dataZoom is based either on `percentProp` ('start', 'end') or\n      // on `valueProp` ('startValue', 'endValue'). (They are based on the data extent\n      // but not min/max of axis, which will be calculated by data window then).\n      // The former one is suitable for cases that a dataZoom component controls multiple\n      // axes with different unit or extent, and the latter one is suitable for accurate\n      // zoom by pixel (e.g., in dataZoomSelect).\n      // we use `getRangePropMode()` to mark which prop is used. `rangePropMode` is updated\n      // only when setOption or dispatchAction, otherwise it remains its original value.\n      // (Why not only record `percentProp` and always map to `valueProp`? Because\n      // the map `valueProp` -> `percentProp` -> `valueProp` probably not the original\n      // `valueProp`. consider two axes constrolled by one dataZoom. They have different\n      // data extent. All of values that are overflow the `dataExtent` will be calculated\n      // to percent '100%').\n\n      if (rangePropMode[idx] === 'percent') {\n        boundPercent == null && (boundPercent = percentExtent[idx]); // Use scale.parse to math round for category or time axis.\n\n        boundValue = scale.parse(numberUtil.linearMap(boundPercent, percentExtent, dataExtent));\n      } else {\n        hasPropModeValue = true;\n        boundValue = boundValue == null ? dataExtent[idx] : scale.parse(boundValue); // Calculating `percent` from `value` may be not accurate, because\n        // This calculation can not be inversed, because all of values that\n        // are overflow the `dataExtent` will be calculated to percent '100%'\n\n        boundPercent = numberUtil.linearMap(boundValue, dataExtent, percentExtent);\n      } // valueWindow[idx] = round(boundValue);\n      // percentWindow[idx] = round(boundPercent);\n\n\n      valueWindow[idx] = boundValue;\n      percentWindow[idx] = boundPercent;\n    });\n    asc(valueWindow);\n    asc(percentWindow); // The windows from user calling of `dispatchAction` might be out of the extent,\n    // or do not obey the `min/maxSpan`, `min/maxValueSpan`. But we dont restrict window\n    // by `zoomLock` here, because we see `zoomLock` just as a interaction constraint,\n    // where API is able to initialize/modify the window size even though `zoomLock`\n    // specified.\n\n    var spans = this._minMaxSpan;\n    hasPropModeValue ? restrictSet(valueWindow, percentWindow, dataExtent, percentExtent, false) : restrictSet(percentWindow, valueWindow, percentExtent, dataExtent, true);\n\n    function restrictSet(fromWindow, toWindow, fromExtent, toExtent, toValue) {\n      var suffix = toValue ? 'Span' : 'ValueSpan';\n      sliderMove(0, fromWindow, fromExtent, 'all', spans['min' + suffix], spans['max' + suffix]);\n\n      for (var i = 0; i < 2; i++) {\n        toWindow[i] = numberUtil.linearMap(fromWindow[i], fromExtent, toExtent, true);\n        toValue && (toWindow[i] = scale.parse(toWindow[i]));\n      }\n    }\n\n    return {\n      valueWindow: valueWindow,\n      percentWindow: percentWindow\n    };\n  },\n\n  /**\n   * Notice: reset should not be called before series.restoreData() called,\n   * so it is recommanded to be called in \"process stage\" but not \"model init\n   * stage\".\n   *\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  reset: function reset(dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var targetSeries = this.getTargetSeriesModels(); // Culculate data window and data extent, and record them.\n\n    this._dataExtent = calculateDataExtent(this, this._dimName, targetSeries); // this.hasSeriesStacked = false;\n    // each(targetSeries, function (series) {\n    // var data = series.getData();\n    // var dataDim = data.mapDimension(this._dimName);\n    // var stackedDimension = data.getCalculationInfo('stackedDimension');\n    // if (stackedDimension && stackedDimension === dataDim) {\n    // this.hasSeriesStacked = true;\n    // }\n    // }, this);\n    // `calculateDataWindow` uses min/maxSpan.\n\n    setMinMaxSpan(this);\n    var dataWindow = this.calculateDataWindow(dataZoomModel.settledOption);\n    this._valueWindow = dataWindow.valueWindow;\n    this._percentWindow = dataWindow.percentWindow; // Update axis setting then.\n\n    setAxisModel(this);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  restore: function restore(dataZoomModel) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    this._valueWindow = this._percentWindow = null;\n    setAxisModel(this, true);\n  },\n\n  /**\n   * @param {module: echarts/component/dataZoom/DataZoomModel} dataZoomModel\n   */\n  filterData: function filterData(dataZoomModel, api) {\n    if (dataZoomModel !== this._dataZoomModel) {\n      return;\n    }\n\n    var axisDim = this._dimName;\n    var seriesModels = this.getTargetSeriesModels();\n    var filterMode = dataZoomModel.get('filterMode');\n    var valueWindow = this._valueWindow;\n\n    if (filterMode === 'none') {\n      return;\n    } // FIXME\n    // Toolbox may has dataZoom injected. And if there are stacked bar chart\n    // with NaN data, NaN will be filtered and stack will be wrong.\n    // So we need to force the mode to be set empty.\n    // In fect, it is not a big deal that do not support filterMode-'filter'\n    // when using toolbox#dataZoom, utill tooltip#dataZoom support \"single axis\n    // selection\" some day, which might need \"adapt to data extent on the\n    // otherAxis\", which is disabled by filterMode-'empty'.\n    // But currently, stack has been fixed to based on value but not index,\n    // so this is not an issue any more.\n    // var otherAxisModel = this.getOtherAxisModel();\n    // if (dataZoomModel.get('$fromToolbox')\n    //     && otherAxisModel\n    //     && otherAxisModel.hasSeriesStacked\n    // ) {\n    //     filterMode = 'empty';\n    // }\n    // TODO\n    // filterMode 'weakFilter' and 'empty' is not optimized for huge data yet.\n\n\n    each(seriesModels, function (seriesModel) {\n      var seriesData = seriesModel.getData();\n      var dataDims = seriesData.mapDimension(axisDim, true);\n\n      if (!dataDims.length) {\n        return;\n      }\n\n      if (filterMode === 'weakFilter') {\n        seriesData.filterSelf(function (dataIndex) {\n          var leftOut;\n          var rightOut;\n          var hasValue;\n\n          for (var i = 0; i < dataDims.length; i++) {\n            var value = seriesData.get(dataDims[i], dataIndex);\n            var thisHasValue = !isNaN(value);\n            var thisLeftOut = value < valueWindow[0];\n            var thisRightOut = value > valueWindow[1];\n\n            if (thisHasValue && !thisLeftOut && !thisRightOut) {\n              return true;\n            }\n\n            thisHasValue && (hasValue = true);\n            thisLeftOut && (leftOut = true);\n            thisRightOut && (rightOut = true);\n          } // If both left out and right out, do not filter.\n\n\n          return hasValue && leftOut && rightOut;\n        });\n      } else {\n        each(dataDims, function (dim) {\n          if (filterMode === 'empty') {\n            seriesModel.setData(seriesData = seriesData.map(dim, function (value) {\n              return !isInWindow(value) ? NaN : value;\n            }));\n          } else {\n            var range = {};\n            range[dim] = valueWindow; // console.time('select');\n\n            seriesData.selectRange(range); // console.timeEnd('select');\n          }\n        });\n      }\n\n      each(dataDims, function (dim) {\n        seriesData.setApproximateExtent(valueWindow, dim);\n      });\n    });\n\n    function isInWindow(value) {\n      return value >= valueWindow[0] && value <= valueWindow[1];\n    }\n  }\n};\n\nfunction calculateDataExtent(axisProxy, axisDim, seriesModels) {\n  var dataExtent = [Infinity, -Infinity];\n  each(seriesModels, function (seriesModel) {\n    var seriesData = seriesModel.getData();\n\n    if (seriesData) {\n      each(seriesData.mapDimension(axisDim, true), function (dim) {\n        var seriesExtent = seriesData.getApproximateExtent(dim);\n        seriesExtent[0] < dataExtent[0] && (dataExtent[0] = seriesExtent[0]);\n        seriesExtent[1] > dataExtent[1] && (dataExtent[1] = seriesExtent[1]);\n      });\n    }\n  });\n\n  if (dataExtent[1] < dataExtent[0]) {\n    dataExtent = [NaN, NaN];\n  } // It is important to get \"consistent\" extent when more then one axes is\n  // controlled by a `dataZoom`, otherwise those axes will not be synchronized\n  // when zooming. But it is difficult to know what is \"consistent\", considering\n  // axes have different type or even different meanings (For example, two\n  // time axes are used to compare data of the same date in different years).\n  // So basically dataZoom just obtains extent by series.data (in category axis\n  // extent can be obtained from axis.data).\n  // Nevertheless, user can set min/max/scale on axes to make extent of axes\n  // consistent.\n\n\n  fixExtentByAxis(axisProxy, dataExtent);\n  return dataExtent;\n}\n\nfunction fixExtentByAxis(axisProxy, dataExtent) {\n  var axisModel = axisProxy.getAxisModel();\n  var min = axisModel.getMin(true); // For category axis, if min/max/scale are not set, extent is determined\n  // by axis.data by default.\n\n  var isCategoryAxis = axisModel.get('type') === 'category';\n  var axisDataLen = isCategoryAxis && axisModel.getCategories().length;\n\n  if (min != null && min !== 'dataMin' && typeof min !== 'function') {\n    dataExtent[0] = min;\n  } else if (isCategoryAxis) {\n    dataExtent[0] = axisDataLen > 0 ? 0 : NaN;\n  }\n\n  var max = axisModel.getMax(true);\n\n  if (max != null && max !== 'dataMax' && typeof max !== 'function') {\n    dataExtent[1] = max;\n  } else if (isCategoryAxis) {\n    dataExtent[1] = axisDataLen > 0 ? axisDataLen - 1 : NaN;\n  }\n\n  if (!axisModel.get('scale', true)) {\n    dataExtent[0] > 0 && (dataExtent[0] = 0);\n    dataExtent[1] < 0 && (dataExtent[1] = 0);\n  } // For value axis, if min/max/scale are not set, we just use the extent obtained\n  // by series data, which may be a little different from the extent calculated by\n  // `axisHelper.getScaleExtent`. But the different just affects the experience a\n  // little when zooming. So it will not be fixed until some users require it strongly.\n\n\n  return dataExtent;\n}\n\nfunction setAxisModel(axisProxy, isRestore) {\n  var axisModel = axisProxy.getAxisModel();\n  var percentWindow = axisProxy._percentWindow;\n  var valueWindow = axisProxy._valueWindow;\n\n  if (!percentWindow) {\n    return;\n  } // [0, 500]: arbitrary value, guess axis extent.\n\n\n  var precision = numberUtil.getPixelPrecision(valueWindow, [0, 500]);\n  precision = Math.min(precision, 20); // isRestore or isFull\n\n  var useOrigin = isRestore || percentWindow[0] === 0 && percentWindow[1] === 100;\n  axisModel.setRange(useOrigin ? null : +valueWindow[0].toFixed(precision), useOrigin ? null : +valueWindow[1].toFixed(precision));\n}\n\nfunction setMinMaxSpan(axisProxy) {\n  var minMaxSpan = axisProxy._minMaxSpan = {};\n  var dataZoomModel = axisProxy._dataZoomModel;\n  var dataExtent = axisProxy._dataExtent;\n  each(['min', 'max'], function (minMax) {\n    var percentSpan = dataZoomModel.get(minMax + 'Span');\n    var valueSpan = dataZoomModel.get(minMax + 'ValueSpan');\n    valueSpan != null && (valueSpan = axisProxy.getAxisModel().axis.scale.parse(valueSpan)); // minValueSpan and maxValueSpan has higher priority than minSpan and maxSpan\n\n    if (valueSpan != null) {\n      percentSpan = numberUtil.linearMap(dataExtent[0] + valueSpan, dataExtent, [0, 100], true);\n    } else if (percentSpan != null) {\n      valueSpan = numberUtil.linearMap(percentSpan, [0, 100], dataExtent, true) - dataExtent[0];\n    }\n\n    minMaxSpan[minMax + 'Span'] = percentSpan;\n    minMaxSpan[minMax + 'ValueSpan'] = valueSpan;\n  });\n}\n\nvar _default = AxisProxy;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DataZoomView = require(\"./DataZoomView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomView.extend({\n  type: 'dataZoom.select'\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./brush/preprocessor\");\n\nrequire(\"./brush/visualEncoding\");\n\nrequire(\"./brush/BrushModel\");\n\nrequire(\"./brush/BrushView\");\n\nrequire(\"./brush/brushAction\");\n\nrequire(\"./toolbox/feature/Brush\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Brush component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_TOOLBOX_BTNS = ['rect', 'polygon', 'keep', 'clear'];\n\nfunction _default(option, isNew) {\n  var brushComponents = option && option.brush;\n\n  if (!zrUtil.isArray(brushComponents)) {\n    brushComponents = brushComponents ? [brushComponents] : [];\n  }\n\n  if (!brushComponents.length) {\n    return;\n  }\n\n  var brushComponentSpecifiedBtns = [];\n  zrUtil.each(brushComponents, function (brushOpt) {\n    var tbs = brushOpt.hasOwnProperty('toolbox') ? brushOpt.toolbox : [];\n\n    if (tbs instanceof Array) {\n      brushComponentSpecifiedBtns = brushComponentSpecifiedBtns.concat(tbs);\n    }\n  });\n  var toolbox = option && option.toolbox;\n\n  if (zrUtil.isArray(toolbox)) {\n    toolbox = toolbox[0];\n  }\n\n  if (!toolbox) {\n    toolbox = {\n      feature: {}\n    };\n    option.toolbox = [toolbox];\n  }\n\n  var toolboxFeature = toolbox.feature || (toolbox.feature = {});\n  var toolboxBrush = toolboxFeature.brush || (toolboxFeature.brush = {});\n  var brushTypes = toolboxBrush.type || (toolboxBrush.type = []);\n  brushTypes.push.apply(brushTypes, brushComponentSpecifiedBtns);\n  removeDuplicate(brushTypes);\n\n  if (isNew && !brushTypes.length) {\n    brushTypes.push.apply(brushTypes, DEFAULT_TOOLBOX_BTNS);\n  }\n}\n\nfunction removeDuplicate(arr) {\n  var map = {};\n  zrUtil.each(arr, function (val) {\n    map[val] = 1;\n  });\n  arr.length = 0;\n  zrUtil.each(map, function (flag, val) {\n    arr.push(val);\n  });\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _graphic = require(\"../../util/graphic\");\n\nvar linePolygonIntersect = _graphic.linePolygonIntersect;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Key of the first level is brushType: `line`, `rect`, `polygon`.\n// Key of the second level is chart element type: `point`, `rect`.\n// See moudule:echarts/component/helper/BrushController\n// function param:\n//      {Object} itemLayout fetch from data.getItemLayout(dataIndex)\n//      {Object} selectors {point: selector, rect: selector, ...}\n//      {Object} area {range: [[], [], ..], boudingRect}\n// function return:\n//      {boolean} Whether in the given brush.\n\nvar selector = {\n  lineX: getLineSelectors(0),\n  lineY: getLineSelectors(1),\n  rect: {\n    point: function point(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]);\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.intersect(itemLayout);\n    }\n  },\n  polygon: {\n    point: function point(itemLayout, selectors, area) {\n      return itemLayout && area.boundingRect.contain(itemLayout[0], itemLayout[1]) && polygonContain.contain(area.range, itemLayout[0], itemLayout[1]);\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      var points = area.range;\n\n      if (!itemLayout || points.length <= 1) {\n        return false;\n      }\n\n      var x = itemLayout.x;\n      var y = itemLayout.y;\n      var width = itemLayout.width;\n      var height = itemLayout.height;\n      var p = points[0];\n\n      if (polygonContain.contain(points, x, y) || polygonContain.contain(points, x + width, y) || polygonContain.contain(points, x, y + height) || polygonContain.contain(points, x + width, y + height) || BoundingRect.create(itemLayout).contain(p[0], p[1]) || linePolygonIntersect(x, y, x + width, y, points) || linePolygonIntersect(x, y, x, y + height, points) || linePolygonIntersect(x + width, y, x + width, y + height, points) || linePolygonIntersect(x, y + height, x + width, y + height, points)) {\n        return true;\n      }\n    }\n  }\n};\n\nfunction getLineSelectors(xyIndex) {\n  var xy = ['x', 'y'];\n  var wh = ['width', 'height'];\n  return {\n    point: function point(itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var p = itemLayout[xyIndex];\n        return inLineRange(p, range);\n      }\n    },\n    rect: function rect(itemLayout, selectors, area) {\n      if (itemLayout) {\n        var range = area.range;\n        var layoutRange = [itemLayout[xy[xyIndex]], itemLayout[xy[xyIndex]] + itemLayout[wh[xyIndex]]];\n        layoutRange[1] < layoutRange[0] && layoutRange.reverse();\n        return inLineRange(layoutRange[0], range) || inLineRange(layoutRange[1], range) || inLineRange(range[0], layoutRange) || inLineRange(range[1], layoutRange);\n      }\n    }\n  };\n}\n\nfunction inLineRange(p, range) {\n  return range[0] <= p && p <= range[1];\n}\n\nvar _default = selector;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar Model = require(\"../../model/Model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar DEFAULT_OUT_OF_BRUSH_COLOR = ['#ddd'];\nvar BrushModel = echarts.extendComponentModel({\n  type: 'brush',\n  dependencies: ['geo', 'grid', 'xAxis', 'yAxis', 'parallel', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // inBrush: null,\n    // outOfBrush: null,\n    toolbox: null,\n    // Default value see preprocessor.\n    brushLink: null,\n    // Series indices array, broadcast using dataIndex.\n    // or 'all', which means all series. 'none' or null means no series.\n    seriesIndex: 'all',\n    // seriesIndex array, specify series controlled by this brush component.\n    geoIndex: null,\n    //\n    xAxisIndex: null,\n    yAxisIndex: null,\n    brushType: 'rect',\n    // Default brushType, see BrushController.\n    brushMode: 'single',\n    // Default brushMode, 'single' or 'multiple'\n    transformable: true,\n    // Default transformable.\n    brushStyle: {\n      // Default brushStyle\n      borderWidth: 1,\n      color: 'rgba(120,140,180,0.3)',\n      borderColor: 'rgba(120,140,180,0.8)'\n    },\n    throttleType: 'fixRate',\n    // Throttle in brushSelected event. 'fixRate' or 'debounce'.\n    // If null, no throttle. Valid only in the first brush component\n    throttleDelay: 0,\n    // Unit: ms, 0 means every event will be triggered.\n    // FIXME\n    // 试验效果\n    removeOnClick: true,\n    z: 10000\n  },\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  areas: [],\n\n  /**\n   * Current activated brush type.\n   * If null, brush is inactived.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {string}\n   */\n  brushType: null,\n\n  /**\n   * Current brush opt.\n   * see module:echarts/component/helper/BrushController\n   * @readOnly\n   * @type {Object}\n   */\n  brushOption: {},\n\n  /**\n   * @readOnly\n   * @type {Array.<Object>}\n   */\n  coordInfoList: [],\n  optionUpdated: function optionUpdated(newOption, isInit) {\n    var thisOption = this.option;\n    !isInit && visualSolution.replaceVisualOption(thisOption, newOption, ['inBrush', 'outOfBrush']);\n    var inBrush = thisOption.inBrush = thisOption.inBrush || {}; // Always give default visual, consider setOption at the second time.\n\n    thisOption.outOfBrush = thisOption.outOfBrush || {\n      color: DEFAULT_OUT_OF_BRUSH_COLOR\n    };\n\n    if (!inBrush.hasOwnProperty('liftZ')) {\n      // Bigger than the highlight z lift, otherwise it will\n      // be effected by the highlight z when brush.\n      inBrush.liftZ = 5;\n    }\n  },\n\n  /**\n   * If ranges is null/undefined, range state remain.\n   *\n   * @param {Array.<Object>} [ranges]\n   */\n  setAreas: function setAreas(areas) {\n    // If ranges is null/undefined, range state remain.\n    // This helps user to dispatchAction({type: 'brush'}) with no areas\n    // set but just want to get the current brush select info from a `brush` event.\n    if (!areas) {\n      return;\n    }\n\n    this.areas = zrUtil.map(areas, function (area) {\n      return generateBrushOption(this.option, area);\n    }, this);\n  },\n\n  /**\n   * see module:echarts/component/helper/BrushController\n   * @param {Object} brushOption\n   */\n  setBrushOption: function setBrushOption(brushOption) {\n    this.brushOption = generateBrushOption(this.option, brushOption);\n    this.brushType = this.brushOption.brushType;\n  }\n});\n\nfunction generateBrushOption(option, brushOption) {\n  return zrUtil.merge({\n    brushType: option.brushType,\n    brushMode: option.brushMode,\n    transformable: option.transformable,\n    brushStyle: new Model(option.brushStyle).getItemStyle(),\n    removeOnClick: option.removeOnClick,\n    z: option.z\n  }, brushOption, true);\n}\n\nvar _default = BrushModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar _visualEncoding = require(\"./visualEncoding\");\n\nvar layoutCovers = _visualEncoding.layoutCovers;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _default = echarts.extendComponentView({\n  type: 'brush',\n  init: function init(ecModel, api) {\n    /**\n     * @readOnly\n     * @type {module:echarts/model/Global}\n     */\n    this.ecModel = ecModel;\n    /**\n     * @readOnly\n     * @type {module:echarts/ExtensionAPI}\n     */\n\n    this.api = api;\n    /**\n     * @readOnly\n     * @type {module:echarts/component/brush/BrushModel}\n     */\n\n    this.model;\n    /**\n     * @private\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this)).mount();\n  },\n\n  /**\n   * @override\n   */\n  render: function render(brushModel) {\n    this.model = brushModel;\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateTransform: function updateTransform(brushModel, ecModel) {\n    // PENDING: `updateTransform` is a little tricky, whose layout need\n    // to be calculate mandatorily and other stages will not be performed.\n    // Take care the correctness of the logic. See #11754 .\n    layoutCovers(ecModel);\n    return updateController.apply(this, arguments);\n  },\n\n  /**\n   * @override\n   */\n  updateView: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateLayout: updateController,\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: updateController,\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._brushController.dispose();\n  },\n\n  /**\n   * @private\n   */\n  _onBrush: function _onBrush(areas, opt) {\n    var modelId = this.model.id;\n    this.model.brushTargetManager.setOutputRanges(areas, this.ecModel); // Action is not dispatched on drag end, because the drag end\n    // emits the same params with the last drag move event, and\n    // may have some delay when using touch pad, which makes\n    // animation not smooth (when using debounce).\n\n    (!opt.isEnd || opt.removeOnClick) && this.api.dispatchAction({\n      type: 'brush',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n    opt.isEnd && this.api.dispatchAction({\n      type: 'brushEnd',\n      brushId: modelId,\n      areas: zrUtil.clone(areas),\n      $from: modelId\n    });\n  }\n});\n\nfunction updateController(brushModel, ecModel, api, payload) {\n  // Do not update controller when drawing.\n  (!payload || payload.$from !== brushModel.id) && this._brushController.setPanels(brushModel.brushTargetManager.makePanelOpts(api)).enableBrush(brushModel.brushOption).updateCovers(brushModel.areas.slice());\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * payload: {\n *      brushIndex: number, or,\n *      brushId: string, or,\n *      brushName: string,\n *      globalRanges: Array\n * }\n */\n\n\necharts.registerAction({\n  type: 'brush',\n  event: 'brush'\n  /*, update: 'updateView' */\n\n}, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush',\n    query: payload\n  }, function (brushModel) {\n    brushModel.setAreas(payload.areas);\n  });\n});\n/**\n * payload: {\n *      brushComponents: [\n *          {\n *              brushId,\n *              brushIndex,\n *              brushName,\n *              series: [\n *                  {\n *                      seriesId,\n *                      seriesIndex,\n *                      seriesName,\n *                      rawIndices: [21, 34, ...]\n *                  },\n *                  ...\n *              ]\n *          },\n *          ...\n *      ]\n * }\n */\n\necharts.registerAction({\n  type: 'brushSelect',\n  event: 'brushSelected',\n  update: 'none'\n}, function () {});\necharts.registerAction({\n  type: 'brushEnd',\n  event: 'brushEnd',\n  update: 'none'\n}, function () {});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar preprocessor = require(\"./timeline/preprocessor\");\n\nrequire(\"./timeline/typeDefaulter\");\n\nrequire(\"./timeline/timelineAction\");\n\nrequire(\"./timeline/SliderTimelineModel\");\n\nrequire(\"./timeline/SliderTimelineView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * DataZoom component entry\n */\n\n\necharts.registerPreprocessor(preprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction _default(option) {\n  var timelineOpt = option && option.timeline;\n\n  if (!zrUtil.isArray(timelineOpt)) {\n    timelineOpt = timelineOpt ? [timelineOpt] : [];\n  }\n\n  zrUtil.each(timelineOpt, function (opt) {\n    if (!opt) {\n      return;\n    }\n\n    compatibleEC2(opt);\n  });\n}\n\nfunction compatibleEC2(opt) {\n  var type = opt.type;\n  var ec2Types = {\n    'number': 'value',\n    'time': 'time'\n  }; // Compatible with ec2\n\n  if (ec2Types[type]) {\n    opt.axisType = ec2Types[type];\n    delete opt.type;\n  }\n\n  transferItem(opt);\n\n  if (has(opt, 'controlPosition')) {\n    var controlStyle = opt.controlStyle || (opt.controlStyle = {});\n\n    if (!has(controlStyle, 'position')) {\n      controlStyle.position = opt.controlPosition;\n    }\n\n    if (controlStyle.position === 'none' && !has(controlStyle, 'show')) {\n      controlStyle.show = false;\n      delete controlStyle.position;\n    }\n\n    delete opt.controlPosition;\n  }\n\n  zrUtil.each(opt.data || [], function (dataItem) {\n    if (zrUtil.isObject(dataItem) && !zrUtil.isArray(dataItem)) {\n      if (!has(dataItem, 'value') && has(dataItem, 'name')) {\n        // In ec2, using name as value.\n        dataItem.value = dataItem.name;\n      }\n\n      transferItem(dataItem);\n    }\n  });\n}\n\nfunction transferItem(opt) {\n  var itemStyle = opt.itemStyle || (opt.itemStyle = {});\n  var itemStyleEmphasis = itemStyle.emphasis || (itemStyle.emphasis = {}); // Transfer label out\n\n  var label = opt.label || opt.label || {};\n  var labelNormal = label.normal || (label.normal = {});\n  var excludeLabelAttr = {\n    normal: 1,\n    emphasis: 1\n  };\n  zrUtil.each(label, function (value, name) {\n    if (!excludeLabelAttr[name] && !has(labelNormal, name)) {\n      labelNormal[name] = value;\n    }\n  });\n\n  if (itemStyleEmphasis.label && !has(label, 'emphasis')) {\n    label.emphasis = itemStyleEmphasis.label;\n    delete itemStyleEmphasis.label;\n  }\n}\n\nfunction has(obj, attr) {\n  return obj.hasOwnProperty(attr);\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('timeline', function () {\n  // Only slider now.\n  return 'slider';\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction({\n  type: 'timelineChange',\n  event: 'timelineChanged',\n  update: 'prepareAndUpdate'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.currentIndex != null) {\n    timelineModel.setCurrentIndex(payload.currentIndex);\n\n    if (!timelineModel.get('loop', true) && timelineModel.isIndexMax()) {\n      timelineModel.setPlayState(false);\n    }\n  } // Set normalized currentIndex to payload.\n\n\n  ecModel.resetOption('timeline');\n  return zrUtil.defaults({\n    currentIndex: timelineModel.option.currentIndex\n  }, payload);\n});\necharts.registerAction({\n  type: 'timelinePlayChange',\n  event: 'timelinePlayChanged',\n  update: 'update'\n}, function (payload, ecModel) {\n  var timelineModel = ecModel.getComponent('timeline');\n\n  if (timelineModel && payload.playState != null) {\n    timelineModel.setPlayState(payload.playState);\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar TimelineModel = require(\"./TimelineModel\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar SliderTimelineModel = TimelineModel.extend({\n  type: 'timeline.slider',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 时间轴背景颜色\n    borderColor: '#ccc',\n    // 时间轴边框颜色\n    borderWidth: 0,\n    // 时间轴边框线宽，单位px，默认为0（无边框）\n    orient: 'horizontal',\n    // 'vertical'\n    inverse: false,\n    tooltip: {\n      // boolean or Object\n      trigger: 'item' // data item may also have tootip attr.\n\n    },\n    symbol: 'emptyCircle',\n    symbolSize: 10,\n    lineStyle: {\n      show: true,\n      width: 2,\n      color: '#304654'\n    },\n    label: {\n      // 文本标签\n      position: 'auto',\n      // auto left right top bottom\n      // When using number, label position is not\n      // restricted by viewRect.\n      // positive: right/bottom, negative: left/top\n      show: true,\n      interval: 'auto',\n      rotate: 0,\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#304654'\n    },\n    itemStyle: {\n      color: '#304654',\n      borderWidth: 1\n    },\n    checkpointStyle: {\n      symbol: 'circle',\n      symbolSize: 13,\n      color: '#c23531',\n      borderWidth: 5,\n      borderColor: 'rgba(194,53,49, 0.5)',\n      animation: true,\n      animationDuration: 300,\n      animationEasing: 'quinticInOut'\n    },\n    controlStyle: {\n      show: true,\n      showPlayBtn: true,\n      showPrevBtn: true,\n      showNextBtn: true,\n      itemSize: 22,\n      itemGap: 12,\n      position: 'left',\n      // 'left' 'right' 'top' 'bottom'\n      playIcon: 'path://M31.6,53C17.5,53,6,41.5,6,27.4S17.5,1.8,31.6,1.8C45.7,1.8,57.2,13.3,57.2,27.4S45.7,53,31.6,53z M31.6,3.3 C18.4,3.3,7.5,14.1,7.5,27.4c0,13.3,10.8,24.1,24.1,24.1C44.9,51.5,55.7,40.7,55.7,27.4C55.7,14.1,44.9,3.3,31.6,3.3z M24.9,21.3 c0-2.2,1.6-3.1,3.5-2l10.5,6.1c1.899,1.1,1.899,2.9,0,4l-10.5,6.1c-1.9,1.1-3.5,0.2-3.5-2V21.3z',\n      // jshint ignore:line\n      stopIcon: 'path://M30.9,53.2C16.8,53.2,5.3,41.7,5.3,27.6S16.8,2,30.9,2C45,2,56.4,13.5,56.4,27.6S45,53.2,30.9,53.2z M30.9,3.5C17.6,3.5,6.8,14.4,6.8,27.6c0,13.3,10.8,24.1,24.101,24.1C44.2,51.7,55,40.9,55,27.6C54.9,14.4,44.1,3.5,30.9,3.5z M36.9,35.8c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H36c0.5,0,0.9,0.4,0.9,1V35.8z M27.8,35.8 c0,0.601-0.4,1-0.9,1h-1.3c-0.5,0-0.9-0.399-0.9-1V19.5c0-0.6,0.4-1,0.9-1H27c0.5,0,0.9,0.4,0.9,1L27.8,35.8L27.8,35.8z',\n      // jshint ignore:line\n      nextIcon: 'path://M18.6,50.8l22.5-22.5c0.2-0.2,0.3-0.4,0.3-0.7c0-0.3-0.1-0.5-0.3-0.7L18.7,4.4c-0.1-0.1-0.2-0.3-0.2-0.5 c0-0.4,0.3-0.8,0.8-0.8c0.2,0,0.5,0.1,0.6,0.3l23.5,23.5l0,0c0.2,0.2,0.3,0.4,0.3,0.7c0,0.3-0.1,0.5-0.3,0.7l-0.1,0.1L19.7,52 c-0.1,0.1-0.3,0.2-0.5,0.2c-0.4,0-0.8-0.3-0.8-0.8C18.4,51.2,18.5,51,18.6,50.8z',\n      // jshint ignore:line\n      prevIcon: 'path://M43,52.8L20.4,30.3c-0.2-0.2-0.3-0.4-0.3-0.7c0-0.3,0.1-0.5,0.3-0.7L42.9,6.4c0.1-0.1,0.2-0.3,0.2-0.5 c0-0.4-0.3-0.8-0.8-0.8c-0.2,0-0.5,0.1-0.6,0.3L18.3,28.8l0,0c-0.2,0.2-0.3,0.4-0.3,0.7c0,0.3,0.1,0.5,0.3,0.7l0.1,0.1L41.9,54 c0.1,0.1,0.3,0.2,0.5,0.2c0.4,0,0.8-0.3,0.8-0.8C43.2,53.2,43.1,53,43,52.8z',\n      // jshint ignore:line\n      color: '#304654',\n      borderColor: '#304654',\n      borderWidth: 1\n    },\n    emphasis: {\n      label: {\n        show: true,\n        // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n        color: '#c23531'\n      },\n      itemStyle: {\n        color: '#c23531'\n      },\n      controlStyle: {\n        color: '#c23531',\n        borderColor: '#c23531',\n        borderWidth: 2\n      }\n    },\n    data: []\n  }\n});\nzrUtil.mixin(SliderTimelineModel, dataFormatMixin);\nvar _default = SliderTimelineModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar List = require(\"../../data/List\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar TimelineModel = ComponentModel.extend({\n  type: 'timeline',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    // 一级层叠\n    z: 4,\n    // 二级层叠\n    show: true,\n    axisType: 'time',\n    // 模式是时间类型，支持 value, category\n    realtime: true,\n    left: '20%',\n    top: null,\n    right: '20%',\n    bottom: 0,\n    width: null,\n    height: 40,\n    padding: 5,\n    controlPosition: 'left',\n    // 'left' 'right' 'top' 'bottom' 'none'\n    autoPlay: false,\n    rewind: false,\n    // 反向播放\n    loop: true,\n    playInterval: 2000,\n    // 播放时间间隔，单位ms\n    currentIndex: 0,\n    itemStyle: {},\n    label: {\n      color: '#000'\n    },\n    data: []\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * @private\n     * @type {module:echarts/data/List}\n     */\n    this._data;\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n\n    this._names;\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._initData();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option) {\n    TimelineModel.superApply(this, 'mergeOption', arguments);\n\n    this._initData();\n  },\n\n  /**\n   * @param {number} [currentIndex]\n   */\n  setCurrentIndex: function setCurrentIndex(currentIndex) {\n    if (currentIndex == null) {\n      currentIndex = this.option.currentIndex;\n    }\n\n    var count = this._data.count();\n\n    if (this.option.loop) {\n      currentIndex = (currentIndex % count + count) % count;\n    } else {\n      currentIndex >= count && (currentIndex = count - 1);\n      currentIndex < 0 && (currentIndex = 0);\n    }\n\n    this.option.currentIndex = currentIndex;\n  },\n\n  /**\n   * @return {number} currentIndex\n   */\n  getCurrentIndex: function getCurrentIndex() {\n    return this.option.currentIndex;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isIndexMax: function isIndexMax() {\n    return this.getCurrentIndex() >= this._data.count() - 1;\n  },\n\n  /**\n   * @param {boolean} state true: play, false: stop\n   */\n  setPlayState: function setPlayState(state) {\n    this.option.autoPlay = !!state;\n  },\n\n  /**\n   * @return {boolean} true: play, false: stop\n   */\n  getPlayState: function getPlayState() {\n    return !!this.option.autoPlay;\n  },\n\n  /**\n   * @private\n   */\n  _initData: function _initData() {\n    var thisOption = this.option;\n    var dataArr = thisOption.data || [];\n    var axisType = thisOption.axisType;\n    var names = this._names = [];\n\n    if (axisType === 'category') {\n      var idxArr = [];\n      zrUtil.each(dataArr, function (item, index) {\n        var value = modelUtil.getDataItemValue(item);\n        var newItem;\n\n        if (zrUtil.isObject(item)) {\n          newItem = zrUtil.clone(item);\n          newItem.value = index;\n        } else {\n          newItem = index;\n        }\n\n        idxArr.push(newItem);\n\n        if (!zrUtil.isString(value) && (value == null || isNaN(value))) {\n          value = '';\n        }\n\n        names.push(value + '');\n      });\n      dataArr = idxArr;\n    }\n\n    var dimType = {\n      category: 'ordinal',\n      time: 'time'\n    }[axisType] || 'number';\n    var data = this._data = new List([{\n      name: 'value',\n      type: dimType\n    }], this);\n    data.initData(dataArr, names);\n  },\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @public\n   * @return {Array.<string>} categoreis\n   */\n  getCategories: function getCategories() {\n    if (this.get('axisType') === 'category') {\n      return this._names.slice();\n    }\n  }\n});\nvar _default = TimelineModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layout = require(\"../../util/layout\");\n\nvar TimelineView = require(\"./TimelineView\");\n\nvar TimelineAxis = require(\"./TimelineAxis\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _format = require(\"../../util/format\");\n\nvar encodeHTML = _format.encodeHTML;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar bind = zrUtil.bind;\nvar each = zrUtil.each;\nvar PI = Math.PI;\n\nvar _default = TimelineView.extend({\n  type: 'timeline.slider',\n  init: function init(ecModel, api) {\n    this.api = api;\n    /**\n     * @private\n     * @type {module:echarts/component/timeline/TimelineAxis}\n     */\n\n    this._axis;\n    /**\n     * @private\n     * @type {module:zrender/core/BoundingRect}\n     */\n\n    this._viewRect;\n    /**\n     * @type {number}\n     */\n\n    this._timer;\n    /**\n     * @type {module:zrender/Element}\n     */\n\n    this._currentPointer;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._mainGroup;\n    /**\n     * @type {module:zrender/container/Group}\n     */\n\n    this._labelGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(timelineModel, ecModel, api, payload) {\n    this.model = timelineModel;\n    this.api = api;\n    this.ecModel = ecModel;\n    this.group.removeAll();\n\n    if (timelineModel.get('show', true)) {\n      var layoutInfo = this._layout(timelineModel, api);\n\n      var mainGroup = this._createGroup('mainGroup');\n\n      var labelGroup = this._createGroup('labelGroup');\n      /**\n       * @private\n       * @type {module:echarts/component/timeline/TimelineAxis}\n       */\n\n\n      var axis = this._axis = this._createAxis(layoutInfo, timelineModel);\n\n      timelineModel.formatTooltip = function (dataIndex) {\n        return encodeHTML(axis.scale.getLabel(dataIndex));\n      };\n\n      each(['AxisLine', 'AxisTick', 'Control', 'CurrentPointer'], function (name) {\n        this['_render' + name](layoutInfo, mainGroup, axis, timelineModel);\n      }, this);\n\n      this._renderAxisLabel(layoutInfo, labelGroup, axis, timelineModel);\n\n      this._position(layoutInfo, timelineModel);\n    }\n\n    this._doPlayStop();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    this._clearTimer();\n\n    this.group.removeAll();\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._clearTimer();\n  },\n  _layout: function _layout(timelineModel, api) {\n    var labelPosOpt = timelineModel.get('label.position');\n    var orient = timelineModel.get('orient');\n    var viewRect = getViewRect(timelineModel, api); // Auto label offset.\n\n    if (labelPosOpt == null || labelPosOpt === 'auto') {\n      labelPosOpt = orient === 'horizontal' ? viewRect.y + viewRect.height / 2 < api.getHeight() / 2 ? '-' : '+' : viewRect.x + viewRect.width / 2 < api.getWidth() / 2 ? '+' : '-';\n    } else if (isNaN(labelPosOpt)) {\n      labelPosOpt = {\n        horizontal: {\n          top: '-',\n          bottom: '+'\n        },\n        vertical: {\n          left: '-',\n          right: '+'\n        }\n      }[orient][labelPosOpt];\n    }\n\n    var labelAlignMap = {\n      horizontal: 'center',\n      vertical: labelPosOpt >= 0 || labelPosOpt === '+' ? 'left' : 'right'\n    };\n    var labelBaselineMap = {\n      horizontal: labelPosOpt >= 0 || labelPosOpt === '+' ? 'top' : 'bottom',\n      vertical: 'middle'\n    };\n    var rotationMap = {\n      horizontal: 0,\n      vertical: PI / 2\n    }; // Position\n\n    var mainLength = orient === 'vertical' ? viewRect.height : viewRect.width;\n    var controlModel = timelineModel.getModel('controlStyle');\n    var showControl = controlModel.get('show', true);\n    var controlSize = showControl ? controlModel.get('itemSize') : 0;\n    var controlGap = showControl ? controlModel.get('itemGap') : 0;\n    var sizePlusGap = controlSize + controlGap; // Special label rotate.\n\n    var labelRotation = timelineModel.get('label.rotate') || 0;\n    labelRotation = labelRotation * PI / 180; // To radian.\n\n    var playPosition;\n    var prevBtnPosition;\n    var nextBtnPosition;\n    var axisExtent;\n    var controlPosition = controlModel.get('position', true);\n    var showPlayBtn = showControl && controlModel.get('showPlayBtn', true);\n    var showPrevBtn = showControl && controlModel.get('showPrevBtn', true);\n    var showNextBtn = showControl && controlModel.get('showNextBtn', true);\n    var xLeft = 0;\n    var xRight = mainLength; // position[0] means left, position[1] means middle.\n\n    if (controlPosition === 'left' || controlPosition === 'bottom') {\n      showPlayBtn && (playPosition = [0, 0], xLeft += sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [xLeft, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    } else {\n      // 'top' 'right'\n      showPlayBtn && (playPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n      showPrevBtn && (prevBtnPosition = [0, 0], xLeft += sizePlusGap);\n      showNextBtn && (nextBtnPosition = [xRight - controlSize, 0], xRight -= sizePlusGap);\n    }\n\n    axisExtent = [xLeft, xRight];\n\n    if (timelineModel.get('inverse')) {\n      axisExtent.reverse();\n    }\n\n    return {\n      viewRect: viewRect,\n      mainLength: mainLength,\n      orient: orient,\n      rotation: rotationMap[orient],\n      labelRotation: labelRotation,\n      labelPosOpt: labelPosOpt,\n      labelAlign: timelineModel.get('label.align') || labelAlignMap[orient],\n      labelBaseline: timelineModel.get('label.verticalAlign') || timelineModel.get('label.baseline') || labelBaselineMap[orient],\n      // Based on mainGroup.\n      playPosition: playPosition,\n      prevBtnPosition: prevBtnPosition,\n      nextBtnPosition: nextBtnPosition,\n      axisExtent: axisExtent,\n      controlSize: controlSize,\n      controlGap: controlGap\n    };\n  },\n  _position: function _position(layoutInfo, timelineModel) {\n    // Position is be called finally, because bounding rect is needed for\n    // adapt content to fill viewRect (auto adapt offset).\n    // Timeline may be not all in the viewRect when 'offset' is specified\n    // as a number, because it is more appropriate that label aligns at\n    // 'offset' but not the other edge defined by viewRect.\n    var mainGroup = this._mainGroup;\n    var labelGroup = this._labelGroup;\n    var viewRect = layoutInfo.viewRect;\n\n    if (layoutInfo.orient === 'vertical') {\n      // transform to horizontal, inverse rotate by left-top point.\n      var m = matrix.create();\n      var rotateOriginX = viewRect.x;\n      var rotateOriginY = viewRect.y + viewRect.height;\n      matrix.translate(m, m, [-rotateOriginX, -rotateOriginY]);\n      matrix.rotate(m, m, -PI / 2);\n      matrix.translate(m, m, [rotateOriginX, rotateOriginY]);\n      viewRect = viewRect.clone();\n      viewRect.applyTransform(m);\n    }\n\n    var viewBound = getBound(viewRect);\n    var mainBound = getBound(mainGroup.getBoundingRect());\n    var labelBound = getBound(labelGroup.getBoundingRect());\n    var mainPosition = mainGroup.position;\n    var labelsPosition = labelGroup.position;\n    labelsPosition[0] = mainPosition[0] = viewBound[0][0];\n    var labelPosOpt = layoutInfo.labelPosOpt;\n\n    if (isNaN(labelPosOpt)) {\n      // '+' or '-'\n      var mainBoundIdx = labelPosOpt === '+' ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      toBound(labelsPosition, labelBound, viewBound, 1, 1 - mainBoundIdx);\n    } else {\n      var mainBoundIdx = labelPosOpt >= 0 ? 0 : 1;\n      toBound(mainPosition, mainBound, viewBound, 1, mainBoundIdx);\n      labelsPosition[1] = mainPosition[1] + labelPosOpt;\n    }\n\n    mainGroup.attr('position', mainPosition);\n    labelGroup.attr('position', labelsPosition);\n    mainGroup.rotation = labelGroup.rotation = layoutInfo.rotation;\n    setOrigin(mainGroup);\n    setOrigin(labelGroup);\n\n    function setOrigin(targetGroup) {\n      var pos = targetGroup.position;\n      targetGroup.origin = [viewBound[0][0] - pos[0], viewBound[1][0] - pos[1]];\n    }\n\n    function getBound(rect) {\n      // [[xmin, xmax], [ymin, ymax]]\n      return [[rect.x, rect.x + rect.width], [rect.y, rect.y + rect.height]];\n    }\n\n    function toBound(fromPos, from, to, dimIdx, boundIdx) {\n      fromPos[dimIdx] += to[dimIdx][boundIdx] - from[dimIdx][boundIdx];\n    }\n  },\n  _createAxis: function _createAxis(layoutInfo, timelineModel) {\n    var data = timelineModel.getData();\n    var axisType = timelineModel.get('axisType');\n    var scale = axisHelper.createScaleByModel(timelineModel, axisType); // Customize scale. The `tickValue` is `dataIndex`.\n\n    scale.getTicks = function () {\n      return data.mapArray(['value'], function (value) {\n        return value;\n      });\n    };\n\n    var dataExtent = data.getDataExtent('value');\n    scale.setExtent(dataExtent[0], dataExtent[1]);\n    scale.niceTicks();\n    var axis = new TimelineAxis('value', scale, layoutInfo.axisExtent, axisType);\n    axis.model = timelineModel;\n    return axis;\n  },\n  _createGroup: function _createGroup(name) {\n    var newGroup = this['_' + name] = new graphic.Group();\n    this.group.add(newGroup);\n    return newGroup;\n  },\n  _renderAxisLine: function _renderAxisLine(layoutInfo, group, axis, timelineModel) {\n    var axisExtent = axis.getExtent();\n\n    if (!timelineModel.get('lineStyle.show')) {\n      return;\n    }\n\n    group.add(new graphic.Line({\n      shape: {\n        x1: axisExtent[0],\n        y1: 0,\n        x2: axisExtent[1],\n        y2: 0\n      },\n      style: zrUtil.extend({\n        lineCap: 'round'\n      }, timelineModel.getModel('lineStyle').getLineStyle()),\n      silent: true,\n      z2: 1\n    }));\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisTick: function _renderAxisTick(layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData(); // Show all ticks, despite ignoring strategy.\n\n    var ticks = axis.scale.getTicks(); // The value is dataIndex, see the costomized scale.\n\n    each(ticks, function (value) {\n      var tickCoord = axis.dataToCoord(value);\n      var itemModel = data.getItemModel(value);\n      var itemStyleModel = itemModel.getModel('itemStyle');\n      var hoverStyleModel = itemModel.getModel('emphasis.itemStyle');\n      var symbolOpt = {\n        position: [tickCoord, 0],\n        onclick: bind(this._changeTimeline, this, value)\n      };\n      var el = giveSymbol(itemModel, itemStyleModel, group, symbolOpt);\n      graphic.setHoverStyle(el, hoverStyleModel.getItemStyle());\n\n      if (itemModel.get('tooltip')) {\n        el.dataIndex = value;\n        el.dataModel = timelineModel;\n      } else {\n        el.dataIndex = el.dataModel = null;\n      }\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderAxisLabel: function _renderAxisLabel(layoutInfo, group, axis, timelineModel) {\n    var labelModel = axis.getLabelModel();\n\n    if (!labelModel.get('show')) {\n      return;\n    }\n\n    var data = timelineModel.getData();\n    var labels = axis.getViewLabels();\n    each(labels, function (labelItem) {\n      // The tickValue is dataIndex, see the costomized scale.\n      var dataIndex = labelItem.tickValue;\n      var itemModel = data.getItemModel(dataIndex);\n      var normalLabelModel = itemModel.getModel('label');\n      var hoverLabelModel = itemModel.getModel('emphasis.label');\n      var tickCoord = axis.dataToCoord(labelItem.tickValue);\n      var textEl = new graphic.Text({\n        position: [tickCoord, 0],\n        rotation: layoutInfo.labelRotation - layoutInfo.rotation,\n        onclick: bind(this._changeTimeline, this, dataIndex),\n        silent: false\n      });\n      graphic.setTextStyle(textEl.style, normalLabelModel, {\n        text: labelItem.formattedLabel,\n        textAlign: layoutInfo.labelAlign,\n        textVerticalAlign: layoutInfo.labelBaseline\n      });\n      group.add(textEl);\n      graphic.setHoverStyle(textEl, graphic.setTextStyle({}, hoverLabelModel));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _renderControl: function _renderControl(layoutInfo, group, axis, timelineModel) {\n    var controlSize = layoutInfo.controlSize;\n    var rotation = layoutInfo.rotation;\n    var itemStyle = timelineModel.getModel('controlStyle').getItemStyle();\n    var hoverStyle = timelineModel.getModel('emphasis.controlStyle').getItemStyle();\n    var rect = [0, -controlSize / 2, controlSize, controlSize];\n    var playState = timelineModel.getPlayState();\n    var inverse = timelineModel.get('inverse', true);\n    makeBtn(layoutInfo.nextBtnPosition, 'controlStyle.nextIcon', bind(this._changeTimeline, this, inverse ? '-' : '+'));\n    makeBtn(layoutInfo.prevBtnPosition, 'controlStyle.prevIcon', bind(this._changeTimeline, this, inverse ? '+' : '-'));\n    makeBtn(layoutInfo.playPosition, 'controlStyle.' + (playState ? 'stopIcon' : 'playIcon'), bind(this._handlePlayClick, this, !playState), true);\n\n    function makeBtn(position, iconPath, onclick, willRotate) {\n      if (!position) {\n        return;\n      }\n\n      var opt = {\n        position: position,\n        origin: [controlSize / 2, 0],\n        rotation: willRotate ? -rotation : 0,\n        rectHover: true,\n        style: itemStyle,\n        onclick: onclick\n      };\n      var btn = makeIcon(timelineModel, iconPath, rect, opt);\n      group.add(btn);\n      graphic.setHoverStyle(btn, hoverStyle);\n    }\n  },\n  _renderCurrentPointer: function _renderCurrentPointer(layoutInfo, group, axis, timelineModel) {\n    var data = timelineModel.getData();\n    var currentIndex = timelineModel.getCurrentIndex();\n    var pointerModel = data.getItemModel(currentIndex).getModel('checkpointStyle');\n    var me = this;\n    var callback = {\n      onCreate: function onCreate(pointer) {\n        pointer.draggable = true;\n        pointer.drift = bind(me._handlePointerDrag, me);\n        pointer.ondragend = bind(me._handlePointerDragend, me);\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel, true);\n      },\n      onUpdate: function onUpdate(pointer) {\n        pointerMoveTo(pointer, currentIndex, axis, timelineModel);\n      }\n    }; // Reuse when exists, for animation and drag.\n\n    this._currentPointer = giveSymbol(pointerModel, pointerModel, this._mainGroup, {}, this._currentPointer, callback);\n  },\n  _handlePlayClick: function _handlePlayClick(nextState) {\n    this._clearTimer();\n\n    this.api.dispatchAction({\n      type: 'timelinePlayChange',\n      playState: nextState,\n      from: this.uid\n    });\n  },\n  _handlePointerDrag: function _handlePointerDrag(dx, dy, e) {\n    this._clearTimer();\n\n    this._pointerChangeTimeline([e.offsetX, e.offsetY]);\n  },\n  _handlePointerDragend: function _handlePointerDragend(e) {\n    this._pointerChangeTimeline([e.offsetX, e.offsetY], true);\n  },\n  _pointerChangeTimeline: function _pointerChangeTimeline(mousePos, trigger) {\n    var toCoord = this._toAxisCoord(mousePos)[0];\n\n    var axis = this._axis;\n    var axisExtent = numberUtil.asc(axis.getExtent().slice());\n    toCoord > axisExtent[1] && (toCoord = axisExtent[1]);\n    toCoord < axisExtent[0] && (toCoord = axisExtent[0]);\n    this._currentPointer.position[0] = toCoord;\n\n    this._currentPointer.dirty();\n\n    var targetDataIndex = this._findNearestTick(toCoord);\n\n    var timelineModel = this.model;\n\n    if (trigger || targetDataIndex !== timelineModel.getCurrentIndex() && timelineModel.get('realtime')) {\n      this._changeTimeline(targetDataIndex);\n    }\n  },\n  _doPlayStop: function _doPlayStop() {\n    this._clearTimer();\n\n    if (this.model.getPlayState()) {\n      this._timer = setTimeout(bind(handleFrame, this), this.model.get('playInterval'));\n    }\n\n    function handleFrame() {\n      // Do not cache\n      var timelineModel = this.model;\n\n      this._changeTimeline(timelineModel.getCurrentIndex() + (timelineModel.get('rewind', true) ? -1 : 1));\n    }\n  },\n  _toAxisCoord: function _toAxisCoord(vertex) {\n    var trans = this._mainGroup.getLocalTransform();\n\n    return graphic.applyTransform(vertex, trans, true);\n  },\n  _findNearestTick: function _findNearestTick(axisCoord) {\n    var data = this.model.getData();\n    var dist = Infinity;\n    var targetDataIndex;\n    var axis = this._axis;\n    data.each(['value'], function (value, dataIndex) {\n      var coord = axis.dataToCoord(value);\n      var d = Math.abs(coord - axisCoord);\n\n      if (d < dist) {\n        dist = d;\n        targetDataIndex = dataIndex;\n      }\n    });\n    return targetDataIndex;\n  },\n  _clearTimer: function _clearTimer() {\n    if (this._timer) {\n      clearTimeout(this._timer);\n      this._timer = null;\n    }\n  },\n  _changeTimeline: function _changeTimeline(nextIndex) {\n    var currentIndex = this.model.getCurrentIndex();\n\n    if (nextIndex === '+') {\n      nextIndex = currentIndex + 1;\n    } else if (nextIndex === '-') {\n      nextIndex = currentIndex - 1;\n    }\n\n    this.api.dispatchAction({\n      type: 'timelineChange',\n      currentIndex: nextIndex,\n      from: this.uid\n    });\n  }\n});\n\nfunction getViewRect(model, api) {\n  return layout.getLayoutRect(model.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  }, model.get('padding'));\n}\n\nfunction makeIcon(timelineModel, objPath, rect, opts) {\n  var icon = graphic.makePath(timelineModel.get(objPath).replace(/^path:\\/\\//, ''), zrUtil.clone(opts || {}), new BoundingRect(rect[0], rect[1], rect[2], rect[3]), 'center');\n  return icon;\n}\n/**\n * Create symbol or update symbol\n * opt: basic position and event handlers\n */\n\n\nfunction giveSymbol(hostModel, itemStyleModel, group, opt, symbol, callback) {\n  var color = itemStyleModel.get('color');\n\n  if (!symbol) {\n    var symbolType = hostModel.get('symbol');\n    symbol = createSymbol(symbolType, -1, -1, 2, 2, color);\n    symbol.setStyle('strokeNoScale', true);\n    group.add(symbol);\n    callback && callback.onCreate(symbol);\n  } else {\n    symbol.setColor(color);\n    group.add(symbol); // Group may be new, also need to add.\n\n    callback && callback.onUpdate(symbol);\n  } // Style\n\n\n  var itemStyle = itemStyleModel.getItemStyle(['color', 'symbol', 'symbolSize']);\n  symbol.setStyle(itemStyle); // Transform and events.\n\n  opt = zrUtil.merge({\n    rectHover: true,\n    z2: 100\n  }, opt, true);\n  var symbolSize = hostModel.get('symbolSize');\n  symbolSize = symbolSize instanceof Array ? symbolSize.slice() : [+symbolSize, +symbolSize];\n  symbolSize[0] /= 2;\n  symbolSize[1] /= 2;\n  opt.scale = symbolSize;\n  var symbolOffset = hostModel.get('symbolOffset');\n\n  if (symbolOffset) {\n    var pos = opt.position = opt.position || [0, 0];\n    pos[0] += numberUtil.parsePercent(symbolOffset[0], symbolSize[0]);\n    pos[1] += numberUtil.parsePercent(symbolOffset[1], symbolSize[1]);\n  }\n\n  var symbolRotate = hostModel.get('symbolRotate');\n  opt.rotation = (symbolRotate || 0) * Math.PI / 180 || 0;\n  symbol.attr(opt); // FIXME\n  // (1) When symbol.style.strokeNoScale is true and updateTransform is not performed,\n  // getBoundingRect will return wrong result.\n  // (This is supposed to be resolved in zrender, but it is a little difficult to\n  // leverage performance and auto updateTransform)\n  // (2) All of ancesters of symbol do not scale, so we can just updateTransform symbol.\n\n  symbol.updateTransform();\n  return symbol;\n}\n\nfunction pointerMoveTo(pointer, dataIndex, axis, timelineModel, noAnimation) {\n  if (pointer.dragging) {\n    return;\n  }\n\n  var pointerModel = timelineModel.getModel('checkpointStyle');\n  var toCoord = axis.dataToCoord(timelineModel.getData().get(['value'], dataIndex));\n\n  if (noAnimation || !pointerModel.get('animation', true)) {\n    pointer.attr({\n      position: [toCoord, 0]\n    });\n  } else {\n    pointer.stopAnimation(true);\n    pointer.animateTo({\n      position: [toCoord, 0]\n    }, pointerModel.get('animationDuration', true), pointerModel.get('animationEasing', true));\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ComponentView = require(\"../../view/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'timeline'\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../../coord/Axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\n\n\nvar TimelineAxis = function TimelineAxis(dim, scale, coordExtent, axisType) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis model\n   * @param {module:echarts/component/TimelineModel}\n   */\n\n  this.model = null;\n};\n\nTimelineAxis.prototype = {\n  constructor: TimelineAxis,\n\n  /**\n   * @override\n   */\n  getLabelModel: function getLabelModel() {\n    return this.model.getModel('label');\n  },\n\n  /**\n   * @override\n   */\n  isHorizontal: function isHorizontal() {\n    return this.model.get('orient') === 'horizontal';\n  }\n};\nzrUtil.inherits(TimelineAxis, Axis);\nvar _default = TimelineAxis;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkPointModel\");\n\nrequire(\"./marker/MarkPointView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// HINT Markpoint can't be used too much\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markPoint component is enabled\n  opt.markPoint = opt.markPoint || {};\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markPoint',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: 'pin',\n    symbolSize: 50,\n    //symbolRotate: 0,\n    //symbolOffset: [0, 0]\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'inside'\n    },\n    itemStyle: {\n      borderWidth: 2\n    },\n    emphasis: {\n      label: {\n        show: true\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar SymbolDraw = require(\"../../chart/helper/SymbolDraw\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar List = require(\"../../data/List\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction updateMarkerLayout(mpData, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  mpData.each(function (idx) {\n    var itemModel = mpData.getItemModel(idx);\n    var point;\n    var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n    var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n    if (!isNaN(xPx) && !isNaN(yPx)) {\n      point = [xPx, yPx];\n    } // Chart like bar may have there own marker positioning logic\n    else if (seriesModel.getMarkerPosition) {\n        // Use the getMarkerPoisition\n        point = seriesModel.getMarkerPosition(mpData.getValues(mpData.dimensions, idx));\n      } else if (coordSys) {\n        var x = mpData.get(coordSys.dimensions[0], idx);\n        var y = mpData.get(coordSys.dimensions[1], idx);\n        point = coordSys.dataToPoint([x, y]);\n      } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n\n    mpData.setItemLayout(idx, point);\n  });\n}\n\nvar _default = MarkerView.extend({\n  type: 'markPoint',\n  // updateLayout: function (markPointModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mpModel = seriesModel.markPointModel;\n  //         if (mpModel) {\n  //             updateMarkerLayout(mpModel.getData(), seriesModel, api);\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markPointModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mpModel = seriesModel.markPointModel;\n\n      if (mpModel) {\n        updateMarkerLayout(mpModel.getData(), seriesModel, api);\n        this.markerGroupMap.get(seriesModel.id).updateLayout(mpModel);\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mpModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var symbolDrawMap = this.markerGroupMap;\n    var symbolDraw = symbolDrawMap.get(seriesId) || symbolDrawMap.set(seriesId, new SymbolDraw());\n    var mpData = createList(coordSys, seriesModel, mpModel); // FIXME\n\n    mpModel.setData(mpData);\n    updateMarkerLayout(mpModel.getData(), seriesModel, api);\n    mpData.each(function (idx) {\n      var itemModel = mpData.getItemModel(idx);\n      var symbol = itemModel.getShallow('symbol');\n      var symbolSize = itemModel.getShallow('symbolSize');\n      var isFnSymbol = zrUtil.isFunction(symbol);\n      var isFnSymbolSize = zrUtil.isFunction(symbolSize);\n\n      if (isFnSymbol || isFnSymbolSize) {\n        var rawIdx = mpModel.getRawValue(idx);\n        var dataParams = mpModel.getDataParams(idx);\n\n        if (isFnSymbol) {\n          symbol = symbol(rawIdx, dataParams);\n        }\n\n        if (isFnSymbolSize) {\n          // FIXME 这里不兼容 ECharts 2.x，2.x 貌似参数是整个数据？\n          symbolSize = symbolSize(rawIdx, dataParams);\n        }\n      }\n\n      mpData.setItemVisual(idx, {\n        symbol: symbol,\n        symbolSize: symbolSize,\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }); // TODO Text are wrong\n\n    symbolDraw.updateData(mpData);\n    this.group.add(symbolDraw.group); // Set host model for tooltip\n    // FIXME\n\n    mpData.eachItemGraphicEl(function (el) {\n      el.traverse(function (child) {\n        child.dataModel = mpModel;\n      });\n    });\n    symbolDraw.__keep = true;\n    symbolDraw.group.silent = mpModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} [coordSys]\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mpModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var mpData = new List(coordDimsInfos, mpModel);\n  var dataOpt = zrUtil.map(mpModel.get('data'), zrUtil.curry(markerHelper.dataTransform, seriesModel));\n\n  if (coordSys) {\n    dataOpt = zrUtil.filter(dataOpt, zrUtil.curry(markerHelper.dataFilter, coordSys));\n  }\n\n  mpData.initData(dataOpt, null, coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  });\n  return mpData;\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkLineModel\");\n\nrequire(\"./marker/MarkLineView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markLine component is enabled\n  opt.markLine = opt.markLine || {};\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markLine',\n  defaultOption: {\n    zlevel: 0,\n    z: 5,\n    symbol: ['circle', 'arrow'],\n    symbolSize: [8, 16],\n    //symbolRotate: 0,\n    precision: 2,\n    tooltip: {\n      trigger: 'item'\n    },\n    label: {\n      show: true,\n      position: 'end',\n      distance: 5\n    },\n    lineStyle: {\n      type: 'dashed'\n    },\n    emphasis: {\n      label: {\n        show: true\n      },\n      lineStyle: {\n        width: 3\n      }\n    },\n    animationEasing: 'linear'\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar LineDraw = require(\"../../chart/helper/LineDraw\");\n\nvar MarkerView = require(\"./MarkerView\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar markLineTransform = function markLineTransform(seriesModel, coordSys, mlModel, item) {\n  var data = seriesModel.getData(); // Special type markLine like 'min', 'max', 'average', 'median'\n\n  var mlType = item.type;\n\n  if (!zrUtil.isArray(item) && (mlType === 'min' || mlType === 'max' || mlType === 'average' || mlType === 'median' // In case\n  // data: [{\n  //   yAxis: 10\n  // }]\n  || item.xAxis != null || item.yAxis != null)) {\n    var valueAxis;\n    var value;\n\n    if (item.yAxis != null || item.xAxis != null) {\n      valueAxis = coordSys.getAxis(item.yAxis != null ? 'y' : 'x');\n      value = zrUtil.retrieve(item.yAxis, item.xAxis);\n    } else {\n      var axisInfo = markerHelper.getAxisInfo(item, data, coordSys, seriesModel);\n      valueAxis = axisInfo.valueAxis;\n      var valueDataDim = getStackedDimension(data, axisInfo.valueDataDim);\n      value = markerHelper.numCalculate(data, valueDataDim, mlType);\n    }\n\n    var valueIndex = valueAxis.dim === 'x' ? 0 : 1;\n    var baseIndex = 1 - valueIndex;\n    var mlFrom = zrUtil.clone(item);\n    var mlTo = {};\n    mlFrom.type = null;\n    mlFrom.coord = [];\n    mlTo.coord = [];\n    mlFrom.coord[baseIndex] = -Infinity;\n    mlTo.coord[baseIndex] = Infinity;\n    var precision = mlModel.get('precision');\n\n    if (precision >= 0 && typeof value === 'number') {\n      value = +value.toFixed(Math.min(precision, 20));\n    }\n\n    mlFrom.coord[valueIndex] = mlTo.coord[valueIndex] = value;\n    item = [mlFrom, mlTo, {\n      // Extra option for tooltip and label\n      type: mlType,\n      valueIndex: item.valueIndex,\n      // Force to use the value of calculated value.\n      value: value\n    }];\n  }\n\n  item = [markerHelper.dataTransform(seriesModel, item[0]), markerHelper.dataTransform(seriesModel, item[1]), zrUtil.extend({}, item[2])]; // Avoid line data type is extended by from(to) data type\n\n  item[2].type = item[2].type || ''; // Merge from option and to option into line option\n\n  zrUtil.merge(item[2], item[0]);\n  zrUtil.merge(item[2], item[1]);\n  return item;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markLine has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  var dimName = coordSys.dimensions[dimIndex];\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]) && fromCoord[dimIndex] === toCoord[dimIndex] && coordSys.getAxis(dimName).containData(fromCoord[dimIndex]);\n}\n\nfunction markLineFilter(coordSys, item) {\n  if (coordSys.type === 'cartesian2d') {\n    var fromCoord = item[0].coord;\n    var toCoord = item[1].coord; // In case\n    // {\n    //  markLine: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, item[0]) && markerHelper.dataFilter(coordSys, item[1]);\n}\n\nfunction updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get('x'), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get('y'), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(data.dimensions, idx));\n    } else {\n      var dims = coordSys.dimensions;\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      point = coordSys.dataToPoint([x, y]);\n    } // Expand line to the edge of grid if value on one axis is Inifnity\n    // In case\n    //  markLine: {\n    //    data: [{\n    //      yAxis: 2\n    //      // or\n    //      type: 'average'\n    //    }]\n    //  }\n\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var dims = coordSys.dimensions;\n\n      if (isInifinity(data.get(dims[0], idx))) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[isFrom ? 0 : 1]);\n      } else if (isInifinity(data.get(dims[1], idx))) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[isFrom ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  data.setItemLayout(idx, point);\n}\n\nvar _default = MarkerView.extend({\n  type: 'markLine',\n  // updateLayout: function (markLineModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var mlModel = seriesModel.markLineModel;\n  //         if (mlModel) {\n  //             var mlData = mlModel.getData();\n  //             var fromData = mlModel.__from;\n  //             var toData = mlModel.__to;\n  //             // Update visual and layout of from symbol and to symbol\n  //             fromData.each(function (idx) {\n  //                 updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n  //                 updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n  //             });\n  //             // Update layout of line\n  //             mlData.each(function (idx) {\n  //                 mlData.setItemLayout(idx, [\n  //                     fromData.getItemLayout(idx),\n  //                     toData.getItemLayout(idx)\n  //                 ]);\n  //             });\n  //             this.markerGroupMap.get(seriesModel.id).updateLayout();\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markLineModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var mlModel = seriesModel.markLineModel;\n\n      if (mlModel) {\n        var mlData = mlModel.getData();\n        var fromData = mlModel.__from;\n        var toData = mlModel.__to; // Update visual and layout of from symbol and to symbol\n\n        fromData.each(function (idx) {\n          updateSingleMarkerEndLayout(fromData, idx, true, seriesModel, api);\n          updateSingleMarkerEndLayout(toData, idx, false, seriesModel, api);\n        }); // Update layout of line\n\n        mlData.each(function (idx) {\n          mlData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n        });\n        this.markerGroupMap.get(seriesModel.id).updateLayout();\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, mlModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var lineDrawMap = this.markerGroupMap;\n    var lineDraw = lineDrawMap.get(seriesId) || lineDrawMap.set(seriesId, new LineDraw());\n    this.group.add(lineDraw.group);\n    var mlData = createList(coordSys, seriesModel, mlModel);\n    var fromData = mlData.from;\n    var toData = mlData.to;\n    var lineData = mlData.line;\n    mlModel.__from = fromData;\n    mlModel.__to = toData; // Line data for tooltip and formatter\n\n    mlModel.setData(lineData);\n    var symbolType = mlModel.get('symbol');\n    var symbolSize = mlModel.get('symbolSize');\n\n    if (!zrUtil.isArray(symbolType)) {\n      symbolType = [symbolType, symbolType];\n    }\n\n    if (typeof symbolSize === 'number') {\n      symbolSize = [symbolSize, symbolSize];\n    } // Update visual and layout of from symbol and to symbol\n\n\n    mlData.from.each(function (idx) {\n      updateDataVisualAndLayout(fromData, idx, true);\n      updateDataVisualAndLayout(toData, idx, false);\n    }); // Update visual and layout of line\n\n    lineData.each(function (idx) {\n      var lineColor = lineData.getItemModel(idx).get('lineStyle.color');\n      lineData.setItemVisual(idx, {\n        color: lineColor || fromData.getItemVisual(idx, 'color')\n      });\n      lineData.setItemLayout(idx, [fromData.getItemLayout(idx), toData.getItemLayout(idx)]);\n      lineData.setItemVisual(idx, {\n        'fromSymbolSize': fromData.getItemVisual(idx, 'symbolSize'),\n        'fromSymbol': fromData.getItemVisual(idx, 'symbol'),\n        'toSymbolSize': toData.getItemVisual(idx, 'symbolSize'),\n        'toSymbol': toData.getItemVisual(idx, 'symbol')\n      });\n    });\n    lineDraw.updateData(lineData); // Set host model for tooltip\n    // FIXME\n\n    mlData.line.eachItemGraphicEl(function (el, idx) {\n      el.traverse(function (child) {\n        child.dataModel = mlModel;\n      });\n    });\n\n    function updateDataVisualAndLayout(data, idx, isFrom) {\n      var itemModel = data.getItemModel(idx);\n      updateSingleMarkerEndLayout(data, idx, isFrom, seriesModel, api);\n      data.setItemVisual(idx, {\n        symbolSize: itemModel.get('symbolSize') || symbolSize[isFrom ? 0 : 1],\n        symbol: itemModel.get('symbol', true) || symbolType[isFrom ? 0 : 1],\n        color: itemModel.get('itemStyle.color') || seriesData.getVisual('color')\n      });\n    }\n\n    lineDraw.__keep = true;\n    lineDraw.group.silent = mlModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\n\nfunction createList(coordSys, seriesModel, mlModel) {\n  var coordDimsInfos;\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var info = seriesModel.getData().getDimensionInfo(seriesModel.getData().mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n  }\n\n  var fromData = new List(coordDimsInfos, mlModel);\n  var toData = new List(coordDimsInfos, mlModel); // No dimensions\n\n  var lineData = new List([], mlModel);\n  var optData = zrUtil.map(mlModel.get('data'), zrUtil.curry(markLineTransform, seriesModel, coordSys, mlModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markLineFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? markerHelper.dimValueGetter : function (item) {\n    return item.value;\n  };\n  fromData.initData(zrUtil.map(optData, function (item) {\n    return item[0];\n  }), null, dimValueGetter);\n  toData.initData(zrUtil.map(optData, function (item) {\n    return item[1];\n  }), null, dimValueGetter);\n  lineData.initData(zrUtil.map(optData, function (item) {\n    return item[2];\n  }));\n  lineData.hasItemOption = true;\n  return {\n    from: fromData,\n    to: toData,\n    line: lineData\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./marker/MarkAreaModel\");\n\nrequire(\"./marker/MarkAreaView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerPreprocessor(function (opt) {\n  // Make sure markArea component is enabled\n  opt.markArea = opt.markArea || {};\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar MarkerModel = require(\"./MarkerModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = MarkerModel.extend({\n  type: 'markArea',\n  defaultOption: {\n    zlevel: 0,\n    // PENDING\n    z: 1,\n    tooltip: {\n      trigger: 'item'\n    },\n    // markArea should fixed on the coordinate system\n    animation: false,\n    label: {\n      show: true,\n      position: 'top'\n    },\n    itemStyle: {\n      // color and borderColor default to use color from series\n      // color: 'auto'\n      // borderColor: 'auto'\n      borderWidth: 0\n    },\n    emphasis: {\n      label: {\n        show: true,\n        position: 'top'\n      }\n    }\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar colorUtil = require(\"zrender/lib/tool/color\");\n\nvar List = require(\"../../data/List\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar markerHelper = require(\"./markerHelper\");\n\nvar MarkerView = require(\"./MarkerView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO Better on polar\n\n\nvar markAreaTransform = function markAreaTransform(seriesModel, coordSys, maModel, item) {\n  var lt = markerHelper.dataTransform(seriesModel, item[0]);\n  var rb = markerHelper.dataTransform(seriesModel, item[1]);\n  var retrieve = zrUtil.retrieve; // FIXME make sure lt is less than rb\n\n  var ltCoord = lt.coord;\n  var rbCoord = rb.coord;\n  ltCoord[0] = retrieve(ltCoord[0], -Infinity);\n  ltCoord[1] = retrieve(ltCoord[1], -Infinity);\n  rbCoord[0] = retrieve(rbCoord[0], Infinity);\n  rbCoord[1] = retrieve(rbCoord[1], Infinity); // Merge option into one\n\n  var result = zrUtil.mergeAll([{}, lt, rb]);\n  result.coord = [lt.coord, rb.coord];\n  result.x0 = lt.x;\n  result.y0 = lt.y;\n  result.x1 = rb.x;\n  result.y1 = rb.y;\n  return result;\n};\n\nfunction isInifinity(val) {\n  return !isNaN(val) && !isFinite(val);\n} // If a markArea has one dim\n\n\nfunction ifMarkLineHasOnlyDim(dimIndex, fromCoord, toCoord, coordSys) {\n  var otherDimIndex = 1 - dimIndex;\n  return isInifinity(fromCoord[otherDimIndex]) && isInifinity(toCoord[otherDimIndex]);\n}\n\nfunction markAreaFilter(coordSys, item) {\n  var fromCoord = item.coord[0];\n  var toCoord = item.coord[1];\n\n  if (coordSys.type === 'cartesian2d') {\n    // In case\n    // {\n    //  markArea: {\n    //    data: [{ yAxis: 2 }]\n    //  }\n    // }\n    if (fromCoord && toCoord && (ifMarkLineHasOnlyDim(1, fromCoord, toCoord, coordSys) || ifMarkLineHasOnlyDim(0, fromCoord, toCoord, coordSys))) {\n      return true;\n    }\n  }\n\n  return markerHelper.dataFilter(coordSys, {\n    coord: fromCoord,\n    x: item.x0,\n    y: item.y0\n  }) || markerHelper.dataFilter(coordSys, {\n    coord: toCoord,\n    x: item.x1,\n    y: item.y1\n  });\n} // dims can be ['x0', 'y0'], ['x1', 'y1'], ['x0', 'y1'], ['x1', 'y0']\n\n\nfunction getSingleMarkerEndPoint(data, idx, dims, seriesModel, api) {\n  var coordSys = seriesModel.coordinateSystem;\n  var itemModel = data.getItemModel(idx);\n  var point;\n  var xPx = numberUtil.parsePercent(itemModel.get(dims[0]), api.getWidth());\n  var yPx = numberUtil.parsePercent(itemModel.get(dims[1]), api.getHeight());\n\n  if (!isNaN(xPx) && !isNaN(yPx)) {\n    point = [xPx, yPx];\n  } else {\n    // Chart like bar may have there own marker positioning logic\n    if (seriesModel.getMarkerPosition) {\n      // Use the getMarkerPoisition\n      point = seriesModel.getMarkerPosition(data.getValues(dims, idx));\n    } else {\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n      var pt = [x, y];\n      coordSys.clampData && coordSys.clampData(pt, pt);\n      point = coordSys.dataToPoint(pt, true);\n    }\n\n    if (coordSys.type === 'cartesian2d') {\n      var xAxis = coordSys.getAxis('x');\n      var yAxis = coordSys.getAxis('y');\n      var x = data.get(dims[0], idx);\n      var y = data.get(dims[1], idx);\n\n      if (isInifinity(x)) {\n        point[0] = xAxis.toGlobalCoord(xAxis.getExtent()[dims[0] === 'x0' ? 0 : 1]);\n      } else if (isInifinity(y)) {\n        point[1] = yAxis.toGlobalCoord(yAxis.getExtent()[dims[1] === 'y0' ? 0 : 1]);\n      }\n    } // Use x, y if has any\n\n\n    if (!isNaN(xPx)) {\n      point[0] = xPx;\n    }\n\n    if (!isNaN(yPx)) {\n      point[1] = yPx;\n    }\n  }\n\n  return point;\n}\n\nvar dimPermutations = [['x0', 'y0'], ['x1', 'y0'], ['x1', 'y1'], ['x0', 'y1']];\nMarkerView.extend({\n  type: 'markArea',\n  // updateLayout: function (markAreaModel, ecModel, api) {\n  //     ecModel.eachSeries(function (seriesModel) {\n  //         var maModel = seriesModel.markAreaModel;\n  //         if (maModel) {\n  //             var areaData = maModel.getData();\n  //             areaData.each(function (idx) {\n  //                 var points = zrUtil.map(dimPermutations, function (dim) {\n  //                     return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n  //                 });\n  //                 // Layout\n  //                 areaData.setItemLayout(idx, points);\n  //                 var el = areaData.getItemGraphicEl(idx);\n  //                 el.setShape('points', points);\n  //             });\n  //         }\n  //     }, this);\n  // },\n  updateTransform: function updateTransform(markAreaModel, ecModel, api) {\n    ecModel.eachSeries(function (seriesModel) {\n      var maModel = seriesModel.markAreaModel;\n\n      if (maModel) {\n        var areaData = maModel.getData();\n        areaData.each(function (idx) {\n          var points = zrUtil.map(dimPermutations, function (dim) {\n            return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n          }); // Layout\n\n          areaData.setItemLayout(idx, points);\n          var el = areaData.getItemGraphicEl(idx);\n          el.setShape('points', points);\n        });\n      }\n    }, this);\n  },\n  renderSeries: function renderSeries(seriesModel, maModel, ecModel, api) {\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesId = seriesModel.id;\n    var seriesData = seriesModel.getData();\n    var areaGroupMap = this.markerGroupMap;\n    var polygonGroup = areaGroupMap.get(seriesId) || areaGroupMap.set(seriesId, {\n      group: new graphic.Group()\n    });\n    this.group.add(polygonGroup.group);\n    polygonGroup.__keep = true;\n    var areaData = createList(coordSys, seriesModel, maModel); // Line data for tooltip and formatter\n\n    maModel.setData(areaData); // Update visual and layout of line\n\n    areaData.each(function (idx) {\n      // Layout\n      areaData.setItemLayout(idx, zrUtil.map(dimPermutations, function (dim) {\n        return getSingleMarkerEndPoint(areaData, idx, dim, seriesModel, api);\n      })); // Visual\n\n      areaData.setItemVisual(idx, {\n        color: seriesData.getVisual('color')\n      });\n    });\n    areaData.diff(polygonGroup.__data).add(function (idx) {\n      var polygon = new graphic.Polygon({\n        shape: {\n          points: areaData.getItemLayout(idx)\n        }\n      });\n      areaData.setItemGraphicEl(idx, polygon);\n      polygonGroup.group.add(polygon);\n    }).update(function (newIdx, oldIdx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(oldIdx);\n\n      graphic.updateProps(polygon, {\n        shape: {\n          points: areaData.getItemLayout(newIdx)\n        }\n      }, maModel, newIdx);\n      polygonGroup.group.add(polygon);\n      areaData.setItemGraphicEl(newIdx, polygon);\n    }).remove(function (idx) {\n      var polygon = polygonGroup.__data.getItemGraphicEl(idx);\n\n      polygonGroup.group.remove(polygon);\n    }).execute();\n    areaData.eachItemGraphicEl(function (polygon, idx) {\n      var itemModel = areaData.getItemModel(idx);\n      var labelModel = itemModel.getModel('label');\n      var labelHoverModel = itemModel.getModel('emphasis.label');\n      var color = areaData.getItemVisual(idx, 'color');\n      polygon.useStyle(zrUtil.defaults(itemModel.getModel('itemStyle').getItemStyle(), {\n        fill: colorUtil.modifyAlpha(color, 0.4),\n        stroke: color\n      }));\n      polygon.hoverStyle = itemModel.getModel('emphasis.itemStyle').getItemStyle();\n      graphic.setLabelStyle(polygon.style, polygon.hoverStyle, labelModel, labelHoverModel, {\n        labelFetcher: maModel,\n        labelDataIndex: idx,\n        defaultText: areaData.getName(idx) || '',\n        isRectText: true,\n        autoColor: color\n      });\n      graphic.setHoverStyle(polygon, {});\n      polygon.dataModel = maModel;\n    });\n    polygonGroup.__data = areaData;\n    polygonGroup.group.silent = maModel.get('silent') || seriesModel.get('silent');\n  }\n});\n/**\n * @inner\n * @param {module:echarts/coord/*} coordSys\n * @param {module:echarts/model/Series} seriesModel\n * @param {module:echarts/model/Model} mpModel\n */\n\nfunction createList(coordSys, seriesModel, maModel) {\n  var coordDimsInfos;\n  var areaData;\n  var dims = ['x0', 'y0', 'x1', 'y1'];\n\n  if (coordSys) {\n    coordDimsInfos = zrUtil.map(coordSys && coordSys.dimensions, function (coordDim) {\n      var data = seriesModel.getData();\n      var info = data.getDimensionInfo(data.mapDimension(coordDim)) || {}; // In map series data don't have lng and lat dimension. Fallback to same with coordSys\n\n      return zrUtil.defaults({\n        name: coordDim\n      }, info);\n    });\n    areaData = new List(zrUtil.map(dims, function (dim, idx) {\n      return {\n        name: dim,\n        type: coordDimsInfos[idx % 2].type\n      };\n    }), maModel);\n  } else {\n    coordDimsInfos = [{\n      name: 'value',\n      type: 'float'\n    }];\n    areaData = new List(coordDimsInfos, maModel);\n  }\n\n  var optData = zrUtil.map(maModel.get('data'), zrUtil.curry(markAreaTransform, seriesModel, coordSys, maModel));\n\n  if (coordSys) {\n    optData = zrUtil.filter(optData, zrUtil.curry(markAreaFilter, coordSys));\n  }\n\n  var dimValueGetter = coordSys ? function (item, dimName, dataIndex, dimIndex) {\n    return item.coord[Math.floor(dimIndex / 2)][dimIndex % 2];\n  } : function (item) {\n    return item.value;\n  };\n  areaData.initData(optData, null, dimValueGetter);\n  areaData.hasItemOption = true;\n  return areaData;\n}","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./legend\");\n\nrequire(\"./legend/ScrollableLegendModel\");\n\nrequire(\"./legend/ScrollableLegendView\");\n\nrequire(\"./legend/scrollableLegendAction\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    zrUtil.each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\n    selected: selectedMap\n  } : {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n/**\n * @event legendToggleSelect\n * @type {Object}\n * @property {string} type 'legendToggleSelect'\n * @property {string} [from]\n * @property {string} name Series name or data item name\n */\n\n\necharts.registerAction('legendToggleSelect', 'legendselectchanged', zrUtil.curry(legendSelectActionHandler, 'toggleSelected'));\necharts.registerAction('legendAllSelect', 'legendselectall', zrUtil.curry(legendSelectActionHandler, 'allSelect'));\necharts.registerAction('legendInverseSelect', 'legendinverseselect', zrUtil.curry(legendSelectActionHandler, 'inverseSelect'));\n/**\n * @event legendSelect\n * @type {Object}\n * @property {string} type 'legendSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendSelect', 'legendselected', zrUtil.curry(legendSelectActionHandler, 'select'));\n/**\n * @event legendUnSelect\n * @type {Object}\n * @property {string} type 'legendUnSelect'\n * @property {string} name Series name or data item name\n */\n\necharts.registerAction('legendUnSelect', 'legendunselected', zrUtil.curry(legendSelectActionHandler, 'unSelect'));","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction _default(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar LegendModel = require(\"./LegendModel\");\n\nvar _layout = require(\"../../util/layout\");\n\nvar mergeLayoutParam = _layout.mergeLayoutParam;\nvar getLayoutParams = _layout.getLayoutParams;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar ScrollableLegendModel = LegendModel.extend({\n  type: 'legend.scroll',\n\n  /**\n   * @param {number} scrollDataIndex\n   */\n  setScrollDataIndex: function setScrollDataIndex(scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  },\n  defaultOption: {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    // 'start' or 'end'\n    pageFormatter: '{current}/{total}',\n    // If null/undefined, do not show page.\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    // Can be [10, 3], which represents [width, height]\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel, extraOpt) {\n    var inputPositionParams = getLayoutParams(option);\n    ScrollableLegendModel.superCall(this, 'init', option, parentModel, ecModel, extraOpt);\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(option, extraOpt) {\n    ScrollableLegendModel.superCall(this, 'mergeOption', option, extraOpt);\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  }\n}); // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: ignoreSize\n  });\n}\n\nvar _default = ScrollableLegendModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar layoutUtil = require(\"../../util/layout\");\n\nvar LegendView = require(\"./LegendView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\n\n\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\nvar ScrollableLegendView = LegendView.extend({\n  type: 'legend.scroll',\n  newlineDisabled: true,\n  init: function init() {\n    ScrollableLegendView.superCall(this, 'init');\n    /**\n     * @private\n     * @type {number} For `scroll`.\n     */\n\n    this._currentIndex = 0;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n\n    this.group.add(this._controllerGroup = new Group());\n    /**\n     *\n     * @private\n     */\n\n    this._showController;\n  },\n\n  /**\n   * @override\n   */\n  resetInner: function resetInner() {\n    ScrollableLegendView.superCall(this, 'resetInner');\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  },\n\n  /**\n   * @override\n   */\n  renderInner: function renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var me = this; // Render content items.\n\n    ScrollableLegendView.superCall(this, 'renderInner', itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n\n    var pageIconSize = legendModel.get('pageIconSize', true);\n\n    if (!zrUtil.isArray(pageIconSize)) {\n      pageIconSize = [pageIconSize, pageIconSize];\n    }\n\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        textFill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        textVerticalAlign: 'middle',\n        textAlign: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(me._pageGo, me, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSize[0] / 2,\n        y: -pageIconSize[1] / 2,\n        width: pageIconSize[0],\n        height: pageIconSize[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  },\n\n  /**\n   * @override\n   */\n  layoutInner: function layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx];\n    selector && layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n    var selectorRect = selectorGroup.getBoundingRect();\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\n    var processMaxSize = zrUtil.clone(maxSize);\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\n\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx);\n\n    if (selector) {\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\n      } else {\n        var offset = selectorRect[wh] + selectorButtonGap;\n        selectorPos[orientIdx] -= offset;\n        mainRect[xy] -= offset;\n      }\n\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\n      selectorGroup.attr('position', selectorPos);\n    }\n\n    return mainRect;\n  },\n  _layoutContentAndController: function _layoutContentAndController(legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh];\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup.position[orientIdx];\n    } // Layout container group based on 0.\n\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.attr('position', contentPos);\n    containerGroup.attr('position', containerPos);\n    controllerGroup.attr('position', controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as placeholders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      position: pageInfo.contentPosition\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird effect.\n    showController ? legendModel : false);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  },\n  _pageGo: function _pageGo(to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  },\n  _updatePageInfoView: function _updatePageInfoView(legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var canJump = pageInfo[name + 'DataIndex'] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current).replace('{total}', total) : pageFormatter({\n      current: current,\n      total: total\n    }));\n  },\n\n  /**\n   * @param {module:echarts/model/Model} legendModel\n   * @return {Object} {\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no previous page.\n   *  pageNextDataIndex: number, null when no next page.\n   * }\n   */\n  _getPageInfo: function _getPageInfo(legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: contentGroup.position.slice(),\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n\n    if (!targetItem) {\n      return result;\n    }\n\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n\n          ++result.pageCount;\n        }\n      }\n\n      winEndItemInfo = currItemInfo;\n    }\n\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\n      winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n\n      winStartItemInfo = currItemInfo;\n    }\n\n    return result;\n\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el.position[orientIdx];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  },\n  _findTargetItemIndex: function _findTargetItemIndex(targetDataIndex) {\n    if (!this._showController) {\n      return 0;\n    }\n\n    var index;\n    var contentGroup = this.getContentGroup();\n    var defaultIndex;\n    contentGroup.eachChild(function (child, idx) {\n      var legendDataIdx = child.__legendDataIndex; // FIXME\n      // If the given targetDataIndex (from model) is illegal,\n      // we use defualtIndex. But the index on the legend model and\n      // action payload is still illegal. That case will not be\n      // changed until some scenario requires.\n\n      if (defaultIndex == null && legendDataIdx != null) {\n        defaultIndex = idx;\n      }\n\n      if (legendDataIdx === targetDataIndex) {\n        index = idx;\n      }\n    });\n    return index != null ? index : defaultIndex;\n  }\n});\nvar _default = ScrollableLegendView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @event legendScroll\n * @type {Object}\n * @property {string} type 'legendScroll'\n * @property {string} scrollDataIndex\n */\n\n\necharts.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n  var scrollDataIndex = payload.scrollDataIndex;\n  scrollDataIndex != null && ecModel.eachComponent({\n    mainType: 'legend',\n    subType: 'scroll',\n    query: payload\n  }, function (legendModel) {\n    legendModel.setScrollDataIndex(scrollDataIndex);\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./dataZoomSlider\");\n\nrequire(\"./dataZoomInside\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar SliderZoomModel = DataZoomModel.extend({\n  type: 'dataZoom.slider',\n  layoutMode: 'box',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    show: true,\n    // ph => placeholder. Using placehoder here because\n    // deault value can only be drived in view stage.\n    right: 'ph',\n    // Default align to grid rect.\n    top: 'ph',\n    // Default align to grid rect.\n    width: 'ph',\n    // Default align to grid rect.\n    height: 'ph',\n    // Default align to grid rect.\n    left: null,\n    // Default align to grid rect.\n    bottom: null,\n    // Default align to grid rect.\n    backgroundColor: 'rgba(47,69,84,0)',\n    // Background of slider zoom component.\n    // dataBackgroundColor: '#ddd',         // Background coor of data shadow and border of box,\n    // highest priority, remain for compatibility of\n    // previous version, but not recommended any more.\n    dataBackground: {\n      lineStyle: {\n        color: '#2f4554',\n        width: 0.5,\n        opacity: 0.3\n      },\n      areaStyle: {\n        color: 'rgba(47,69,84,0.3)',\n        opacity: 0.3\n      }\n    },\n    borderColor: '#ddd',\n    // border color of the box. For compatibility,\n    // if dataBackgroundColor is set, borderColor\n    // is ignored.\n    fillerColor: 'rgba(167,183,204,0.4)',\n    // Color of selected area.\n    // handleColor: 'rgba(89,170,216,0.95)',     // Color of handle.\n    // handleIcon: 'path://M4.9,17.8c0-1.4,4.5-10.5,5.5-12.4c0-0.1,0.6-1.1,0.9-1.1c0.4,0,0.9,1,0.9,1.1c1.1,2.2,5.4,11,5.4,12.4v17.8c0,1.5-0.6,2.1-1.3,2.1H6.1c-0.7,0-1.3-0.6-1.3-2.1V17.8z',\n\n    /* eslint-disable */\n    handleIcon: 'M8.2,13.6V3.9H6.3v9.7H3.1v14.9h3.3v9.7h1.8v-9.7h3.3V13.6H8.2z M9.7,24.4H4.8v-1.4h4.9V24.4z M9.7,19.1H4.8v-1.4h4.9V19.1z',\n\n    /* eslint-enable */\n    // Percent of the slider height\n    handleSize: '100%',\n    handleStyle: {\n      color: '#a7b7cc'\n    },\n    labelPrecision: null,\n    labelFormatter: null,\n    showDetail: true,\n    showDataShadow: 'auto',\n    // Default auto decision.\n    realtime: true,\n    zoomLock: false,\n    // Whether disable zoom.\n    textStyle: {\n      color: '#333'\n    }\n  }\n});\nvar _default = SliderZoomModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar throttle = require(\"../../util/throttle\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar layout = require(\"../../util/layout\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar Rect = graphic.Rect;\nvar linearMap = numberUtil.linearMap;\nvar asc = numberUtil.asc;\nvar bind = zrUtil.bind;\nvar each = zrUtil.each; // Constants\n\nvar DEFAULT_LOCATION_EDGE_GAP = 7;\nvar DEFAULT_FRAME_BORDER_WIDTH = 1;\nvar DEFAULT_FILLER_SIZE = 30;\nvar HORIZONTAL = 'horizontal';\nvar VERTICAL = 'vertical';\nvar LABEL_GAP = 5;\nvar SHOW_DATA_SHADOW_SERIES_TYPE = ['line', 'bar', 'candlestick', 'scatter'];\nvar SliderZoomView = DataZoomView.extend({\n  type: 'dataZoom.slider',\n  init: function init(ecModel, api) {\n    /**\n     * @private\n     * @type {Object}\n     */\n    this._displayables = {};\n    /**\n     * @private\n     * @type {string}\n     */\n\n    this._orient;\n    /**\n     * [0, 100]\n     * @private\n     */\n\n    this._range;\n    /**\n     * [coord of the first handle, coord of the second handle]\n     * @private\n     */\n\n    this._handleEnds;\n    /**\n     * [length, thick]\n     * @private\n     * @type {Array.<number>}\n     */\n\n    this._size;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleWidth;\n    /**\n     * @private\n     * @type {number}\n     */\n\n    this._handleHeight;\n    /**\n     * @private\n     */\n\n    this._location;\n    /**\n     * @private\n     */\n\n    this._dragging;\n    /**\n     * @private\n     */\n\n    this._dataShadowInfo;\n    this.api = api;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    SliderZoomView.superApply(this, 'render', arguments);\n    throttle.createOrUpdate(this, '_dispatchZoomAction', this.dataZoomModel.get('throttle'), 'fixRate');\n    this._orient = dataZoomModel.get('orient');\n\n    if (this.dataZoomModel.get('show') === false) {\n      this.group.removeAll();\n      return;\n    } // Notice: this._resetInterval() should not be executed when payload.type\n    // is 'dataZoom', origin this._range should be maintained, otherwise 'pan'\n    // or 'zoom' info will be missed because of 'throttle' of this.dispatchAction,\n\n\n    if (!payload || payload.type !== 'dataZoom' || payload.from !== this.uid) {\n      this._buildView();\n    }\n\n    this._updateView();\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove() {\n    SliderZoomView.superApply(this, 'remove', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    SliderZoomView.superApply(this, 'dispose', arguments);\n    throttle.clear(this, '_dispatchZoomAction');\n  },\n  _buildView: function _buildView() {\n    var thisGroup = this.group;\n    thisGroup.removeAll();\n\n    this._resetLocation();\n\n    this._resetInterval();\n\n    var barGroup = this._displayables.barGroup = new graphic.Group();\n\n    this._renderBackground();\n\n    this._renderHandle();\n\n    this._renderDataShadow();\n\n    thisGroup.add(barGroup);\n\n    this._positionGroup();\n  },\n\n  /**\n   * @private\n   */\n  _resetLocation: function _resetLocation() {\n    var dataZoomModel = this.dataZoomModel;\n    var api = this.api; // If some of x/y/width/height are not specified,\n    // auto-adapt according to target grid.\n\n    var coordRect = this._findCoordRect();\n\n    var ecSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    }; // Default align by coordinate system rect.\n\n    var positionInfo = this._orient === HORIZONTAL ? {\n      // Why using 'right', because right should be used in vertical,\n      // and it is better to be consistent for dealing with position param merge.\n      right: ecSize.width - coordRect.x - coordRect.width,\n      top: ecSize.height - DEFAULT_FILLER_SIZE - DEFAULT_LOCATION_EDGE_GAP,\n      width: coordRect.width,\n      height: DEFAULT_FILLER_SIZE\n    } : {\n      // vertical\n      right: DEFAULT_LOCATION_EDGE_GAP,\n      top: coordRect.y,\n      width: DEFAULT_FILLER_SIZE,\n      height: coordRect.height\n    }; // Do not write back to option and replace value 'ph', because\n    // the 'ph' value should be recalculated when resize.\n\n    var layoutParams = layout.getLayoutParams(dataZoomModel.option); // Replace the placeholder value.\n\n    zrUtil.each(['right', 'top', 'width', 'height'], function (name) {\n      if (layoutParams[name] === 'ph') {\n        layoutParams[name] = positionInfo[name];\n      }\n    });\n    var layoutRect = layout.getLayoutRect(layoutParams, ecSize, dataZoomModel.padding);\n    this._location = {\n      x: layoutRect.x,\n      y: layoutRect.y\n    };\n    this._size = [layoutRect.width, layoutRect.height];\n    this._orient === VERTICAL && this._size.reverse();\n  },\n\n  /**\n   * @private\n   */\n  _positionGroup: function _positionGroup() {\n    var thisGroup = this.group;\n    var location = this._location;\n    var orient = this._orient; // Just use the first axis to determine mapping.\n\n    var targetAxisModel = this.dataZoomModel.getFirstTargetAxisModel();\n    var inverse = targetAxisModel && targetAxisModel.get('inverse');\n    var barGroup = this._displayables.barGroup;\n    var otherAxisInverse = (this._dataShadowInfo || {}).otherAxisInverse; // Transform barGroup.\n\n    barGroup.attr(orient === HORIZONTAL && !inverse ? {\n      scale: otherAxisInverse ? [1, 1] : [1, -1]\n    } : orient === HORIZONTAL && inverse ? {\n      scale: otherAxisInverse ? [-1, 1] : [-1, -1]\n    } : orient === VERTICAL && !inverse ? {\n      scale: otherAxisInverse ? [1, -1] : [1, 1],\n      rotation: Math.PI / 2 // Dont use Math.PI, considering shadow direction.\n\n    } : {\n      scale: otherAxisInverse ? [-1, -1] : [-1, 1],\n      rotation: Math.PI / 2\n    }); // Position barGroup\n\n    var rect = thisGroup.getBoundingRect([barGroup]);\n    thisGroup.attr('position', [location.x - rect.x, location.y - rect.y]);\n  },\n\n  /**\n   * @private\n   */\n  _getViewExtent: function _getViewExtent() {\n    return [0, this._size[0]];\n  },\n  _renderBackground: function _renderBackground() {\n    var dataZoomModel = this.dataZoomModel;\n    var size = this._size;\n    var barGroup = this._displayables.barGroup;\n    barGroup.add(new Rect({\n      silent: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: dataZoomModel.get('backgroundColor')\n      },\n      z2: -40\n    })); // Click panel, over shadow, below handles.\n\n    barGroup.add(new Rect({\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        fill: 'transparent'\n      },\n      z2: 0,\n      onclick: zrUtil.bind(this._onClickPanelClick, this)\n    }));\n  },\n  _renderDataShadow: function _renderDataShadow() {\n    var info = this._dataShadowInfo = this._prepareDataShadowInfo();\n\n    if (!info) {\n      return;\n    }\n\n    var size = this._size;\n    var seriesModel = info.series;\n    var data = seriesModel.getRawData();\n    var otherDim = seriesModel.getShadowDim ? seriesModel.getShadowDim() // @see candlestick\n    : info.otherDim;\n\n    if (otherDim == null) {\n      return;\n    }\n\n    var otherDataExtent = data.getDataExtent(otherDim); // Nice extent.\n\n    var otherOffset = (otherDataExtent[1] - otherDataExtent[0]) * 0.3;\n    otherDataExtent = [otherDataExtent[0] - otherOffset, otherDataExtent[1] + otherOffset];\n    var otherShadowExtent = [0, size[1]];\n    var thisShadowExtent = [0, size[0]];\n    var areaPoints = [[size[0], 0], [0, 0]];\n    var linePoints = [];\n    var step = thisShadowExtent[1] / (data.count() - 1);\n    var thisCoord = 0; // Optimize for large data shadow\n\n    var stride = Math.round(data.count() / size[0]);\n    var lastIsEmpty;\n    data.each([otherDim], function (value, index) {\n      if (stride > 0 && index % stride) {\n        thisCoord += step;\n        return;\n      } // FIXME\n      // Should consider axis.min/axis.max when drawing dataShadow.\n      // FIXME\n      // 应该使用统一的空判断？还是在list里进行空判断？\n\n\n      var isEmpty = value == null || isNaN(value) || value === ''; // See #4235.\n\n      var otherCoord = isEmpty ? 0 : linearMap(value, otherDataExtent, otherShadowExtent, true); // Attempt to draw data shadow precisely when there are empty value.\n\n      if (isEmpty && !lastIsEmpty && index) {\n        areaPoints.push([areaPoints[areaPoints.length - 1][0], 0]);\n        linePoints.push([linePoints[linePoints.length - 1][0], 0]);\n      } else if (!isEmpty && lastIsEmpty) {\n        areaPoints.push([thisCoord, 0]);\n        linePoints.push([thisCoord, 0]);\n      }\n\n      areaPoints.push([thisCoord, otherCoord]);\n      linePoints.push([thisCoord, otherCoord]);\n      thisCoord += step;\n      lastIsEmpty = isEmpty;\n    });\n    var dataZoomModel = this.dataZoomModel; // var dataBackgroundModel = dataZoomModel.getModel('dataBackground');\n\n    this._displayables.barGroup.add(new graphic.Polygon({\n      shape: {\n        points: areaPoints\n      },\n      style: zrUtil.defaults({\n        fill: dataZoomModel.get('dataBackgroundColor')\n      }, dataZoomModel.getModel('dataBackground.areaStyle').getAreaStyle()),\n      silent: true,\n      z2: -20\n    }));\n\n    this._displayables.barGroup.add(new graphic.Polyline({\n      shape: {\n        points: linePoints\n      },\n      style: dataZoomModel.getModel('dataBackground.lineStyle').getLineStyle(),\n      silent: true,\n      z2: -19\n    }));\n  },\n  _prepareDataShadowInfo: function _prepareDataShadowInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var showDataShadow = dataZoomModel.get('showDataShadow');\n\n    if (showDataShadow === false) {\n      return;\n    } // Find a representative series.\n\n\n    var result;\n    var ecModel = this.ecModel;\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var seriesModels = dataZoomModel.getAxisProxy(dimNames.name, axisIndex).getTargetSeriesModels();\n      zrUtil.each(seriesModels, function (seriesModel) {\n        if (result) {\n          return;\n        }\n\n        if (showDataShadow !== true && zrUtil.indexOf(SHOW_DATA_SHADOW_SERIES_TYPE, seriesModel.get('type')) < 0) {\n          return;\n        }\n\n        var thisAxis = ecModel.getComponent(dimNames.axis, axisIndex).axis;\n        var otherDim = getOtherDim(dimNames.name);\n        var otherAxisInverse;\n        var coordSys = seriesModel.coordinateSystem;\n\n        if (otherDim != null && coordSys.getOtherAxis) {\n          otherAxisInverse = coordSys.getOtherAxis(thisAxis).inverse;\n        }\n\n        otherDim = seriesModel.getData().mapDimension(otherDim);\n        result = {\n          thisAxis: thisAxis,\n          series: seriesModel,\n          thisDim: dimNames.name,\n          otherDim: otherDim,\n          otherAxisInverse: otherAxisInverse\n        };\n      }, this);\n    }, this);\n    return result;\n  },\n  _renderHandle: function _renderHandle() {\n    var displaybles = this._displayables;\n    var handles = displaybles.handles = [];\n    var handleLabels = displaybles.handleLabels = [];\n    var barGroup = this._displayables.barGroup;\n    var size = this._size;\n    var dataZoomModel = this.dataZoomModel;\n    barGroup.add(displaybles.filler = new Rect({\n      draggable: true,\n      cursor: getCursor(this._orient),\n      drift: bind(this._onDragMove, this, 'all'),\n      ondragstart: bind(this._showDataInfo, this, true),\n      ondragend: bind(this._onDragEnd, this),\n      onmouseover: bind(this._showDataInfo, this, true),\n      onmouseout: bind(this._showDataInfo, this, false),\n      style: {\n        fill: dataZoomModel.get('fillerColor'),\n        textPosition: 'inside'\n      }\n    })); // Frame border.\n\n    barGroup.add(new Rect({\n      silent: true,\n      subPixelOptimize: true,\n      shape: {\n        x: 0,\n        y: 0,\n        width: size[0],\n        height: size[1]\n      },\n      style: {\n        stroke: dataZoomModel.get('dataBackgroundColor') || dataZoomModel.get('borderColor'),\n        lineWidth: DEFAULT_FRAME_BORDER_WIDTH,\n        fill: 'rgba(0,0,0,0)'\n      }\n    }));\n    each([0, 1], function (handleIndex) {\n      var path = graphic.createIcon(dataZoomModel.get('handleIcon'), {\n        cursor: getCursor(this._orient),\n        draggable: true,\n        drift: bind(this._onDragMove, this, handleIndex),\n        ondragend: bind(this._onDragEnd, this),\n        onmouseover: bind(this._showDataInfo, this, true),\n        onmouseout: bind(this._showDataInfo, this, false)\n      }, {\n        x: -1,\n        y: 0,\n        width: 2,\n        height: 2\n      });\n      var bRect = path.getBoundingRect();\n      this._handleHeight = numberUtil.parsePercent(dataZoomModel.get('handleSize'), this._size[1]);\n      this._handleWidth = bRect.width / bRect.height * this._handleHeight;\n      path.setStyle(dataZoomModel.getModel('handleStyle').getItemStyle());\n      var handleColor = dataZoomModel.get('handleColor'); // Compatitable with previous version\n\n      if (handleColor != null) {\n        path.style.fill = handleColor;\n      }\n\n      barGroup.add(handles[handleIndex] = path);\n      var textStyleModel = dataZoomModel.textStyleModel;\n      this.group.add(handleLabels[handleIndex] = new graphic.Text({\n        silent: true,\n        invisible: true,\n        style: {\n          x: 0,\n          y: 0,\n          text: '',\n          textVerticalAlign: 'middle',\n          textAlign: 'center',\n          textFill: textStyleModel.getTextColor(),\n          textFont: textStyleModel.getFont()\n        },\n        z2: 10\n      }));\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetInterval: function _resetInterval() {\n    var range = this._range = this.dataZoomModel.getPercentRange();\n\n    var viewExtent = this._getViewExtent();\n\n    this._handleEnds = [linearMap(range[0], [0, 100], viewExtent, true), linearMap(range[1], [0, 100], viewExtent, true)];\n  },\n\n  /**\n   * @private\n   * @param {(number|string)} handleIndex 0 or 1 or 'all'\n   * @param {number} delta\n   * @return {boolean} changed\n   */\n  _updateInterval: function _updateInterval(handleIndex, delta) {\n    var dataZoomModel = this.dataZoomModel;\n    var handleEnds = this._handleEnds;\n\n    var viewExtend = this._getViewExtent();\n\n    var minMaxSpan = dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    var percentExtent = [0, 100];\n    sliderMove(delta, handleEnds, viewExtend, dataZoomModel.get('zoomLock') ? 'all' : handleIndex, minMaxSpan.minSpan != null ? linearMap(minMaxSpan.minSpan, percentExtent, viewExtend, true) : null, minMaxSpan.maxSpan != null ? linearMap(minMaxSpan.maxSpan, percentExtent, viewExtend, true) : null);\n    var lastRange = this._range;\n    var range = this._range = asc([linearMap(handleEnds[0], viewExtend, percentExtent, true), linearMap(handleEnds[1], viewExtend, percentExtent, true)]);\n    return !lastRange || lastRange[0] !== range[0] || lastRange[1] !== range[1];\n  },\n\n  /**\n   * @private\n   */\n  _updateView: function _updateView(nonRealtime) {\n    var displaybles = this._displayables;\n    var handleEnds = this._handleEnds;\n    var handleInterval = asc(handleEnds.slice());\n    var size = this._size;\n    each([0, 1], function (handleIndex) {\n      // Handles\n      var handle = displaybles.handles[handleIndex];\n      var handleHeight = this._handleHeight;\n      handle.attr({\n        scale: [handleHeight / 2, handleHeight / 2],\n        position: [handleEnds[handleIndex], size[1] / 2 - handleHeight / 2]\n      });\n    }, this); // Filler\n\n    displaybles.filler.setShape({\n      x: handleInterval[0],\n      y: 0,\n      width: handleInterval[1] - handleInterval[0],\n      height: size[1]\n    });\n\n    this._updateDataInfo(nonRealtime);\n  },\n\n  /**\n   * @private\n   */\n  _updateDataInfo: function _updateDataInfo(nonRealtime) {\n    var dataZoomModel = this.dataZoomModel;\n    var displaybles = this._displayables;\n    var handleLabels = displaybles.handleLabels;\n    var orient = this._orient;\n    var labelTexts = ['', '']; // FIXME\n    // date型，支持formatter，autoformatter（ec2 date.getAutoFormatter）\n\n    if (dataZoomModel.get('showDetail')) {\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        var axis = axisProxy.getAxisModel().axis;\n        var range = this._range;\n        var dataInterval = nonRealtime // See #4434, data and axis are not processed and reset yet in non-realtime mode.\n        ? axisProxy.calculateDataWindow({\n          start: range[0],\n          end: range[1]\n        }).valueWindow : axisProxy.getDataValueWindow();\n        labelTexts = [this._formatLabel(dataInterval[0], axis), this._formatLabel(dataInterval[1], axis)];\n      }\n    }\n\n    var orderedHandleEnds = asc(this._handleEnds.slice());\n    setLabel.call(this, 0);\n    setLabel.call(this, 1);\n\n    function setLabel(handleIndex) {\n      // Label\n      // Text should not transform by barGroup.\n      // Ignore handlers transform\n      var barTransform = graphic.getTransform(displaybles.handles[handleIndex].parent, this.group);\n      var direction = graphic.transformDirection(handleIndex === 0 ? 'right' : 'left', barTransform);\n      var offset = this._handleWidth / 2 + LABEL_GAP;\n      var textPoint = graphic.applyTransform([orderedHandleEnds[handleIndex] + (handleIndex === 0 ? -offset : offset), this._size[1] / 2], barTransform);\n      handleLabels[handleIndex].setStyle({\n        x: textPoint[0],\n        y: textPoint[1],\n        textVerticalAlign: orient === HORIZONTAL ? 'middle' : direction,\n        textAlign: orient === HORIZONTAL ? direction : 'center',\n        text: labelTexts[handleIndex]\n      });\n    }\n  },\n\n  /**\n   * @private\n   */\n  _formatLabel: function _formatLabel(value, axis) {\n    var dataZoomModel = this.dataZoomModel;\n    var labelFormatter = dataZoomModel.get('labelFormatter');\n    var labelPrecision = dataZoomModel.get('labelPrecision');\n\n    if (labelPrecision == null || labelPrecision === 'auto') {\n      labelPrecision = axis.getPixelPrecision();\n    }\n\n    var valueStr = value == null || isNaN(value) ? '' // FIXME Glue code\n    : axis.type === 'category' || axis.type === 'time' ? axis.scale.getLabel(Math.round(value)) // param of toFixed should less then 20.\n    : value.toFixed(Math.min(labelPrecision, 20));\n    return zrUtil.isFunction(labelFormatter) ? labelFormatter(value, valueStr) : zrUtil.isString(labelFormatter) ? labelFormatter.replace('{value}', valueStr) : valueStr;\n  },\n\n  /**\n   * @private\n   * @param {boolean} showOrHide true: show, false: hide\n   */\n  _showDataInfo: function _showDataInfo(showOrHide) {\n    // Always show when drgging.\n    showOrHide = this._dragging || showOrHide;\n    var handleLabels = this._displayables.handleLabels;\n    handleLabels[0].attr('invisible', !showOrHide);\n    handleLabels[1].attr('invisible', !showOrHide);\n  },\n  _onDragMove: function _onDragMove(handleIndex, dx, dy, event) {\n    this._dragging = true; // For mobile device, prevent screen slider on the button.\n\n    eventTool.stop(event.event); // Transform dx, dy to bar coordination.\n\n    var barTransform = this._displayables.barGroup.getLocalTransform();\n\n    var vertex = graphic.applyTransform([dx, dy], barTransform, true);\n\n    var changed = this._updateInterval(handleIndex, vertex[0]);\n\n    var realtime = this.dataZoomModel.get('realtime');\n\n    this._updateView(!realtime); // Avoid dispatch dataZoom repeatly but range not changed,\n    // which cause bad visual effect when progressive enabled.\n\n\n    changed && realtime && this._dispatchZoomAction();\n  },\n  _onDragEnd: function _onDragEnd() {\n    this._dragging = false;\n\n    this._showDataInfo(false); // While in realtime mode and stream mode, dispatch action when\n    // drag end will cause the whole view rerender, which is unnecessary.\n\n\n    var realtime = this.dataZoomModel.get('realtime');\n    !realtime && this._dispatchZoomAction();\n  },\n  _onClickPanelClick: function _onClickPanelClick(e) {\n    var size = this._size;\n\n    var localPoint = this._displayables.barGroup.transformCoordToLocal(e.offsetX, e.offsetY);\n\n    if (localPoint[0] < 0 || localPoint[0] > size[0] || localPoint[1] < 0 || localPoint[1] > size[1]) {\n      return;\n    }\n\n    var handleEnds = this._handleEnds;\n    var center = (handleEnds[0] + handleEnds[1]) / 2;\n\n    var changed = this._updateInterval('all', localPoint[0] - center);\n\n    this._updateView();\n\n    changed && this._dispatchZoomAction();\n  },\n\n  /**\n   * This action will be throttled.\n   * @private\n   */\n  _dispatchZoomAction: function _dispatchZoomAction() {\n    var range = this._range;\n    this.api.dispatchAction({\n      type: 'dataZoom',\n      from: this.uid,\n      dataZoomId: this.dataZoomModel.id,\n      start: range[0],\n      end: range[1]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _findCoordRect: function _findCoordRect() {\n    // Find the grid coresponding to the first axis referred by dataZoom.\n    var rect;\n    each(this.getTargetCoordInfo(), function (coordInfoList) {\n      if (!rect && coordInfoList.length) {\n        var coordSys = coordInfoList[0].model.coordinateSystem;\n        rect = coordSys.getRect && coordSys.getRect();\n      }\n    });\n\n    if (!rect) {\n      var width = this.api.getWidth();\n      var height = this.api.getHeight();\n      rect = {\n        x: width * 0.2,\n        y: height * 0.2,\n        width: width * 0.6,\n        height: height * 0.6\n      };\n    }\n\n    return rect;\n  }\n});\n\nfunction getOtherDim(thisDim) {\n  // FIXME\n  // 这个逻辑和getOtherAxis里一致，但是写在这里是否不好\n  var map = {\n    x: 'y',\n    y: 'x',\n    radius: 'angle',\n    angle: 'radius'\n  };\n  return map[thisDim];\n}\n\nfunction getCursor(orient) {\n  return orient === 'vertical' ? 'ns-resize' : 'ew-resize';\n}\n\nvar _default = SliderZoomView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar DataZoomModel = require(\"./DataZoomModel\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = DataZoomModel.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    disabled: false,\n    // Whether disable this inside zoom.\n    zoomLock: false,\n    // Whether disable zoom but only pan.\n    zoomOnMouseWheel: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseMove: true,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    moveOnMouseWheel: false,\n    // Can be: true / false / 'shift' / 'ctrl' / 'alt'.\n    preventDefaultMouseMove: true\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar DataZoomView = require(\"./DataZoomView\");\n\nvar sliderMove = require(\"../helper/sliderMove\");\n\nvar roams = require(\"./roams\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar bind = zrUtil.bind;\nvar InsideZoomView = DataZoomView.extend({\n  type: 'dataZoom.inside',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    /**\n     * 'throttle' is used in this.dispatchAction, so we save range\n     * to avoid missing some 'pan' info.\n     * @private\n     * @type {Array.<number>}\n     */\n    this._range;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    InsideZoomView.superApply(this, 'render', arguments); // Hence the `throttle` util ensures to preserve command order,\n    // here simply updating range all the time will not cause missing\n    // any of the the roam change.\n\n    this._range = dataZoomModel.getPercentRange(); // Reset controllers.\n\n    zrUtil.each(this.getTargetCoordInfo(), function (coordInfoList, coordSysName) {\n      var allCoordIds = zrUtil.map(coordInfoList, function (coordInfo) {\n        return roams.generateCoordId(coordInfo.model);\n      });\n      zrUtil.each(coordInfoList, function (coordInfo) {\n        var coordModel = coordInfo.model;\n        var getRange = {};\n        zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n          getRange[eventName] = bind(roamHandlers[eventName], this, coordInfo, coordSysName);\n        }, this);\n        roams.register(api, {\n          coordId: roams.generateCoordId(coordModel),\n          allCoordIds: allCoordIds,\n          containsPoint: function containsPoint(e, x, y) {\n            return coordModel.coordinateSystem.containPoint([x, y]);\n          },\n          dataZoomId: dataZoomModel.id,\n          dataZoomModel: dataZoomModel,\n          getRange: getRange\n        });\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    roams.unregister(this.api, this.dataZoomModel.id);\n    InsideZoomView.superApply(this, 'dispose', arguments);\n    this._range = null;\n  }\n});\nvar roamHandlers = {\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  zoom: function zoom(coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var directionInfo = getDirectionInfo[coordSysName](null, [e.originX, e.originY], axisModel, controller, coordInfo);\n    var percentPoint = (directionInfo.signal > 0 ? directionInfo.pixelStart + directionInfo.pixelLength - directionInfo.pixel : directionInfo.pixel - directionInfo.pixelStart) / directionInfo.pixelLength * (range[1] - range[0]) + range[0];\n    var scale = Math.max(1 / e.scale, 0);\n    range[0] = (range[0] - percentPoint) * scale + percentPoint;\n    range[1] = (range[1] - percentPoint) * scale + percentPoint; // Restrict range.\n\n    var minMaxSpan = this.dataZoomModel.findRepresentativeAxisProxy().getMinMaxSpan();\n    sliderMove(0, range, [0, 100], 0, minMaxSpan.minSpan, minMaxSpan.maxSpan);\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  },\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  pan: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([e.oldX, e.oldY], [e.newX, e.newY], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * directionInfo.pixel / directionInfo.pixelLength;\n  }),\n\n  /**\n   * @this {module:echarts/component/dataZoom/InsideZoomView}\n   */\n  scrollMove: makeMover(function (range, axisModel, coordInfo, coordSysName, controller, e) {\n    var directionInfo = getDirectionInfo[coordSysName]([0, 0], [e.scrollDelta, e.scrollDelta], axisModel, controller, coordInfo);\n    return directionInfo.signal * (range[1] - range[0]) * e.scrollDelta;\n  })\n};\n\nfunction makeMover(getPercentDelta) {\n  return function (coordInfo, coordSysName, controller, e) {\n    var lastRange = this._range;\n    var range = lastRange.slice(); // Calculate transform by the first axis.\n\n    var axisModel = coordInfo.axisModels[0];\n\n    if (!axisModel) {\n      return;\n    }\n\n    var percentDelta = getPercentDelta(range, axisModel, coordInfo, coordSysName, controller, e);\n    sliderMove(percentDelta, range, [0, 100], 'all');\n    this._range = range;\n\n    if (lastRange[0] !== range[0] || lastRange[1] !== range[1]) {\n      return range;\n    }\n  };\n}\n\nvar getDirectionInfo = {\n  grid: function grid(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.dim === 'x') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // axis.dim === 'y'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  polar: function polar(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var ret = {};\n    var polar = coordInfo.model.coordinateSystem;\n    var radiusExtent = polar.getRadiusAxis().getExtent();\n    var angleExtent = polar.getAngleAxis().getExtent();\n    oldPoint = oldPoint ? polar.pointToCoord(oldPoint) : [0, 0];\n    newPoint = polar.pointToCoord(newPoint);\n\n    if (axisModel.mainType === 'radiusAxis') {\n      ret.pixel = newPoint[0] - oldPoint[0]; // ret.pixelLength = Math.abs(radiusExtent[1] - radiusExtent[0]);\n      // ret.pixelStart = Math.min(radiusExtent[0], radiusExtent[1]);\n\n      ret.pixelLength = radiusExtent[1] - radiusExtent[0];\n      ret.pixelStart = radiusExtent[0];\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'angleAxis'\n      ret.pixel = newPoint[1] - oldPoint[1]; // ret.pixelLength = Math.abs(angleExtent[1] - angleExtent[0]);\n      // ret.pixelStart = Math.min(angleExtent[0], angleExtent[1]);\n\n      ret.pixelLength = angleExtent[1] - angleExtent[0];\n      ret.pixelStart = angleExtent[0];\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  },\n  singleAxis: function singleAxis(oldPoint, newPoint, axisModel, controller, coordInfo) {\n    var axis = axisModel.axis;\n    var rect = coordInfo.model.coordinateSystem.getRect();\n    var ret = {};\n    oldPoint = oldPoint || [0, 0];\n\n    if (axis.orient === 'horizontal') {\n      ret.pixel = newPoint[0] - oldPoint[0];\n      ret.pixelLength = rect.width;\n      ret.pixelStart = rect.x;\n      ret.signal = axis.inverse ? 1 : -1;\n    } else {\n      // 'vertical'\n      ret.pixel = newPoint[1] - oldPoint[1];\n      ret.pixelLength = rect.height;\n      ret.pixelStart = rect.y;\n      ret.signal = axis.inverse ? -1 : 1;\n    }\n\n    return ret;\n  }\n};\nvar _default = InsideZoomView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"../../component/helper/RoamController\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Only create one roam controller for each coordinate system.\n// one roam controller might be refered by two inside data zoom\n// components (for example, one for x and one for y). When user\n// pan or zoom, only dispatch one action for those data zoom\n// components.\n\n\nvar ATTR = '\\0_ec_dataZoom_roams';\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {Object} dataZoomInfo\n * @param {string} dataZoomInfo.coordId\n * @param {Function} dataZoomInfo.containsPoint\n * @param {Array.<string>} dataZoomInfo.allCoordIds\n * @param {string} dataZoomInfo.dataZoomId\n * @param {Object} dataZoomInfo.getRange\n * @param {Function} dataZoomInfo.getRange.pan\n * @param {Function} dataZoomInfo.getRange.zoom\n * @param {Function} dataZoomInfo.getRange.scrollMove\n * @param {boolean} dataZoomInfo.dataZoomModel\n */\n\nfunction register(api, dataZoomInfo) {\n  var store = giveStore(api);\n  var theDataZoomId = dataZoomInfo.dataZoomId;\n  var theCoordId = dataZoomInfo.coordId; // Do clean when a dataZoom changes its target coordnate system.\n  // Avoid memory leak, dispose all not-used-registered.\n\n  zrUtil.each(store, function (record, coordId) {\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[theDataZoomId] && zrUtil.indexOf(dataZoomInfo.allCoordIds, theCoordId) < 0) {\n      delete dataZoomInfos[theDataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n  var record = store[theCoordId]; // Create if needed.\n\n  if (!record) {\n    record = store[theCoordId] = {\n      coordId: theCoordId,\n      dataZoomInfos: {},\n      count: 0\n    };\n    record.controller = createController(api, record);\n    record.dispatchAction = zrUtil.curry(dispatchAction, api);\n  } // Update reference of dataZoom.\n\n\n  !record.dataZoomInfos[theDataZoomId] && record.count++;\n  record.dataZoomInfos[theDataZoomId] = dataZoomInfo;\n  var controllerParams = mergeControllerParams(record.dataZoomInfos);\n  record.controller.enable(controllerParams.controlType, controllerParams.opt); // Consider resize, area should be always updated.\n\n  record.controller.setPointerChecker(dataZoomInfo.containsPoint); // Update throttle.\n\n  throttleUtil.createOrUpdate(record, 'dispatchAction', dataZoomInfo.dataZoomModel.get('throttle', true), 'fixRate');\n}\n/**\n * @public\n * @param {module:echarts/ExtensionAPI} api\n * @param {string} dataZoomId\n */\n\n\nfunction unregister(api, dataZoomId) {\n  var store = giveStore(api);\n  zrUtil.each(store, function (record) {\n    record.controller.dispose();\n    var dataZoomInfos = record.dataZoomInfos;\n\n    if (dataZoomInfos[dataZoomId]) {\n      delete dataZoomInfos[dataZoomId];\n      record.count--;\n    }\n  });\n  cleanStore(store);\n}\n/**\n * @public\n */\n\n\nfunction generateCoordId(coordModel) {\n  return coordModel.type + '\\0_' + coordModel.id;\n}\n/**\n * Key: coordId, value: {dataZoomInfos: [], count, controller}\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(api) {\n  // Mount store on zrender instance, so that we do not\n  // need to worry about dispose.\n  var zr = api.getZr();\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n\nfunction createController(api, newRecord) {\n  var controller = new RoamController(api.getZr());\n  zrUtil.each(['pan', 'zoom', 'scrollMove'], function (eventName) {\n    controller.on(eventName, function (event) {\n      var batch = [];\n      zrUtil.each(newRecord.dataZoomInfos, function (info) {\n        // Check whether the behaviors (zoomOnMouseWheel, moveOnMouseMove,\n        // moveOnMouseWheel, ...) enabled.\n        if (!event.isAvailableBehavior(info.dataZoomModel.option)) {\n          return;\n        }\n\n        var method = (info.getRange || {})[eventName];\n        var range = method && method(newRecord.controller, event);\n        !info.dataZoomModel.get('disabled', true) && range && batch.push({\n          dataZoomId: info.dataZoomId,\n          start: range[0],\n          end: range[1]\n        });\n      });\n      batch.length && newRecord.dispatchAction(batch);\n    });\n  });\n  return controller;\n}\n\nfunction cleanStore(store) {\n  zrUtil.each(store, function (record, coordId) {\n    if (!record.count) {\n      record.controller.dispose();\n      delete store[coordId];\n    }\n  });\n}\n/**\n * This action will be throttled.\n */\n\n\nfunction dispatchAction(api, batch) {\n  api.dispatchAction({\n    type: 'dataZoom',\n    batch: batch\n  });\n}\n/**\n * Merge roamController settings when multiple dataZooms share one roamController.\n */\n\n\nfunction mergeControllerParams(dataZoomInfos) {\n  var controlType; // DO NOT use reserved word (true, false, undefined) as key literally. Even if encapsulated\n  // as string, it is probably revert to reserved word by compress tool. See #7411.\n\n  var prefix = 'type_';\n  var typePriority = {\n    'type_true': 2,\n    'type_move': 1,\n    'type_false': 0,\n    'type_undefined': -1\n  };\n  var preventDefaultMouseMove = true;\n  zrUtil.each(dataZoomInfos, function (dataZoomInfo) {\n    var dataZoomModel = dataZoomInfo.dataZoomModel;\n    var oneType = dataZoomModel.get('disabled', true) ? false : dataZoomModel.get('zoomLock', true) ? 'move' : true;\n\n    if (typePriority[prefix + oneType] > typePriority[prefix + controlType]) {\n      controlType = oneType;\n    } // Prevent default move event by default. If one false, do not prevent. Otherwise\n    // users may be confused why it does not work when multiple insideZooms exist.\n\n\n    preventDefaultMouseMove &= dataZoomModel.get('preventDefaultMouseMove', true);\n  });\n  return {\n    controlType: controlType,\n    opt: {\n      // RoamController will enable all of these functionalities,\n      // and the final behavior is determined by its event listener\n      // provided by each inside zoom.\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      moveOnMouseWheel: true,\n      preventDefaultMouseMove: !!preventDefaultMouseMove\n    }\n  };\n}\n\nexports.register = register;\nexports.unregister = unregister;\nexports.generateCoordId = generateCoordId;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _util = require(\"zrender/lib/core/util\");\n\nvar retrieve = _util.retrieve;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar each = _util.each;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _number = require(\"../../util/number\");\n\nvar isRadianAroundZero = _number.isRadianAroundZero;\nvar remRadian = _number.remRadian;\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar matrixUtil = require(\"zrender/lib/core/matrix\");\n\nvar _vector = require(\"zrender/lib/core/vector\");\n\nvar v2ApplyTransform = _vector.applyTransform;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar PI = Math.PI;\n/**\n * A final axis is translated and rotated from a \"standard axis\".\n * So opt.position and opt.rotation is required.\n *\n * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n * for example: (0, 0) ------------> (0, 50)\n *\n * nameDirection or tickDirection or labelDirection is 1 means tick\n * or label is below the standard axis, whereas is -1 means above\n * the standard axis. labelOffset means offset between label and axis,\n * which is useful when 'onZero', where axisLabel is in the grid and\n * label in outside grid.\n *\n * Tips: like always,\n * positive rotation represents anticlockwise, and negative rotation\n * represents clockwise.\n * The direction of position coordinate is the same as the direction\n * of screen coordinate.\n *\n * Do not need to consider axis 'inverse', which is auto processed by\n * axis extent.\n *\n * @param {module:zrender/container/Group} group\n * @param {Object} axisModel\n * @param {Object} opt Standard axis parameters.\n * @param {Array.<number>} opt.position [x, y]\n * @param {number} opt.rotation by radian\n * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle' or 'center'.\n * @param {number} [opt.tickDirection=1] 1 or -1\n * @param {number} [opt.labelDirection=1] 1 or -1\n * @param {number} [opt.labelOffset=0] Usefull when onZero.\n * @param {string} [opt.axisLabelShow] default get from axisModel.\n * @param {string} [opt.axisName] default get from axisModel.\n * @param {number} [opt.axisNameAvailableWidth]\n * @param {number} [opt.labelRotate] by degree, default get from axisModel.\n * @param {number} [opt.strokeContainThreshold] Default label interval when label\n * @param {number} [opt.nameTruncateMaxWidth]\n */\n\nvar AxisBuilder = function AxisBuilder(axisModel, opt) {\n  /**\n   * @readOnly\n   */\n  this.opt = opt;\n  /**\n   * @readOnly\n   */\n\n  this.axisModel = axisModel; // Default value\n\n  defaults(opt, {\n    labelOffset: 0,\n    nameDirection: 1,\n    tickDirection: 1,\n    labelDirection: 1,\n    silent: true\n  });\n  /**\n   * @readOnly\n   */\n\n  this.group = new graphic.Group(); // FIXME Not use a seperate text group?\n\n  var dumbGroup = new graphic.Group({\n    position: opt.position.slice(),\n    rotation: opt.rotation\n  }); // this.group.add(dumbGroup);\n  // this._dumbGroup = dumbGroup;\n\n  dumbGroup.updateTransform();\n  this._transform = dumbGroup.transform;\n  this._dumbGroup = dumbGroup;\n};\n\nAxisBuilder.prototype = {\n  constructor: AxisBuilder,\n  hasBuilder: function hasBuilder(name) {\n    return !!builders[name];\n  },\n  add: function add(name) {\n    builders[name].call(this);\n  },\n  getGroup: function getGroup() {\n    return this.group;\n  }\n};\nvar builders = {\n  /**\n   * @private\n   */\n  axisLine: function axisLine() {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n\n    if (!axisModel.get('axisLine.show')) {\n      return;\n    }\n\n    var extent = this.axisModel.axis.getExtent();\n    var matrix = this._transform;\n    var pt1 = [extent[0], 0];\n    var pt2 = [extent[1], 0];\n\n    if (matrix) {\n      v2ApplyTransform(pt1, pt1, matrix);\n      v2ApplyTransform(pt2, pt2, matrix);\n    }\n\n    var lineStyle = extend({\n      lineCap: 'round'\n    }, axisModel.getModel('axisLine.lineStyle').getLineStyle());\n    this.group.add(new graphic.Line({\n      // Id for animation\n      anid: 'line',\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: lineStyle,\n      strokeContainThreshold: opt.strokeContainThreshold || 5,\n      silent: true,\n      z2: 1\n    }));\n    var arrows = axisModel.get('axisLine.symbol');\n    var arrowSize = axisModel.get('axisLine.symbolSize');\n    var arrowOffset = axisModel.get('axisLine.symbolOffset') || 0;\n\n    if (typeof arrowOffset === 'number') {\n      arrowOffset = [arrowOffset, arrowOffset];\n    }\n\n    if (arrows != null) {\n      if (typeof arrows === 'string') {\n        // Use the same arrow for start and end point\n        arrows = [arrows, arrows];\n      }\n\n      if (typeof arrowSize === 'string' || typeof arrowSize === 'number') {\n        // Use the same size for width and height\n        arrowSize = [arrowSize, arrowSize];\n      }\n\n      var symbolWidth = arrowSize[0];\n      var symbolHeight = arrowSize[1];\n      each([{\n        rotate: opt.rotation + Math.PI / 2,\n        offset: arrowOffset[0],\n        r: 0\n      }, {\n        rotate: opt.rotation - Math.PI / 2,\n        offset: arrowOffset[1],\n        r: Math.sqrt((pt1[0] - pt2[0]) * (pt1[0] - pt2[0]) + (pt1[1] - pt2[1]) * (pt1[1] - pt2[1]))\n      }], function (point, index) {\n        if (arrows[index] !== 'none' && arrows[index] != null) {\n          var symbol = createSymbol(arrows[index], -symbolWidth / 2, -symbolHeight / 2, symbolWidth, symbolHeight, lineStyle.stroke, true); // Calculate arrow position with offset\n\n          var r = point.r + point.offset;\n          var pos = [pt1[0] + r * Math.cos(opt.rotation), pt1[1] - r * Math.sin(opt.rotation)];\n          symbol.attr({\n            rotation: point.rotate,\n            position: pos,\n            silent: true,\n            z2: 11\n          });\n          this.group.add(symbol);\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  axisTickLabel: function axisTickLabel() {\n    var axisModel = this.axisModel;\n    var opt = this.opt;\n    var ticksEls = buildAxisMajorTicks(this, axisModel, opt);\n    var labelEls = buildAxisLabel(this, axisModel, opt);\n    fixMinMaxLabelShow(axisModel, labelEls, ticksEls);\n    buildAxisMinorTicks(this, axisModel, opt);\n  },\n\n  /**\n   * @private\n   */\n  axisName: function axisName() {\n    var opt = this.opt;\n    var axisModel = this.axisModel;\n    var name = retrieve(opt.axisName, axisModel.get('name'));\n\n    if (!name) {\n      return;\n    }\n\n    var nameLocation = axisModel.get('nameLocation');\n    var nameDirection = opt.nameDirection;\n    var textStyleModel = axisModel.getModel('nameTextStyle');\n    var gap = axisModel.get('nameGap') || 0;\n    var extent = this.axisModel.axis.getExtent();\n    var gapSignal = extent[0] > extent[1] ? -1 : 1;\n    var pos = [nameLocation === 'start' ? extent[0] - gapSignal * gap : nameLocation === 'end' ? extent[1] + gapSignal * gap : (extent[0] + extent[1]) / 2, // 'middle'\n    // Reuse labelOffset.\n    isNameLocationCenter(nameLocation) ? opt.labelOffset + nameDirection * gap : 0];\n    var labelLayout;\n    var nameRotation = axisModel.get('nameRotate');\n\n    if (nameRotation != null) {\n      nameRotation = nameRotation * PI / 180; // To radian.\n    }\n\n    var axisNameAvailableWidth;\n\n    if (isNameLocationCenter(nameLocation)) {\n      labelLayout = innerTextLayout(opt.rotation, nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n      nameDirection);\n    } else {\n      labelLayout = endTextLayout(opt, nameLocation, nameRotation || 0, extent);\n      axisNameAvailableWidth = opt.axisNameAvailableWidth;\n\n      if (axisNameAvailableWidth != null) {\n        axisNameAvailableWidth = Math.abs(axisNameAvailableWidth / Math.sin(labelLayout.rotation));\n        !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n      }\n    }\n\n    var textFont = textStyleModel.getFont();\n    var truncateOpt = axisModel.get('nameTruncate', true) || {};\n    var ellipsis = truncateOpt.ellipsis;\n    var maxWidth = retrieve(opt.nameTruncateMaxWidth, truncateOpt.maxWidth, axisNameAvailableWidth); // FIXME\n    // truncate rich text? (consider performance)\n\n    var truncatedText = ellipsis != null && maxWidth != null ? formatUtil.truncateText(name, maxWidth, textFont, ellipsis, {\n      minChar: 2,\n      placeholder: truncateOpt.placeholder\n    }) : name;\n    var tooltipOpt = axisModel.get('tooltip', true);\n    var mainType = axisModel.mainType;\n    var formatterParams = {\n      componentType: mainType,\n      name: name,\n      $vars: ['name']\n    };\n    formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'name',\n      __fullText: name,\n      __truncatedText: truncatedText,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: isLabelSilent(axisModel),\n      z2: 1,\n      tooltip: tooltipOpt && tooltipOpt.show ? extend({\n        content: name,\n        formatter: function formatter() {\n          return name;\n        },\n        formatterParams: formatterParams\n      }, tooltipOpt) : null\n    });\n    graphic.setTextStyle(textEl.style, textStyleModel, {\n      text: truncatedText,\n      textFont: textFont,\n      textFill: textStyleModel.getTextColor() || axisModel.get('axisLine.lineStyle.color'),\n      textAlign: textStyleModel.get('align') || labelLayout.textAlign,\n      textVerticalAlign: textStyleModel.get('verticalAlign') || labelLayout.textVerticalAlign\n    });\n\n    if (axisModel.get('triggerEvent')) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisName';\n      textEl.eventData.name = name;\n    } // FIXME\n\n\n    this._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    this.group.add(textEl);\n    textEl.decomposeTransform();\n  }\n};\n\nvar makeAxisEventDataBase = AxisBuilder.makeAxisEventDataBase = function (axisModel) {\n  var eventData = {\n    componentType: axisModel.mainType,\n    componentIndex: axisModel.componentIndex\n  };\n  eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n  return eventData;\n};\n/**\n * @public\n * @static\n * @param {Object} opt\n * @param {number} axisRotation in radian\n * @param {number} textRotation in radian\n * @param {number} direction\n * @return {Object} {\n *  rotation, // according to axis\n *  textAlign,\n *  textVerticalAlign\n * }\n */\n\n\nvar innerTextLayout = AxisBuilder.innerTextLayout = function (axisRotation, textRotation, direction) {\n  var rotationDiff = remRadian(textRotation - axisRotation);\n  var textAlign;\n  var textVerticalAlign;\n\n  if (isRadianAroundZero(rotationDiff)) {\n    // Label is parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI)) {\n    // Label is inverse parallel with axis line.\n    textVerticalAlign = direction > 0 ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff > 0 && rotationDiff < PI) {\n      textAlign = direction > 0 ? 'right' : 'left';\n    } else {\n      textAlign = direction > 0 ? 'left' : 'right';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n};\n\nfunction endTextLayout(opt, textPosition, textRotate, extent) {\n  var rotationDiff = remRadian(textRotate - opt.rotation);\n  var textAlign;\n  var textVerticalAlign;\n  var inverse = extent[0] > extent[1];\n  var onLeft = textPosition === 'start' && !inverse || textPosition !== 'start' && inverse;\n\n  if (isRadianAroundZero(rotationDiff - PI / 2)) {\n    textVerticalAlign = onLeft ? 'bottom' : 'top';\n    textAlign = 'center';\n  } else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n    textVerticalAlign = onLeft ? 'top' : 'bottom';\n    textAlign = 'center';\n  } else {\n    textVerticalAlign = 'middle';\n\n    if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n      textAlign = onLeft ? 'left' : 'right';\n    } else {\n      textAlign = onLeft ? 'right' : 'left';\n    }\n  }\n\n  return {\n    rotation: rotationDiff,\n    textAlign: textAlign,\n    textVerticalAlign: textVerticalAlign\n  };\n}\n\nvar isLabelSilent = AxisBuilder.isLabelSilent = function (axisModel) {\n  var tooltipOpt = axisModel.get('tooltip');\n  return axisModel.get('silent') // Consider mouse cursor, add these restrictions.\n  || !(axisModel.get('triggerEvent') || tooltipOpt && tooltipOpt.show);\n};\n\nfunction fixMinMaxLabelShow(axisModel, labelEls, tickEls) {\n  if (shouldShowAllLabels(axisModel.axis)) {\n    return;\n  } // If min or max are user set, we need to check\n  // If the tick on min(max) are overlap on their neighbour tick\n  // If they are overlapped, we need to hide the min(max) tick label\n\n\n  var showMinLabel = axisModel.get('axisLabel.showMinLabel');\n  var showMaxLabel = axisModel.get('axisLabel.showMaxLabel'); // FIXME\n  // Have not consider onBand yet, where tick els is more than label els.\n\n  labelEls = labelEls || [];\n  tickEls = tickEls || [];\n  var firstLabel = labelEls[0];\n  var nextLabel = labelEls[1];\n  var lastLabel = labelEls[labelEls.length - 1];\n  var prevLabel = labelEls[labelEls.length - 2];\n  var firstTick = tickEls[0];\n  var nextTick = tickEls[1];\n  var lastTick = tickEls[tickEls.length - 1];\n  var prevTick = tickEls[tickEls.length - 2];\n\n  if (showMinLabel === false) {\n    ignoreEl(firstLabel);\n    ignoreEl(firstTick);\n  } else if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n    if (showMinLabel) {\n      ignoreEl(nextLabel);\n      ignoreEl(nextTick);\n    } else {\n      ignoreEl(firstLabel);\n      ignoreEl(firstTick);\n    }\n  }\n\n  if (showMaxLabel === false) {\n    ignoreEl(lastLabel);\n    ignoreEl(lastTick);\n  } else if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n    if (showMaxLabel) {\n      ignoreEl(prevLabel);\n      ignoreEl(prevTick);\n    } else {\n      ignoreEl(lastLabel);\n      ignoreEl(lastTick);\n    }\n  }\n}\n\nfunction ignoreEl(el) {\n  el && (el.ignore = true);\n}\n\nfunction isTwoLabelOverlapped(current, next, labelLayout) {\n  // current and next has the same rotation.\n  var firstRect = current && current.getBoundingRect().clone();\n  var nextRect = next && next.getBoundingRect().clone();\n\n  if (!firstRect || !nextRect) {\n    return;\n  } // When checking intersect of two rotated labels, we use mRotationBack\n  // to avoid that boundingRect is enlarge when using `boundingRect.applyTransform`.\n\n\n  var mRotationBack = matrixUtil.identity([]);\n  matrixUtil.rotate(mRotationBack, mRotationBack, -current.rotation);\n  firstRect.applyTransform(matrixUtil.mul([], mRotationBack, current.getLocalTransform()));\n  nextRect.applyTransform(matrixUtil.mul([], mRotationBack, next.getLocalTransform()));\n  return firstRect.intersect(nextRect);\n}\n\nfunction isNameLocationCenter(nameLocation) {\n  return nameLocation === 'middle' || nameLocation === 'center';\n}\n\nfunction createTicks(ticksCoords, tickTransform, tickEndCoord, tickLineStyle, aniid) {\n  var tickEls = [];\n  var pt1 = [];\n  var pt2 = [];\n\n  for (var i = 0; i < ticksCoords.length; i++) {\n    var tickCoord = ticksCoords[i].coord;\n    pt1[0] = tickCoord;\n    pt1[1] = 0;\n    pt2[0] = tickCoord;\n    pt2[1] = tickEndCoord;\n\n    if (tickTransform) {\n      v2ApplyTransform(pt1, pt1, tickTransform);\n      v2ApplyTransform(pt2, pt2, tickTransform);\n    } // Tick line, Not use group transform to have better line draw\n\n\n    var tickEl = new graphic.Line({\n      // Id for animation\n      anid: aniid + '_' + ticksCoords[i].tickValue,\n      subPixelOptimize: true,\n      shape: {\n        x1: pt1[0],\n        y1: pt1[1],\n        x2: pt2[0],\n        y2: pt2[1]\n      },\n      style: tickLineStyle,\n      z2: 2,\n      silent: true\n    });\n    tickEls.push(tickEl);\n  }\n\n  return tickEls;\n}\n\nfunction buildAxisMajorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var tickModel = axisModel.getModel('axisTick');\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var lineStyleModel = tickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * tickModel.get('length');\n  var ticksCoords = axis.getTicksCoords();\n  var ticksEls = createTicks(ticksCoords, axisBuilder._transform, tickEndCoord, defaults(lineStyleModel.getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }), 'ticks');\n\n  for (var i = 0; i < ticksEls.length; i++) {\n    axisBuilder.group.add(ticksEls[i]);\n  }\n\n  return ticksEls;\n}\n\nfunction buildAxisMinorTicks(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var minorTickModel = axisModel.getModel('minorTick');\n\n  if (!minorTickModel.get('show') || axis.scale.isBlank()) {\n    return;\n  }\n\n  var minorTicksCoords = axis.getMinorTicksCoords();\n\n  if (!minorTicksCoords.length) {\n    return;\n  }\n\n  var lineStyleModel = minorTickModel.getModel('lineStyle');\n  var tickEndCoord = opt.tickDirection * minorTickModel.get('length');\n  var minorTickLineStyle = defaults(lineStyleModel.getLineStyle(), defaults(axisModel.getModel('axisTick').getLineStyle(), {\n    stroke: axisModel.get('axisLine.lineStyle.color')\n  }));\n\n  for (var i = 0; i < minorTicksCoords.length; i++) {\n    var minorTicksEls = createTicks(minorTicksCoords[i], axisBuilder._transform, tickEndCoord, minorTickLineStyle, 'minorticks_' + i);\n\n    for (var k = 0; k < minorTicksEls.length; k++) {\n      axisBuilder.group.add(minorTicksEls[k]);\n    }\n  }\n}\n\nfunction buildAxisLabel(axisBuilder, axisModel, opt) {\n  var axis = axisModel.axis;\n  var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n  if (!show || axis.scale.isBlank()) {\n    return;\n  }\n\n  var labelModel = axisModel.getModel('axisLabel');\n  var labelMargin = labelModel.get('margin');\n  var labels = axis.getViewLabels(); // Special label rotate.\n\n  var labelRotation = (retrieve(opt.labelRotate, labelModel.get('rotate')) || 0) * PI / 180;\n  var labelLayout = innerTextLayout(opt.rotation, labelRotation, opt.labelDirection);\n  var rawCategoryData = axisModel.getCategories && axisModel.getCategories(true);\n  var labelEls = [];\n  var silent = isLabelSilent(axisModel);\n  var triggerEvent = axisModel.get('triggerEvent');\n  each(labels, function (labelItem, index) {\n    var tickValue = labelItem.tickValue;\n    var formattedLabel = labelItem.formattedLabel;\n    var rawLabel = labelItem.rawLabel;\n    var itemLabelModel = labelModel;\n\n    if (rawCategoryData && rawCategoryData[tickValue] && rawCategoryData[tickValue].textStyle) {\n      itemLabelModel = new Model(rawCategoryData[tickValue].textStyle, labelModel, axisModel.ecModel);\n    }\n\n    var textColor = itemLabelModel.getTextColor() || axisModel.get('axisLine.lineStyle.color');\n    var tickCoord = axis.dataToCoord(tickValue);\n    var pos = [tickCoord, opt.labelOffset + opt.labelDirection * labelMargin];\n    var textEl = new graphic.Text({\n      // Id for animation\n      anid: 'label_' + tickValue,\n      position: pos,\n      rotation: labelLayout.rotation,\n      silent: silent,\n      z2: 10\n    });\n    graphic.setTextStyle(textEl.style, itemLabelModel, {\n      text: formattedLabel,\n      textAlign: itemLabelModel.getShallow('align', true) || labelLayout.textAlign,\n      textVerticalAlign: itemLabelModel.getShallow('verticalAlign', true) || itemLabelModel.getShallow('baseline', true) || labelLayout.textVerticalAlign,\n      textFill: typeof textColor === 'function' ? textColor( // (1) In category axis with data zoom, tick is not the original\n      // index of axis.data. So tick should not be exposed to user\n      // in category axis.\n      // (2) Compatible with previous version, which always use formatted label as\n      // input. But in interval scale the formatted label is like '223,445', which\n      // maked user repalce ','. So we modify it to return original val but remain\n      // it as 'string' to avoid error in replacing.\n      axis.type === 'category' ? rawLabel : axis.type === 'value' ? tickValue + '' : tickValue, index) : textColor\n    }); // Pack data for mouse event\n\n    if (triggerEvent) {\n      textEl.eventData = makeAxisEventDataBase(axisModel);\n      textEl.eventData.targetType = 'axisLabel';\n      textEl.eventData.value = rawLabel;\n    } // FIXME\n\n\n    axisBuilder._dumbGroup.add(textEl);\n\n    textEl.updateTransform();\n    labelEls.push(textEl);\n    axisBuilder.group.add(textEl);\n    textEl.decomposeTransform();\n  });\n  return labelEls;\n}\n\nvar _default = AxisBuilder;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar axisPointerModelHelper = require(\"../axisPointer/modelHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Base class of AxisView.\n */\n\n\nvar AxisView = echarts.extendComponentView({\n  type: 'axis',\n\n  /**\n   * @private\n   */\n  _axisPointer: null,\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  axisPointerClass: null,\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    // FIXME\n    // This process should proformed after coordinate systems updated\n    // (axis scale updated), and should be performed each time update.\n    // So put it here temporarily, although it is not appropriate to\n    // put a model-writing procedure in `view`.\n    this.axisPointerClass && axisPointerModelHelper.fixValue(axisModel);\n    AxisView.superApply(this, 'render', arguments);\n\n    _updateAxisPointer(this, axisModel, ecModel, api, payload, true);\n  },\n\n  /**\n   * Action handler.\n   * @public\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/model/Global} ecModel\n   * @param {module:echarts/ExtensionAPI} api\n   * @param {Object} payload\n   */\n  updateAxisPointer: function updateAxisPointer(axisModel, ecModel, api, payload, force) {\n    _updateAxisPointer(this, axisModel, ecModel, api, payload, false);\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove(ecModel, api) {\n    var axisPointer = this._axisPointer;\n    axisPointer && axisPointer.remove(api);\n    AxisView.superApply(this, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose(ecModel, api) {\n    disposeAxisPointer(this, api);\n    AxisView.superApply(this, 'dispose', arguments);\n  }\n});\n\nfunction _updateAxisPointer(axisView, axisModel, ecModel, api, payload, forceRender) {\n  var Clazz = AxisView.getAxisPointerClass(axisView.axisPointerClass);\n\n  if (!Clazz) {\n    return;\n  }\n\n  var axisPointerModel = axisPointerModelHelper.getAxisPointerModel(axisModel);\n  axisPointerModel ? (axisView._axisPointer || (axisView._axisPointer = new Clazz())).render(axisModel, axisPointerModel, api, forceRender) : disposeAxisPointer(axisView, api);\n}\n\nfunction disposeAxisPointer(axisView, ecModel, api) {\n  var axisPointer = axisView._axisPointer;\n  axisPointer && axisPointer.dispose(ecModel, api);\n  axisView._axisPointer = null;\n}\n\nvar axisPointerClazz = [];\n\nAxisView.registerAxisPointerClass = function (type, clazz) {\n  axisPointerClazz[type] = clazz;\n};\n\nAxisView.getAxisPointerClass = function (type) {\n  return type && axisPointerClazz[type];\n};\n\nvar _default = AxisView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Calculate slider move result.\n * Usage:\n * (1) If both handle0 and handle1 are needed to be moved, set minSpan the same as\n * maxSpan and the same as `Math.abs(handleEnd[1] - handleEnds[0])`.\n * (2) If handle0 is forbidden to cross handle1, set minSpan as `0`.\n *\n * @param {number} delta Move length.\n * @param {Array.<number>} handleEnds handleEnds[0] can be bigger then handleEnds[1].\n *              handleEnds will be modified in this method.\n * @param {Array.<number>} extent handleEnds is restricted by extent.\n *              extent[0] should less or equals than extent[1].\n * @param {number|string} handleIndex Can be 'all', means that both move the two handleEnds.\n * @param {number} [minSpan] The range of dataZoom can not be smaller than that.\n *              If not set, handle0 and cross handle1. If set as a non-negative\n *              number (including `0`), handles will push each other when reaching\n *              the minSpan.\n * @param {number} [maxSpan] The range of dataZoom can not be larger than that.\n * @return {Array.<number>} The input handleEnds.\n */\nfunction _default(delta, handleEnds, extent, handleIndex, minSpan, maxSpan) {\n  delta = delta || 0;\n  var extentSpan = extent[1] - extent[0]; // Notice maxSpan and minSpan can be null/undefined.\n\n  if (minSpan != null) {\n    minSpan = restrict(minSpan, [0, extentSpan]);\n  }\n\n  if (maxSpan != null) {\n    maxSpan = Math.max(maxSpan, minSpan != null ? minSpan : 0);\n  }\n\n  if (handleIndex === 'all') {\n    var handleSpan = Math.abs(handleEnds[1] - handleEnds[0]);\n    handleSpan = restrict(handleSpan, [0, extentSpan]);\n    minSpan = maxSpan = restrict(handleSpan, [minSpan, maxSpan]);\n    handleIndex = 0;\n  }\n\n  handleEnds[0] = restrict(handleEnds[0], extent);\n  handleEnds[1] = restrict(handleEnds[1], extent);\n  var originalDistSign = getSpanSign(handleEnds, handleIndex);\n  handleEnds[handleIndex] += delta; // Restrict in extent.\n\n  var extentMinSpan = minSpan || 0;\n  var realExtent = extent.slice();\n  originalDistSign.sign < 0 ? realExtent[0] += extentMinSpan : realExtent[1] -= extentMinSpan;\n  handleEnds[handleIndex] = restrict(handleEnds[handleIndex], realExtent); // Expand span.\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (minSpan != null && (currDistSign.sign !== originalDistSign.sign || currDistSign.span < minSpan)) {\n    // If minSpan exists, 'cross' is forbidden.\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + originalDistSign.sign * minSpan;\n  } // Shrink span.\n\n\n  var currDistSign = getSpanSign(handleEnds, handleIndex);\n\n  if (maxSpan != null && currDistSign.span > maxSpan) {\n    handleEnds[1 - handleIndex] = handleEnds[handleIndex] + currDistSign.sign * maxSpan;\n  }\n\n  return handleEnds;\n}\n\nfunction getSpanSign(handleEnds, handleIndex) {\n  var dist = handleEnds[handleIndex] - handleEnds[1 - handleIndex]; // If `handleEnds[0] === handleEnds[1]`, always believe that handleEnd[0]\n  // is at left of handleEnds[1] for non-cross case.\n\n  return {\n    span: Math.abs(dist),\n    sign: dist > 0 ? -1 : dist < 0 ? 1 : handleIndex ? -1 : 1\n  };\n}\n\nfunction restrict(value, extend) {\n  return Math.min(extend[1] != null ? extend[1] : Infinity, Math.max(extend[0] != null ? extend[0] : -Infinity, value));\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar helper = require(\"./helper\");\n\nvar AxisProxy = require(\"./AxisProxy\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar eachAxisDim = helper.eachAxisDim;\nvar DataZoomModel = echarts.extendComponentModel({\n  type: 'dataZoom',\n  dependencies: ['xAxis', 'yAxis', 'zAxis', 'radiusAxis', 'angleAxis', 'singleAxis', 'series'],\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    zlevel: 0,\n    z: 4,\n    // Higher than normal component (z: 2).\n    orient: null,\n    // Default auto by axisIndex. Possible value: 'horizontal', 'vertical'.\n    xAxisIndex: null,\n    // Default the first horizontal category axis.\n    yAxisIndex: null,\n    // Default the first vertical category axis.\n    filterMode: 'filter',\n    // Possible values: 'filter' or 'empty' or 'weakFilter'.\n    // 'filter': data items which are out of window will be removed. This option is\n    //          applicable when filtering outliers. For each data item, it will be\n    //          filtered if one of the relevant dimensions is out of the window.\n    // 'weakFilter': data items which are out of window will be removed. This option\n    //          is applicable when filtering outliers. For each data item, it will be\n    //          filtered only if all  of the relevant dimensions are out of the same\n    //          side of the window.\n    // 'empty': data items which are out of window will be set to empty.\n    //          This option is applicable when user should not neglect\n    //          that there are some data items out of window.\n    // 'none': Do not filter.\n    // Taking line chart as an example, line will be broken in\n    // the filtered points when filterModel is set to 'empty', but\n    // be connected when set to 'filter'.\n    throttle: null,\n    // Dispatch action by the fixed rate, avoid frequency.\n    // default 100. Do not throttle when use null/undefined.\n    // If animation === true and animationDurationUpdate > 0,\n    // default value is 100, otherwise 20.\n    start: 0,\n    // Start percent. 0 ~ 100\n    end: 100,\n    // End percent. 0 ~ 100\n    startValue: null,\n    // Start value. If startValue specified, start is ignored.\n    endValue: null,\n    // End value. If endValue specified, end is ignored.\n    minSpan: null,\n    // 0 ~ 100\n    maxSpan: null,\n    // 0 ~ 100\n    minValueSpan: null,\n    // The range of dataZoom can not be smaller than that.\n    maxValueSpan: null,\n    // The range of dataZoom can not be larger than that.\n    rangeMode: null // Array, can be 'value' or 'percent'.\n\n  },\n\n  /**\n   * @override\n   */\n  init: function init(option, parentModel, ecModel) {\n    /**\n     * key like x_0, y_1\n     * @private\n     * @type {Object}\n     */\n    this._dataIntervalByAxis = {};\n    /**\n     * @private\n     */\n\n    this._dataInfo = {};\n    /**\n     * key like x_0, y_1\n     * @private\n     */\n\n    this._axisProxies = {};\n    /**\n     * @readOnly\n     */\n\n    this.textStyleModel;\n    /**\n     * @private\n     */\n\n    this._autoThrottle = true;\n    /**\n     * It is `[rangeModeForMin, rangeModeForMax]`.\n     * The optional values for `rangeMode`:\n     * + `'value'` mode: the axis extent will always be determined by\n     *     `dataZoom.startValue` and `dataZoom.endValue`, despite\n     *     how data like and how `axis.min` and `axis.max` are.\n     * + `'percent'` mode: `100` represents 100% of the `[dMin, dMax]`,\n     *     where `dMin` is `axis.min` if `axis.min` specified, otherwise `data.extent[0]`,\n     *     and `dMax` is `axis.max` if `axis.max` specified, otherwise `data.extent[1]`.\n     *     Axis extent will be determined by the result of the percent of `[dMin, dMax]`.\n     *\n     * For example, when users are using dynamic data (update data periodically via `setOption`),\n     * if in `'value`' mode, the window will be kept in a fixed value range despite how\n     * data are appended, while if in `'percent'` mode, whe window range will be changed alone with\n     * the appended data (suppose `axis.min` and `axis.max` are not specified).\n     *\n     * @private\n     */\n\n    this._rangePropMode = ['percent', 'percent'];\n    var inputRawOption = retrieveRawOption(option);\n    /**\n     * Suppose a \"main process\" start at the point that model prepared (that is,\n     * model initialized or merged or method called in `action`).\n     * We should keep the `main process` idempotent, that is, given a set of values\n     * on `option`, we get the same result.\n     *\n     * But sometimes, values on `option` will be updated for providing users\n     * a \"final calculated value\" (`dataZoomProcessor` will do that). Those value\n     * should not be the base/input of the `main process`.\n     *\n     * So in that case we should save and keep the input of the `main process`\n     * separately, called `settledOption`.\n     *\n     * For example, consider the case:\n     * (Step_1) brush zoom the grid by `toolbox.dataZoom`,\n     *     where the original input `option.startValue`, `option.endValue` are earsed by\n     *     calculated value.\n     * (Step)2) click the legend to hide and show a series,\n     *     where the new range is calculated by the earsed `startValue` and `endValue`,\n     *     which brings incorrect result.\n     *\n     * @readOnly\n     */\n\n    this.settledOption = inputRawOption;\n    this.mergeDefaultAndTheme(option, ecModel);\n    this.doInit(inputRawOption);\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function mergeOption(newOption) {\n    var inputRawOption = retrieveRawOption(newOption); //FIX #2591\n\n    zrUtil.merge(this.option, newOption, true);\n    zrUtil.merge(this.settledOption, inputRawOption, true);\n    this.doInit(inputRawOption);\n  },\n\n  /**\n   * @protected\n   */\n  doInit: function doInit(inputRawOption) {\n    var thisOption = this.option; // Disable realtime view update if canvas is not supported.\n\n    if (!env.canvasSupported) {\n      thisOption.realtime = false;\n    }\n\n    this._setDefaultThrottle(inputRawOption);\n\n    updateRangeUse(this, inputRawOption);\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n      // start/end has higher priority over startValue/endValue if they\n      // both set, but we should make chart.setOption({endValue: 1000})\n      // effective, rather than chart.setOption({endValue: 1000, end: null}).\n      if (this._rangePropMode[index] === 'value') {\n        thisOption[names[0]] = settledOption[names[0]] = null;\n      } // Otherwise do nothing and use the merge result.\n\n    }, this);\n    this.textStyleModel = this.getModel('textStyle');\n\n    this._resetTarget();\n\n    this._giveAxisProxies();\n  },\n\n  /**\n   * @private\n   */\n  _giveAxisProxies: function _giveAxisProxies() {\n    var axisProxies = this._axisProxies;\n    this.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel, ecModel) {\n      var axisModel = this.dependentModels[dimNames.axis][axisIndex]; // If exists, share axisProxy with other dataZoomModels.\n\n      var axisProxy = axisModel.__dzAxisProxy || ( // Use the first dataZoomModel as the main model of axisProxy.\n      axisModel.__dzAxisProxy = new AxisProxy(dimNames.name, axisIndex, this, ecModel)); // FIXME\n      // dispose __dzAxisProxy\n\n      axisProxies[dimNames.name + '_' + axisIndex] = axisProxy;\n    }, this);\n  },\n\n  /**\n   * @private\n   */\n  _resetTarget: function _resetTarget() {\n    var thisOption = this.option;\n\n    var autoMode = this._judgeAutoMode();\n\n    eachAxisDim(function (dimNames) {\n      var axisIndexName = dimNames.axisIndex;\n      thisOption[axisIndexName] = modelUtil.normalizeToArray(thisOption[axisIndexName]);\n    }, this);\n\n    if (autoMode === 'axisIndex') {\n      this._autoSetAxisIndex();\n    } else if (autoMode === 'orient') {\n      this._autoSetOrient();\n    }\n  },\n\n  /**\n   * @private\n   */\n  _judgeAutoMode: function _judgeAutoMode() {\n    // Auto set only works for setOption at the first time.\n    // The following is user's reponsibility. So using merged\n    // option is OK.\n    var thisOption = this.option;\n    var hasIndexSpecified = false;\n    eachAxisDim(function (dimNames) {\n      // When user set axisIndex as a empty array, we think that user specify axisIndex\n      // but do not want use auto mode. Because empty array may be encountered when\n      // some error occured.\n      if (thisOption[dimNames.axisIndex] != null) {\n        hasIndexSpecified = true;\n      }\n    }, this);\n    var orient = thisOption.orient;\n\n    if (orient == null && hasIndexSpecified) {\n      return 'orient';\n    } else if (!hasIndexSpecified) {\n      if (orient == null) {\n        thisOption.orient = 'horizontal';\n      }\n\n      return 'axisIndex';\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetAxisIndex: function _autoSetAxisIndex() {\n    var autoAxisIndex = true;\n    var orient = this.get('orient', true);\n    var thisOption = this.option;\n    var dependentModels = this.dependentModels;\n\n    if (autoAxisIndex) {\n      // Find axis that parallel to dataZoom as default.\n      var dimName = orient === 'vertical' ? 'y' : 'x';\n\n      if (dependentModels[dimName + 'Axis'].length) {\n        thisOption[dimName + 'AxisIndex'] = [0];\n        autoAxisIndex = false;\n      } else {\n        each(dependentModels.singleAxis, function (singleAxisModel) {\n          if (autoAxisIndex && singleAxisModel.get('orient', true) === orient) {\n            thisOption.singleAxisIndex = [singleAxisModel.componentIndex];\n            autoAxisIndex = false;\n          }\n        });\n      }\n    }\n\n    if (autoAxisIndex) {\n      // Find the first category axis as default. (consider polar)\n      eachAxisDim(function (dimNames) {\n        if (!autoAxisIndex) {\n          return;\n        }\n\n        var axisIndices = [];\n        var axisModels = this.dependentModels[dimNames.axis];\n\n        if (axisModels.length && !axisIndices.length) {\n          for (var i = 0, len = axisModels.length; i < len; i++) {\n            if (axisModels[i].get('type') === 'category') {\n              axisIndices.push(i);\n            }\n          }\n        }\n\n        thisOption[dimNames.axisIndex] = axisIndices;\n\n        if (axisIndices.length) {\n          autoAxisIndex = false;\n        }\n      }, this);\n    }\n\n    if (autoAxisIndex) {\n      // FIXME\n      // 这里是兼容ec2的写法（没指定xAxisIndex和yAxisIndex时把scatter和双数值轴折柱纳入dataZoom控制），\n      // 但是实际是否需要Grid.js#getScaleByOption来判断（考虑time，log等axis type）？\n      // If both dataZoom.xAxisIndex and dataZoom.yAxisIndex is not specified,\n      // dataZoom component auto adopts series that reference to\n      // both xAxis and yAxis which type is 'value'.\n      this.ecModel.eachSeries(function (seriesModel) {\n        if (this._isSeriesHasAllAxesTypeOf(seriesModel, 'value')) {\n          eachAxisDim(function (dimNames) {\n            var axisIndices = thisOption[dimNames.axisIndex];\n            var axisIndex = seriesModel.get(dimNames.axisIndex);\n            var axisId = seriesModel.get(dimNames.axisId);\n            var axisModel = seriesModel.ecModel.queryComponents({\n              mainType: dimNames.axis,\n              index: axisIndex,\n              id: axisId\n            })[0];\n            axisIndex = axisModel.componentIndex;\n\n            if (zrUtil.indexOf(axisIndices, axisIndex) < 0) {\n              axisIndices.push(axisIndex);\n            }\n          });\n        }\n      }, this);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _autoSetOrient: function _autoSetOrient() {\n    var dim; // Find the first axis\n\n    this.eachTargetAxis(function (dimNames) {\n      !dim && (dim = dimNames.name);\n    }, this);\n    this.option.orient = dim === 'y' ? 'vertical' : 'horizontal';\n  },\n\n  /**\n   * @private\n   */\n  _isSeriesHasAllAxesTypeOf: function _isSeriesHasAllAxesTypeOf(seriesModel, axisType) {\n    // FIXME\n    // 需要series的xAxisIndex和yAxisIndex都首先自动设置上。\n    // 例如series.type === scatter时。\n    var is = true;\n    eachAxisDim(function (dimNames) {\n      var seriesAxisIndex = seriesModel.get(dimNames.axisIndex);\n      var axisModel = this.dependentModels[dimNames.axis][seriesAxisIndex];\n\n      if (!axisModel || axisModel.get('type') !== axisType) {\n        is = false;\n      }\n    }, this);\n    return is;\n  },\n\n  /**\n   * @private\n   */\n  _setDefaultThrottle: function _setDefaultThrottle(inputRawOption) {\n    // When first time user set throttle, auto throttle ends.\n    if (inputRawOption.hasOwnProperty('throttle')) {\n      this._autoThrottle = false;\n    }\n\n    if (this._autoThrottle) {\n      var globalOption = this.ecModel.option;\n      this.option.throttle = globalOption.animation && globalOption.animationDurationUpdate > 0 ? 100 : 20;\n    }\n  },\n\n  /**\n   * @public\n   */\n  getFirstTargetAxisModel: function getFirstTargetAxisModel() {\n    var firstAxisModel;\n    eachAxisDim(function (dimNames) {\n      if (firstAxisModel == null) {\n        var indices = this.get(dimNames.axisIndex);\n\n        if (indices.length) {\n          firstAxisModel = this.dependentModels[dimNames.axis][indices[0]];\n        }\n      }\n    }, this);\n    return firstAxisModel;\n  },\n\n  /**\n   * @public\n   * @param {Function} callback param: axisModel, dimNames, axisIndex, dataZoomModel, ecModel\n   */\n  eachTargetAxis: function eachTargetAxis(callback, context) {\n    var ecModel = this.ecModel;\n    eachAxisDim(function (dimNames) {\n      each(this.get(dimNames.axisIndex), function (axisIndex) {\n        callback.call(context, dimNames, axisIndex, this, ecModel);\n      }, this);\n    }, this);\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/component/dataZoom/AxisProxy} If not found, return null/undefined.\n   */\n  getAxisProxy: function getAxisProxy(dimName, axisIndex) {\n    return this._axisProxies[dimName + '_' + axisIndex];\n  },\n\n  /**\n   * @param {string} dimName\n   * @param {number} axisIndex\n   * @return {module:echarts/model/Model} If not found, return null/undefined.\n   */\n  getAxisModel: function getAxisModel(dimName, axisIndex) {\n    var axisProxy = this.getAxisProxy(dimName, axisIndex);\n    return axisProxy && axisProxy.getAxisModel();\n  },\n\n  /**\n   * If not specified, set to undefined.\n   *\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  setRawRange: function setRawRange(opt) {\n    var thisOption = this.option;\n    var settledOption = this.settledOption;\n    each([['start', 'startValue'], ['end', 'endValue']], function (names) {\n      // Consider the pair <start, startValue>:\n      // If one has value and the other one is `null/undefined`, we both set them\n      // to `settledOption`. This strategy enables the feature to clear the original\n      // value in `settledOption` to `null/undefined`.\n      // But if both of them are `null/undefined`, we do not set them to `settledOption`\n      // and keep `settledOption` with the original value. This strategy enables users to\n      // only set <end or endValue> but not set <start or startValue> when calling\n      // `dispatchAction`.\n      // The pair <end, endValue> is treated in the same way.\n      if (opt[names[0]] != null || opt[names[1]] != null) {\n        thisOption[names[0]] = settledOption[names[0]] = opt[names[0]];\n        thisOption[names[1]] = settledOption[names[1]] = opt[names[1]];\n      }\n    }, this);\n    updateRangeUse(this, opt);\n  },\n\n  /**\n   * @public\n   * @param {Object} opt\n   * @param {number} [opt.start]\n   * @param {number} [opt.end]\n   * @param {number} [opt.startValue]\n   * @param {number} [opt.endValue]\n   */\n  setCalculatedRange: function setCalculatedRange(opt) {\n    var option = this.option;\n    each(['start', 'startValue', 'end', 'endValue'], function (name) {\n      option[name] = opt[name];\n    });\n  },\n\n  /**\n   * @public\n   * @return {Array.<number>} [startPercent, endPercent]\n   */\n  getPercentRange: function getPercentRange() {\n    var axisProxy = this.findRepresentativeAxisProxy();\n\n    if (axisProxy) {\n      return axisProxy.getDataPercentWindow();\n    }\n  },\n\n  /**\n   * @public\n   * For example, chart.getModel().getComponent('dataZoom').getValueRange('y', 0);\n   *\n   * @param {string} [axisDimName]\n   * @param {number} [axisIndex]\n   * @return {Array.<number>} [startValue, endValue] value can only be '-' or finite number.\n   */\n  getValueRange: function getValueRange(axisDimName, axisIndex) {\n    if (axisDimName == null && axisIndex == null) {\n      var axisProxy = this.findRepresentativeAxisProxy();\n\n      if (axisProxy) {\n        return axisProxy.getDataValueWindow();\n      }\n    } else {\n      return this.getAxisProxy(axisDimName, axisIndex).getDataValueWindow();\n    }\n  },\n\n  /**\n   * @public\n   * @param {module:echarts/model/Model} [axisModel] If axisModel given, find axisProxy\n   *      corresponding to the axisModel\n   * @return {module:echarts/component/dataZoom/AxisProxy}\n   */\n  findRepresentativeAxisProxy: function findRepresentativeAxisProxy(axisModel) {\n    if (axisModel) {\n      return axisModel.__dzAxisProxy;\n    } // Find the first hosted axisProxy\n\n\n    var axisProxies = this._axisProxies;\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    } // If no hosted axis find not hosted axisProxy.\n    // Consider this case: dataZoomModel1 and dataZoomModel2 control the same axis,\n    // and the option.start or option.end settings are different. The percentRange\n    // should follow axisProxy.\n    // (We encounter this problem in toolbox data zoom.)\n\n\n    for (var key in axisProxies) {\n      if (axisProxies.hasOwnProperty(key) && !axisProxies[key].hostedBy(this)) {\n        return axisProxies[key];\n      }\n    }\n  },\n\n  /**\n   * @return {Array.<string>}\n   */\n  getRangePropMode: function getRangePropMode() {\n    return this._rangePropMode.slice();\n  }\n});\n/**\n * Retrieve the those raw params from option, which will be cached separately.\n * becasue they will be overwritten by normalized/calculated values in the main\n * process.\n */\n\nfunction retrieveRawOption(option) {\n  var ret = {};\n  each(['start', 'end', 'startValue', 'endValue', 'throttle'], function (name) {\n    option.hasOwnProperty(name) && (ret[name] = option[name]);\n  });\n  return ret;\n}\n\nfunction updateRangeUse(dataZoomModel, inputRawOption) {\n  var rangePropMode = dataZoomModel._rangePropMode;\n  var rangeModeInOption = dataZoomModel.get('rangeMode');\n  each([['start', 'startValue'], ['end', 'endValue']], function (names, index) {\n    var percentSpecified = inputRawOption[names[0]] != null;\n    var valueSpecified = inputRawOption[names[1]] != null;\n\n    if (percentSpecified && !valueSpecified) {\n      rangePropMode[index] = 'percent';\n    } else if (!percentSpecified && valueSpecified) {\n      rangePropMode[index] = 'value';\n    } else if (rangeModeInOption) {\n      rangePropMode[index] = rangeModeInOption[index];\n    } else if (percentSpecified) {\n      // percentSpecified && valueSpecified\n      rangePropMode[index] = 'percent';\n    } // else remain its original setting.\n\n  });\n}\n\nvar _default = DataZoomModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ComponentView = require(\"../../view/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = ComponentView.extend({\n  type: 'dataZoom',\n  render: function render(dataZoomModel, ecModel, api, payload) {\n    this.dataZoomModel = dataZoomModel;\n    this.ecModel = ecModel;\n    this.api = api;\n  },\n\n  /**\n   * Find the first target coordinate system.\n   *\n   * @protected\n   * @return {Object} {\n   *                   grid: [\n   *                       {model: coord0, axisModels: [axis1, axis3], coordIndex: 1},\n   *                       {model: coord1, axisModels: [axis0, axis2], coordIndex: 0},\n   *                       ...\n   *                   ],  // cartesians must not be null/undefined.\n   *                   polar: [\n   *                       {model: coord0, axisModels: [axis4], coordIndex: 0},\n   *                       ...\n   *                   ],  // polars must not be null/undefined.\n   *                   singleAxis: [\n   *                       {model: coord0, axisModels: [], coordIndex: 0}\n   *                   ]\n   */\n  getTargetCoordInfo: function getTargetCoordInfo() {\n    var dataZoomModel = this.dataZoomModel;\n    var ecModel = this.ecModel;\n    var coordSysLists = {};\n    dataZoomModel.eachTargetAxis(function (dimNames, axisIndex) {\n      var axisModel = ecModel.getComponent(dimNames.axis, axisIndex);\n\n      if (axisModel) {\n        var coordModel = axisModel.getCoordSysModel();\n        coordModel && save(coordModel, axisModel, coordSysLists[coordModel.mainType] || (coordSysLists[coordModel.mainType] = []), coordModel.componentIndex);\n      }\n    }, this);\n\n    function save(coordModel, axisModel, store, coordIndex) {\n      var item;\n\n      for (var i = 0; i < store.length; i++) {\n        if (store[i].model === coordModel) {\n          item = store[i];\n          break;\n        }\n      }\n\n      if (!item) {\n        store.push(item = {\n          model: coordModel,\n          axisModels: [],\n          coordIndex: coordIndex\n        });\n      }\n\n      item.axisModels.push(axisModel);\n    }\n\n    return coordSysLists;\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../util/graphic\");\n\nrequire(\"../coord/cartesian/Grid\");\n\nrequire(\"./axis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid view\n\n\necharts.extendComponentView({\n  type: 'grid',\n  render: function render(gridModel, ecModel) {\n    this.group.removeAll();\n\n    if (gridModel.get('show')) {\n      this.group.add(new graphic.Rect({\n        shape: gridModel.coordinateSystem.getRect(),\n        style: zrUtil.defaults({\n          fill: gridModel.get('backgroundColor')\n        }, gridModel.getItemStyle()),\n        silent: true,\n        z2: -1\n      }));\n    }\n  }\n});\necharts.registerPreprocessor(function (option) {\n  // Only create grid when need\n  if (option.xAxis && option.yAxis && !option.grid) {\n    option.grid = {};\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @alias module:echarts/component/helper/RoamController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\n\nfunction RoamController(zr) {\n  /**\n   * @type {Function}\n   */\n  this.pointerChecker;\n  /**\n   * @type {module:zrender}\n   */\n\n  this._zr = zr;\n  /**\n   * @type {Object}\n   */\n\n  this._opt = {}; // Avoid two roamController bind the same handler\n\n  var bind = zrUtil.bind;\n  var mousedownHandler = bind(mousedown, this);\n  var mousemoveHandler = bind(mousemove, this);\n  var mouseupHandler = bind(mouseup, this);\n  var mousewheelHandler = bind(mousewheel, this);\n  var pinchHandler = bind(pinch, this);\n  Eventful.call(this);\n  /**\n   * @param {Function} pointerChecker\n   *                   input: x, y\n   *                   output: boolean\n   */\n\n  this.setPointerChecker = function (pointerChecker) {\n    this.pointerChecker = pointerChecker;\n  };\n  /**\n   * Notice: only enable needed types. For example, if 'zoom'\n   * is not needed, 'zoom' should not be enabled, otherwise\n   * default mousewheel behaviour (scroll page) will be disabled.\n   *\n   * @param  {boolean|string} [controlType=true] Specify the control type,\n   *                          which can be null/undefined or true/false\n   *                          or 'pan/move' or 'zoom'/'scale'\n   * @param {Object} [opt]\n   * @param {Object} [opt.zoomOnMouseWheel=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseMove=true] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.moveOnMouseWheel=false] The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n   * @param {Object} [opt.preventDefaultMouseMove=true] When pan.\n   */\n\n\n  this.enable = function (controlType, opt) {\n    // Disable previous first\n    this.disable();\n    this._opt = zrUtil.defaults(zrUtil.clone(opt) || {}, {\n      zoomOnMouseWheel: true,\n      moveOnMouseMove: true,\n      // By default, wheel do not trigger move.\n      moveOnMouseWheel: false,\n      preventDefaultMouseMove: true\n    });\n\n    if (controlType == null) {\n      controlType = true;\n    }\n\n    if (controlType === true || controlType === 'move' || controlType === 'pan') {\n      zr.on('mousedown', mousedownHandler);\n      zr.on('mousemove', mousemoveHandler);\n      zr.on('mouseup', mouseupHandler);\n    }\n\n    if (controlType === true || controlType === 'scale' || controlType === 'zoom') {\n      zr.on('mousewheel', mousewheelHandler);\n      zr.on('pinch', pinchHandler);\n    }\n  };\n\n  this.disable = function () {\n    zr.off('mousedown', mousedownHandler);\n    zr.off('mousemove', mousemoveHandler);\n    zr.off('mouseup', mouseupHandler);\n    zr.off('mousewheel', mousewheelHandler);\n    zr.off('pinch', pinchHandler);\n  };\n\n  this.dispose = this.disable;\n\n  this.isDragging = function () {\n    return this._dragging;\n  };\n\n  this.isPinching = function () {\n    return this._pinching;\n  };\n}\n\nzrUtil.mixin(RoamController, Eventful);\n\nfunction mousedown(e) {\n  if (eventTool.isMiddleOrRightButtonOnMouseUpDown(e) || e.target && e.target.draggable) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY; // Only check on mosedown, but not mousemove.\n  // Mouse can be out of target when mouse moving.\n\n  if (this.pointerChecker && this.pointerChecker(e, x, y)) {\n    this._x = x;\n    this._y = y;\n    this._dragging = true;\n  }\n}\n\nfunction mousemove(e) {\n  if (!this._dragging || !isAvailableBehavior('moveOnMouseMove', e, this._opt) || e.gestureEvent === 'pinch' || interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var x = e.offsetX;\n  var y = e.offsetY;\n  var oldX = this._x;\n  var oldY = this._y;\n  var dx = x - oldX;\n  var dy = y - oldY;\n  this._x = x;\n  this._y = y;\n  this._opt.preventDefaultMouseMove && eventTool.stop(e.event);\n  trigger(this, 'pan', 'moveOnMouseMove', e, {\n    dx: dx,\n    dy: dy,\n    oldX: oldX,\n    oldY: oldY,\n    newX: x,\n    newY: y\n  });\n}\n\nfunction mouseup(e) {\n  if (!eventTool.isMiddleOrRightButtonOnMouseUpDown(e)) {\n    this._dragging = false;\n  }\n}\n\nfunction mousewheel(e) {\n  var shouldZoom = isAvailableBehavior('zoomOnMouseWheel', e, this._opt);\n  var shouldMove = isAvailableBehavior('moveOnMouseWheel', e, this._opt);\n  var wheelDelta = e.wheelDelta;\n  var absWheelDeltaDelta = Math.abs(wheelDelta);\n  var originX = e.offsetX;\n  var originY = e.offsetY; // wheelDelta maybe -0 in chrome mac.\n\n  if (wheelDelta === 0 || !shouldZoom && !shouldMove) {\n    return;\n  } // If both `shouldZoom` and `shouldMove` is true, trigger\n  // their event both, and the final behavior is determined\n  // by event listener themselves.\n\n\n  if (shouldZoom) {\n    // Convenience:\n    // Mac and VM Windows on Mac: scroll up: zoom out.\n    // Windows: scroll up: zoom in.\n    // FIXME: Should do more test in different environment.\n    // wheelDelta is too complicated in difference nvironment\n    // (https://developer.mozilla.org/en-US/docs/Web/Events/mousewheel),\n    // although it has been normallized by zrender.\n    // wheelDelta of mouse wheel is bigger than touch pad.\n    var factor = absWheelDeltaDelta > 3 ? 1.4 : absWheelDeltaDelta > 1 ? 1.2 : 1.1;\n    var scale = wheelDelta > 0 ? factor : 1 / factor;\n    checkPointerAndTrigger(this, 'zoom', 'zoomOnMouseWheel', e, {\n      scale: scale,\n      originX: originX,\n      originY: originY\n    });\n  }\n\n  if (shouldMove) {\n    // FIXME: Should do more test in different environment.\n    var absDelta = Math.abs(wheelDelta); // wheelDelta of mouse wheel is bigger than touch pad.\n\n    var scrollDelta = (wheelDelta > 0 ? 1 : -1) * (absDelta > 3 ? 0.4 : absDelta > 1 ? 0.15 : 0.05);\n    checkPointerAndTrigger(this, 'scrollMove', 'moveOnMouseWheel', e, {\n      scrollDelta: scrollDelta,\n      originX: originX,\n      originY: originY\n    });\n  }\n}\n\nfunction pinch(e) {\n  if (interactionMutex.isTaken(this._zr, 'globalPan')) {\n    return;\n  }\n\n  var scale = e.pinchScale > 1 ? 1.1 : 1 / 1.1;\n  checkPointerAndTrigger(this, 'zoom', null, e, {\n    scale: scale,\n    originX: e.pinchX,\n    originY: e.pinchY\n  });\n}\n\nfunction checkPointerAndTrigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  if (controller.pointerChecker && controller.pointerChecker(e, contollerEvent.originX, contollerEvent.originY)) {\n    // When mouse is out of roamController rect,\n    // default befavoius should not be be disabled, otherwise\n    // page sliding is disabled, contrary to expectation.\n    eventTool.stop(e.event);\n    trigger(controller, eventName, behaviorToCheck, e, contollerEvent);\n  }\n}\n\nfunction trigger(controller, eventName, behaviorToCheck, e, contollerEvent) {\n  // Also provide behavior checker for event listener, for some case that\n  // multiple components share one listener.\n  contollerEvent.isAvailableBehavior = zrUtil.bind(isAvailableBehavior, null, behaviorToCheck, e);\n  controller.trigger(eventName, contollerEvent);\n} // settings: {\n//     zoomOnMouseWheel\n//     moveOnMouseMove\n//     moveOnMouseWheel\n// }\n// The value can be: true / false / 'shift' / 'ctrl' / 'alt'.\n\n\nfunction isAvailableBehavior(behaviorToCheck, e, settings) {\n  var setting = settings[behaviorToCheck];\n  return !behaviorToCheck || setting && (!zrUtil.isString(setting) || e.event[setting + 'Key']);\n}\n\nvar _default = RoamController;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\n\n\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry; // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n// allAxesInfo should be updated when setOption performed.\n\nfunction collect(ecModel, api) {\n  var result = {\n    /**\n     * key: makeKey(axis.model)\n     * value: {\n     *      axis,\n     *      coordSys,\n     *      axisPointerModel,\n     *      triggerTooltip,\n     *      involveSeries,\n     *      snap,\n     *      seriesModels,\n     *      seriesDataCount\n     * }\n     */\n    axesInfo: {},\n    seriesInvolved: false,\n\n    /**\n     * key: makeKey(coordSys.model)\n     * value: Object: key makeKey(axis.model), value: axisInfo\n     */\n    coordSysAxesInfo: {},\n    coordSysMap: {}\n  };\n  collectAxesInfo(result, ecModel, api); // Check seriesInvolved for performance, in case too many series in some chart.\n\n  result.seriesInvolved && collectSeriesInfo(result, ecModel);\n  return result;\n}\n\nfunction collectAxesInfo(result, ecModel, api) {\n  var globalTooltipModel = ecModel.getComponent('tooltip');\n  var globalAxisPointerModel = ecModel.getComponent('axisPointer'); // links can only be set on global.\n\n  var linksOption = globalAxisPointerModel.get('link', true) || [];\n  var linkGroups = []; // Collect axes info.\n\n  each(api.getCoordinateSystems(), function (coordSys) {\n    // Some coordinate system do not support axes, like geo.\n    if (!coordSys.axisPointerEnabled) {\n      return;\n    }\n\n    var coordSysKey = makeKey(coordSys.model);\n    var axesInfoInCoordSys = result.coordSysAxesInfo[coordSysKey] = {};\n    result.coordSysMap[coordSysKey] = coordSys; // Set tooltip (like 'cross') is a convienent way to show axisPointer\n    // for user. So we enable seting tooltip on coordSys model.\n\n    var coordSysModel = coordSys.model;\n    var baseTooltipModel = coordSysModel.getModel('tooltip', globalTooltipModel);\n    each(coordSys.getAxes(), curry(saveTooltipAxisInfo, false, null)); // If axis tooltip used, choose tooltip axis for each coordSys.\n    // Notice this case: coordSys is `grid` but not `cartesian2D` here.\n\n    if (coordSys.getTooltipAxes && globalTooltipModel // If tooltip.showContent is set as false, tooltip will not\n    // show but axisPointer will show as normal.\n    && baseTooltipModel.get('show')) {\n      // Compatible with previous logic. But series.tooltip.trigger: 'axis'\n      // or series.data[n].tooltip.trigger: 'axis' are not support any more.\n      var triggerAxis = baseTooltipModel.get('trigger') === 'axis';\n      var cross = baseTooltipModel.get('axisPointer.type') === 'cross';\n      var tooltipAxes = coordSys.getTooltipAxes(baseTooltipModel.get('axisPointer.axis'));\n\n      if (triggerAxis || cross) {\n        each(tooltipAxes.baseAxes, curry(saveTooltipAxisInfo, cross ? 'cross' : true, triggerAxis));\n      }\n\n      if (cross) {\n        each(tooltipAxes.otherAxes, curry(saveTooltipAxisInfo, 'cross', false));\n      }\n    } // fromTooltip: true | false | 'cross'\n    // triggerTooltip: true | false | null\n\n\n    function saveTooltipAxisInfo(fromTooltip, triggerTooltip, axis) {\n      var axisPointerModel = axis.model.getModel('axisPointer', globalAxisPointerModel);\n      var axisPointerShow = axisPointerModel.get('show');\n\n      if (!axisPointerShow || axisPointerShow === 'auto' && !fromTooltip && !isHandleTrigger(axisPointerModel)) {\n        return;\n      }\n\n      if (triggerTooltip == null) {\n        triggerTooltip = axisPointerModel.get('triggerTooltip');\n      }\n\n      axisPointerModel = fromTooltip ? makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) : axisPointerModel;\n      var snap = axisPointerModel.get('snap');\n      var key = makeKey(axis.model);\n      var involveSeries = triggerTooltip || snap || axis.type === 'category'; // If result.axesInfo[key] exist, override it (tooltip has higher priority).\n\n      var axisInfo = result.axesInfo[key] = {\n        key: key,\n        axis: axis,\n        coordSys: coordSys,\n        axisPointerModel: axisPointerModel,\n        triggerTooltip: triggerTooltip,\n        involveSeries: involveSeries,\n        snap: snap,\n        useHandle: isHandleTrigger(axisPointerModel),\n        seriesModels: []\n      };\n      axesInfoInCoordSys[key] = axisInfo;\n      result.seriesInvolved |= involveSeries;\n      var groupIndex = getLinkGroupIndex(linksOption, axis);\n\n      if (groupIndex != null) {\n        var linkGroup = linkGroups[groupIndex] || (linkGroups[groupIndex] = {\n          axesInfo: {}\n        });\n        linkGroup.axesInfo[key] = axisInfo;\n        linkGroup.mapper = linksOption[groupIndex].mapper;\n        axisInfo.linkGroup = linkGroup;\n      }\n    }\n  });\n}\n\nfunction makeAxisPointerModel(axis, baseTooltipModel, globalAxisPointerModel, ecModel, fromTooltip, triggerTooltip) {\n  var tooltipAxisPointerModel = baseTooltipModel.getModel('axisPointer');\n  var volatileOption = {};\n  each(['type', 'snap', 'lineStyle', 'shadowStyle', 'label', 'animation', 'animationDurationUpdate', 'animationEasingUpdate', 'z'], function (field) {\n    volatileOption[field] = zrUtil.clone(tooltipAxisPointerModel.get(field));\n  }); // category axis do not auto snap, otherwise some tick that do not\n  // has value can not be hovered. value/time/log axis default snap if\n  // triggered from tooltip and trigger tooltip.\n\n  volatileOption.snap = axis.type !== 'category' && !!triggerTooltip; // Compatibel with previous behavior, tooltip axis do not show label by default.\n  // Only these properties can be overrided from tooltip to axisPointer.\n\n  if (tooltipAxisPointerModel.get('type') === 'cross') {\n    volatileOption.type = 'line';\n  }\n\n  var labelOption = volatileOption.label || (volatileOption.label = {}); // Follow the convention, do not show label when triggered by tooltip by default.\n\n  labelOption.show == null && (labelOption.show = false);\n\n  if (fromTooltip === 'cross') {\n    // When 'cross', both axes show labels.\n    var tooltipAxisPointerLabelShow = tooltipAxisPointerModel.get('label.show');\n    labelOption.show = tooltipAxisPointerLabelShow != null ? tooltipAxisPointerLabelShow : true; // If triggerTooltip, this is a base axis, which should better not use cross style\n    // (cross style is dashed by default)\n\n    if (!triggerTooltip) {\n      var crossStyle = volatileOption.lineStyle = tooltipAxisPointerModel.get('crossStyle');\n      crossStyle && zrUtil.defaults(labelOption, crossStyle.textStyle);\n    }\n  }\n\n  return axis.model.getModel('axisPointer', new Model(volatileOption, globalAxisPointerModel, ecModel));\n}\n\nfunction collectSeriesInfo(result, ecModel) {\n  // Prepare data for axis trigger\n  ecModel.eachSeries(function (seriesModel) {\n    // Notice this case: this coordSys is `cartesian2D` but not `grid`.\n    var coordSys = seriesModel.coordinateSystem;\n    var seriesTooltipTrigger = seriesModel.get('tooltip.trigger', true);\n    var seriesTooltipShow = seriesModel.get('tooltip.show', true);\n\n    if (!coordSys || seriesTooltipTrigger === 'none' || seriesTooltipTrigger === false || seriesTooltipTrigger === 'item' || seriesTooltipShow === false || seriesModel.get('axisPointer.show', true) === false) {\n      return;\n    }\n\n    each(result.coordSysAxesInfo[makeKey(coordSys.model)], function (axisInfo) {\n      var axis = axisInfo.axis;\n\n      if (coordSys.getAxis(axis.dim) === axis) {\n        axisInfo.seriesModels.push(seriesModel);\n        axisInfo.seriesDataCount == null && (axisInfo.seriesDataCount = 0);\n        axisInfo.seriesDataCount += seriesModel.getData().count();\n      }\n    });\n  }, this);\n}\n/**\n * For example:\n * {\n *     axisPointer: {\n *         links: [{\n *             xAxisIndex: [2, 4],\n *             yAxisIndex: 'all'\n *         }, {\n *             xAxisId: ['a5', 'a7'],\n *             xAxisName: 'xxx'\n *         }]\n *     }\n * }\n */\n\n\nfunction getLinkGroupIndex(linksOption, axis) {\n  var axisModel = axis.model;\n  var dim = axis.dim;\n\n  for (var i = 0; i < linksOption.length; i++) {\n    var linkOption = linksOption[i] || {};\n\n    if (checkPropInLink(linkOption[dim + 'AxisId'], axisModel.id) || checkPropInLink(linkOption[dim + 'AxisIndex'], axisModel.componentIndex) || checkPropInLink(linkOption[dim + 'AxisName'], axisModel.name)) {\n      return i;\n    }\n  }\n}\n\nfunction checkPropInLink(linkPropValue, axisPropValue) {\n  return linkPropValue === 'all' || zrUtil.isArray(linkPropValue) && zrUtil.indexOf(linkPropValue, axisPropValue) >= 0 || linkPropValue === axisPropValue;\n}\n\nfunction fixValue(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n\n  if (!axisInfo) {\n    return;\n  }\n\n  var axisPointerModel = axisInfo.axisPointerModel;\n  var scale = axisInfo.axis.scale;\n  var option = axisPointerModel.option;\n  var status = axisPointerModel.get('status');\n  var value = axisPointerModel.get('value'); // Parse init value for category and time axis.\n\n  if (value != null) {\n    value = scale.parse(value);\n  }\n\n  var useHandle = isHandleTrigger(axisPointerModel); // If `handle` used, `axisPointer` will always be displayed, so value\n  // and status should be initialized.\n\n  if (status == null) {\n    option.status = useHandle ? 'show' : 'hide';\n  }\n\n  var extent = scale.getExtent().slice();\n  extent[0] > extent[1] && extent.reverse();\n\n  if ( // Pick a value on axis when initializing.\n  value == null // If both `handle` and `dataZoom` are used, value may be out of axis extent,\n  // where we should re-pick a value to keep `handle` displaying normally.\n  || value > extent[1]) {\n    // Make handle displayed on the end of the axis when init, which looks better.\n    value = extent[1];\n  }\n\n  if (value < extent[0]) {\n    value = extent[0];\n  }\n\n  option.value = value;\n\n  if (useHandle) {\n    option.status = axisInfo.axis.scale.isBlank() ? 'hide' : 'show';\n  }\n}\n\nfunction getAxisInfo(axisModel) {\n  var coordSysAxesInfo = (axisModel.ecModel.getComponent('axisPointer') || {}).coordSysAxesInfo;\n  return coordSysAxesInfo && coordSysAxesInfo.axesInfo[makeKey(axisModel)];\n}\n\nfunction getAxisPointerModel(axisModel) {\n  var axisInfo = getAxisInfo(axisModel);\n  return axisInfo && axisInfo.axisPointerModel;\n}\n\nfunction isHandleTrigger(axisPointerModel) {\n  return !!axisPointerModel.get('handle.show');\n}\n/**\n * @param {module:echarts/model/Model} model\n * @return {string} unique key\n */\n\n\nfunction makeKey(model) {\n  return model.type + '||' + model.id;\n}\n\nexports.collect = collect;\nexports.fixValue = fixValue;\nexports.getAxisInfo = getAxisInfo;\nexports.getAxisPointerModel = getAxisPointerModel;\nexports.makeKey = makeKey;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar IRRELEVANT_EXCLUDES = {\n  'axisPointer': 1,\n  'tooltip': 1,\n  'brush': 1\n};\n/**\n * Avoid that: mouse click on a elements that is over geo or graph,\n * but roam is triggered.\n */\n\nfunction onIrrelevantElement(e, api, targetCoordSysModel) {\n  var model = api.getComponentByElement(e.topTarget); // If model is axisModel, it works only if it is injected with coordinateSystem.\n\n  var coordSys = model && model.coordinateSystem;\n  return model && model !== targetCoordSysModel && !IRRELEVANT_EXCLUDES[model.mainType] && coordSys && coordSys.model !== targetCoordSysModel;\n}\n\nexports.onIrrelevantElement = onIrrelevantElement;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar matrix = require(\"zrender/lib/core/matrix\");\n\nvar axisHelper = require(\"../../coord/axisHelper\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {module:echarts/model/Model} axisPointerModel\n */\n\n\nfunction buildElStyle(axisPointerModel) {\n  var axisPointerType = axisPointerModel.get('type');\n  var styleModel = axisPointerModel.getModel(axisPointerType + 'Style');\n  var style;\n\n  if (axisPointerType === 'line') {\n    style = styleModel.getLineStyle();\n    style.fill = null;\n  } else if (axisPointerType === 'shadow') {\n    style = styleModel.getAreaStyle();\n    style.stroke = null;\n  }\n\n  return style;\n}\n/**\n * @param {Function} labelPos {align, verticalAlign, position}\n */\n\n\nfunction buildLabelElOption(elOption, axisModel, axisPointerModel, api, labelPos) {\n  var value = axisPointerModel.get('value');\n  var text = getValueLabel(value, axisModel.axis, axisModel.ecModel, axisPointerModel.get('seriesDataIndices'), {\n    precision: axisPointerModel.get('label.precision'),\n    formatter: axisPointerModel.get('label.formatter')\n  });\n  var labelModel = axisPointerModel.getModel('label');\n  var paddings = formatUtil.normalizeCssArray(labelModel.get('padding') || 0);\n  var font = labelModel.getFont();\n  var textRect = textContain.getBoundingRect(text, font);\n  var position = labelPos.position;\n  var width = textRect.width + paddings[1] + paddings[3];\n  var height = textRect.height + paddings[0] + paddings[2]; // Adjust by align.\n\n  var align = labelPos.align;\n  align === 'right' && (position[0] -= width);\n  align === 'center' && (position[0] -= width / 2);\n  var verticalAlign = labelPos.verticalAlign;\n  verticalAlign === 'bottom' && (position[1] -= height);\n  verticalAlign === 'middle' && (position[1] -= height / 2); // Not overflow ec container\n\n  confineInContainer(position, width, height, api);\n  var bgColor = labelModel.get('backgroundColor');\n\n  if (!bgColor || bgColor === 'auto') {\n    bgColor = axisModel.get('axisLine.lineStyle.color');\n  }\n\n  elOption.label = {\n    shape: {\n      x: 0,\n      y: 0,\n      width: width,\n      height: height,\n      r: labelModel.get('borderRadius')\n    },\n    position: position.slice(),\n    // TODO: rich\n    style: {\n      text: text,\n      textFont: font,\n      textFill: labelModel.getTextColor(),\n      textPosition: 'inside',\n      textPadding: paddings,\n      fill: bgColor,\n      stroke: labelModel.get('borderColor') || 'transparent',\n      lineWidth: labelModel.get('borderWidth') || 0,\n      shadowBlur: labelModel.get('shadowBlur'),\n      shadowColor: labelModel.get('shadowColor'),\n      shadowOffsetX: labelModel.get('shadowOffsetX'),\n      shadowOffsetY: labelModel.get('shadowOffsetY')\n    },\n    // Lable should be over axisPointer.\n    z2: 10\n  };\n} // Do not overflow ec container\n\n\nfunction confineInContainer(position, width, height, api) {\n  var viewWidth = api.getWidth();\n  var viewHeight = api.getHeight();\n  position[0] = Math.min(position[0] + width, viewWidth) - width;\n  position[1] = Math.min(position[1] + height, viewHeight) - height;\n  position[0] = Math.max(position[0], 0);\n  position[1] = Math.max(position[1], 0);\n}\n/**\n * @param {number} value\n * @param {module:echarts/coord/Axis} axis\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} opt\n * @param {Array.<Object>} seriesDataIndices\n * @param {number|string} opt.precision 'auto' or a number\n * @param {string|Function} opt.formatter label formatter\n */\n\n\nfunction getValueLabel(value, axis, ecModel, seriesDataIndices, opt) {\n  value = axis.scale.parse(value);\n  var text = axis.scale.getLabel( // If `precision` is set, width can be fixed (like '12.00500'), which\n  // helps to debounce when when moving label.\n  value, {\n    precision: opt.precision\n  });\n  var formatter = opt.formatter;\n\n  if (formatter) {\n    var params = {\n      value: axisHelper.getAxisRawValue(axis, value),\n      axisDimension: axis.dim,\n      axisIndex: axis.index,\n      seriesData: []\n    };\n    zrUtil.each(seriesDataIndices, function (idxItem) {\n      var series = ecModel.getSeriesByIndex(idxItem.seriesIndex);\n      var dataIndex = idxItem.dataIndexInside;\n      var dataParams = series && series.getDataParams(dataIndex);\n      dataParams && params.seriesData.push(dataParams);\n    });\n\n    if (zrUtil.isString(formatter)) {\n      text = formatter.replace('{value}', text);\n    } else if (zrUtil.isFunction(formatter)) {\n      text = formatter(params);\n    }\n  }\n\n  return text;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @param {number} value\n * @param {Object} layoutInfo {\n *  rotation, position, labelOffset, labelDirection, labelMargin\n * }\n */\n\n\nfunction getTransformedPosition(axis, value, layoutInfo) {\n  var transform = matrix.create();\n  matrix.rotate(transform, transform, layoutInfo.rotation);\n  matrix.translate(transform, transform, layoutInfo.position);\n  return graphic.applyTransform([axis.dataToCoord(value), (layoutInfo.labelOffset || 0) + (layoutInfo.labelDirection || 1) * (layoutInfo.labelMargin || 0)], transform);\n}\n\nfunction buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api) {\n  var textLayout = AxisBuilder.innerTextLayout(layoutInfo.rotation, 0, layoutInfo.labelDirection);\n  layoutInfo.labelMargin = axisPointerModel.get('label.margin');\n  buildLabelElOption(elOption, axisModel, axisPointerModel, api, {\n    position: getTransformedPosition(axisModel.axis, value, layoutInfo),\n    align: textLayout.textAlign,\n    verticalAlign: textLayout.textVerticalAlign\n  });\n}\n/**\n * @param {Array.<number>} p1\n * @param {Array.<number>} p2\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeLineShape(p1, p2, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x1: p1[xDimIndex],\n    y1: p1[1 - xDimIndex],\n    x2: p2[xDimIndex],\n    y2: p2[1 - xDimIndex]\n  };\n}\n/**\n * @param {Array.<number>} xy\n * @param {Array.<number>} wh\n * @param {number} [xDimIndex=0] or 1\n */\n\n\nfunction makeRectShape(xy, wh, xDimIndex) {\n  xDimIndex = xDimIndex || 0;\n  return {\n    x: xy[xDimIndex],\n    y: xy[1 - xDimIndex],\n    width: wh[xDimIndex],\n    height: wh[1 - xDimIndex]\n  };\n}\n\nfunction makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n  return {\n    cx: cx,\n    cy: cy,\n    r0: r0,\n    r: r,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    clockwise: true\n  };\n}\n\nexports.buildElStyle = buildElStyle;\nexports.buildLabelElOption = buildLabelElOption;\nexports.getValueLabel = getValueLabel;\nexports.getTransformedPosition = getTransformedPosition;\nexports.buildCartesianSingleLabelElOption = buildCartesianSingleLabelElOption;\nexports.makeLineShape = makeLineShape;\nexports.makeRectShape = makeRectShape;\nexports.makeSectorShape = makeSectorShape;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n */\n\n\nvar _default = {\n  /**\n   * @param {Array.<Object>} targetList [{name, value, selected}, ...]\n   *        If targetList is an array, it should like [{name: ..., value: ...}, ...].\n   *        If targetList is a \"List\", it must have coordDim: 'value' dimension and name.\n   */\n  updateSelectedMap: function updateSelectedMap(targetList) {\n    this._targetList = zrUtil.isArray(targetList) ? targetList.slice() : [];\n    this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n      targetMap.set(target.name, target);\n      return targetMap;\n    }, zrUtil.createHashMap());\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  // PENGING If selectedMode is null ?\n  select: function select(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      this._selectTargetMap.each(function (target) {\n        target.selected = false;\n      });\n    }\n\n    target && (target.selected = true);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  unSelect: function unSelect(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name); // var selectedMode = this.get('selectedMode');\n    // selectedMode !== 'single' && target && (target.selected = false);\n\n    target && (target.selected = false);\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  toggleSelected: function toggleSelected(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n\n    if (target != null) {\n      this[target.selected ? 'unSelect' : 'select'](name, id);\n      return target.selected;\n    }\n  },\n\n  /**\n   * Either name or id should be passed as input here.\n   * If both of them are defined, id is used.\n   *\n   * @param {string|undefined} name name of data\n   * @param {number|undefined} id dataIndex of data\n   */\n  isSelected: function isSelected(name, id) {\n    var target = id != null ? this._targetList[id] : this._selectTargetMap.get(name);\n    return target && target.selected;\n  }\n};\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n */\nfunction updateViewOnPan(controllerHost, dx, dy) {\n  var target = controllerHost.target;\n  var pos = target.position;\n  pos[0] += dx;\n  pos[1] += dy;\n  target.dirty();\n}\n/**\n * For geo and graph.\n *\n * @param {Object} controllerHost\n * @param {module:zrender/Element} controllerHost.target\n * @param {number} controllerHost.zoom\n * @param {number} controllerHost.zoomLimit like: {min: 1, max: 2}\n */\n\n\nfunction updateViewOnZoom(controllerHost, zoomDelta, zoomX, zoomY) {\n  var target = controllerHost.target;\n  var zoomLimit = controllerHost.zoomLimit;\n  var pos = target.position;\n  var scale = target.scale;\n  var newZoom = controllerHost.zoom = controllerHost.zoom || 1;\n  newZoom *= zoomDelta;\n\n  if (zoomLimit) {\n    var zoomMin = zoomLimit.min || 0;\n    var zoomMax = zoomLimit.max || Infinity;\n    newZoom = Math.max(Math.min(zoomMax, newZoom), zoomMin);\n  }\n\n  var zoomScale = newZoom / controllerHost.zoom;\n  controllerHost.zoom = newZoom; // Keep the mouse center when scaling\n\n  pos[0] -= (zoomX - pos[0]) * (zoomScale - 1);\n  pos[1] -= (zoomY - pos[1]) * (zoomScale - 1);\n  scale[0] *= zoomScale;\n  scale[1] *= zoomScale;\n  target.dirty();\n}\n\nexports.updateViewOnPan = updateViewOnPan;\nexports.updateViewOnZoom = updateViewOnZoom;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Eventful = require(\"zrender/lib/mixin/Eventful\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar interactionMutex = require(\"./interactionMutex\");\n\nvar DataDiffer = require(\"../../data/DataDiffer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar map = zrUtil.map;\nvar mathMin = Math.min;\nvar mathMax = Math.max;\nvar mathPow = Math.pow;\nvar COVER_Z = 10000;\nvar UNSELECT_THRESHOLD = 6;\nvar MIN_RESIZE_LINE_WIDTH = 6;\nvar MUTEX_RESOURCE_KEY = 'globalPan';\nvar DIRECTION_MAP = {\n  w: [0, 0],\n  e: [0, 1],\n  n: [1, 0],\n  s: [1, 1]\n};\nvar CURSOR_MAP = {\n  w: 'ew',\n  e: 'ew',\n  n: 'ns',\n  s: 'ns',\n  ne: 'nesw',\n  sw: 'nesw',\n  nw: 'nwse',\n  se: 'nwse'\n};\nvar DEFAULT_BRUSH_OPT = {\n  brushStyle: {\n    lineWidth: 2,\n    stroke: 'rgba(0,0,0,0.3)',\n    fill: 'rgba(0,0,0,0.1)'\n  },\n  transformable: true,\n  brushMode: 'single',\n  removeOnClick: false\n};\nvar baseUID = 0;\n/**\n * @alias module:echarts/component/helper/BrushController\n * @constructor\n * @mixin {module:zrender/mixin/Eventful}\n * @event module:echarts/component/helper/BrushController#brush\n *        params:\n *            areas: Array.<Array>, coord relates to container group,\n *                                    If no container specified, to global.\n *            opt {\n *                isEnd: boolean,\n *                removeOnClick: boolean\n *            }\n *\n * @param {module:zrender/zrender~ZRender} zr\n */\n\nfunction BrushController(zr) {\n  Eventful.call(this);\n  /**\n   * @type {module:zrender/zrender~ZRender}\n   * @private\n   */\n\n  this._zr = zr;\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = new graphic.Group();\n  /**\n   * Only for drawing (after enabledBrush).\n   *     'line', 'rect', 'polygon' or false\n   *     If passing false/null/undefined, disable brush.\n   *     If passing 'auto', determined by panel.defaultBrushType\n   * @private\n   * @type {string}\n   */\n\n  this._brushType;\n  /**\n   * Only for drawing (after enabledBrush).\n   *\n   * @private\n   * @type {Object}\n   */\n\n  this._brushOption;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._panels;\n  /**\n   * @private\n   * @type {Array.<nubmer>}\n   */\n\n  this._track = [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._dragging;\n  /**\n   * @private\n   * @type {Array}\n   */\n\n  this._covers = [];\n  /**\n   * @private\n   * @type {moudule:zrender/container/Group}\n   */\n\n  this._creatingCover;\n  /**\n   * `true` means global panel\n   * @private\n   * @type {module:zrender/container/Group|boolean}\n   */\n\n  this._creatingPanel;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._enableGlobalPan;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  /**\n   * @private\n   * @type {string}\n   */\n\n  this._uid = 'brushController_' + baseUID++;\n  /**\n   * @private\n   * @type {Object}\n   */\n\n  this._handlers = {};\n  each(pointerHandlers, function (handler, eventName) {\n    this._handlers[eventName] = zrUtil.bind(handler, this);\n  }, this);\n}\n\nBrushController.prototype = {\n  constructor: BrushController,\n\n  /**\n   * If set to null/undefined/false, select disabled.\n   * @param {Object} brushOption\n   * @param {string|boolean} brushOption.brushType 'line', 'rect', 'polygon' or false\n   *                          If passing false/null/undefined, disable brush.\n   *                          If passing 'auto', determined by panel.defaultBrushType.\n   *                              ('auto' can not be used in global panel)\n   * @param {number} [brushOption.brushMode='single'] 'single' or 'multiple'\n   * @param {boolean} [brushOption.transformable=true]\n   * @param {boolean} [brushOption.removeOnClick=false]\n   * @param {Object} [brushOption.brushStyle]\n   * @param {number} [brushOption.brushStyle.width]\n   * @param {number} [brushOption.brushStyle.lineWidth]\n   * @param {string} [brushOption.brushStyle.stroke]\n   * @param {string} [brushOption.brushStyle.fill]\n   * @param {number} [brushOption.z]\n   */\n  enableBrush: function enableBrush(brushOption) {\n    this._brushType && doDisableBrush(this);\n    brushOption.brushType && doEnableBrush(this, brushOption);\n    return this;\n  },\n\n  /**\n   * @param {Array.<Object>} panelOpts If not pass, it is global brush.\n   *        Each items: {\n   *            panelId, // mandatory.\n   *            clipPath, // mandatory. function.\n   *            isTargetByCursor, // mandatory. function.\n   *            defaultBrushType, // optional, only used when brushType is 'auto'.\n   *            getLinearBrushOtherExtent, // optional. function.\n   *        }\n   */\n  setPanels: function setPanels(panelOpts) {\n    if (panelOpts && panelOpts.length) {\n      var panels = this._panels = {};\n      zrUtil.each(panelOpts, function (panelOpts) {\n        panels[panelOpts.panelId] = zrUtil.clone(panelOpts);\n      });\n    } else {\n      this._panels = null;\n    }\n\n    return this;\n  },\n\n  /**\n   * @param {Object} [opt]\n   * @return {boolean} [opt.enableGlobalPan=false]\n   */\n  mount: function mount(opt) {\n    opt = opt || {};\n    this._enableGlobalPan = opt.enableGlobalPan;\n    var thisGroup = this.group;\n\n    this._zr.add(thisGroup);\n\n    thisGroup.attr({\n      position: opt.position || [0, 0],\n      rotation: opt.rotation || 0,\n      scale: opt.scale || [1, 1]\n    });\n    this._transform = thisGroup.getLocalTransform();\n    return this;\n  },\n  eachCover: function eachCover(cb, context) {\n    each(this._covers, cb, context);\n  },\n\n  /**\n   * Update covers.\n   * @param {Array.<Object>} brushOptionList Like:\n   *        [\n   *            {id: 'xx', brushType: 'line', range: [23, 44], brushStyle, transformable},\n   *            {id: 'yy', brushType: 'rect', range: [[23, 44], [23, 54]]},\n   *            ...\n   *        ]\n   *        `brushType` is required in each cover info. (can not be 'auto')\n   *        `id` is not mandatory.\n   *        `brushStyle`, `transformable` is not mandatory, use DEFAULT_BRUSH_OPT by default.\n   *        If brushOptionList is null/undefined, all covers removed.\n   */\n  updateCovers: function updateCovers(brushOptionList) {\n    brushOptionList = zrUtil.map(brushOptionList, function (brushOption) {\n      return zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n    });\n    var tmpIdPrefix = '\\0-brush-index-';\n    var oldCovers = this._covers;\n    var newCovers = this._covers = [];\n    var controller = this;\n    var creatingCover = this._creatingCover;\n    new DataDiffer(oldCovers, brushOptionList, oldGetKey, getKey).add(addOrUpdate).update(addOrUpdate).remove(remove).execute();\n    return this;\n\n    function getKey(brushOption, index) {\n      return (brushOption.id != null ? brushOption.id : tmpIdPrefix + index) + '-' + brushOption.brushType;\n    }\n\n    function oldGetKey(cover, index) {\n      return getKey(cover.__brushOption, index);\n    }\n\n    function addOrUpdate(newIndex, oldIndex) {\n      var newBrushOption = brushOptionList[newIndex]; // Consider setOption in event listener of brushSelect,\n      // where updating cover when creating should be forbiden.\n\n      if (oldIndex != null && oldCovers[oldIndex] === creatingCover) {\n        newCovers[newIndex] = oldCovers[oldIndex];\n      } else {\n        var cover = newCovers[newIndex] = oldIndex != null ? (oldCovers[oldIndex].__brushOption = newBrushOption, oldCovers[oldIndex]) : endCreating(controller, createCover(controller, newBrushOption));\n        updateCoverAfterCreation(controller, cover);\n      }\n    }\n\n    function remove(oldIndex) {\n      if (oldCovers[oldIndex] !== creatingCover) {\n        controller.group.remove(oldCovers[oldIndex]);\n      }\n    }\n  },\n  unmount: function unmount() {\n    this.enableBrush(false); // container may 'removeAll' outside.\n\n    clearCovers(this);\n\n    this._zr.remove(this.group);\n\n    return this;\n  },\n  dispose: function dispose() {\n    this.unmount();\n    this.off();\n  }\n};\nzrUtil.mixin(BrushController, Eventful);\n\nfunction doEnableBrush(controller, brushOption) {\n  var zr = controller._zr; // Consider roam, which takes globalPan too.\n\n  if (!controller._enableGlobalPan) {\n    interactionMutex.take(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  }\n\n  mountHandlers(zr, controller._handlers);\n  controller._brushType = brushOption.brushType;\n  controller._brushOption = zrUtil.merge(zrUtil.clone(DEFAULT_BRUSH_OPT), brushOption, true);\n}\n\nfunction doDisableBrush(controller) {\n  var zr = controller._zr;\n  interactionMutex.release(zr, MUTEX_RESOURCE_KEY, controller._uid);\n  unmountHandlers(zr, controller._handlers);\n  controller._brushType = controller._brushOption = null;\n}\n\nfunction mountHandlers(zr, handlers) {\n  each(handlers, function (handler, eventName) {\n    zr.on(eventName, handler);\n  });\n}\n\nfunction unmountHandlers(zr, handlers) {\n  each(handlers, function (handler, eventName) {\n    zr.off(eventName, handler);\n  });\n}\n\nfunction createCover(controller, brushOption) {\n  var cover = coverRenderers[brushOption.brushType].createCover(controller, brushOption);\n  cover.__brushOption = brushOption;\n  updateZ(cover, brushOption);\n  controller.group.add(cover);\n  return cover;\n}\n\nfunction endCreating(controller, creatingCover) {\n  var coverRenderer = getCoverRenderer(creatingCover);\n\n  if (coverRenderer.endCreating) {\n    coverRenderer.endCreating(controller, creatingCover);\n    updateZ(creatingCover, creatingCover.__brushOption);\n  }\n\n  return creatingCover;\n}\n\nfunction updateCoverShape(controller, cover) {\n  var brushOption = cover.__brushOption;\n  getCoverRenderer(cover).updateCoverShape(controller, cover, brushOption.range, brushOption);\n}\n\nfunction updateZ(cover, brushOption) {\n  var z = brushOption.z;\n  z == null && (z = COVER_Z);\n  cover.traverse(function (el) {\n    el.z = z;\n    el.z2 = z; // Consider in given container.\n  });\n}\n\nfunction updateCoverAfterCreation(controller, cover) {\n  getCoverRenderer(cover).updateCommon(controller, cover);\n  updateCoverShape(controller, cover);\n}\n\nfunction getCoverRenderer(cover) {\n  return coverRenderers[cover.__brushOption.brushType];\n} // return target panel or `true` (means global panel)\n\n\nfunction getPanelByPoint(controller, e, localCursorPoint) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panel;\n  var transform = controller._transform;\n  each(panels, function (pn) {\n    pn.isTargetByCursor(e, localCursorPoint, transform) && (panel = pn);\n  });\n  return panel;\n} // Return a panel or true\n\n\nfunction getPanelByCover(controller, cover) {\n  var panels = controller._panels;\n\n  if (!panels) {\n    return true; // Global panel\n  }\n\n  var panelId = cover.__brushOption.panelId; // User may give cover without coord sys info,\n  // which is then treated as global panel.\n\n  return panelId != null ? panels[panelId] : true;\n}\n\nfunction clearCovers(controller) {\n  var covers = controller._covers;\n  var originalLength = covers.length;\n  each(covers, function (cover) {\n    controller.group.remove(cover);\n  }, controller);\n  covers.length = 0;\n  return !!originalLength;\n}\n\nfunction trigger(controller, opt) {\n  var areas = map(controller._covers, function (cover) {\n    var brushOption = cover.__brushOption;\n    var range = zrUtil.clone(brushOption.range);\n    return {\n      brushType: brushOption.brushType,\n      panelId: brushOption.panelId,\n      range: range\n    };\n  });\n  controller.trigger('brush', areas, {\n    isEnd: !!opt.isEnd,\n    removeOnClick: !!opt.removeOnClick\n  });\n}\n\nfunction shouldShowCover(controller) {\n  var track = controller._track;\n\n  if (!track.length) {\n    return false;\n  }\n\n  var p2 = track[track.length - 1];\n  var p1 = track[0];\n  var dx = p2[0] - p1[0];\n  var dy = p2[1] - p1[1];\n  var dist = mathPow(dx * dx + dy * dy, 0.5);\n  return dist > UNSELECT_THRESHOLD;\n}\n\nfunction getTrackEnds(track) {\n  var tail = track.length - 1;\n  tail < 0 && (tail = 0);\n  return [track[0], track[tail]];\n}\n\nfunction createBaseRectCover(doDrift, controller, brushOption, edgeNames) {\n  var cover = new graphic.Group();\n  cover.add(new graphic.Rect({\n    name: 'main',\n    style: makeStyle(brushOption),\n    silent: true,\n    draggable: true,\n    cursor: 'move',\n    drift: curry(doDrift, controller, cover, 'nswe'),\n    ondragend: curry(trigger, controller, {\n      isEnd: true\n    })\n  }));\n  each(edgeNames, function (name) {\n    cover.add(new graphic.Rect({\n      name: name,\n      style: {\n        opacity: 0\n      },\n      draggable: true,\n      silent: true,\n      invisible: true,\n      drift: curry(doDrift, controller, cover, name),\n      ondragend: curry(trigger, controller, {\n        isEnd: true\n      })\n    }));\n  });\n  return cover;\n}\n\nfunction updateBaseRect(controller, cover, localRange, brushOption) {\n  var lineWidth = brushOption.brushStyle.lineWidth || 0;\n  var handleSize = mathMax(lineWidth, MIN_RESIZE_LINE_WIDTH);\n  var x = localRange[0][0];\n  var y = localRange[1][0];\n  var xa = x - lineWidth / 2;\n  var ya = y - lineWidth / 2;\n  var x2 = localRange[0][1];\n  var y2 = localRange[1][1];\n  var x2a = x2 - handleSize + lineWidth / 2;\n  var y2a = y2 - handleSize + lineWidth / 2;\n  var width = x2 - x;\n  var height = y2 - y;\n  var widtha = width + lineWidth;\n  var heighta = height + lineWidth;\n  updateRectShape(controller, cover, 'main', x, y, width, height);\n\n  if (brushOption.transformable) {\n    updateRectShape(controller, cover, 'w', xa, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'e', x2a, ya, handleSize, heighta);\n    updateRectShape(controller, cover, 'n', xa, ya, widtha, handleSize);\n    updateRectShape(controller, cover, 's', xa, y2a, widtha, handleSize);\n    updateRectShape(controller, cover, 'nw', xa, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'ne', x2a, ya, handleSize, handleSize);\n    updateRectShape(controller, cover, 'sw', xa, y2a, handleSize, handleSize);\n    updateRectShape(controller, cover, 'se', x2a, y2a, handleSize, handleSize);\n  }\n}\n\nfunction updateCommon(controller, cover) {\n  var brushOption = cover.__brushOption;\n  var transformable = brushOption.transformable;\n  var mainEl = cover.childAt(0);\n  mainEl.useStyle(makeStyle(brushOption));\n  mainEl.attr({\n    silent: !transformable,\n    cursor: transformable ? 'move' : 'default'\n  });\n  each(['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw'], function (name) {\n    var el = cover.childOfName(name);\n    var globalDir = getGlobalDirection(controller, name);\n    el && el.attr({\n      silent: !transformable,\n      invisible: !transformable,\n      cursor: transformable ? CURSOR_MAP[globalDir] + '-resize' : null\n    });\n  });\n}\n\nfunction updateRectShape(controller, cover, name, x, y, w, h) {\n  var el = cover.childOfName(name);\n  el && el.setShape(pointsToRect(clipByPanel(controller, cover, [[x, y], [x + w, y + h]])));\n}\n\nfunction makeStyle(brushOption) {\n  return zrUtil.defaults({\n    strokeNoScale: true\n  }, brushOption.brushStyle);\n}\n\nfunction formatRectRange(x, y, x2, y2) {\n  var min = [mathMin(x, x2), mathMin(y, y2)];\n  var max = [mathMax(x, x2), mathMax(y, y2)];\n  return [[min[0], max[0]], // x range\n  [min[1], max[1]] // y range\n  ];\n}\n\nfunction getTransform(controller) {\n  return graphic.getTransform(controller.group);\n}\n\nfunction getGlobalDirection(controller, localDirection) {\n  if (localDirection.length > 1) {\n    localDirection = localDirection.split('');\n    var globalDir = [getGlobalDirection(controller, localDirection[0]), getGlobalDirection(controller, localDirection[1])];\n    (globalDir[0] === 'e' || globalDir[0] === 'w') && globalDir.reverse();\n    return globalDir.join('');\n  } else {\n    var map = {\n      w: 'left',\n      e: 'right',\n      n: 'top',\n      s: 'bottom'\n    };\n    var inverseMap = {\n      left: 'w',\n      right: 'e',\n      top: 'n',\n      bottom: 's'\n    };\n    var globalDir = graphic.transformDirection(map[localDirection], getTransform(controller));\n    return inverseMap[globalDir];\n  }\n}\n\nfunction driftRect(toRectRange, fromRectRange, controller, cover, name, dx, dy, e) {\n  var brushOption = cover.__brushOption;\n  var rectRange = toRectRange(brushOption.range);\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(name.split(''), function (namePart) {\n    var ind = DIRECTION_MAP[namePart];\n    rectRange[ind[0]][ind[1]] += localDelta[ind[0]];\n  });\n  brushOption.range = fromRectRange(formatRectRange(rectRange[0][0], rectRange[1][0], rectRange[0][1], rectRange[1][1]));\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction driftPolygon(controller, cover, dx, dy, e) {\n  var range = cover.__brushOption.range;\n  var localDelta = toLocalDelta(controller, dx, dy);\n  each(range, function (point) {\n    point[0] += localDelta[0];\n    point[1] += localDelta[1];\n  });\n  updateCoverAfterCreation(controller, cover);\n  trigger(controller, {\n    isEnd: false\n  });\n}\n\nfunction toLocalDelta(controller, dx, dy) {\n  var thisGroup = controller.group;\n  var localD = thisGroup.transformCoordToLocal(dx, dy);\n  var localZero = thisGroup.transformCoordToLocal(0, 0);\n  return [localD[0] - localZero[0], localD[1] - localZero[1]];\n}\n\nfunction clipByPanel(controller, cover, data) {\n  var panel = getPanelByCover(controller, cover);\n  return panel && panel !== true ? panel.clipPath(data, controller._transform) : zrUtil.clone(data);\n}\n\nfunction pointsToRect(points) {\n  var xmin = mathMin(points[0][0], points[1][0]);\n  var ymin = mathMin(points[0][1], points[1][1]);\n  var xmax = mathMax(points[0][0], points[1][0]);\n  var ymax = mathMax(points[0][1], points[1][1]);\n  return {\n    x: xmin,\n    y: ymin,\n    width: xmax - xmin,\n    height: ymax - ymin\n  };\n}\n\nfunction resetCursor(controller, e, localCursorPoint) {\n  if ( // Check active\n  !controller._brushType // resetCursor should be always called when mouse is in zr area,\n  // but not called when mouse is out of zr area to avoid bad influence\n  // if `mousemove`, `mouseup` are triggered from `document` event.\n  || isOutsideZrArea(controller, e)) {\n    return;\n  }\n\n  var zr = controller._zr;\n  var covers = controller._covers;\n  var currPanel = getPanelByPoint(controller, e, localCursorPoint); // Check whether in covers.\n\n  if (!controller._dragging) {\n    for (var i = 0; i < covers.length; i++) {\n      var brushOption = covers[i].__brushOption;\n\n      if (currPanel && (currPanel === true || brushOption.panelId === currPanel.panelId) && coverRenderers[brushOption.brushType].contain(covers[i], localCursorPoint[0], localCursorPoint[1])) {\n        // Use cursor style set on cover.\n        return;\n      }\n    }\n  }\n\n  currPanel && zr.setCursorStyle('crosshair');\n}\n\nfunction preventDefault(e) {\n  var rawE = e.event;\n  rawE.preventDefault && rawE.preventDefault();\n}\n\nfunction mainShapeContain(cover, x, y) {\n  return cover.childOfName('main').contain(x, y);\n}\n\nfunction updateCoverByMouse(controller, e, localCursorPoint, isEnd) {\n  var creatingCover = controller._creatingCover;\n  var panel = controller._creatingPanel;\n  var thisBrushOption = controller._brushOption;\n  var eventParams;\n\n  controller._track.push(localCursorPoint.slice());\n\n  if (shouldShowCover(controller) || creatingCover) {\n    if (panel && !creatingCover) {\n      thisBrushOption.brushMode === 'single' && clearCovers(controller);\n      var brushOption = zrUtil.clone(thisBrushOption);\n      brushOption.brushType = determineBrushType(brushOption.brushType, panel);\n      brushOption.panelId = panel === true ? null : panel.panelId;\n      creatingCover = controller._creatingCover = createCover(controller, brushOption);\n\n      controller._covers.push(creatingCover);\n    }\n\n    if (creatingCover) {\n      var coverRenderer = coverRenderers[determineBrushType(controller._brushType, panel)];\n      var coverBrushOption = creatingCover.__brushOption;\n      coverBrushOption.range = coverRenderer.getCreatingRange(clipByPanel(controller, creatingCover, controller._track));\n\n      if (isEnd) {\n        endCreating(controller, creatingCover);\n        coverRenderer.updateCommon(controller, creatingCover);\n      }\n\n      updateCoverShape(controller, creatingCover);\n      eventParams = {\n        isEnd: isEnd\n      };\n    }\n  } else if (isEnd && thisBrushOption.brushMode === 'single' && thisBrushOption.removeOnClick) {\n    // Help user to remove covers easily, only by a tiny drag, in 'single' mode.\n    // But a single click do not clear covers, because user may have casual\n    // clicks (for example, click on other component and do not expect covers\n    // disappear).\n    // Only some cover removed, trigger action, but not every click trigger action.\n    if (getPanelByPoint(controller, e, localCursorPoint) && clearCovers(controller)) {\n      eventParams = {\n        isEnd: isEnd,\n        removeOnClick: true\n      };\n    }\n  }\n\n  return eventParams;\n}\n\nfunction determineBrushType(brushType, panel) {\n  if (brushType === 'auto') {\n    return panel.defaultBrushType;\n  }\n\n  return brushType;\n}\n\nvar pointerHandlers = {\n  mousedown: function mousedown(e) {\n    if (this._dragging) {\n      // In case some browser do not support globalOut,\n      // and release mose out side the browser.\n      handleDragEnd(this, e);\n    } else if (!e.target || !e.target.draggable) {\n      preventDefault(e);\n      var localCursorPoint = this.group.transformCoordToLocal(e.offsetX, e.offsetY);\n      this._creatingCover = null;\n      var panel = this._creatingPanel = getPanelByPoint(this, e, localCursorPoint);\n\n      if (panel) {\n        this._dragging = true;\n        this._track = [localCursorPoint.slice()];\n      }\n    }\n  },\n  mousemove: function mousemove(e) {\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = this.group.transformCoordToLocal(x, y);\n    resetCursor(this, e, localCursorPoint);\n\n    if (this._dragging) {\n      preventDefault(e);\n      var eventParams = updateCoverByMouse(this, e, localCursorPoint, false);\n      eventParams && trigger(this, eventParams);\n    }\n  },\n  mouseup: function mouseup(e) {\n    handleDragEnd(this, e);\n  }\n};\n\nfunction handleDragEnd(controller, e) {\n  if (controller._dragging) {\n    preventDefault(e);\n    var x = e.offsetX;\n    var y = e.offsetY;\n    var localCursorPoint = controller.group.transformCoordToLocal(x, y);\n    var eventParams = updateCoverByMouse(controller, e, localCursorPoint, true);\n    controller._dragging = false;\n    controller._track = [];\n    controller._creatingCover = null; // trigger event shoule be at final, after procedure will be nested.\n\n    eventParams && trigger(controller, eventParams);\n  }\n}\n\nfunction isOutsideZrArea(controller, x, y) {\n  var zr = controller._zr;\n  return x < 0 || x > zr.getWidth() || y < 0 || y > zr.getHeight();\n}\n/**\n * key: brushType\n * @type {Object}\n */\n\n\nvar coverRenderers = {\n  lineX: getLineRenderer(0),\n  lineY: getLineRenderer(1),\n  rect: {\n    createCover: function createCover(controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        return range;\n      }, function (range) {\n        return range;\n      }), controller, brushOption, ['w', 'e', 'n', 's', 'se', 'sw', 'ne', 'nw']);\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      var ends = getTrackEnds(localTrack);\n      return formatRectRange(ends[1][0], ends[1][1], ends[0][0], ends[0][1]);\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      updateBaseRect(controller, cover, localRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  },\n  polygon: {\n    createCover: function createCover(controller, brushOption) {\n      var cover = new graphic.Group(); // Do not use graphic.Polygon because graphic.Polyline do not close the\n      // border of the shape when drawing, which is a better experience for user.\n\n      cover.add(new graphic.Polyline({\n        name: 'main',\n        style: makeStyle(brushOption),\n        silent: true\n      }));\n      return cover;\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      return localTrack;\n    },\n    endCreating: function endCreating(controller, cover) {\n      cover.remove(cover.childAt(0)); // Use graphic.Polygon close the shape.\n\n      cover.add(new graphic.Polygon({\n        name: 'main',\n        draggable: true,\n        drift: curry(driftPolygon, controller, cover),\n        ondragend: curry(trigger, controller, {\n          isEnd: true\n        })\n      }));\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      cover.childAt(0).setShape({\n        points: clipByPanel(controller, cover, localRange)\n      });\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  }\n};\n\nfunction getLineRenderer(xyIndex) {\n  return {\n    createCover: function createCover(controller, brushOption) {\n      return createBaseRectCover(curry(driftRect, function (range) {\n        var rectRange = [range, [0, 100]];\n        xyIndex && rectRange.reverse();\n        return rectRange;\n      }, function (rectRange) {\n        return rectRange[xyIndex];\n      }), controller, brushOption, [['w', 'e'], ['n', 's']][xyIndex]);\n    },\n    getCreatingRange: function getCreatingRange(localTrack) {\n      var ends = getTrackEnds(localTrack);\n      var min = mathMin(ends[0][xyIndex], ends[1][xyIndex]);\n      var max = mathMax(ends[0][xyIndex], ends[1][xyIndex]);\n      return [min, max];\n    },\n    updateCoverShape: function updateCoverShape(controller, cover, localRange, brushOption) {\n      var otherExtent; // If brushWidth not specified, fit the panel.\n\n      var panel = getPanelByCover(controller, cover);\n\n      if (panel !== true && panel.getLinearBrushOtherExtent) {\n        otherExtent = panel.getLinearBrushOtherExtent(xyIndex, controller._transform);\n      } else {\n        var zr = controller._zr;\n        otherExtent = [0, [zr.getWidth(), zr.getHeight()][1 - xyIndex]];\n      }\n\n      var rectRange = [localRange, otherExtent];\n      xyIndex && rectRange.reverse();\n      updateBaseRect(controller, cover, rectRange, brushOption);\n    },\n    updateCommon: updateCommon,\n    contain: mainShapeContain\n  };\n}\n\nvar _default = BrushController;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar clazzUtil = require(\"../../util/clazz\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar axisPointerModelHelper = require(\"./modelHelper\");\n\nvar eventTool = require(\"zrender/lib/core/event\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\nvar clone = zrUtil.clone;\nvar bind = zrUtil.bind;\n/**\n * Base axis pointer class in 2D.\n * Implemenents {module:echarts/component/axis/IAxisPointer}.\n */\n\nfunction BaseAxisPointer() {}\n\nBaseAxisPointer.prototype = {\n  /**\n   * @private\n   */\n  _group: null,\n\n  /**\n   * @private\n   */\n  _lastGraphicKey: null,\n\n  /**\n   * @private\n   */\n  _handle: null,\n\n  /**\n   * @private\n   */\n  _dragging: false,\n\n  /**\n   * @private\n   */\n  _lastValue: null,\n\n  /**\n   * @private\n   */\n  _lastStatus: null,\n\n  /**\n   * @private\n   */\n  _payloadInfo: null,\n\n  /**\n   * In px, arbitrary value. Do not set too small,\n   * no animation is ok for most cases.\n   * @protected\n   */\n  animationThreshold: 15,\n\n  /**\n   * @implement\n   */\n  render: function render(axisModel, axisPointerModel, api, forceRender) {\n    var value = axisPointerModel.get('value');\n    var status = axisPointerModel.get('status'); // Bind them to `this`, not in closure, otherwise they will not\n    // be replaced when user calling setOption in not merge mode.\n\n    this._axisModel = axisModel;\n    this._axisPointerModel = axisPointerModel;\n    this._api = api; // Optimize: `render` will be called repeatly during mouse move.\n    // So it is power consuming if performing `render` each time,\n    // especially on mobile device.\n\n    if (!forceRender && this._lastValue === value && this._lastStatus === status) {\n      return;\n    }\n\n    this._lastValue = value;\n    this._lastStatus = status;\n    var group = this._group;\n    var handle = this._handle;\n\n    if (!status || status === 'hide') {\n      // Do not clear here, for animation better.\n      group && group.hide();\n      handle && handle.hide();\n      return;\n    }\n\n    group && group.show();\n    handle && handle.show(); // Otherwise status is 'show'\n\n    var elOption = {};\n    this.makeElOption(elOption, value, axisModel, axisPointerModel, api); // Enable change axis pointer type.\n\n    var graphicKey = elOption.graphicKey;\n\n    if (graphicKey !== this._lastGraphicKey) {\n      this.clear(api);\n    }\n\n    this._lastGraphicKey = graphicKey;\n    var moveAnimation = this._moveAnimation = this.determineAnimation(axisModel, axisPointerModel);\n\n    if (!group) {\n      group = this._group = new graphic.Group();\n      this.createPointerEl(group, elOption, axisModel, axisPointerModel);\n      this.createLabelEl(group, elOption, axisModel, axisPointerModel);\n      api.getZr().add(group);\n    } else {\n      var doUpdateProps = zrUtil.curry(updateProps, axisPointerModel, moveAnimation);\n      this.updatePointerEl(group, elOption, doUpdateProps, axisPointerModel);\n      this.updateLabelEl(group, elOption, doUpdateProps, axisPointerModel);\n    }\n\n    updateMandatoryProps(group, axisPointerModel, true);\n\n    this._renderHandle(value);\n  },\n\n  /**\n   * @implement\n   */\n  remove: function remove(api) {\n    this.clear(api);\n  },\n\n  /**\n   * @implement\n   */\n  dispose: function dispose(api) {\n    this.clear(api);\n  },\n\n  /**\n   * @protected\n   */\n  determineAnimation: function determineAnimation(axisModel, axisPointerModel) {\n    var animation = axisPointerModel.get('animation');\n    var axis = axisModel.axis;\n    var isCategoryAxis = axis.type === 'category';\n    var useSnap = axisPointerModel.get('snap'); // Value axis without snap always do not snap.\n\n    if (!useSnap && !isCategoryAxis) {\n      return false;\n    }\n\n    if (animation === 'auto' || animation == null) {\n      var animationThreshold = this.animationThreshold;\n\n      if (isCategoryAxis && axis.getBandWidth() > animationThreshold) {\n        return true;\n      } // It is important to auto animation when snap used. Consider if there is\n      // a dataZoom, animation will be disabled when too many points exist, while\n      // it will be enabled for better visual effect when little points exist.\n\n\n      if (useSnap) {\n        var seriesDataCount = axisPointerModelHelper.getAxisInfo(axisModel).seriesDataCount;\n        var axisExtent = axis.getExtent(); // Approximate band width\n\n        return Math.abs(axisExtent[0] - axisExtent[1]) / seriesDataCount > animationThreshold;\n      }\n\n      return false;\n    }\n\n    return animation === true;\n  },\n\n  /**\n   * add {pointer, label, graphicKey} to elOption\n   * @protected\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {// Shoule be implemenented by sub-class.\n  },\n\n  /**\n   * @protected\n   */\n  createPointerEl: function createPointerEl(group, elOption, axisModel, axisPointerModel) {\n    var pointerOption = elOption.pointer;\n\n    if (pointerOption) {\n      var pointerEl = inner(group).pointerEl = new graphic[pointerOption.type](clone(elOption.pointer));\n      group.add(pointerEl);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  createLabelEl: function createLabelEl(group, elOption, axisModel, axisPointerModel) {\n    if (elOption.label) {\n      var labelEl = inner(group).labelEl = new graphic.Rect(clone(elOption.label));\n      group.add(labelEl);\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updatePointerEl: function updatePointerEl(group, elOption, updateProps) {\n    var pointerEl = inner(group).pointerEl;\n\n    if (pointerEl && elOption.pointer) {\n      pointerEl.setStyle(elOption.pointer.style);\n      updateProps(pointerEl, {\n        shape: elOption.pointer.shape\n      });\n    }\n  },\n\n  /**\n   * @protected\n   */\n  updateLabelEl: function updateLabelEl(group, elOption, updateProps, axisPointerModel) {\n    var labelEl = inner(group).labelEl;\n\n    if (labelEl) {\n      labelEl.setStyle(elOption.label.style);\n      updateProps(labelEl, {\n        // Consider text length change in vertical axis, animation should\n        // be used on shape, otherwise the effect will be weird.\n        shape: elOption.label.shape,\n        position: elOption.label.position\n      });\n      updateLabelShowHide(labelEl, axisPointerModel);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _renderHandle: function _renderHandle(value) {\n    if (this._dragging || !this.updateHandleTransform) {\n      return;\n    }\n\n    var axisPointerModel = this._axisPointerModel;\n\n    var zr = this._api.getZr();\n\n    var handle = this._handle;\n    var handleModel = axisPointerModel.getModel('handle');\n    var status = axisPointerModel.get('status');\n\n    if (!handleModel.get('show') || !status || status === 'hide') {\n      handle && zr.remove(handle);\n      this._handle = null;\n      return;\n    }\n\n    var isInit;\n\n    if (!this._handle) {\n      isInit = true;\n      handle = this._handle = graphic.createIcon(handleModel.get('icon'), {\n        cursor: 'move',\n        draggable: true,\n        onmousemove: function onmousemove(e) {\n          // Fot mobile devicem, prevent screen slider on the button.\n          eventTool.stop(e.event);\n        },\n        onmousedown: bind(this._onHandleDragMove, this, 0, 0),\n        drift: bind(this._onHandleDragMove, this),\n        ondragend: bind(this._onHandleDragEnd, this)\n      });\n      zr.add(handle);\n    }\n\n    updateMandatoryProps(handle, axisPointerModel, false); // update style\n\n    var includeStyles = ['color', 'borderColor', 'borderWidth', 'opacity', 'shadowColor', 'shadowBlur', 'shadowOffsetX', 'shadowOffsetY'];\n    handle.setStyle(handleModel.getItemStyle(null, includeStyles)); // update position\n\n    var handleSize = handleModel.get('size');\n\n    if (!zrUtil.isArray(handleSize)) {\n      handleSize = [handleSize, handleSize];\n    }\n\n    handle.attr('scale', [handleSize[0] / 2, handleSize[1] / 2]);\n    throttleUtil.createOrUpdate(this, '_doDispatchAxisPointer', handleModel.get('throttle') || 0, 'fixRate');\n\n    this._moveHandleToValue(value, isInit);\n  },\n\n  /**\n   * @private\n   */\n  _moveHandleToValue: function _moveHandleToValue(value, isInit) {\n    updateProps(this._axisPointerModel, !isInit && this._moveAnimation, this._handle, getHandleTransProps(this.getHandleTransform(value, this._axisModel, this._axisPointerModel)));\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragMove: function _onHandleDragMove(dx, dy) {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    this._dragging = true; // Persistent for throttle.\n\n    var trans = this.updateHandleTransform(getHandleTransProps(handle), [dx, dy], this._axisModel, this._axisPointerModel);\n    this._payloadInfo = trans;\n    handle.stopAnimation();\n    handle.attr(getHandleTransProps(trans));\n    inner(handle).lastProp = null;\n\n    this._doDispatchAxisPointer();\n  },\n\n  /**\n   * Throttled method.\n   * @private\n   */\n  _doDispatchAxisPointer: function _doDispatchAxisPointer() {\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var payloadInfo = this._payloadInfo;\n    var axisModel = this._axisModel;\n\n    this._api.dispatchAction({\n      type: 'updateAxisPointer',\n      x: payloadInfo.cursorPoint[0],\n      y: payloadInfo.cursorPoint[1],\n      tooltipOption: payloadInfo.tooltipOption,\n      axesInfo: [{\n        axisDim: axisModel.axis.dim,\n        axisIndex: axisModel.componentIndex\n      }]\n    });\n  },\n\n  /**\n   * @private\n   */\n  _onHandleDragEnd: function _onHandleDragEnd(moveAnimation) {\n    this._dragging = false;\n    var handle = this._handle;\n\n    if (!handle) {\n      return;\n    }\n\n    var value = this._axisPointerModel.get('value'); // Consider snap or categroy axis, handle may be not consistent with\n    // axisPointer. So move handle to align the exact value position when\n    // drag ended.\n\n\n    this._moveHandleToValue(value); // For the effect: tooltip will be shown when finger holding on handle\n    // button, and will be hidden after finger left handle button.\n\n\n    this._api.dispatchAction({\n      type: 'hideTip'\n    });\n  },\n\n  /**\n   * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {number} value\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0}\n   */\n  getHandleTransform: null,\n\n  /**\n   * * Should be implemenented by sub-class if support `handle`.\n   * @protected\n   * @param {Object} transform {position, rotation}\n   * @param {Array.<number>} delta [dx, dy]\n   * @param {module:echarts/model/Model} axisModel\n   * @param {module:echarts/model/Model} axisPointerModel\n   * @return {Object} {position: [x, y], rotation: 0, cursorPoint: [x, y]}\n   */\n  updateHandleTransform: null,\n\n  /**\n   * @private\n   */\n  clear: function clear(api) {\n    this._lastValue = null;\n    this._lastStatus = null;\n    var zr = api.getZr();\n    var group = this._group;\n    var handle = this._handle;\n\n    if (zr && group) {\n      this._lastGraphicKey = null;\n      group && zr.remove(group);\n      handle && zr.remove(handle);\n      this._group = null;\n      this._handle = null;\n      this._payloadInfo = null;\n    }\n  },\n\n  /**\n   * @protected\n   */\n  doClear: function doClear() {// Implemented by sub-class if necessary.\n  },\n\n  /**\n   * @protected\n   * @param {Array.<number>} xy\n   * @param {Array.<number>} wh\n   * @param {number} [xDimIndex=0] or 1\n   */\n  buildLabel: function buildLabel(xy, wh, xDimIndex) {\n    xDimIndex = xDimIndex || 0;\n    return {\n      x: xy[xDimIndex],\n      y: xy[1 - xDimIndex],\n      width: wh[xDimIndex],\n      height: wh[1 - xDimIndex]\n    };\n  }\n};\nBaseAxisPointer.prototype.constructor = BaseAxisPointer;\n\nfunction updateProps(animationModel, moveAnimation, el, props) {\n  // Animation optimize.\n  if (!propsEqual(inner(el).lastProp, props)) {\n    inner(el).lastProp = props;\n    moveAnimation ? graphic.updateProps(el, props, animationModel) : (el.stopAnimation(), el.attr(props));\n  }\n}\n\nfunction propsEqual(lastProps, newProps) {\n  if (zrUtil.isObject(lastProps) && zrUtil.isObject(newProps)) {\n    var equals = true;\n    zrUtil.each(newProps, function (item, key) {\n      equals = equals && propsEqual(lastProps[key], item);\n    });\n    return !!equals;\n  } else {\n    return lastProps === newProps;\n  }\n}\n\nfunction updateLabelShowHide(labelEl, axisPointerModel) {\n  labelEl[axisPointerModel.get('label.show') ? 'show' : 'hide']();\n}\n\nfunction getHandleTransProps(trans) {\n  return {\n    position: trans.position.slice(),\n    rotation: trans.rotation || 0\n  };\n}\n\nfunction updateMandatoryProps(group, axisPointerModel, silent) {\n  var z = axisPointerModel.get('z');\n  var zlevel = axisPointerModel.get('zlevel');\n  group && group.traverse(function (el) {\n    if (el.type !== 'group') {\n      z != null && (el.z = z);\n      zlevel != null && (el.zlevel = zlevel);\n      el.silent = silent;\n    }\n  });\n}\n\nclazzUtil.enableClassExtend(BaseAxisPointer);\nvar _default = BaseAxisPointer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar Component = require(\"../../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nComponent.registerSubTypeDefaulter('dataZoom', function () {\n  // Default 'slider' when no type specified.\n  return 'slider';\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar formatUtil = require(\"../../util/format\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AXIS_DIMS = ['x', 'y', 'z', 'radius', 'angle', 'single']; // Supported coords.\n\nvar COORDS = ['cartesian2d', 'polar', 'singleAxis'];\n/**\n * @param {string} coordType\n * @return {boolean}\n */\n\nfunction isCoordSupported(coordType) {\n  return zrUtil.indexOf(COORDS, coordType) >= 0;\n}\n/**\n * Create \"each\" method to iterate names.\n *\n * @pubilc\n * @param  {Array.<string>} names\n * @param  {Array.<string>=} attrs\n * @return {Function}\n */\n\n\nfunction createNameEach(names, attrs) {\n  names = names.slice();\n  var capitalNames = zrUtil.map(names, formatUtil.capitalFirst);\n  attrs = (attrs || []).slice();\n  var capitalAttrs = zrUtil.map(attrs, formatUtil.capitalFirst);\n  return function (callback, context) {\n    zrUtil.each(names, function (name, index) {\n      var nameObj = {\n        name: name,\n        capital: capitalNames[index]\n      };\n\n      for (var j = 0; j < attrs.length; j++) {\n        nameObj[attrs[j]] = name + capitalAttrs[j];\n      }\n\n      callback.call(context, nameObj);\n    });\n  };\n}\n/**\n * Iterate each dimension name.\n *\n * @public\n * @param {Function} callback The parameter is like:\n *                            {\n *                                name: 'angle',\n *                                capital: 'Angle',\n *                                axis: 'angleAxis',\n *                                axisIndex: 'angleAixs',\n *                                index: 'angleIndex'\n *                            }\n * @param {Object} context\n */\n\n\nvar eachAxisDim = createNameEach(AXIS_DIMS, ['axisIndex', 'axis', 'index', 'id']);\n/**\n * If tow dataZoomModels has the same axis controlled, we say that they are 'linked'.\n * dataZoomModels and 'links' make up one or more graphics.\n * This function finds the graphic where the source dataZoomModel is in.\n *\n * @public\n * @param {Function} forEachNode Node iterator.\n * @param {Function} forEachEdgeType edgeType iterator\n * @param {Function} edgeIdGetter Giving node and edgeType, return an array of edge id.\n * @return {Function} Input: sourceNode, Output: Like {nodes: [], dims: {}}\n */\n\nfunction createLinkedNodesFinder(forEachNode, forEachEdgeType, edgeIdGetter) {\n  return function (sourceNode) {\n    var result = {\n      nodes: [],\n      records: {} // key: edgeType.name, value: Object (key: edge id, value: boolean).\n\n    };\n    forEachEdgeType(function (edgeType) {\n      result.records[edgeType.name] = {};\n    });\n\n    if (!sourceNode) {\n      return result;\n    }\n\n    absorb(sourceNode, result);\n    var existsLink;\n\n    do {\n      existsLink = false;\n      forEachNode(processSingleNode);\n    } while (existsLink);\n\n    function processSingleNode(node) {\n      if (!isNodeAbsorded(node, result) && isLinked(node, result)) {\n        absorb(node, result);\n        existsLink = true;\n      }\n    }\n\n    return result;\n  };\n\n  function isNodeAbsorded(node, result) {\n    return zrUtil.indexOf(result.nodes, node) >= 0;\n  }\n\n  function isLinked(node, result) {\n    var hasLink = false;\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] && (hasLink = true);\n      });\n    });\n    return hasLink;\n  }\n\n  function absorb(node, result) {\n    result.nodes.push(node);\n    forEachEdgeType(function (edgeType) {\n      zrUtil.each(edgeIdGetter(node, edgeType) || [], function (edgeId) {\n        result.records[edgeType.name][edgeId] = true;\n      });\n    });\n  }\n}\n\nexports.isCoordSupported = isCoordSupported;\nexports.createNameEach = createNameEach;\nexports.eachAxisDim = eachAxisDim;\nexports.createLinkedNodesFinder = createLinkedNodesFinder;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\necharts.registerProcessor({\n  // `dataZoomProcessor` will only be performed in needed series. Consider if\n  // there is a line series and a pie series, it is better not to update the\n  // line series if only pie series is needed to be updated.\n  getTargetSeries: function getTargetSeries(ecModel) {\n    var seriesModelMap = createHashMap();\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        var axisProxy = dataZoomModel.getAxisProxy(dimNames.name, axisIndex);\n        each(axisProxy.getTargetSeriesModels(), function (seriesModel) {\n          seriesModelMap.set(seriesModel.uid, seriesModel);\n        });\n      });\n    });\n    return seriesModelMap;\n  },\n  modifyOutputEnd: true,\n  // Consider appendData, where filter should be performed. Because data process is\n  // in block mode currently, it is not need to worry about that the overallProgress\n  // execute every frame.\n  overallReset: function overallReset(ecModel, api) {\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // We calculate window and reset axis here but not in model\n      // init stage and not after action dispatch handler, because\n      // reset should be called after seriesData.restoreData.\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).reset(dataZoomModel, api);\n      }); // Caution: data zoom filtering is order sensitive when using\n      // percent range and no min/max/scale set on axis.\n      // For example, we have dataZoom definition:\n      // [\n      //      {xAxisIndex: 0, start: 30, end: 70},\n      //      {yAxisIndex: 0, start: 20, end: 80}\n      // ]\n      // In this case, [20, 80] of y-dataZoom should be based on data\n      // that have filtered by x-dataZoom using range of [30, 70],\n      // but should not be based on full raw data. Thus sliding\n      // x-dataZoom will change both ranges of xAxis and yAxis,\n      // while sliding y-dataZoom will only change the range of yAxis.\n      // So we should filter x-axis after reset x-axis immediately,\n      // and then reset y-axis and filter y-axis.\n\n      dataZoomModel.eachTargetAxis(function (dimNames, axisIndex, dataZoomModel) {\n        dataZoomModel.getAxisProxy(dimNames.name, axisIndex).filterData(dataZoomModel, api);\n      });\n    });\n    ecModel.eachComponent('dataZoom', function (dataZoomModel) {\n      // Fullfill all of the range props so that user\n      // is able to get them from chart.getOption().\n      var axisProxy = dataZoomModel.findRepresentativeAxisProxy();\n      var percentRange = axisProxy.getDataPercentWindow();\n      var valueRange = axisProxy.getDataValueWindow();\n      dataZoomModel.setCalculatedRange({\n        start: percentRange[0],\n        end: percentRange[1],\n        startValue: valueRange[0],\n        endValue: valueRange[1]\n      });\n    });\n  }\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar helper = require(\"./helper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.registerAction('dataZoom', function (payload, ecModel) {\n  var linkedNodesFinder = helper.createLinkedNodesFinder(zrUtil.bind(ecModel.eachComponent, ecModel, 'dataZoom'), helper.eachAxisDim, function (model, dimNames) {\n    return model.get(dimNames.axisIndex);\n  });\n  var effectedModels = [];\n  ecModel.eachComponent({\n    mainType: 'dataZoom',\n    query: payload\n  }, function (model, index) {\n    effectedModels.push.apply(effectedModels, linkedNodesFinder(model).nodes);\n  });\n  zrUtil.each(effectedModels, function (dataZoomModel, index) {\n    dataZoomModel.setRawRange({\n      start: payload.start,\n      end: payload.end,\n      startValue: payload.startValue,\n      endValue: payload.endValue\n    });\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar formatUtil = require(\"../../util/format\");\n\nvar dataFormatMixin = require(\"../../model/mixin/dataFormat\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar addCommas = formatUtil.addCommas;\nvar encodeHTML = formatUtil.encodeHTML;\n\nfunction fillLabel(opt) {\n  modelUtil.defaultEmphasis(opt, 'label', ['show']);\n}\n\nvar MarkerModel = echarts.extendComponentModel({\n  type: 'marker',\n  dependencies: ['series', 'grid', 'polar', 'geo'],\n\n  /**\n   * @overrite\n   */\n  init: function init(option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n\n    this._mergeOption(option, ecModel, false, true);\n  },\n\n  /**\n   * @return {boolean}\n   */\n  isAnimationEnabled: function isAnimationEnabled() {\n    if (env.node) {\n      return false;\n    }\n\n    var hostSeries = this.__hostSeries;\n    return this.getShallow('animation') && hostSeries && hostSeries.isAnimationEnabled();\n  },\n\n  /**\n   * @overrite\n   */\n  mergeOption: function mergeOption(newOpt, ecModel) {\n    this._mergeOption(newOpt, ecModel, false, false);\n  },\n  _mergeOption: function _mergeOption(newOpt, ecModel, createdBySelf, isInit) {\n    var MarkerModel = this.constructor;\n    var modelPropName = this.mainType + 'Model';\n\n    if (!createdBySelf) {\n      ecModel.eachSeries(function (seriesModel) {\n        var markerOpt = seriesModel.get(this.mainType, true);\n        var markerModel = seriesModel[modelPropName];\n\n        if (!markerOpt || !markerOpt.data) {\n          seriesModel[modelPropName] = null;\n          return;\n        }\n\n        if (!markerModel) {\n          if (isInit) {\n            // Default label emphasis `position` and `show`\n            fillLabel(markerOpt);\n          }\n\n          zrUtil.each(markerOpt.data, function (item) {\n            // FIXME Overwrite fillLabel method ?\n            if (item instanceof Array) {\n              fillLabel(item[0]);\n              fillLabel(item[1]);\n            } else {\n              fillLabel(item);\n            }\n          });\n          markerModel = new MarkerModel(markerOpt, this, ecModel);\n          zrUtil.extend(markerModel, {\n            mainType: this.mainType,\n            // Use the same series index and name\n            seriesIndex: seriesModel.seriesIndex,\n            name: seriesModel.name,\n            createdBySelf: true\n          });\n          markerModel.__hostSeries = seriesModel;\n        } else {\n          markerModel._mergeOption(markerOpt, ecModel, true);\n        }\n\n        seriesModel[modelPropName] = markerModel;\n      }, this);\n    }\n  },\n  formatTooltip: function formatTooltip(dataIndex) {\n    var data = this.getData();\n    var value = this.getRawValue(dataIndex);\n    var formattedValue = zrUtil.isArray(value) ? zrUtil.map(value, addCommas).join(', ') : addCommas(value);\n    var name = data.getName(dataIndex);\n    var html = encodeHTML(this.name);\n\n    if (value != null || name) {\n      html += '<br />';\n    }\n\n    if (name) {\n      html += encodeHTML(name);\n\n      if (value != null) {\n        html += ' : ';\n      }\n    }\n\n    if (value != null) {\n      html += encodeHTML(formattedValue);\n    }\n\n    return html;\n  },\n  getData: function getData() {\n    return this._data;\n  },\n  setData: function setData(data) {\n    this._data = data;\n  }\n});\nzrUtil.mixin(MarkerModel, dataFormatMixin);\nvar _default = MarkerModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar numberUtil = require(\"../../util/number\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar indexOf = zrUtil.indexOf;\n\nfunction hasXOrY(item) {\n  return !(isNaN(parseFloat(item.x)) && isNaN(parseFloat(item.y)));\n}\n\nfunction hasXAndY(item) {\n  return !isNaN(parseFloat(item.x)) && !isNaN(parseFloat(item.y));\n} // Make it simple, do not visit all stacked value to count precision.\n// function getPrecision(data, valueAxisDim, dataIndex) {\n//     var precision = -1;\n//     var stackedDim = data.mapDimension(valueAxisDim);\n//     do {\n//         precision = Math.max(\n//             numberUtil.getPrecision(data.get(stackedDim, dataIndex)),\n//             precision\n//         );\n//         var stackedOnSeries = data.getCalculationInfo('stackedOnSeries');\n//         if (stackedOnSeries) {\n//             var byValue = data.get(data.getCalculationInfo('stackedByDimension'), dataIndex);\n//             data = stackedOnSeries.getData();\n//             dataIndex = data.indexOf(data.getCalculationInfo('stackedByDimension'), byValue);\n//             stackedDim = data.getCalculationInfo('stackedDimension');\n//         }\n//         else {\n//             data = null;\n//         }\n//     } while (data);\n//     return precision;\n// }\n\n\nfunction markerTypeCalculatorWithExtent(mlType, data, otherDataDim, targetDataDim, otherCoordIndex, targetCoordIndex) {\n  var coordArr = [];\n  var stacked = isDimensionStacked(data, targetDataDim\n  /*, otherDataDim*/\n  );\n  var calcDataDim = stacked ? data.getCalculationInfo('stackResultDimension') : targetDataDim;\n  var value = numCalculate(data, calcDataDim, mlType);\n  var dataIndex = data.indicesOfNearest(calcDataDim, value)[0];\n  coordArr[otherCoordIndex] = data.get(otherDataDim, dataIndex);\n  coordArr[targetCoordIndex] = data.get(calcDataDim, dataIndex);\n  var coordArrValue = data.get(targetDataDim, dataIndex); // Make it simple, do not visit all stacked value to count precision.\n\n  var precision = numberUtil.getPrecision(data.get(targetDataDim, dataIndex));\n  precision = Math.min(precision, 20);\n\n  if (precision >= 0) {\n    coordArr[targetCoordIndex] = +coordArr[targetCoordIndex].toFixed(precision);\n  }\n\n  return [coordArr, coordArrValue];\n}\n\nvar curry = zrUtil.curry; // TODO Specified percent\n\nvar markerTypeCalculator = {\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  min: curry(markerTypeCalculatorWithExtent, 'min'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  max: curry(markerTypeCalculatorWithExtent, 'max'),\n\n  /**\n   * @method\n   * @param {module:echarts/data/List} data\n   * @param {string} baseAxisDim\n   * @param {string} valueAxisDim\n   */\n  average: curry(markerTypeCalculatorWithExtent, 'average')\n};\n/**\n * Transform markPoint data item to format used in List by do the following\n * 1. Calculate statistic like `max`, `min`, `average`\n * 2. Convert `item.xAxis`, `item.yAxis` to `item.coord` array\n * @param  {module:echarts/model/Series} seriesModel\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {Object}\n */\n\nfunction dataTransform(seriesModel, item) {\n  var data = seriesModel.getData();\n  var coordSys = seriesModel.coordinateSystem; // 1. If not specify the position with pixel directly\n  // 2. If `coord` is not a data array. Which uses `xAxis`,\n  // `yAxis` to specify the coord on each dimension\n  // parseFloat first because item.x and item.y can be percent string like '20%'\n\n  if (item && !hasXAndY(item) && !zrUtil.isArray(item.coord) && coordSys) {\n    var dims = coordSys.dimensions;\n    var axisInfo = getAxisInfo(item, data, coordSys, seriesModel); // Clone the option\n    // Transform the properties xAxis, yAxis, radiusAxis, angleAxis, geoCoord to value\n\n    item = zrUtil.clone(item);\n\n    if (item.type && markerTypeCalculator[item.type] && axisInfo.baseAxis && axisInfo.valueAxis) {\n      var otherCoordIndex = indexOf(dims, axisInfo.baseAxis.dim);\n      var targetCoordIndex = indexOf(dims, axisInfo.valueAxis.dim);\n      var coordInfo = markerTypeCalculator[item.type](data, axisInfo.baseDataDim, axisInfo.valueDataDim, otherCoordIndex, targetCoordIndex);\n      item.coord = coordInfo[0]; // Force to use the value of calculated value.\n      // let item use the value without stack.\n\n      item.value = coordInfo[1];\n    } else {\n      // FIXME Only has one of xAxis and yAxis.\n      var coord = [item.xAxis != null ? item.xAxis : item.radiusAxis, item.yAxis != null ? item.yAxis : item.angleAxis]; // Each coord support max, min, average\n\n      for (var i = 0; i < 2; i++) {\n        if (markerTypeCalculator[coord[i]]) {\n          coord[i] = numCalculate(data, data.mapDimension(dims[i]), coord[i]);\n        }\n      }\n\n      item.coord = coord;\n    }\n  }\n\n  return item;\n}\n\nfunction getAxisInfo(item, data, coordSys, seriesModel) {\n  var ret = {};\n\n  if (item.valueIndex != null || item.valueDim != null) {\n    ret.valueDataDim = item.valueIndex != null ? data.getDimension(item.valueIndex) : item.valueDim;\n    ret.valueAxis = coordSys.getAxis(dataDimToCoordDim(seriesModel, ret.valueDataDim));\n    ret.baseAxis = coordSys.getOtherAxis(ret.valueAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n  } else {\n    ret.baseAxis = seriesModel.getBaseAxis();\n    ret.valueAxis = coordSys.getOtherAxis(ret.baseAxis);\n    ret.baseDataDim = data.mapDimension(ret.baseAxis.dim);\n    ret.valueDataDim = data.mapDimension(ret.valueAxis.dim);\n  }\n\n  return ret;\n}\n\nfunction dataDimToCoordDim(seriesModel, dataDim) {\n  var data = seriesModel.getData();\n  var dimensions = data.dimensions;\n  dataDim = data.getDimension(dataDim);\n\n  for (var i = 0; i < dimensions.length; i++) {\n    var dimItem = data.getDimensionInfo(dimensions[i]);\n\n    if (dimItem.name === dataDim) {\n      return dimItem.coordDim;\n    }\n  }\n}\n/**\n * Filter data which is out of coordinateSystem range\n * [dataFilter description]\n * @param  {module:echarts/coord/*} [coordSys]\n * @param  {Object} item\n * @return {boolean}\n */\n\n\nfunction dataFilter(coordSys, item) {\n  // Alwalys return true if there is no coordSys\n  return coordSys && coordSys.containData && item.coord && !hasXOrY(item) ? coordSys.containData(item.coord) : true;\n}\n\nfunction dimValueGetter(item, dimName, dataIndex, dimIndex) {\n  // x, y, radius, angle\n  if (dimIndex < 2) {\n    return item.coord && item.coord[dimIndex];\n  }\n\n  return item.value;\n}\n\nfunction numCalculate(data, valueDataDim, type) {\n  if (type === 'average') {\n    var sum = 0;\n    var count = 0;\n    data.each(valueDataDim, function (val, idx) {\n      if (!isNaN(val)) {\n        sum += val;\n        count++;\n      }\n    });\n    return sum / count;\n  } else if (type === 'median') {\n    return data.getMedian(valueDataDim);\n  } else {\n    // max & min\n    return data.getDataExtent(valueDataDim, true)[type === 'max' ? 1 : 0];\n  }\n}\n\nexports.dataTransform = dataTransform;\nexports.getAxisInfo = getAxisInfo;\nexports.dataFilter = dataFilter;\nexports.dimValueGetter = dimValueGetter;\nexports.numCalculate = numCalculate;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar _default = echarts.extendComponentView({\n  type: 'marker',\n  init: function init() {\n    /**\n     * Markline grouped by series\n     * @private\n     * @type {module:zrender/core/util.HashMap}\n     */\n    this.markerGroupMap = zrUtil.createHashMap();\n  },\n  render: function render(markerModel, ecModel, api) {\n    var markerGroupMap = this.markerGroupMap;\n    markerGroupMap.each(function (item) {\n      item.__keep = false;\n    });\n    var markerModelKey = this.type + 'Model';\n    ecModel.eachSeries(function (seriesModel) {\n      var markerModel = seriesModel[markerModelKey];\n      markerModel && this.renderSeries(seriesModel, markerModel, ecModel, api);\n    }, this);\n    markerGroupMap.each(function (item) {\n      !item.__keep && this.group.remove(item.group);\n    }, this);\n  },\n  renderSeries: function renderSeries() {}\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar ComponentModel = require(\"../model/Component\");\n\nvar ComponentView = require(\"../view/Component\");\n\nvar _sourceHelper = require(\"../data/helper/sourceHelper\");\n\nvar detectSourceFormat = _sourceHelper.detectSourceFormat;\n\nvar _sourceType = require(\"../data/helper/sourceType\");\n\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * This module is imported by echarts directly.\n *\n * Notice:\n * Always keep this file exists for backward compatibility.\n * Because before 4.1.0, dataset is an optional component,\n * some users may import this module manually.\n */\n\nComponentModel.extend({\n  type: 'dataset',\n\n  /**\n   * @protected\n   */\n  defaultOption: {\n    // 'row', 'column'\n    seriesLayoutBy: SERIES_LAYOUT_BY_COLUMN,\n    // null/'auto': auto detect header, see \"module:echarts/data/helper/sourceHelper\"\n    sourceHeader: null,\n    dimensions: null,\n    source: null\n  },\n  optionUpdated: function optionUpdated() {\n    detectSourceFormat(this);\n  }\n});\nComponentView.extend({\n  type: 'dataset'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction rectCoordAxisBuildSplitArea(axisView, axisGroup, axisModel, gridModel) {\n  var axis = axisModel.axis;\n\n  if (axis.scale.isBlank()) {\n    return;\n  }\n\n  var splitAreaModel = axisModel.getModel('splitArea');\n  var areaStyleModel = splitAreaModel.getModel('areaStyle');\n  var areaColors = areaStyleModel.get('color');\n  var gridRect = gridModel.coordinateSystem.getRect();\n  var ticksCoords = axis.getTicksCoords({\n    tickModel: splitAreaModel,\n    clamp: true\n  });\n\n  if (!ticksCoords.length) {\n    return;\n  } // For Making appropriate splitArea animation, the color and anid\n  // should be corresponding to previous one if possible.\n\n\n  var areaColorsLen = areaColors.length;\n  var lastSplitAreaColors = axisView.__splitAreaColors;\n  var newSplitAreaColors = zrUtil.createHashMap();\n  var colorIndex = 0;\n\n  if (lastSplitAreaColors) {\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var cIndex = lastSplitAreaColors.get(ticksCoords[i].tickValue);\n\n      if (cIndex != null) {\n        colorIndex = (cIndex + (areaColorsLen - 1) * i) % areaColorsLen;\n        break;\n      }\n    }\n  }\n\n  var prev = axis.toGlobalCoord(ticksCoords[0].coord);\n  var areaStyle = areaStyleModel.getAreaStyle();\n  areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n  for (var i = 1; i < ticksCoords.length; i++) {\n    var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n    var x;\n    var y;\n    var width;\n    var height;\n\n    if (axis.isHorizontal()) {\n      x = prev;\n      y = gridRect.y;\n      width = tickCoord - x;\n      height = gridRect.height;\n      prev = x + width;\n    } else {\n      x = gridRect.x;\n      y = prev;\n      width = gridRect.width;\n      height = tickCoord - y;\n      prev = y + height;\n    }\n\n    var tickValue = ticksCoords[i - 1].tickValue;\n    tickValue != null && newSplitAreaColors.set(tickValue, colorIndex);\n    axisGroup.add(new graphic.Rect({\n      anid: tickValue != null ? 'area_' + tickValue : null,\n      shape: {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      },\n      style: zrUtil.defaults({\n        fill: areaColors[colorIndex]\n      }, areaStyle),\n      silent: true\n    }));\n    colorIndex = (colorIndex + 1) % areaColorsLen;\n  }\n\n  axisView.__splitAreaColors = newSplitAreaColors;\n}\n\nfunction rectCoordAxisHandleRemove(axisView) {\n  axisView.__splitAreaColors = null;\n}\n\nexports.rectCoordAxisBuildSplitArea = rectCoordAxisBuildSplitArea;\nexports.rectCoordAxisHandleRemove = rectCoordAxisHandleRemove;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar RoamController = require(\"./RoamController\");\n\nvar roamHelper = require(\"../../component/helper/roamHelper\");\n\nvar _cursorHelper = require(\"../../component/helper/cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar geoSourceManager = require(\"../../coord/geo/geoSourceManager\");\n\nvar _component = require(\"../../util/component\");\n\nvar getUID = _component.getUID;\n\nvar Transformable = require(\"zrender/lib/mixin/Transformable\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction getFixedItemStyle(model) {\n  var itemStyle = model.getItemStyle();\n  var areaColor = model.get('areaColor'); // If user want the color not to be changed when hover,\n  // they should both set areaColor and color to be null.\n\n  if (areaColor != null) {\n    itemStyle.fill = areaColor;\n  }\n\n  return itemStyle;\n}\n\nfunction updateMapSelectHandler(mapDraw, mapOrGeoModel, regionsGroup, api, fromView) {\n  regionsGroup.off('click');\n  regionsGroup.off('mousedown');\n\n  if (mapOrGeoModel.get('selectedMode')) {\n    regionsGroup.on('mousedown', function () {\n      mapDraw._mouseDownFlag = true;\n    });\n    regionsGroup.on('click', function (e) {\n      if (!mapDraw._mouseDownFlag) {\n        return;\n      }\n\n      mapDraw._mouseDownFlag = false;\n      var el = e.target;\n\n      while (!el.__regions) {\n        el = el.parent;\n      }\n\n      if (!el) {\n        return;\n      }\n\n      var action = {\n        type: (mapOrGeoModel.mainType === 'geo' ? 'geo' : 'map') + 'ToggleSelect',\n        batch: zrUtil.map(el.__regions, function (region) {\n          return {\n            name: region.name,\n            from: fromView.uid\n          };\n        })\n      };\n      action[mapOrGeoModel.mainType + 'Id'] = mapOrGeoModel.id;\n      api.dispatchAction(action);\n      updateMapSelected(mapOrGeoModel, regionsGroup);\n    });\n  }\n}\n\nfunction updateMapSelected(mapOrGeoModel, regionsGroup) {\n  // FIXME\n  regionsGroup.eachChild(function (otherRegionEl) {\n    zrUtil.each(otherRegionEl.__regions, function (region) {\n      otherRegionEl.trigger(mapOrGeoModel.isSelected(region.name) ? 'emphasis' : 'normal');\n    });\n  });\n}\n/**\n * @alias module:echarts/component/helper/MapDraw\n * @param {module:echarts/ExtensionAPI} api\n * @param {boolean} updateGroup\n */\n\n\nfunction MapDraw(api, updateGroup) {\n  var group = new graphic.Group();\n  /**\n   * @type {string}\n   * @private\n   */\n\n  this.uid = getUID('ec_map_draw');\n  /**\n   * @type {module:echarts/component/helper/RoamController}\n   * @private\n   */\n\n  this._controller = new RoamController(api.getZr());\n  /**\n   * @type {Object} {target, zoom, zoomLimit}\n   * @private\n   */\n\n  this._controllerHost = {\n    target: updateGroup ? group : null\n  };\n  /**\n   * @type {module:zrender/container/Group}\n   * @readOnly\n   */\n\n  this.group = group;\n  /**\n   * @type {boolean}\n   * @private\n   */\n\n  this._updateGroup = updateGroup;\n  /**\n   * This flag is used to make sure that only one among\n   * `pan`, `zoom`, `click` can occurs, otherwise 'selected'\n   * action may be triggered when `pan`, which is unexpected.\n   * @type {booelan}\n   */\n\n  this._mouseDownFlag;\n  /**\n   * @type {string}\n   */\n\n  this._mapName;\n  /**\n   * @type {boolean}\n   */\n\n  this._initialized;\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._regionsGroup = new graphic.Group());\n  /**\n   * @type {module:zrender/container/Group}\n   */\n\n  group.add(this._backgroundGroup = new graphic.Group());\n}\n\nMapDraw.prototype = {\n  constructor: MapDraw,\n  draw: function draw(mapOrGeoModel, ecModel, api, fromView, payload) {\n    var isGeo = mapOrGeoModel.mainType === 'geo'; // Map series has data. GEO model that controlled by map series\n    // will be assigned with map data. Other GEO model has no data.\n\n    var data = mapOrGeoModel.getData && mapOrGeoModel.getData();\n    isGeo && ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'map'\n    }, function (mapSeries) {\n      if (!data && mapSeries.getHostGeoModel() === mapOrGeoModel) {\n        data = mapSeries.getData();\n      }\n    });\n    var geo = mapOrGeoModel.coordinateSystem;\n\n    this._updateBackground(geo);\n\n    var regionsGroup = this._regionsGroup;\n    var group = this.group;\n    var transformInfo = geo.getTransformInfo(); // No animation when first draw or in action\n\n    var isFirstDraw = !regionsGroup.childAt(0) || payload;\n    var targetScale;\n\n    if (isFirstDraw) {\n      group.transform = transformInfo.roamTransform;\n      group.decomposeTransform();\n      group.dirty();\n    } else {\n      var target = new Transformable();\n      target.transform = transformInfo.roamTransform;\n      target.decomposeTransform();\n      var props = {\n        scale: target.scale,\n        position: target.position\n      };\n      targetScale = target.scale;\n      graphic.updateProps(group, props, mapOrGeoModel);\n    }\n\n    var scale = transformInfo.rawScale;\n    var position = transformInfo.rawPosition;\n    regionsGroup.removeAll();\n    var itemStyleAccessPath = ['itemStyle'];\n    var hoverItemStyleAccessPath = ['emphasis', 'itemStyle'];\n    var labelAccessPath = ['label'];\n    var hoverLabelAccessPath = ['emphasis', 'label'];\n    var nameMap = zrUtil.createHashMap();\n    zrUtil.each(geo.regions, function (region) {\n      // Consider in GeoJson properties.name may be duplicated, for example,\n      // there is multiple region named \"United Kindom\" or \"France\" (so many\n      // colonies). And it is not appropriate to merge them in geo, which\n      // will make them share the same label and bring trouble in label\n      // location calculation.\n      var regionGroup = nameMap.get(region.name) || nameMap.set(region.name, new graphic.Group());\n      var compoundPath = new graphic.CompoundPath({\n        segmentIgnoreThreshold: 1,\n        shape: {\n          paths: []\n        }\n      });\n      regionGroup.add(compoundPath);\n      var regionModel = mapOrGeoModel.getRegionModel(region.name) || mapOrGeoModel;\n      var itemStyleModel = regionModel.getModel(itemStyleAccessPath);\n      var hoverItemStyleModel = regionModel.getModel(hoverItemStyleAccessPath);\n      var itemStyle = getFixedItemStyle(itemStyleModel);\n      var hoverItemStyle = getFixedItemStyle(hoverItemStyleModel);\n      var labelModel = regionModel.getModel(labelAccessPath);\n      var hoverLabelModel = regionModel.getModel(hoverLabelAccessPath);\n      var dataIdx; // Use the itemStyle in data if has data\n\n      if (data) {\n        dataIdx = data.indexOfName(region.name); // Only visual color of each item will be used. It can be encoded by dataRange\n        // But visual color of series is used in symbol drawing\n        //\n        // Visual color for each series is for the symbol draw\n\n        var visualColor = data.getItemVisual(dataIdx, 'color', true);\n\n        if (visualColor) {\n          itemStyle.fill = visualColor;\n        }\n      }\n\n      var transformPoint = function transformPoint(point) {\n        return [point[0] * scale[0] + position[0], point[1] * scale[1] + position[1]];\n      };\n\n      zrUtil.each(region.geometries, function (geometry) {\n        if (geometry.type !== 'polygon') {\n          return;\n        }\n\n        var points = [];\n\n        for (var i = 0; i < geometry.exterior.length; ++i) {\n          points.push(transformPoint(geometry.exterior[i]));\n        }\n\n        compoundPath.shape.paths.push(new graphic.Polygon({\n          segmentIgnoreThreshold: 1,\n          shape: {\n            points: points\n          }\n        }));\n\n        for (var i = 0; i < (geometry.interiors ? geometry.interiors.length : 0); ++i) {\n          var interior = geometry.interiors[i];\n          var points = [];\n\n          for (var j = 0; j < interior.length; ++j) {\n            points.push(transformPoint(interior[j]));\n          }\n\n          compoundPath.shape.paths.push(new graphic.Polygon({\n            segmentIgnoreThreshold: 1,\n            shape: {\n              points: points\n            }\n          }));\n        }\n      });\n      compoundPath.setStyle(itemStyle);\n      compoundPath.style.strokeNoScale = true;\n      compoundPath.culling = true; // Label\n\n      var showLabel = labelModel.get('show');\n      var hoverShowLabel = hoverLabelModel.get('show');\n      var isDataNaN = data && isNaN(data.get(data.mapDimension('value'), dataIdx));\n      var itemLayout = data && data.getItemLayout(dataIdx); // In the following cases label will be drawn\n      // 1. In map series and data value is NaN\n      // 2. In geo component\n      // 4. Region has no series legendSymbol, which will be add a showLabel flag in mapSymbolLayout\n\n      if (isGeo || isDataNaN && (showLabel || hoverShowLabel) || itemLayout && itemLayout.showLabel) {\n        var query = !isGeo ? dataIdx : region.name;\n        var labelFetcher; // Consider dataIdx not found.\n\n        if (!data || dataIdx >= 0) {\n          labelFetcher = mapOrGeoModel;\n        }\n\n        var textEl = new graphic.Text({\n          position: transformPoint(region.center.slice()),\n          // FIXME\n          // label rotation is not support yet in geo or regions of series-map\n          // that has no data. The rotation will be effected by this `scale`.\n          // So needed to change to RectText?\n          scale: [1 / group.scale[0], 1 / group.scale[1]],\n          z2: 10,\n          silent: true\n        });\n        graphic.setLabelStyle(textEl.style, textEl.hoverStyle = {}, labelModel, hoverLabelModel, {\n          labelFetcher: labelFetcher,\n          labelDataIndex: query,\n          defaultText: region.name,\n          useInsideStyle: false\n        }, {\n          textAlign: 'center',\n          textVerticalAlign: 'middle'\n        });\n\n        if (!isFirstDraw) {\n          // Text animation\n          var textScale = [1 / targetScale[0], 1 / targetScale[1]];\n          graphic.updateProps(textEl, {\n            scale: textScale\n          }, mapOrGeoModel);\n        }\n\n        regionGroup.add(textEl);\n      } // setItemGraphicEl, setHoverStyle after all polygons and labels\n      // are added to the rigionGroup\n\n\n      if (data) {\n        data.setItemGraphicEl(dataIdx, regionGroup);\n      } else {\n        var regionModel = mapOrGeoModel.getRegionModel(region.name); // Package custom mouse event for geo component\n\n        compoundPath.eventData = {\n          componentType: 'geo',\n          componentIndex: mapOrGeoModel.componentIndex,\n          geoIndex: mapOrGeoModel.componentIndex,\n          name: region.name,\n          region: regionModel && regionModel.option || {}\n        };\n      }\n\n      var groupRegions = regionGroup.__regions || (regionGroup.__regions = []);\n      groupRegions.push(region);\n      regionGroup.highDownSilentOnTouch = !!mapOrGeoModel.get('selectedMode');\n      graphic.setHoverStyle(regionGroup, hoverItemStyle);\n      regionsGroup.add(regionGroup);\n    });\n\n    this._updateController(mapOrGeoModel, ecModel, api);\n\n    updateMapSelectHandler(this, mapOrGeoModel, regionsGroup, api, fromView);\n    updateMapSelected(mapOrGeoModel, regionsGroup);\n  },\n  remove: function remove() {\n    this._regionsGroup.removeAll();\n\n    this._backgroundGroup.removeAll();\n\n    this._controller.dispose();\n\n    this._mapName && geoSourceManager.removeGraphic(this._mapName, this.uid);\n    this._mapName = null;\n    this._controllerHost = {};\n  },\n  _updateBackground: function _updateBackground(geo) {\n    var mapName = geo.map;\n\n    if (this._mapName !== mapName) {\n      zrUtil.each(geoSourceManager.makeGraphic(mapName, this.uid), function (root) {\n        this._backgroundGroup.add(root);\n      }, this);\n    }\n\n    this._mapName = mapName;\n  },\n  _updateController: function _updateController(mapOrGeoModel, ecModel, api) {\n    var geo = mapOrGeoModel.coordinateSystem;\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    controllerHost.zoomLimit = mapOrGeoModel.get('scaleLimit');\n    controllerHost.zoom = geo.getZoom(); // roamType is will be set default true if it is null\n\n    controller.enable(mapOrGeoModel.get('roam') || false);\n    var mainType = mapOrGeoModel.mainType;\n\n    function makeActionBase() {\n      var action = {\n        type: 'geoRoam',\n        componentType: mainType\n      };\n      action[mainType + 'Id'] = mapOrGeoModel.id;\n      return action;\n    }\n\n    controller.off('pan').on('pan', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        dx: e.dx,\n        dy: e.dy\n      }));\n    }, this);\n    controller.off('zoom').on('zoom', function (e) {\n      this._mouseDownFlag = false;\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction(zrUtil.extend(makeActionBase(), {\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      }));\n\n      if (this._updateGroup) {\n        var scale = this.group.scale;\n\n        this._regionsGroup.traverse(function (el) {\n          if (el.type === 'text') {\n            el.attr('scale', [1 / scale[0], 1 / scale[1]]);\n          }\n        });\n      }\n    }, this);\n    controller.setPointerChecker(function (e, x, y) {\n      return geo.getViewRectAfterRoam().contain(x, y) && !onIrrelevantElement(e, api, mapOrGeoModel);\n    });\n  }\n};\nvar _default = MapDraw;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar ATTR = '\\0_ec_interaction_mutex';\n\nfunction take(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  store[resourceKey] = userKey;\n}\n\nfunction release(zr, resourceKey, userKey) {\n  var store = getStore(zr);\n  var uKey = store[resourceKey];\n\n  if (uKey === userKey) {\n    store[resourceKey] = null;\n  }\n}\n\nfunction isTaken(zr, resourceKey) {\n  return !!getStore(zr)[resourceKey];\n}\n\nfunction getStore(zr) {\n  return zr[ATTR] || (zr[ATTR] = {});\n}\n/**\n * payload: {\n *     type: 'takeGlobalCursor',\n *     key: 'dataZoomSelect', or 'brush', or ...,\n *         If no userKey, release global cursor.\n * }\n */\n\n\necharts.registerAction({\n  type: 'takeGlobalCursor',\n  event: 'globalCursorTaken',\n  update: 'update'\n}, function () {});\nexports.take = take;\nexports.release = release;\nexports.isTaken = isTaken;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar throttleUtil = require(\"../util/throttle\");\n\nvar parallelPreprocessor = require(\"../coord/parallel/parallelPreprocessor\");\n\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"../coord/parallel/ParallelModel\");\n\nrequire(\"./parallelAxis\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar CLICK_THRESHOLD = 5; // > 4\n// Parallel view\n\necharts.extendComponentView({\n  type: 'parallel',\n  render: function render(parallelModel, ecModel, api) {\n    this._model = parallelModel;\n    this._api = api;\n\n    if (!this._handlers) {\n      this._handlers = {};\n      zrUtil.each(handlers, function (handler, eventName) {\n        api.getZr().on(eventName, this._handlers[eventName] = zrUtil.bind(handler, this));\n      }, this);\n    }\n\n    throttleUtil.createOrUpdate(this, '_throttledDispatchExpand', parallelModel.get('axisExpandRate'), 'fixRate');\n  },\n  dispose: function dispose(ecModel, api) {\n    zrUtil.each(this._handlers, function (handler, eventName) {\n      api.getZr().off(eventName, handler);\n    });\n    this._handlers = null;\n  },\n\n  /**\n   * @param {Object} [opt] If null, cancle the last action triggering for debounce.\n   */\n  _throttledDispatchExpand: function _throttledDispatchExpand(opt) {\n    this._dispatchExpand(opt);\n  },\n  _dispatchExpand: function _dispatchExpand(opt) {\n    opt && this._api.dispatchAction(zrUtil.extend({\n      type: 'parallelAxisExpand'\n    }, opt));\n  }\n});\nvar handlers = {\n  mousedown: function mousedown(e) {\n    if (checkTrigger(this, 'click')) {\n      this._mouseDownPoint = [e.offsetX, e.offsetY];\n    }\n  },\n  mouseup: function mouseup(e) {\n    var mouseDownPoint = this._mouseDownPoint;\n\n    if (checkTrigger(this, 'click') && mouseDownPoint) {\n      var point = [e.offsetX, e.offsetY];\n      var dist = Math.pow(mouseDownPoint[0] - point[0], 2) + Math.pow(mouseDownPoint[1] - point[1], 2);\n\n      if (dist > CLICK_THRESHOLD) {\n        return;\n      }\n\n      var result = this._model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n\n      result.behavior !== 'none' && this._dispatchExpand({\n        axisExpandWindow: result.axisExpandWindow\n      });\n    }\n\n    this._mouseDownPoint = null;\n  },\n  mousemove: function mousemove(e) {\n    // Should do nothing when brushing.\n    if (this._mouseDownPoint || !checkTrigger(this, 'mousemove')) {\n      return;\n    }\n\n    var model = this._model;\n    var result = model.coordinateSystem.getSlidedAxisExpandWindow([e.offsetX, e.offsetY]);\n    var behavior = result.behavior;\n    behavior === 'jump' && this._throttledDispatchExpand.debounceNextCall(model.get('axisExpandDebounce'));\n\n    this._throttledDispatchExpand(behavior === 'none' ? null // Cancle the last trigger, in case that mouse slide out of the area quickly.\n    : {\n      axisExpandWindow: result.axisExpandWindow,\n      // Jumping uses animation, and sliding suppresses animation.\n      animation: behavior === 'jump' ? null : false\n    });\n  }\n};\n\nfunction checkTrigger(view, triggerOn) {\n  var model = view._model;\n  return model.get('axisExpandable') && model.get('axisExpandTriggerOn') === triggerOn;\n}\n\necharts.registerPreprocessor(parallelPreprocessor);","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar _cursorHelper = require(\"./cursorHelper\");\n\nvar onIrrelevantElement = _cursorHelper.onIrrelevantElement;\n\nvar graphicUtil = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nfunction makeRectPanelClipPath(rect) {\n  rect = normalizeRect(rect);\n  return function (localPoints, transform) {\n    return graphicUtil.clipPointsByRect(localPoints, rect);\n  };\n}\n\nfunction makeLinearBrushOtherExtent(rect, specifiedXYIndex) {\n  rect = normalizeRect(rect);\n  return function (xyIndex) {\n    var idx = specifiedXYIndex != null ? specifiedXYIndex : xyIndex;\n    var brushWidth = idx ? rect.width : rect.height;\n    var base = idx ? rect.x : rect.y;\n    return [base, base + (brushWidth || 0)];\n  };\n}\n\nfunction makeRectIsTargetByCursor(rect, api, targetModel) {\n  rect = normalizeRect(rect);\n  return function (e, localCursorPoint, transform) {\n    return rect.contain(localCursorPoint[0], localCursorPoint[1]) && !onIrrelevantElement(e, api, targetModel);\n  };\n} // Consider width/height is negative.\n\n\nfunction normalizeRect(rect) {\n  return BoundingRect.create(rect);\n}\n\nexports.makeRectPanelClipPath = makeRectPanelClipPath;\nexports.makeLinearBrushOtherExtent = makeLinearBrushOtherExtent;\nexports.makeRectIsTargetByCursor = makeRectIsTargetByCursor;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"../coord/single/singleCreator\");\n\nrequire(\"./axis/SingleAxisView\");\n\nrequire(\"../coord/single/AxisModel\");\n\nrequire(\"./axisPointer\");\n\nrequire(\"./axisPointer/SingleAxisPointer\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\necharts.extendComponentView({\n  type: 'single'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar modelUtil = require(\"../../util/model\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} finder contains {seriesIndex, dataIndex, dataIndexInside}\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} {point: [x, y], el: ...} point Will not be null.\n */\n\n\nfunction _default(finder, ecModel) {\n  var point = [];\n  var seriesIndex = finder.seriesIndex;\n  var seriesModel;\n\n  if (seriesIndex == null || !(seriesModel = ecModel.getSeriesByIndex(seriesIndex))) {\n    return {\n      point: []\n    };\n  }\n\n  var data = seriesModel.getData();\n  var dataIndex = modelUtil.queryDataIndex(data, finder);\n\n  if (dataIndex == null || dataIndex < 0 || zrUtil.isArray(dataIndex)) {\n    return {\n      point: []\n    };\n  }\n\n  var el = data.getItemGraphicEl(dataIndex);\n  var coordSys = seriesModel.coordinateSystem;\n\n  if (seriesModel.getTooltipPosition) {\n    point = seriesModel.getTooltipPosition(dataIndex) || [];\n  } else if (coordSys && coordSys.dataToPoint) {\n    point = coordSys.dataToPoint(data.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n      return data.mapDimension(dim);\n    }), dataIndex, true)) || [];\n  } else if (el) {\n    // Use graphic bounding rect\n    var rect = el.getBoundingRect().clone();\n    rect.applyTransform(el.transform);\n    point = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  }\n\n  return {\n    point: point,\n    el: el\n  };\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar env = require(\"zrender/lib/core/env\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar inner = makeInner();\nvar each = zrUtil.each;\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n * @param {Function} handler\n *      param: {string} currTrigger\n *      param: {Array.<number>} point\n */\n\nfunction register(key, api, handler) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  inner(zr).records || (inner(zr).records = {});\n  initGlobalListeners(zr, api);\n  var record = inner(zr).records[key] || (inner(zr).records[key] = {});\n  record.handler = handler;\n}\n\nfunction initGlobalListeners(zr, api) {\n  if (inner(zr).initialized) {\n    return;\n  }\n\n  inner(zr).initialized = true;\n  useHandler('click', zrUtil.curry(doEnter, 'click'));\n  useHandler('mousemove', zrUtil.curry(doEnter, 'mousemove')); // useHandler('mouseout', onLeave);\n\n  useHandler('globalout', onLeave);\n\n  function useHandler(eventType, cb) {\n    zr.on(eventType, function (e) {\n      var dis = makeDispatchAction(api);\n      each(inner(zr).records, function (record) {\n        record && cb(record, e, dis.dispatchAction);\n      });\n      dispatchTooltipFinally(dis.pendings, api);\n    });\n  }\n}\n\nfunction dispatchTooltipFinally(pendings, api) {\n  var showLen = pendings.showTip.length;\n  var hideLen = pendings.hideTip.length;\n  var actuallyPayload;\n\n  if (showLen) {\n    actuallyPayload = pendings.showTip[showLen - 1];\n  } else if (hideLen) {\n    actuallyPayload = pendings.hideTip[hideLen - 1];\n  }\n\n  if (actuallyPayload) {\n    actuallyPayload.dispatchAction = null;\n    api.dispatchAction(actuallyPayload);\n  }\n}\n\nfunction onLeave(record, e, dispatchAction) {\n  record.handler('leave', null, dispatchAction);\n}\n\nfunction doEnter(currTrigger, record, e, dispatchAction) {\n  record.handler(currTrigger, e, dispatchAction);\n}\n\nfunction makeDispatchAction(api) {\n  var pendings = {\n    showTip: [],\n    hideTip: []\n  }; // FIXME\n  // better approach?\n  // 'showTip' and 'hideTip' can be triggered by axisPointer and tooltip,\n  // which may be conflict, (axisPointer call showTip but tooltip call hideTip);\n  // So we have to add \"final stage\" to merge those dispatched actions.\n\n  var dispatchAction = function dispatchAction(payload) {\n    var pendingList = pendings[payload.type];\n\n    if (pendingList) {\n      pendingList.push(payload);\n    } else {\n      payload.dispatchAction = dispatchAction;\n      api.dispatchAction(payload);\n    }\n  };\n\n  return {\n    dispatchAction: dispatchAction,\n    pendings: pendings\n  };\n}\n/**\n * @param {string} key\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\nfunction unregister(key, api) {\n  if (env.node) {\n    return;\n  }\n\n  var zr = api.getZr();\n  var record = (inner(zr).records || {})[key];\n\n  if (record) {\n    inner(zr).records[key] = null;\n  }\n}\n\nexports.register = register;\nexports.unregister = unregister;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar CartesianAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisPointerType = axisPointerModel.get('type');\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var pixelValue = axis.toGlobalCoord(axis.dataToCoord(value, true));\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = cartesianAxisHelper.layout(grid.model, axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function getHandleTransform(value, axisModel, axisPointerModel) {\n    var layoutInfo = cartesianAxisHelper.layout(axisModel.axis.grid.model, axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function updateHandleTransform(transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var grid = axis.grid;\n    var axisExtent = axis.getGlobalExtent(true);\n    var otherExtent = getCartesian(grid, axis).getOtherAxis(axis).getGlobalExtent();\n    var dimIndex = axis.dim === 'x' ? 0 : 1;\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex]; // Make tooltip do not overlap axisPointer and in the middle of the grid.\n\n    var tooltipOptions = [{\n      verticalAlign: 'middle'\n    }, {\n      align: 'center'\n    }];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: tooltipOptions[dimIndex]\n    };\n  }\n});\n\nfunction getCartesian(grid, axis) {\n  var opt = {};\n  opt[axis.dim + 'AxisIndex'] = axis.index;\n  return grid.getCartesian(opt);\n}\n\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getAxisDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent) {\n    var bandWidth = Math.max(1, axis.getBandWidth());\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getAxisDimIndex(axis))\n    };\n  }\n};\n\nfunction getAxisDimIndex(axis) {\n  return axis.dim === 'x' ? 0 : 1;\n}\n\nAxisView.registerAxisPointerClass('CartesianAxisPointer', CartesianAxisPointer);\nvar _default = CartesianAxisPointer;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nvar layoutBox = _layout.box;\nvar positionElement = _layout.positionElement;\n\nvar formatUtil = require(\"../../util/format\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\n\n\nfunction layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\n\nfunction makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  var rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}\n\nexports.layout = layout;\nexports.makeBackground = makeBackground;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar modelUtil = require(\"../../util/model\");\n\nvar brushHelper = require(\"./brushHelper\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar indexOf = zrUtil.indexOf;\nvar curry = zrUtil.curry;\nvar COORD_CONVERTS = ['dataToPoint', 'pointToData']; // FIXME\n// how to genarialize to more coordinate systems.\n\nvar INCLUDE_FINDER_MAIN_TYPES = ['grid', 'xAxis', 'yAxis', 'geo', 'graph', 'polar', 'radiusAxis', 'angleAxis', 'bmap'];\n/**\n * [option in constructor]:\n * {\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n * }\n *\n *\n * [targetInfo]:\n *\n * There can be multiple axes in a single targetInfo. Consider the case\n * of `grid` component, a targetInfo represents a grid which contains one or more\n * cartesian and one or more axes. And consider the case of parallel system,\n * which has multiple axes in a coordinate system.\n * Can be {\n *     panelId: ...,\n *     coordSys: <a representitive cartesian in grid (first cartesian by default)>,\n *     coordSyses: all cartesians.\n *     gridModel: <grid component>\n *     xAxes: correspond to coordSyses on index\n *     yAxes: correspond to coordSyses on index\n * }\n * or {\n *     panelId: ...,\n *     coordSys: <geo coord sys>\n *     coordSyses: [<geo coord sys>]\n *     geoModel: <geo component>\n * }\n *\n *\n * [panelOpt]:\n *\n * Make from targetInfo. Input to BrushController.\n * {\n *     panelId: ...,\n *     rect: ...\n * }\n *\n *\n * [area]:\n *\n * Generated by BrushController or user input.\n * {\n *     panelId: Used to locate coordInfo directly. If user inpput, no panelId.\n *     brushType: determine how to convert to/from coord('rect' or 'polygon' or 'lineX/Y').\n *     Index/Id/Name of geo, xAxis, yAxis, grid: See util/model#parseFinder.\n *     range: pixel range.\n *     coordRange: representitive coord range (the first one of coordRanges).\n *     coordRanges: <Array> coord ranges, used in multiple cartesian in one grid.\n * }\n */\n\n/**\n * @param {Object} option contains Index/Id/Name of xAxis/yAxis/geo/grid\n *        Each can be {number|Array.<number>}. like: {xAxisIndex: [3, 4]}\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} [opt]\n * @param {Array.<string>} [opt.include] include coordinate system types.\n */\n\nfunction BrushTargetManager(option, ecModel, opt) {\n  /**\n   * @private\n   * @type {Array.<Object>}\n   */\n  var targetInfoList = this._targetInfoList = [];\n  var info = {};\n  var foundCpts = parseFinder(ecModel, option);\n  each(targetInfoBuilders, function (builder, type) {\n    if (!opt || !opt.include || indexOf(opt.include, type) >= 0) {\n      builder(foundCpts, targetInfoList, info);\n    }\n  });\n}\n\nvar proto = BrushTargetManager.prototype;\n\nproto.setOutputRanges = function (areas, ecModel) {\n  this.matchOutputRanges(areas, ecModel, function (area, coordRange, coordSys) {\n    (area.coordRanges || (area.coordRanges = [])).push(coordRange); // area.coordRange is the first of area.coordRanges\n\n    if (!area.coordRange) {\n      area.coordRange = coordRange; // In 'category' axis, coord to pixel is not reversible, so we can not\n      // rebuild range by coordRange accrately, which may bring trouble when\n      // brushing only one item. So we use __rangeOffset to rebuilding range\n      // by coordRange. And this it only used in brush component so it is no\n      // need to be adapted to coordRanges.\n\n      var result = coordConvert[area.brushType](0, coordSys, coordRange);\n      area.__rangeOffset = {\n        offset: diffProcessor[area.brushType](result.values, area.range, [1, 1]),\n        xyMinMax: result.xyMinMax\n      };\n    }\n  });\n};\n\nproto.matchOutputRanges = function (areas, ecModel, cb) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n\n    if (targetInfo && targetInfo !== true) {\n      zrUtil.each(targetInfo.coordSyses, function (coordSys) {\n        var result = coordConvert[area.brushType](1, coordSys, area.range);\n        cb(area, result.values, coordSys, ecModel);\n      });\n    }\n  }, this);\n};\n\nproto.setInputRanges = function (areas, ecModel) {\n  each(areas, function (area) {\n    var targetInfo = this.findTargetInfo(area, ecModel);\n    area.range = area.range || []; // convert coordRange to global range and set panelId.\n\n    if (targetInfo && targetInfo !== true) {\n      area.panelId = targetInfo.panelId; // (1) area.range shoule always be calculate from coordRange but does\n      // not keep its original value, for the sake of the dataZoom scenario,\n      // where area.coordRange remains unchanged but area.range may be changed.\n      // (2) Only support converting one coordRange to pixel range in brush\n      // component. So do not consider `coordRanges`.\n      // (3) About __rangeOffset, see comment above.\n\n      var result = coordConvert[area.brushType](0, targetInfo.coordSys, area.coordRange);\n      var rangeOffset = area.__rangeOffset;\n      area.range = rangeOffset ? diffProcessor[area.brushType](result.values, rangeOffset.offset, getScales(result.xyMinMax, rangeOffset.xyMinMax)) : result.values;\n    }\n  }, this);\n};\n\nproto.makePanelOpts = function (api, getDefaultBrushType) {\n  return zrUtil.map(this._targetInfoList, function (targetInfo) {\n    var rect = targetInfo.getPanelRect();\n    return {\n      panelId: targetInfo.panelId,\n      defaultBrushType: getDefaultBrushType && getDefaultBrushType(targetInfo),\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, targetInfo.coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect)\n    };\n  });\n};\n\nproto.controlSeries = function (area, seriesModel, ecModel) {\n  // Check whether area is bound in coord, and series do not belong to that coord.\n  // If do not do this check, some brush (like lineX) will controll all axes.\n  var targetInfo = this.findTargetInfo(area, ecModel);\n  return targetInfo === true || targetInfo && indexOf(targetInfo.coordSyses, seriesModel.coordinateSystem) >= 0;\n};\n/**\n * If return Object, a coord found.\n * If reutrn true, global found.\n * Otherwise nothing found.\n *\n * @param {Object} area\n * @param {Array} targetInfoList\n * @return {Object|boolean}\n */\n\n\nproto.findTargetInfo = function (area, ecModel) {\n  var targetInfoList = this._targetInfoList;\n  var foundCpts = parseFinder(ecModel, area);\n\n  for (var i = 0; i < targetInfoList.length; i++) {\n    var targetInfo = targetInfoList[i];\n    var areaPanelId = area.panelId;\n\n    if (areaPanelId) {\n      if (targetInfo.panelId === areaPanelId) {\n        return targetInfo;\n      }\n    } else {\n      for (var i = 0; i < targetInfoMatchers.length; i++) {\n        if (targetInfoMatchers[i](foundCpts, targetInfo)) {\n          return targetInfo;\n        }\n      }\n    }\n  }\n\n  return true;\n};\n\nfunction formatMinMax(minMax) {\n  minMax[0] > minMax[1] && minMax.reverse();\n  return minMax;\n}\n\nfunction parseFinder(ecModel, option) {\n  return modelUtil.parseFinder(ecModel, option, {\n    includeMainTypes: INCLUDE_FINDER_MAIN_TYPES\n  });\n}\n\nvar targetInfoBuilders = {\n  grid: function grid(foundCpts, targetInfoList) {\n    var xAxisModels = foundCpts.xAxisModels;\n    var yAxisModels = foundCpts.yAxisModels;\n    var gridModels = foundCpts.gridModels; // Remove duplicated.\n\n    var gridModelMap = zrUtil.createHashMap();\n    var xAxesHas = {};\n    var yAxesHas = {};\n\n    if (!xAxisModels && !yAxisModels && !gridModels) {\n      return;\n    }\n\n    each(xAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n    });\n    each(yAxisModels, function (axisModel) {\n      var gridModel = axisModel.axis.grid.model;\n      gridModelMap.set(gridModel.id, gridModel);\n      yAxesHas[gridModel.id] = true;\n    });\n    each(gridModels, function (gridModel) {\n      gridModelMap.set(gridModel.id, gridModel);\n      xAxesHas[gridModel.id] = true;\n      yAxesHas[gridModel.id] = true;\n    });\n    gridModelMap.each(function (gridModel) {\n      var grid = gridModel.coordinateSystem;\n      var cartesians = [];\n      each(grid.getCartesians(), function (cartesian, index) {\n        if (indexOf(xAxisModels, cartesian.getAxis('x').model) >= 0 || indexOf(yAxisModels, cartesian.getAxis('y').model) >= 0) {\n          cartesians.push(cartesian);\n        }\n      });\n      targetInfoList.push({\n        panelId: 'grid--' + gridModel.id,\n        gridModel: gridModel,\n        coordSysModel: gridModel,\n        // Use the first one as the representitive coordSys.\n        coordSys: cartesians[0],\n        coordSyses: cartesians,\n        getPanelRect: panelRectBuilder.grid,\n        xAxisDeclared: xAxesHas[gridModel.id],\n        yAxisDeclared: yAxesHas[gridModel.id]\n      });\n    });\n  },\n  geo: function geo(foundCpts, targetInfoList) {\n    each(foundCpts.geoModels, function (geoModel) {\n      var coordSys = geoModel.coordinateSystem;\n      targetInfoList.push({\n        panelId: 'geo--' + geoModel.id,\n        geoModel: geoModel,\n        coordSysModel: geoModel,\n        coordSys: coordSys,\n        coordSyses: [coordSys],\n        getPanelRect: panelRectBuilder.geo\n      });\n    });\n  }\n};\nvar targetInfoMatchers = [// grid\nfunction (foundCpts, targetInfo) {\n  var xAxisModel = foundCpts.xAxisModel;\n  var yAxisModel = foundCpts.yAxisModel;\n  var gridModel = foundCpts.gridModel;\n  !gridModel && xAxisModel && (gridModel = xAxisModel.axis.grid.model);\n  !gridModel && yAxisModel && (gridModel = yAxisModel.axis.grid.model);\n  return gridModel && gridModel === targetInfo.gridModel;\n}, // geo\nfunction (foundCpts, targetInfo) {\n  var geoModel = foundCpts.geoModel;\n  return geoModel && geoModel === targetInfo.geoModel;\n}];\nvar panelRectBuilder = {\n  grid: function grid() {\n    // grid is not Transformable.\n    return this.coordSys.grid.getRect().clone();\n  },\n  geo: function geo() {\n    var coordSys = this.coordSys;\n    var rect = coordSys.getBoundingRect().clone(); // geo roam and zoom transform\n\n    rect.applyTransform(graphic.getTransform(coordSys));\n    return rect;\n  }\n};\nvar coordConvert = {\n  lineX: curry(axisConvert, 0),\n  lineY: curry(axisConvert, 1),\n  rect: function rect(to, coordSys, rangeOrCoordRange) {\n    var xminymin = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][0], rangeOrCoordRange[1][0]]);\n    var xmaxymax = coordSys[COORD_CONVERTS[to]]([rangeOrCoordRange[0][1], rangeOrCoordRange[1][1]]);\n    var values = [formatMinMax([xminymin[0], xmaxymax[0]]), formatMinMax([xminymin[1], xmaxymax[1]])];\n    return {\n      values: values,\n      xyMinMax: values\n    };\n  },\n  polygon: function polygon(to, coordSys, rangeOrCoordRange) {\n    var xyMinMax = [[Infinity, -Infinity], [Infinity, -Infinity]];\n    var values = zrUtil.map(rangeOrCoordRange, function (item) {\n      var p = coordSys[COORD_CONVERTS[to]](item);\n      xyMinMax[0][0] = Math.min(xyMinMax[0][0], p[0]);\n      xyMinMax[1][0] = Math.min(xyMinMax[1][0], p[1]);\n      xyMinMax[0][1] = Math.max(xyMinMax[0][1], p[0]);\n      xyMinMax[1][1] = Math.max(xyMinMax[1][1], p[1]);\n      return p;\n    });\n    return {\n      values: values,\n      xyMinMax: xyMinMax\n    };\n  }\n};\n\nfunction axisConvert(axisNameIndex, to, coordSys, rangeOrCoordRange) {\n  var axis = coordSys.getAxis(['x', 'y'][axisNameIndex]);\n  var values = formatMinMax(zrUtil.map([0, 1], function (i) {\n    return to ? axis.coordToData(axis.toLocalCoord(rangeOrCoordRange[i])) : axis.toGlobalCoord(axis.dataToCoord(rangeOrCoordRange[i]));\n  }));\n  var xyMinMax = [];\n  xyMinMax[axisNameIndex] = values;\n  xyMinMax[1 - axisNameIndex] = [NaN, NaN];\n  return {\n    values: values,\n    xyMinMax: xyMinMax\n  };\n}\n\nvar diffProcessor = {\n  lineX: curry(axisDiffProcessor, 0),\n  lineY: curry(axisDiffProcessor, 1),\n  rect: function rect(values, refer, scales) {\n    return [[values[0][0] - scales[0] * refer[0][0], values[0][1] - scales[0] * refer[0][1]], [values[1][0] - scales[1] * refer[1][0], values[1][1] - scales[1] * refer[1][1]]];\n  },\n  polygon: function polygon(values, refer, scales) {\n    return zrUtil.map(values, function (item, idx) {\n      return [item[0] - scales[0] * refer[idx][0], item[1] - scales[1] * refer[idx][1]];\n    });\n  }\n};\n\nfunction axisDiffProcessor(axisNameIndex, values, refer, scales) {\n  return [values[0] - scales[axisNameIndex] * refer[0], values[1] - scales[axisNameIndex] * refer[1]];\n} // We have to process scale caused by dataZoom manually,\n// although it might be not accurate.\n\n\nfunction getScales(xyMinMaxCurr, xyMinMaxOrigin) {\n  var sizeCurr = getSize(xyMinMaxCurr);\n  var sizeOrigin = getSize(xyMinMaxOrigin);\n  var scales = [sizeCurr[0] / sizeOrigin[0], sizeCurr[1] / sizeOrigin[1]];\n  isNaN(scales[0]) && (scales[0] = 1);\n  isNaN(scales[1]) && (scales[1] = 1);\n  return scales;\n}\n\nfunction getSize(xyMinMax) {\n  return xyMinMax ? [xyMinMax[0][1] - xyMinMax[0][0], xyMinMax[1][1] - xyMinMax[1][0]] : [NaN, NaN];\n}\n\nvar _default = BrushTargetManager;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar ATTR = '\\0_ec_hist_store';\n/**\n * @param {module:echarts/model/Global} ecModel\n * @param {Object} newSnapshot {dataZoomId, batch: [payloadInfo, ...]}\n */\n\nfunction push(ecModel, newSnapshot) {\n  var store = giveStore(ecModel); // If previous dataZoom can not be found,\n  // complete an range with current range.\n\n  each(newSnapshot, function (batchItem, dataZoomId) {\n    var i = store.length - 1;\n\n    for (; i >= 0; i--) {\n      var snapshot = store[i];\n\n      if (snapshot[dataZoomId]) {\n        break;\n      }\n    }\n\n    if (i < 0) {\n      // No origin range set, create one by current range.\n      var dataZoomModel = ecModel.queryComponents({\n        mainType: 'dataZoom',\n        subType: 'select',\n        id: dataZoomId\n      })[0];\n\n      if (dataZoomModel) {\n        var percentRange = dataZoomModel.getPercentRange();\n        store[0][dataZoomId] = {\n          dataZoomId: dataZoomId,\n          start: percentRange[0],\n          end: percentRange[1]\n        };\n      }\n    }\n  });\n  store.push(newSnapshot);\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {Object} snapshot\n */\n\n\nfunction pop(ecModel) {\n  var store = giveStore(ecModel);\n  var head = store[store.length - 1];\n  store.length > 1 && store.pop(); // Find top for all dataZoom.\n\n  var snapshot = {};\n  each(head, function (batchItem, dataZoomId) {\n    for (var i = store.length - 1; i >= 0; i--) {\n      var batchItem = store[i][dataZoomId];\n\n      if (batchItem) {\n        snapshot[dataZoomId] = batchItem;\n        break;\n      }\n    }\n  });\n  return snapshot;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction clear(ecModel) {\n  ecModel[ATTR] = null;\n}\n/**\n * @param {module:echarts/model/Global} ecModel\n * @return {number} records. always >= 1.\n */\n\n\nfunction count(ecModel) {\n  return giveStore(ecModel).length;\n}\n/**\n * [{key: dataZoomId, value: {dataZoomId, range}}, ...]\n * History length of each dataZoom may be different.\n * this._history[0] is used to store origin range.\n * @type {Array.<Object>}\n */\n\n\nfunction giveStore(ecModel) {\n  var store = ecModel[ATTR];\n\n  if (!store) {\n    store = ecModel[ATTR] = [{}];\n  }\n\n  return store;\n}\n\nexports.push = push;\nexports.pop = pop;\nexports.clear = clear;\nexports.count = count;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar visualSolution = require(\"../../visual/visualSolution\");\n\nvar selector = require(\"./selector\");\n\nvar throttleUtil = require(\"../../util/throttle\");\n\nvar BrushTargetManager = require(\"../helper/BrushTargetManager\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar STATE_LIST = ['inBrush', 'outOfBrush'];\nvar DISPATCH_METHOD = '__ecBrushSelect';\nvar DISPATCH_FLAG = '__ecInBrushSelectEvent';\nvar PRIORITY_BRUSH = echarts.PRIORITY.VISUAL.BRUSH;\n/**\n * Layout for visual, the priority higher than other layout, and before brush visual.\n */\n\necharts.registerLayout(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    payload && payload.type === 'takeGlobalCursor' && brushModel.setBrushOption(payload.key === 'brush' ? payload.brushOption : {\n      brushType: false\n    });\n  });\n  layoutCovers(ecModel);\n});\n\nfunction layoutCovers(ecModel) {\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel) {\n    var brushTargetManager = brushModel.brushTargetManager = new BrushTargetManager(brushModel.option, ecModel);\n    brushTargetManager.setInputRanges(brushModel.areas, ecModel);\n  });\n}\n/**\n * Register the visual encoding if this modules required.\n */\n\n\necharts.registerVisual(PRIORITY_BRUSH, function (ecModel, api, payload) {\n  var brushSelected = [];\n  var throttleType;\n  var throttleDelay;\n  ecModel.eachComponent({\n    mainType: 'brush'\n  }, function (brushModel, brushIndex) {\n    var thisBrushSelected = {\n      brushId: brushModel.id,\n      brushIndex: brushIndex,\n      brushName: brushModel.name,\n      areas: zrUtil.clone(brushModel.areas),\n      selected: []\n    }; // Every brush component exists in event params, convenient\n    // for user to find by index.\n\n    brushSelected.push(thisBrushSelected);\n    var brushOption = brushModel.option;\n    var brushLink = brushOption.brushLink;\n    var linkedSeriesMap = [];\n    var selectedDataIndexForLink = [];\n    var rangeInfoBySeries = [];\n    var hasBrushExists = 0;\n\n    if (!brushIndex) {\n      // Only the first throttle setting works.\n      throttleType = brushOption.throttleType;\n      throttleDelay = brushOption.throttleDelay;\n    } // Add boundingRect and selectors to range.\n\n\n    var areas = zrUtil.map(brushModel.areas, function (area) {\n      return bindSelector(zrUtil.defaults({\n        boundingRect: boundingRectBuilders[area.brushType](area)\n      }, area));\n    });\n    var visualMappings = visualSolution.createVisualMappings(brushModel.option, STATE_LIST, function (mappingOption) {\n      mappingOption.mappingMethod = 'fixed';\n    });\n    zrUtil.isArray(brushLink) && zrUtil.each(brushLink, function (seriesIndex) {\n      linkedSeriesMap[seriesIndex] = 1;\n    });\n\n    function linkOthers(seriesIndex) {\n      return brushLink === 'all' || linkedSeriesMap[seriesIndex];\n    } // If no supported brush or no brush on the series,\n    // all visuals should be in original state.\n\n\n    function brushed(rangeInfoList) {\n      return !!rangeInfoList.length;\n    }\n    /**\n     * Logic for each series: (If the logic has to be modified one day, do it carefully!)\n     *\n     * ( brushed ┬ && ┬hasBrushExist ┬ && linkOthers  ) => StepA: ┬record, ┬ StepB: ┬visualByRecord.\n     *   !brushed┘    ├hasBrushExist ┤                            └nothing,┘        ├visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( !brushed  && ┬hasBrushExist ┬ && linkOthers  ) => StepA:  nothing,  StepB: ┬visualByRecord.\n     *                └!hasBrushExist┘                                              └nothing.\n     * ( brushed ┬ &&                     !linkOthers ) => StepA:  nothing,  StepB: ┬visualByCheck.\n     *   !brushed┘                                                                  └nothing.\n     * ( !brushed  &&                     !linkOthers ) => StepA:  nothing,  StepB:  nothing.\n     */\n    // Step A\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var rangeInfoList = rangeInfoBySeries[seriesIndex] = [];\n      seriesModel.subType === 'parallel' ? stepAParallel(seriesModel, seriesIndex, rangeInfoList) : stepAOthers(seriesModel, seriesIndex, rangeInfoList);\n    });\n\n    function stepAParallel(seriesModel, seriesIndex) {\n      var coordSys = seriesModel.coordinateSystem;\n      hasBrushExists |= coordSys.hasAxisBrushed();\n      linkOthers(seriesIndex) && coordSys.eachActiveState(seriesModel.getData(), function (activeState, dataIndex) {\n        activeState === 'active' && (selectedDataIndexForLink[dataIndex] = 1);\n      });\n    }\n\n    function stepAOthers(seriesModel, seriesIndex, rangeInfoList) {\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n\n      if (!selectorsByBrushType || brushModelNotControll(brushModel, seriesIndex)) {\n        return;\n      }\n\n      zrUtil.each(areas, function (area) {\n        selectorsByBrushType[area.brushType] && brushModel.brushTargetManager.controlSeries(area, seriesModel, ecModel) && rangeInfoList.push(area);\n        hasBrushExists |= brushed(rangeInfoList);\n      });\n\n      if (linkOthers(seriesIndex) && brushed(rangeInfoList)) {\n        var data = seriesModel.getData();\n        data.each(function (dataIndex) {\n          if (checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex)) {\n            selectedDataIndexForLink[dataIndex] = 1;\n          }\n        });\n      }\n    } // Step B\n\n\n    ecModel.eachSeries(function (seriesModel, seriesIndex) {\n      var seriesBrushSelected = {\n        seriesId: seriesModel.id,\n        seriesIndex: seriesIndex,\n        seriesName: seriesModel.name,\n        dataIndex: []\n      }; // Every series exists in event params, convenient\n      // for user to find series by seriesIndex.\n\n      thisBrushSelected.selected.push(seriesBrushSelected);\n      var selectorsByBrushType = getSelectorsByBrushType(seriesModel);\n      var rangeInfoList = rangeInfoBySeries[seriesIndex];\n      var data = seriesModel.getData();\n      var getValueState = linkOthers(seriesIndex) ? function (dataIndex) {\n        return selectedDataIndexForLink[dataIndex] ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      } : function (dataIndex) {\n        return checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) ? (seriesBrushSelected.dataIndex.push(data.getRawIndex(dataIndex)), 'inBrush') : 'outOfBrush';\n      }; // If no supported brush or no brush, all visuals are in original state.\n\n      (linkOthers(seriesIndex) ? hasBrushExists : brushed(rangeInfoList)) && visualSolution.applyVisual(STATE_LIST, visualMappings, data, getValueState);\n    });\n  });\n  dispatchAction(api, throttleType, throttleDelay, brushSelected, payload);\n});\n\nfunction dispatchAction(api, throttleType, throttleDelay, brushSelected, payload) {\n  // This event will not be triggered when `setOpion`, otherwise dead lock may\n  // triggered when do `setOption` in event listener, which we do not find\n  // satisfactory way to solve yet. Some considered resolutions:\n  // (a) Diff with prevoius selected data ant only trigger event when changed.\n  // But store previous data and diff precisely (i.e., not only by dataIndex, but\n  // also detect value changes in selected data) might bring complexity or fragility.\n  // (b) Use spectial param like `silent` to suppress event triggering.\n  // But such kind of volatile param may be weird in `setOption`.\n  if (!payload) {\n    return;\n  }\n\n  var zr = api.getZr();\n\n  if (zr[DISPATCH_FLAG]) {\n    return;\n  }\n\n  if (!zr[DISPATCH_METHOD]) {\n    zr[DISPATCH_METHOD] = doDispatch;\n  }\n\n  var fn = throttleUtil.createOrUpdate(zr, DISPATCH_METHOD, throttleDelay, throttleType);\n  fn(api, brushSelected);\n}\n\nfunction doDispatch(api, brushSelected) {\n  if (!api.isDisposed()) {\n    var zr = api.getZr();\n    zr[DISPATCH_FLAG] = true;\n    api.dispatchAction({\n      type: 'brushSelect',\n      batch: brushSelected\n    });\n    zr[DISPATCH_FLAG] = false;\n  }\n}\n\nfunction checkInRange(selectorsByBrushType, rangeInfoList, data, dataIndex) {\n  for (var i = 0, len = rangeInfoList.length; i < len; i++) {\n    var area = rangeInfoList[i];\n\n    if (selectorsByBrushType[area.brushType](dataIndex, data, area.selectors, area)) {\n      return true;\n    }\n  }\n}\n\nfunction getSelectorsByBrushType(seriesModel) {\n  var brushSelector = seriesModel.brushSelector;\n\n  if (zrUtil.isString(brushSelector)) {\n    var sels = [];\n    zrUtil.each(selector, function (selectorsByElementType, brushType) {\n      sels[brushType] = function (dataIndex, data, selectors, area) {\n        var itemLayout = data.getItemLayout(dataIndex);\n        return selectorsByElementType[brushSelector](itemLayout, selectors, area);\n      };\n    });\n    return sels;\n  } else if (zrUtil.isFunction(brushSelector)) {\n    var bSelector = {};\n    zrUtil.each(selector, function (sel, brushType) {\n      bSelector[brushType] = brushSelector;\n    });\n    return bSelector;\n  }\n\n  return brushSelector;\n}\n\nfunction brushModelNotControll(brushModel, seriesIndex) {\n  var seriesIndices = brushModel.option.seriesIndex;\n  return seriesIndices != null && seriesIndices !== 'all' && (zrUtil.isArray(seriesIndices) ? zrUtil.indexOf(seriesIndices, seriesIndex) < 0 : seriesIndex !== seriesIndices);\n}\n\nfunction bindSelector(area) {\n  var selectors = area.selectors = {};\n  zrUtil.each(selector[area.brushType], function (selFn, elType) {\n    // Do not use function binding or curry for performance.\n    selectors[elType] = function (itemLayout) {\n      return selFn(itemLayout, selectors, area);\n    };\n  });\n  return area;\n}\n\nvar boundingRectBuilders = {\n  lineX: zrUtil.noop,\n  lineY: zrUtil.noop,\n  rect: function rect(area) {\n    return getBoundingRectFromMinMax(area.range);\n  },\n  polygon: function polygon(area) {\n    var minMax;\n    var range = area.range;\n\n    for (var i = 0, len = range.length; i < len; i++) {\n      minMax = minMax || [[Infinity, -Infinity], [Infinity, -Infinity]];\n      var rg = range[i];\n      rg[0] < minMax[0][0] && (minMax[0][0] = rg[0]);\n      rg[0] > minMax[0][1] && (minMax[0][1] = rg[0]);\n      rg[1] < minMax[1][0] && (minMax[1][0] = rg[1]);\n      rg[1] > minMax[1][1] && (minMax[1][1] = rg[1]);\n    }\n\n    return minMax && getBoundingRectFromMinMax(minMax);\n  }\n};\n\nfunction getBoundingRectFromMinMax(minMax) {\n  return new BoundingRect(minMax[0][0], minMax[1][0], minMax[0][1] - minMax[0][0], minMax[1][1] - minMax[1][0]);\n}\n\nexports.layoutCovers = layoutCovers;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../echarts\");\n\nrequire(\"./legend/LegendModel\");\n\nrequire(\"./legend/legendAction\");\n\nrequire(\"./legend/LegendView\");\n\nvar legendFilter = require(\"./legend/legendFilter\");\n\nvar Component = require(\"../model/Component\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Do not contain scrollable legend, for sake of file size.\n// Series Filter\n\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\nComponent.registerSubTypeDefaulter('legend', function () {\n  // Default 'plain' when no type specified.\n  return 'plain';\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../../model/Model\");\n\nvar _model = require(\"../../util/model\");\n\nvar isNameSpecified = _model.isNameSpecified;\n\nvar lang = require(\"../../lang\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar langSelector = lang.legend.selector;\nvar defaultSelectorOption = {\n  all: {\n    type: 'all',\n    title: zrUtil.clone(langSelector.all)\n  },\n  inverse: {\n    type: 'inverse',\n    title: zrUtil.clone(langSelector.inverse)\n  }\n};\nvar LegendModel = echarts.extendComponentModel({\n  type: 'legend.plain',\n  dependencies: ['series'],\n  layoutMode: {\n    type: 'box',\n    // legend.width/height are maxWidth/maxHeight actually,\n    // whereas realy width/height is calculated by its content.\n    // (Setting {left: 10, right: 10} does not make sense).\n    // So consider the case:\n    // `setOption({legend: {left: 10});`\n    // then `setOption({legend: {right: 10});`\n    // The previous `left` should be cleared by setting `ignoreSize`.\n    ignoreSize: true\n  },\n  init: function init(option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  },\n  mergeOption: function mergeOption(option) {\n    LegendModel.superCall(this, 'mergeOption', option);\n\n    this._updateSelector(option);\n  },\n  _updateSelector: function _updateSelector(option) {\n    var selector = option.selector;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, defaultSelectorOption[item.type]);\n      });\n    }\n  },\n  optionUpdated: function optionUpdated() {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name = legendData[i].get('name');\n\n        if (this.isSelected(name)) {\n          // Force to unselect others\n          this.select(name);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  },\n  _updateData: function _updateData(ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  },\n\n  /**\n   * @return {Array.<module:echarts/model/Model>}\n   */\n  getData: function getData() {\n    return this._data;\n  },\n\n  /**\n   * @param {string} name\n   */\n  select: function select(name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  },\n\n  /**\n   * @param {string} name\n   */\n  unSelect: function unSelect(name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  },\n\n  /**\n   * @param {string} name\n   */\n  toggleSelected: function toggleSelected(name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  },\n  allSelect: function allSelect() {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  },\n  inverseSelect: function inverseSelect() {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  },\n\n  /**\n   * @param {string} name\n   */\n  isSelected: function isSelected(name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  },\n  getOrient: function getOrient() {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  },\n  defaultOption: {\n    // 一级层叠\n    zlevel: 0,\n    // 二级层叠\n    z: 4,\n    show: true,\n    // 布局方式，默认为水平布局，可选为：\n    // 'horizontal' | 'vertical'\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    // 水平对齐\n    // 'auto' | 'left' | 'right'\n    // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    // 图例边框颜色\n    borderColor: '#ccc',\n    borderRadius: 0,\n    // 图例边框线宽，单位px，默认为0（无边框）\n    borderWidth: 0,\n    // 图例内边距，单位px，默认各方向内边距为5，\n    // 接受数组分别设定上右下左边距，同css\n    padding: 5,\n    // 各个item之间的间隔，单位px，默认为10，\n    // 横向布局时为水平间隔，纵向布局时为纵向间隔\n    itemGap: 10,\n    // the width of legend symbol\n    itemWidth: 25,\n    // the height of legend symbol\n    itemHeight: 14,\n    // the color of unselected legend symbol\n    inactiveColor: '#ccc',\n    // the borderColor of unselected legend symbol\n    inactiveBorderColor: '#ccc',\n    itemStyle: {\n      // the default borderWidth of legend symbol\n      borderWidth: 0\n    },\n    textStyle: {\n      // 图例文字颜色\n      color: '#333'\n    },\n    // formatter: '',\n    // 选择模式，默认开启图例开关\n    selectedMode: true,\n    // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n    // selected: null,\n    // 图例内容（详见legend.data，数组中每一项代表一个item\n    // data: [],\n    // Usage:\n    // selector: [{type: 'all or inverse', title: xxx}]\n    // or\n    // selector: true\n    // or\n    // selector: ['all', 'inverse']\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: ' sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    // Value can be 'start' or 'end'\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    // Tooltip 相关配置\n    tooltip: {\n      show: false\n    }\n  }\n});\nvar _default = LegendModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _symbol = require(\"../../util/symbol\");\n\nvar createSymbol = _symbol.createSymbol;\n\nvar graphic = require(\"../../util/graphic\");\n\nvar _listComponent = require(\"../helper/listComponent\");\n\nvar makeBackground = _listComponent.makeBackground;\n\nvar layoutUtil = require(\"../../util/layout\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar _default = echarts.extendComponentView({\n  type: 'legend.plain',\n  newlineDisabled: false,\n\n  /**\n   * @override\n   */\n  init: function init() {\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n    this.group.add(this._contentGroup = new Group());\n    /**\n     * @private\n     * @type {module:zrender/Element}\n     */\n\n    this._backgroundEl;\n    /**\n     * @private\n     * @type {module:zrender/container/Group}\n     */\n\n    this.group.add(this._selectorGroup = new Group());\n    /**\n     * If first rendering, `contentGroup.position` is [0, 0], which\n     * does not make sense and may cause unexepcted animation if adopted.\n     * @private\n     * @type {boolean}\n     */\n\n    this._isFirstRender = true;\n  },\n\n  /**\n   * @protected\n   */\n  getContentGroup: function getContentGroup() {\n    return this._contentGroup;\n  },\n\n  /**\n   * @protected\n   */\n  getSelectorGroup: function getSelectorGroup() {\n    return this._selectorGroup;\n  },\n\n  /**\n   * @override\n   */\n  render: function render(legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    }\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.attr('position', [layoutRect.x - mainRect.x, layoutRect.y - mainRect.y]); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  },\n\n  /**\n   * @protected\n   */\n  resetInner: function resetInner() {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  },\n\n  /**\n   * @protected\n   */\n  renderInner: function renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (itemModel, dataIndex) {\n      var name = itemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        contentGroup.add(new Group({\n          newline: true\n        }));\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var color = data.getVisual('color');\n        var borderColor = data.getVisual('borderColor'); // If color is a callback function\n\n        if (typeof color === 'function') {\n          // Use the first data\n          color = color(seriesModel.getDataParams(0));\n        } // If borderColor is a callback function\n\n\n        if (typeof borderColor === 'function') {\n          // Use the first data\n          borderColor = borderColor(seriesModel.getDataParams(0));\n        } // Using rect symbol defaultly\n\n\n        var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n        var symbolType = data.getVisual('symbol');\n\n        var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var color = provider.getItemVisual(idx, 'color');\n            var borderColor = provider.getItemVisual(idx, 'borderColor');\n            var legendSymbolType = 'roundRect';\n\n            var itemGroup = this._createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, null, itemAlign, color, borderColor, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  },\n  _createSelector: function _createSelector(selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function (selectorItem) {\n      createSelectorButton(selectorItem);\n    });\n\n    function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function onclick() {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel('emphasis.selectorLabel');\n      graphic.setLabelStyle(labelText.style, labelText.hoverStyle = {}, labelModel, emphasisLabelModel, {\n        defaultText: selectorItem.title,\n        isRectText: false\n      });\n      graphic.setHoverStyle(labelText);\n    }\n  },\n  _createItem: function _createItem(name, dataIndex, itemModel, legendModel, legendSymbolType, symbolType, itemAlign, color, borderColor, selectMode) {\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var inactiveColor = legendModel.get('inactiveColor');\n    var inactiveBorderColor = legendModel.get('inactiveBorderColor');\n    var symbolKeepAspect = legendModel.get('symbolKeepAspect');\n    var legendModelItemStyle = legendModel.getModel('itemStyle');\n    var isSelected = legendModel.isSelected(name);\n    var itemGroup = new Group();\n    var textStyleModel = itemModel.getModel('textStyle');\n    var itemIcon = itemModel.get('icon');\n    var tooltipModel = itemModel.getModel('tooltip');\n    var legendGlobalTooltipModel = tooltipModel.parentModel; // Use user given icon first\n\n    legendSymbolType = itemIcon || legendSymbolType;\n    var legendSymbol = createSymbol(legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n    symbolKeepAspect == null ? true : symbolKeepAspect);\n    itemGroup.add(setSymbolStyle(legendSymbol, legendSymbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected)); // Compose symbols\n    // PENDING\n\n    if (!itemIcon && symbolType // At least show one symbol, can't be all none\n    && (symbolType !== legendSymbolType || symbolType === 'none')) {\n      var size = itemHeight * 0.8;\n\n      if (symbolType === 'none') {\n        symbolType = 'circle';\n      }\n\n      var legendSymbolCenter = createSymbol(symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size, isSelected ? color : inactiveColor, // symbolKeepAspect default true for legend\n      symbolKeepAspect == null ? true : symbolKeepAspect); // Put symbol in the center\n\n      itemGroup.add(setSymbolStyle(legendSymbolCenter, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    itemGroup.add(new graphic.Text({\n      style: graphic.setTextStyle({}, textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        textFill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        textAlign: textAlign,\n        textVerticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true,\n      tooltip: tooltipModel.get('show') ? zrUtil.extend({\n        content: name,\n        // Defaul formatter\n        formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n          return name;\n        },\n        formatterParams: {\n          componentType: 'legend',\n          legendIndex: legendModel.componentIndex,\n          name: name,\n          $vars: ['name']\n        }\n      }, tooltipModel.option) : null\n    });\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    graphic.setHoverStyle(itemGroup);\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  },\n\n  /**\n   * @protected\n   */\n  layoutInner: function layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } //Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.attr('position', selectorPos);\n      contentGroup.attr('position', contentPos);\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.attr('position', contentPos);\n      return this.group.getBoundingRect();\n    }\n  },\n\n  /**\n   * @protected\n   */\n  remove: function remove() {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  }\n});\n\nfunction setSymbolStyle(symbol, symbolType, legendModelItemStyle, borderColor, inactiveBorderColor, isSelected) {\n  var itemStyle;\n\n  if (symbolType !== 'line' && symbolType.indexOf('empty') < 0) {\n    itemStyle = legendModelItemStyle.getItemStyle();\n    symbol.style.stroke = borderColor;\n\n    if (!isSelected) {\n      itemStyle.stroke = inactiveBorderColor;\n    }\n  } else {\n    itemStyle = legendModelItemStyle.getItemStyle(['borderWidth', 'borderColor']);\n  }\n\n  return symbol.setStyle(itemStyle);\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  var el = api.getZr().storage.getDisplayList()[0];\n\n  if (!(el && el.useHoverLayer)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/SliderZoomModel\");\n\nrequire(\"./dataZoom/SliderZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"./dataZoom/typeDefaulter\");\n\nrequire(\"./dataZoom/DataZoomModel\");\n\nrequire(\"./dataZoom/DataZoomView\");\n\nrequire(\"./dataZoom/InsideZoomModel\");\n\nrequire(\"./dataZoom/InsideZoomView\");\n\nrequire(\"./dataZoom/dataZoomProcessor\");\n\nrequire(\"./dataZoom/dataZoomAction\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/cartesian/AxisModel\");\n\nrequire(\"./axis/CartesianAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar cartesianAxisHelper = require(\"../../coord/cartesian/cartesianAxisHelper\");\n\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\n\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine', 'minorSplitLine'];\nvar CartesianAxisView = AxisView.extend({\n  type: 'cartesianAxis',\n  axisPointerClass: 'CartesianAxisPointer',\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var gridModel = axisModel.getCoordSysModel();\n    var layout = cartesianAxisHelper.layout(gridModel, axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel, gridModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    CartesianAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function remove() {\n    rectCoordAxisHandleRemove(this);\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitLine: function _splitLine(axisModel, gridModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < ticksCoords.length; i++) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      var tickValue = ticksCoords[i].tickValue;\n\n      this._axisGroup.add(new graphic.Line({\n        anid: tickValue != null ? 'line_' + ticksCoords[i].tickValue : null,\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: zrUtil.defaults({\n          stroke: lineColors[colorIndex]\n        }, lineStyle),\n        silent: true\n      }));\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _minorSplitLine: function _minorSplitLine(axisModel, gridModel) {\n    var axis = axisModel.axis;\n    var minorSplitLineModel = axisModel.getModel('minorSplitLine');\n    var lineStyleModel = minorSplitLineModel.getModel('lineStyle');\n    var gridRect = gridModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var minorTicksCoords = axis.getMinorTicksCoords();\n\n    if (!minorTicksCoords.length) {\n      return;\n    }\n\n    var p1 = [];\n    var p2 = [];\n    var lineStyle = lineStyleModel.getLineStyle();\n\n    for (var i = 0; i < minorTicksCoords.length; i++) {\n      for (var k = 0; k < minorTicksCoords[i].length; k++) {\n        var tickCoord = axis.toGlobalCoord(minorTicksCoords[i][k].coord);\n\n        if (isHorizontal) {\n          p1[0] = tickCoord;\n          p1[1] = gridRect.y;\n          p2[0] = tickCoord;\n          p2[1] = gridRect.y + gridRect.height;\n        } else {\n          p1[0] = gridRect.x;\n          p1[1] = tickCoord;\n          p2[0] = gridRect.x + gridRect.width;\n          p2[1] = tickCoord;\n        }\n\n        this._axisGroup.add(new graphic.Line({\n          anid: 'minor_line_' + minorTicksCoords[i][k].tickValue,\n          subPixelOptimize: true,\n          shape: {\n            x1: p1[0],\n            y1: p1[1],\n            x2: p2[0],\n            y2: p2[1]\n          },\n          style: lineStyle,\n          silent: true\n        }));\n      }\n    }\n  },\n\n  /**\n   * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n   * @param {module:echarts/coord/cartesian/GridModel} gridModel\n   * @private\n   */\n  _splitArea: function _splitArea(axisModel, gridModel) {\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, gridModel);\n  }\n});\nCartesianAxisView.extend({\n  type: 'xAxis'\n});\nCartesianAxisView.extend({\n  type: 'yAxis'\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/radar/Radar\");\n\nrequire(\"../coord/radar/RadarModel\");\n\nrequire(\"./radar/RadarView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"../axis/AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar _default = echarts.extendComponentView({\n  type: 'radar',\n  render: function render(radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  },\n  _buildAxes: function _buildAxes(radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  },\n  _buildSplitLineAndArea: function _buildSplitLineAndArea(radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    splitLineColors = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    splitAreaColors = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColors, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber = realSplitNumber == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {}\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColors, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColors, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColors[idx % splitAreaColors.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColors[idx % splitLineColors.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  }\n});\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nrequire(\"../coord/parallel/parallelCreator\");\n\nrequire(\"./axis/parallelAxisAction\");\n\nrequire(\"./axis/ParallelAxisView\");","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @payload\n * @property {string} parallelAxisId\n * @property {Array.<Array.<number>>} intervals\n */\n\n\nvar actionInfo = {\n  type: 'axisAreaSelect',\n  event: 'axisAreaSelected' // update: 'updateVisual'\n\n};\necharts.registerAction(actionInfo, function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallelAxis',\n    query: payload\n  }, function (parallelAxisModel) {\n    parallelAxisModel.axis.model.setActiveIntervals(payload.intervals);\n  });\n});\n/**\n * @payload\n */\n\necharts.registerAction('parallelAxisExpand', function (payload, ecModel) {\n  ecModel.eachComponent({\n    mainType: 'parallel',\n    query: payload\n  }, function (parallelModel) {\n    parallelModel.setAxisExpand(payload);\n  });\n});","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar BrushController = require(\"../helper/BrushController\");\n\nvar brushHelper = require(\"../helper/brushHelper\");\n\nvar graphic = require(\"../../util/graphic\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar elementList = ['axisLine', 'axisTickLabel', 'axisName'];\nvar AxisView = echarts.extendComponentView({\n  type: 'parallelAxis',\n\n  /**\n   * @override\n   */\n  init: function init(ecModel, api) {\n    AxisView.superApply(this, 'init', arguments);\n    /**\n     * @type {module:echarts/component/helper/BrushController}\n     */\n\n    (this._brushController = new BrushController(api.getZr())).on('brush', zrUtil.bind(this._onBrush, this));\n  },\n\n  /**\n   * @override\n   */\n  render: function render(axisModel, ecModel, api, payload) {\n    if (fromAxisAreaSelect(axisModel, ecModel, payload)) {\n      return;\n    }\n\n    this.axisModel = axisModel;\n    this.api = api;\n    this.group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    this.group.add(this._axisGroup);\n\n    if (!axisModel.get('show')) {\n      return;\n    }\n\n    var coordSysModel = getCoordSysModel(axisModel, ecModel);\n    var coordSys = coordSysModel.coordinateSystem;\n    var areaSelectStyle = axisModel.getAreaSelectStyle();\n    var areaWidth = areaSelectStyle.width;\n    var dim = axisModel.axis.dim;\n    var axisLayout = coordSys.getAxisLayout(dim);\n    var builderOpt = zrUtil.extend({\n      strokeContainThreshold: areaWidth\n    }, axisLayout);\n    var axisBuilder = new AxisBuilder(axisModel, builderOpt);\n    zrUtil.each(elementList, axisBuilder.add, axisBuilder);\n\n    this._axisGroup.add(axisBuilder.getGroup());\n\n    this._refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api);\n\n    var animationModel = payload && payload.animation === false ? null : axisModel;\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, animationModel);\n  },\n  // /**\n  //  * @override\n  //  */\n  // updateVisual: function (axisModel, ecModel, api, payload) {\n  //     this._brushController && this._brushController\n  //         .updateCovers(getCoverInfoList(axisModel));\n  // },\n  _refreshBrushController: function _refreshBrushController(builderOpt, areaSelectStyle, axisModel, coordSysModel, areaWidth, api) {\n    // After filtering, axis may change, select area needs to be update.\n    var extent = axisModel.axis.getExtent();\n    var extentLen = extent[1] - extent[0];\n    var extra = Math.min(30, Math.abs(extentLen) * 0.1); // Arbitrary value.\n    // width/height might be negative, which will be\n    // normalized in BoundingRect.\n\n    var rect = graphic.BoundingRect.create({\n      x: extent[0],\n      y: -areaWidth / 2,\n      width: extentLen,\n      height: areaWidth\n    });\n    rect.x -= extra;\n    rect.width += 2 * extra;\n\n    this._brushController.mount({\n      enableGlobalPan: true,\n      rotation: builderOpt.rotation,\n      position: builderOpt.position\n    }).setPanels([{\n      panelId: 'pl',\n      clipPath: brushHelper.makeRectPanelClipPath(rect),\n      isTargetByCursor: brushHelper.makeRectIsTargetByCursor(rect, api, coordSysModel),\n      getLinearBrushOtherExtent: brushHelper.makeLinearBrushOtherExtent(rect, 0)\n    }]).enableBrush({\n      brushType: 'lineX',\n      brushStyle: areaSelectStyle,\n      removeOnClick: true\n    }).updateCovers(getCoverInfoList(axisModel));\n  },\n  _onBrush: function _onBrush(coverInfoList, opt) {\n    // Do not cache these object, because the mey be changed.\n    var axisModel = this.axisModel;\n    var axis = axisModel.axis;\n    var intervals = zrUtil.map(coverInfoList, function (coverInfo) {\n      return [axis.coordToData(coverInfo.range[0], true), axis.coordToData(coverInfo.range[1], true)];\n    }); // If realtime is true, action is not dispatched on drag end, because\n    // the drag end emits the same params with the last drag move event,\n    // and may have some delay when using touch pad.\n\n    if (!axisModel.option.realtime === opt.isEnd || opt.removeOnClick) {\n      // jshint ignore:line\n      this.api.dispatchAction({\n        type: 'axisAreaSelect',\n        parallelAxisId: axisModel.id,\n        intervals: intervals\n      });\n    }\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose() {\n    this._brushController.dispose();\n  }\n});\n\nfunction fromAxisAreaSelect(axisModel, ecModel, payload) {\n  return payload && payload.type === 'axisAreaSelect' && ecModel.findComponents({\n    mainType: 'parallelAxis',\n    query: payload\n  })[0] === axisModel;\n}\n\nfunction getCoverInfoList(axisModel) {\n  var axis = axisModel.axis;\n  return zrUtil.map(axisModel.activeIntervals, function (interval) {\n    return {\n      brushType: 'lineX',\n      panelId: 'pl',\n      range: [axis.dataToCoord(interval[0], true), axis.dataToCoord(interval[1], true)]\n    };\n  });\n}\n\nfunction getCoordSysModel(axisModel, ecModel) {\n  return ecModel.getComponent('parallel', axisModel.get('parallelIndex'));\n}\n\nvar _default = AxisView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar AxisBuilder = require(\"./AxisBuilder\");\n\nvar graphic = require(\"../../util/graphic\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"./AxisView\");\n\nvar _axisSplitHelper = require(\"./axisSplitHelper\");\n\nvar rectCoordAxisBuildSplitArea = _axisSplitHelper.rectCoordAxisBuildSplitArea;\nvar rectCoordAxisHandleRemove = _axisSplitHelper.rectCoordAxisHandleRemove;\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\nvar selfBuilderAttrs = ['splitArea', 'splitLine'];\nvar SingleAxisView = AxisView.extend({\n  type: 'singleAxis',\n  axisPointerClass: 'SingleAxisPointer',\n  render: function render(axisModel, ecModel, api, payload) {\n    var group = this.group;\n    group.removeAll();\n    var oldAxisGroup = this._axisGroup;\n    this._axisGroup = new graphic.Group();\n    var layout = singleAxisHelper.layout(axisModel);\n    var axisBuilder = new AxisBuilder(axisModel, layout);\n    zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n    group.add(this._axisGroup);\n    group.add(axisBuilder.getGroup());\n    zrUtil.each(selfBuilderAttrs, function (name) {\n      if (axisModel.get(name + '.show')) {\n        this['_' + name](axisModel);\n      }\n    }, this);\n    graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n    SingleAxisView.superCall(this, 'render', axisModel, ecModel, api, payload);\n  },\n  remove: function remove() {\n    rectCoordAxisHandleRemove(this);\n  },\n  _splitLine: function _splitLine(axisModel) {\n    var axis = axisModel.axis;\n\n    if (axis.scale.isBlank()) {\n      return;\n    }\n\n    var splitLineModel = axisModel.getModel('splitLine');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var lineWidth = lineStyleModel.get('width');\n    var lineColors = lineStyleModel.get('color');\n    lineColors = lineColors instanceof Array ? lineColors : [lineColors];\n    var gridRect = axisModel.coordinateSystem.getRect();\n    var isHorizontal = axis.isHorizontal();\n    var splitLines = [];\n    var lineCount = 0;\n    var ticksCoords = axis.getTicksCoords({\n      tickModel: splitLineModel\n    });\n    var p1 = [];\n    var p2 = [];\n\n    for (var i = 0; i < ticksCoords.length; ++i) {\n      var tickCoord = axis.toGlobalCoord(ticksCoords[i].coord);\n\n      if (isHorizontal) {\n        p1[0] = tickCoord;\n        p1[1] = gridRect.y;\n        p2[0] = tickCoord;\n        p2[1] = gridRect.y + gridRect.height;\n      } else {\n        p1[0] = gridRect.x;\n        p1[1] = tickCoord;\n        p2[0] = gridRect.x + gridRect.width;\n        p2[1] = tickCoord;\n      }\n\n      var colorIndex = lineCount++ % lineColors.length;\n      splitLines[colorIndex] = splitLines[colorIndex] || [];\n      splitLines[colorIndex].push(new graphic.Line({\n        subPixelOptimize: true,\n        shape: {\n          x1: p1[0],\n          y1: p1[1],\n          x2: p2[0],\n          y2: p2[1]\n        },\n        style: {\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n\n    for (var i = 0; i < splitLines.length; ++i) {\n      this.group.add(graphic.mergePath(splitLines[i], {\n        style: {\n          stroke: lineColors[i % lineColors.length],\n          lineDash: lineStyleModel.getLineDash(lineWidth),\n          lineWidth: lineWidth\n        },\n        silent: true\n      }));\n    }\n  },\n  _splitArea: function _splitArea(axisModel) {\n    rectCoordAxisBuildSplitArea(this, this._axisGroup, axisModel, axisModel);\n  }\n});\nvar _default = SingleAxisView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar modelHelper = require(\"./modelHelper\");\n\nvar findPointFromSeries = require(\"./findPointFromSeries\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar each = zrUtil.each;\nvar curry = zrUtil.curry;\nvar inner = makeInner();\n/**\n * Basic logic: check all axis, if they do not demand show/highlight,\n * then hide/downplay them.\n *\n * @param {Object} coordSysAxesInfo\n * @param {Object} payload\n * @param {string} [payload.currTrigger] 'click' | 'mousemove' | 'leave'\n * @param {Array.<number>} [payload.x] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Array.<number>} [payload.y] x and y, which are mandatory, specify a point to\n *              trigger axisPointer and tooltip.\n * @param {Object} [payload.seriesIndex] finder, optional, restrict target axes.\n * @param {Object} [payload.dataIndex] finder, restrict target axes.\n * @param {Object} [payload.axesInfo] finder, restrict target axes.\n *        [{\n *          axisDim: 'x'|'y'|'angle'|...,\n *          axisIndex: ...,\n *          value: ...\n *        }, ...]\n * @param {Function} [payload.dispatchAction]\n * @param {Object} [payload.tooltipOption]\n * @param {Object|Array.<number>|Function} [payload.position] Tooltip position,\n *        which can be specified in dispatchAction\n * @param {module:echarts/model/Global} ecModel\n * @param {module:echarts/ExtensionAPI} api\n * @return {Object} content of event obj for echarts.connect.\n */\n\nfunction _default(payload, ecModel, api) {\n  var currTrigger = payload.currTrigger;\n  var point = [payload.x, payload.y];\n  var finder = payload;\n  var dispatchAction = payload.dispatchAction || zrUtil.bind(api.dispatchAction, api);\n  var coordSysAxesInfo = ecModel.getComponent('axisPointer').coordSysAxesInfo; // Pending\n  // See #6121. But we are not able to reproduce it yet.\n\n  if (!coordSysAxesInfo) {\n    return;\n  }\n\n  if (illegalPoint(point)) {\n    // Used in the default behavior of `connection`: use the sample seriesIndex\n    // and dataIndex. And also used in the tooltipView trigger.\n    point = findPointFromSeries({\n      seriesIndex: finder.seriesIndex,\n      // Do not use dataIndexInside from other ec instance.\n      // FIXME: auto detect it?\n      dataIndex: finder.dataIndex\n    }, ecModel).point;\n  }\n\n  var isIllegalPoint = illegalPoint(point); // Axis and value can be specified when calling dispatchAction({type: 'updateAxisPointer'}).\n  // Notice: In this case, it is difficult to get the `point` (which is necessary to show\n  // tooltip, so if point is not given, we just use the point found by sample seriesIndex\n  // and dataIndex.\n\n  var inputAxesInfo = finder.axesInfo;\n  var axesInfo = coordSysAxesInfo.axesInfo;\n  var shouldHide = currTrigger === 'leave' || illegalPoint(point);\n  var outputFinder = {};\n  var showValueMap = {};\n  var dataByCoordSys = {\n    list: [],\n    map: {}\n  };\n  var updaters = {\n    showPointer: curry(showPointer, showValueMap),\n    showTooltip: curry(showTooltip, dataByCoordSys)\n  }; // Process for triggered axes.\n\n  each(coordSysAxesInfo.coordSysMap, function (coordSys, coordSysKey) {\n    // If a point given, it must be contained by the coordinate system.\n    var coordSysContainsPoint = isIllegalPoint || coordSys.containPoint(point);\n    each(coordSysAxesInfo.coordSysAxesInfo[coordSysKey], function (axisInfo, key) {\n      var axis = axisInfo.axis;\n      var inputAxisInfo = findInputAxisInfo(inputAxesInfo, axisInfo); // If no inputAxesInfo, no axis is restricted.\n\n      if (!shouldHide && coordSysContainsPoint && (!inputAxesInfo || inputAxisInfo)) {\n        var val = inputAxisInfo && inputAxisInfo.value;\n\n        if (val == null && !isIllegalPoint) {\n          val = axis.pointToData(point);\n        }\n\n        val != null && processOnAxis(axisInfo, val, updaters, false, outputFinder);\n      }\n    });\n  }); // Process for linked axes.\n\n  var linkTriggers = {};\n  each(axesInfo, function (tarAxisInfo, tarKey) {\n    var linkGroup = tarAxisInfo.linkGroup; // If axis has been triggered in the previous stage, it should not be triggered by link.\n\n    if (linkGroup && !showValueMap[tarKey]) {\n      each(linkGroup.axesInfo, function (srcAxisInfo, srcKey) {\n        var srcValItem = showValueMap[srcKey]; // If srcValItem exist, source axis is triggered, so link to target axis.\n\n        if (srcAxisInfo !== tarAxisInfo && srcValItem) {\n          var val = srcValItem.value;\n          linkGroup.mapper && (val = tarAxisInfo.axis.scale.parse(linkGroup.mapper(val, makeMapperParam(srcAxisInfo), makeMapperParam(tarAxisInfo))));\n          linkTriggers[tarAxisInfo.key] = val;\n        }\n      });\n    }\n  });\n  each(linkTriggers, function (val, tarKey) {\n    processOnAxis(axesInfo[tarKey], val, updaters, true, outputFinder);\n  });\n  updateModelActually(showValueMap, axesInfo, outputFinder);\n  dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction);\n  dispatchHighDownActually(axesInfo, dispatchAction, api);\n  return outputFinder;\n}\n\nfunction processOnAxis(axisInfo, newValue, updaters, dontSnap, outputFinder) {\n  var axis = axisInfo.axis;\n\n  if (axis.scale.isBlank() || !axis.containData(newValue)) {\n    return;\n  }\n\n  if (!axisInfo.involveSeries) {\n    updaters.showPointer(axisInfo, newValue);\n    return;\n  } // Heavy calculation. So put it after axis.containData checking.\n\n\n  var payloadInfo = buildPayloadsBySeries(newValue, axisInfo);\n  var payloadBatch = payloadInfo.payloadBatch;\n  var snapToValue = payloadInfo.snapToValue; // Fill content of event obj for echarts.connect.\n  // By defualt use the first involved series data as a sample to connect.\n\n  if (payloadBatch[0] && outputFinder.seriesIndex == null) {\n    zrUtil.extend(outputFinder, payloadBatch[0]);\n  } // If no linkSource input, this process is for collecting link\n  // target, where snap should not be accepted.\n\n\n  if (!dontSnap && axisInfo.snap) {\n    if (axis.containData(snapToValue) && snapToValue != null) {\n      newValue = snapToValue;\n    }\n  }\n\n  updaters.showPointer(axisInfo, newValue, payloadBatch, outputFinder); // Tooltip should always be snapToValue, otherwise there will be\n  // incorrect \"axis value ~ series value\" mapping displayed in tooltip.\n\n  updaters.showTooltip(axisInfo, payloadInfo, snapToValue);\n}\n\nfunction buildPayloadsBySeries(value, axisInfo) {\n  var axis = axisInfo.axis;\n  var dim = axis.dim;\n  var snapToValue = value;\n  var payloadBatch = [];\n  var minDist = Number.MAX_VALUE;\n  var minDiff = -1;\n  each(axisInfo.seriesModels, function (series, idx) {\n    var dataDim = series.getData().mapDimension(dim, true);\n    var seriesNestestValue;\n    var dataIndices;\n\n    if (series.getAxisTooltipData) {\n      var result = series.getAxisTooltipData(dataDim, value, axis);\n      dataIndices = result.dataIndices;\n      seriesNestestValue = result.nestestValue;\n    } else {\n      dataIndices = series.getData().indicesOfNearest(dataDim[0], value, // Add a threshold to avoid find the wrong dataIndex\n      // when data length is not same.\n      // false,\n      axis.type === 'category' ? 0.5 : null);\n\n      if (!dataIndices.length) {\n        return;\n      }\n\n      seriesNestestValue = series.getData().get(dataDim[0], dataIndices[0]);\n    }\n\n    if (seriesNestestValue == null || !isFinite(seriesNestestValue)) {\n      return;\n    }\n\n    var diff = value - seriesNestestValue;\n    var dist = Math.abs(diff); // Consider category case\n\n    if (dist <= minDist) {\n      if (dist < minDist || diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        snapToValue = seriesNestestValue;\n        payloadBatch.length = 0;\n      }\n\n      each(dataIndices, function (dataIndex) {\n        payloadBatch.push({\n          seriesIndex: series.seriesIndex,\n          dataIndexInside: dataIndex,\n          dataIndex: series.getData().getRawIndex(dataIndex)\n        });\n      });\n    }\n  });\n  return {\n    payloadBatch: payloadBatch,\n    snapToValue: snapToValue\n  };\n}\n\nfunction showPointer(showValueMap, axisInfo, value, payloadBatch) {\n  showValueMap[axisInfo.key] = {\n    value: value,\n    payloadBatch: payloadBatch\n  };\n}\n\nfunction showTooltip(dataByCoordSys, axisInfo, payloadInfo, value) {\n  var payloadBatch = payloadInfo.payloadBatch;\n  var axis = axisInfo.axis;\n  var axisModel = axis.model;\n  var axisPointerModel = axisInfo.axisPointerModel; // If no data, do not create anything in dataByCoordSys,\n  // whose length will be used to judge whether dispatch action.\n\n  if (!axisInfo.triggerTooltip || !payloadBatch.length) {\n    return;\n  }\n\n  var coordSysModel = axisInfo.coordSys.model;\n  var coordSysKey = modelHelper.makeKey(coordSysModel);\n  var coordSysItem = dataByCoordSys.map[coordSysKey];\n\n  if (!coordSysItem) {\n    coordSysItem = dataByCoordSys.map[coordSysKey] = {\n      coordSysId: coordSysModel.id,\n      coordSysIndex: coordSysModel.componentIndex,\n      coordSysType: coordSysModel.type,\n      coordSysMainType: coordSysModel.mainType,\n      dataByAxis: []\n    };\n    dataByCoordSys.list.push(coordSysItem);\n  }\n\n  coordSysItem.dataByAxis.push({\n    axisDim: axis.dim,\n    axisIndex: axisModel.componentIndex,\n    axisType: axisModel.type,\n    axisId: axisModel.id,\n    value: value,\n    // Caustion: viewHelper.getValueLabel is actually on \"view stage\", which\n    // depends that all models have been updated. So it should not be performed\n    // here. Considering axisPointerModel used here is volatile, which is hard\n    // to be retrieve in TooltipView, we prepare parameters here.\n    valueLabelOpt: {\n      precision: axisPointerModel.get('label.precision'),\n      formatter: axisPointerModel.get('label.formatter')\n    },\n    seriesDataIndices: payloadBatch.slice()\n  });\n}\n\nfunction updateModelActually(showValueMap, axesInfo, outputFinder) {\n  var outputAxesInfo = outputFinder.axesInfo = []; // Basic logic: If no 'show' required, 'hide' this axisPointer.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    var valItem = showValueMap[key];\n\n    if (valItem) {\n      !axisInfo.useHandle && (option.status = 'show');\n      option.value = valItem.value; // For label formatter param and highlight.\n\n      option.seriesDataIndices = (valItem.payloadBatch || []).slice();\n    } // When always show (e.g., handle used), remain\n    // original value and status.\n    else {\n        // If hide, value still need to be set, consider\n        // click legend to toggle axis blank.\n        !axisInfo.useHandle && (option.status = 'hide');\n      } // If status is 'hide', should be no info in payload.\n\n\n    option.status === 'show' && outputAxesInfo.push({\n      axisDim: axisInfo.axis.dim,\n      axisIndex: axisInfo.axis.model.componentIndex,\n      value: option.value\n    });\n  });\n}\n\nfunction dispatchTooltipActually(dataByCoordSys, point, payload, dispatchAction) {\n  // Basic logic: If no showTip required, hideTip will be dispatched.\n  if (illegalPoint(point) || !dataByCoordSys.list.length) {\n    dispatchAction({\n      type: 'hideTip'\n    });\n    return;\n  } // In most case only one axis (or event one series is used). It is\n  // convinient to fetch payload.seriesIndex and payload.dataIndex\n  // dirtectly. So put the first seriesIndex and dataIndex of the first\n  // axis on the payload.\n\n\n  var sampleItem = ((dataByCoordSys.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {};\n  dispatchAction({\n    type: 'showTip',\n    escapeConnect: true,\n    x: point[0],\n    y: point[1],\n    tooltipOption: payload.tooltipOption,\n    position: payload.position,\n    dataIndexInside: sampleItem.dataIndexInside,\n    dataIndex: sampleItem.dataIndex,\n    seriesIndex: sampleItem.seriesIndex,\n    dataByCoordSys: dataByCoordSys.list\n  });\n}\n\nfunction dispatchHighDownActually(axesInfo, dispatchAction, api) {\n  // FIXME\n  // highlight status modification shoule be a stage of main process?\n  // (Consider confilct (e.g., legend and axisPointer) and setOption)\n  var zr = api.getZr();\n  var highDownKey = 'axisPointerLastHighlights';\n  var lastHighlights = inner(zr)[highDownKey] || {};\n  var newHighlights = inner(zr)[highDownKey] = {}; // Update highlight/downplay status according to axisPointer model.\n  // Build hash map and remove duplicate incidentally.\n\n  each(axesInfo, function (axisInfo, key) {\n    var option = axisInfo.axisPointerModel.option;\n    option.status === 'show' && each(option.seriesDataIndices, function (batchItem) {\n      var key = batchItem.seriesIndex + ' | ' + batchItem.dataIndex;\n      newHighlights[key] = batchItem;\n    });\n  }); // Diff.\n\n  var toHighlight = [];\n  var toDownplay = [];\n  zrUtil.each(lastHighlights, function (batchItem, key) {\n    !newHighlights[key] && toDownplay.push(batchItem);\n  });\n  zrUtil.each(newHighlights, function (batchItem, key) {\n    !lastHighlights[key] && toHighlight.push(batchItem);\n  });\n  toDownplay.length && api.dispatchAction({\n    type: 'downplay',\n    escapeConnect: true,\n    batch: toDownplay\n  });\n  toHighlight.length && api.dispatchAction({\n    type: 'highlight',\n    escapeConnect: true,\n    batch: toHighlight\n  });\n}\n\nfunction findInputAxisInfo(inputAxesInfo, axisInfo) {\n  for (var i = 0; i < (inputAxesInfo || []).length; i++) {\n    var inputAxisInfo = inputAxesInfo[i];\n\n    if (axisInfo.axis.dim === inputAxisInfo.axisDim && axisInfo.axis.model.componentIndex === inputAxisInfo.axisIndex) {\n      return inputAxisInfo;\n    }\n  }\n}\n\nfunction makeMapperParam(axisInfo) {\n  var axisModel = axisInfo.axis.model;\n  var item = {};\n  var dim = item.axisDim = axisInfo.axis.dim;\n  item.axisIndex = item[dim + 'AxisIndex'] = axisModel.componentIndex;\n  item.axisName = item[dim + 'AxisName'] = axisModel.name;\n  item.axisId = item[dim + 'AxisId'] = axisModel.id;\n  return item;\n}\n\nfunction illegalPoint(point) {\n  return !point || point[0] == null || isNaN(point[0]) || point[1] == null || isNaN(point[1]);\n}\n\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisPointerModel = echarts.extendComponentModel({\n  type: 'axisPointer',\n  coordSysAxesInfo: null,\n  defaultOption: {\n    // 'auto' means that show when triggered by tooltip or handle.\n    show: 'auto',\n    // 'click' | 'mousemove' | 'none'\n    triggerOn: null,\n    // set default in AxisPonterView.js\n    zlevel: 0,\n    z: 50,\n    type: 'line',\n    // 'line' 'shadow' 'cross' 'none'.\n    // axispointer triggered by tootip determine snap automatically,\n    // see `modelHelper`.\n    snap: false,\n    triggerTooltip: true,\n    value: null,\n    status: null,\n    // Init value depends on whether handle is used.\n    // [group0, group1, ...]\n    // Each group can be: {\n    //      mapper: function () {},\n    //      singleTooltip: 'multiple',  // 'multiple' or 'single'\n    //      xAxisId: ...,\n    //      yAxisName: ...,\n    //      angleAxisIndex: ...\n    // }\n    // mapper: can be ignored.\n    //      input: {axisInfo, value}\n    //      output: {axisInfo, value}\n    link: [],\n    // Do not set 'auto' here, otherwise global animation: false\n    // will not effect at this axispointer.\n    animation: null,\n    animationDurationUpdate: 200,\n    lineStyle: {\n      color: '#aaa',\n      width: 1,\n      type: 'solid'\n    },\n    shadowStyle: {\n      color: 'rgba(150,150,150,0.3)'\n    },\n    label: {\n      show: true,\n      formatter: null,\n      // string | Function\n      precision: 'auto',\n      // Or a number like 0, 1, 2 ...\n      margin: 3,\n      color: '#fff',\n      padding: [5, 7, 5, 7],\n      backgroundColor: 'auto',\n      // default: axis line color\n      borderColor: null,\n      borderWidth: 0,\n      shadowBlur: 3,\n      shadowColor: '#aaa' // Considering applicability, common style should\n      // better not have shadowOffset.\n      // shadowOffsetX: 0,\n      // shadowOffsetY: 2\n\n    },\n    handle: {\n      show: false,\n\n      /* eslint-disable */\n      icon: 'M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z',\n      // jshint ignore:line\n\n      /* eslint-enable */\n      size: 45,\n      // handle margin is from symbol center to axis, which is stable when circular move.\n      margin: 50,\n      // color: '#1b8bbd'\n      // color: '#2f4554'\n      color: '#333',\n      shadowBlur: 3,\n      shadowColor: '#aaa',\n      shadowOffsetX: 0,\n      shadowOffsetY: 2,\n      // For mobile performance\n      throttle: 40\n    }\n  }\n});\nvar _default = AxisPointerModel;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar echarts = require(\"../../echarts\");\n\nvar globalListener = require(\"./globalListener\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar AxisPointerView = echarts.extendComponentView({\n  type: 'axisPointer',\n  render: function render(globalAxisPointerModel, ecModel, api) {\n    var globalTooltipModel = ecModel.getComponent('tooltip');\n    var triggerOn = globalAxisPointerModel.get('triggerOn') || globalTooltipModel && globalTooltipModel.get('triggerOn') || 'mousemove|click'; // Register global listener in AxisPointerView to enable\n    // AxisPointerView to be independent to Tooltip.\n\n    globalListener.register('axisPointer', api, function (currTrigger, e, dispatchAction) {\n      // If 'none', it is not controlled by mouse totally.\n      if (triggerOn !== 'none' && (currTrigger === 'leave' || triggerOn.indexOf(currTrigger) >= 0)) {\n        dispatchAction({\n          type: 'updateAxisPointer',\n          currTrigger: currTrigger,\n          x: e && e.offsetX,\n          y: e && e.offsetY\n        });\n      }\n    });\n  },\n\n  /**\n   * @override\n   */\n  remove: function remove(ecModel, api) {\n    globalListener.unregister(api.getZr(), 'axisPointer');\n    AxisPointerView.superApply(this._model, 'remove', arguments);\n  },\n\n  /**\n   * @override\n   */\n  dispose: function dispose(ecModel, api) {\n    globalListener.unregister('axisPointer', api);\n    AxisPointerView.superApply(this._model, 'dispose', arguments);\n  }\n});\nvar _default = AxisPointerView;\nmodule.exports = _default;","/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar BaseAxisPointer = require(\"./BaseAxisPointer\");\n\nvar viewHelper = require(\"./viewHelper\");\n\nvar singleAxisHelper = require(\"../../coord/single/singleAxisHelper\");\n\nvar AxisView = require(\"../axis/AxisView\");\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\nvar XY = ['x', 'y'];\nvar WH = ['width', 'height'];\nvar SingleAxisPointer = BaseAxisPointer.extend({\n  /**\n   * @override\n   */\n  makeElOption: function makeElOption(elOption, value, axisModel, axisPointerModel, api) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var otherExtent = getGlobalExtent(coordSys, 1 - getPointDimIndex(axis));\n    var pixelValue = coordSys.dataToPoint(value)[0];\n    var axisPointerType = axisPointerModel.get('type');\n\n    if (axisPointerType && axisPointerType !== 'none') {\n      var elStyle = viewHelper.buildElStyle(axisPointerModel);\n      var pointerOption = pointerShapeBuilder[axisPointerType](axis, pixelValue, otherExtent);\n      pointerOption.style = elStyle;\n      elOption.graphicKey = pointerOption.type;\n      elOption.pointer = pointerOption;\n    }\n\n    var layoutInfo = singleAxisHelper.layout(axisModel);\n    viewHelper.buildCartesianSingleLabelElOption(value, elOption, layoutInfo, axisModel, axisPointerModel, api);\n  },\n\n  /**\n   * @override\n   */\n  getHandleTransform: function getHandleTransform(value, axisModel, axisPointerModel) {\n    var layoutInfo = singleAxisHelper.layout(axisModel, {\n      labelInside: false\n    });\n    layoutInfo.labelMargin = axisPointerModel.get('handle.margin');\n    return {\n      position: viewHelper.getTransformedPosition(axisModel.axis, value, layoutInfo),\n      rotation: layoutInfo.rotation + (layoutInfo.labelDirection < 0 ? Math.PI : 0)\n    };\n  },\n\n  /**\n   * @override\n   */\n  updateHandleTransform: function updateHandleTransform(transform, delta, axisModel, axisPointerModel) {\n    var axis = axisModel.axis;\n    var coordSys = axis.coordinateSystem;\n    var dimIndex = getPointDimIndex(axis);\n    var axisExtent = getGlobalExtent(coordSys, dimIndex);\n    var currPosition = transform.position;\n    currPosition[dimIndex] += delta[dimIndex];\n    currPosition[dimIndex] = Math.min(axisExtent[1], currPosition[dimIndex]);\n    currPosition[dimIndex] = Math.max(axisExtent[0], currPosition[dimIndex]);\n    var otherExtent = getGlobalExtent(coordSys, 1 - dimIndex);\n    var cursorOtherValue = (otherExtent[1] + otherExtent[0]) / 2;\n    var cursorPoint = [cursorOtherValue, cursorOtherValue];\n    cursorPoint[dimIndex] = currPosition[dimIndex];\n    return {\n      position: currPosition,\n      rotation: transform.rotation,\n      cursorPoint: cursorPoint,\n      tooltipOption: {\n        verticalAlign: 'middle'\n      }\n    };\n  }\n});\nvar pointerShapeBuilder = {\n  line: function line(axis, pixelValue, otherExtent) {\n    var targetShape = viewHelper.makeLineShape([pixelValue, otherExtent[0]], [pixelValue, otherExtent[1]], getPointDimIndex(axis));\n    return {\n      type: 'Line',\n      subPixelOptimize: true,\n      shape: targetShape\n    };\n  },\n  shadow: function shadow(axis, pixelValue, otherExtent) {\n    var bandWidth = axis.getBandWidth();\n    var span = otherExtent[1] - otherExtent[0];\n    return {\n      type: 'Rect',\n      shape: viewHelper.makeRectShape([pixelValue - bandWidth / 2, otherExtent[0]], [bandWidth, span], getPointDimIndex(axis))\n    };\n  }\n};\n\nfunction getPointDimIndex(axis) {\n  return axis.isHorizontal() ? 0 : 1;\n}\n\nfunction getGlobalExtent(coordSys, dimIndex) {\n  var rect = coordSys.getRect();\n  return [rect[XY[dimIndex]], rect[XY[dimIndex]] + rect[WH[dimIndex]]];\n}\n\nAxisView.registerAxisPointerClass('SingleAxisPointer', SingleAxisPointer);\nvar _default = SingleAxisPointer;\nmodule.exports = _default;"],"sourceRoot":""}